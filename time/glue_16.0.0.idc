#define UNLOADED_FILE   1
#include <idc.idc>

static main(void)
{
        // set 'loading idc file' mode
        set_inf_attr(INF_GENFLAGS, INFFL_LOADIDC|get_inf_attr(INF_GENFLAGS));
        GenInfo();            // various settings
        Segments();           // segmentation
        Enums();              // enumerations
        Structures();         // structure types
        ApplyStrucTInfos();   // structure type infos
        Patches();            // manual patches
        SegRegs();            // segment register values
        Bytes();              // individual bytes (code,data)
        Functions();          // function definitions
        // clear 'loading idc file' mode
        set_inf_attr(INF_GENFLAGS, ~INFFL_LOADIDC&get_inf_attr(INF_GENFLAGS));
}

//------------------------------------------------------------------------
// General information

static GenInfo(void) {

        delete_all_segments();    // purge database
	set_processor_type("ARM", SETPROC_USER);
	set_inf_attr(INF_COMPILER, 6);
	set_inf_attr(INF_STRLIT_BREAK, 0xA);
	set_flag(INF_CMTFLAG, SW_ALLCMT, 0);
	set_flag(INF_OUTFLAGS, OFLG_SHOW_VOID, 0);
	set_inf_attr(INF_XREFNUM, 2);
	set_flag(INF_OUTFLAGS, OFLG_SHOW_AUTO, 1);
	set_inf_attr(INF_INDENT, 2);
	set_inf_attr(INF_COMMENT, 40);
	set_inf_attr(INF_MAXREF, 0x10);
	add_default_til("gnulnx_arm64");
}

//------------------------------------------------------------------------
// Information about segmentation

static Segments(void) {

	add_segm_ex(0X7100000000,0X710006D1D0,0,2,1,2,ADDSEG_NOSREG);
	SegRename(0X7100000000,".text");
	SegClass (0X7100000000,"CODE");
	SegDefReg(0x7100000000,"T",0x0);
	SegDefReg(0x7100000000,"DS",0x0);
	set_segm_type(0X7100000000,2);
	add_segm_ex(0X710006D1D0,0X710006D1E0,0,2,1,2,ADDSEG_NOSREG);
	SegRename(0X710006D1D0,".plt");
	SegClass (0X710006D1D0,"CODE");
	SegDefReg(0x710006D1D0,"T",0x0);
	SegDefReg(0x710006D1D0,"DS",0x0);
	set_segm_type(0X710006D1D0,2);
	add_segm_ex(0X710006E000,0X710006E030,0,2,1,2,ADDSEG_NOSREG);
	SegRename(0X710006E000,".rodata");
	SegClass (0X710006E000,"CONST");
	SegDefReg(0x710006E000,"T",0x0);
	SegDefReg(0x710006E000,"DS",0x0);
	set_segm_type(0X710006E000,3);
	add_segm_ex(0X710006E030,0X710007FFE8,0,2,1,2,ADDSEG_NOSREG);
	SegRename(0X710006E030,".rela.dyn");
	SegClass (0X710006E030,"CONST");
	SegDefReg(0x710006E030,"T",0x0);
	SegDefReg(0x710006E030,"DS",0x0);
	set_segm_type(0X710006E030,3);
	add_segm_ex(0X710007FFE8,0X7100080000,0,2,1,2,ADDSEG_NOSREG);
	SegRename(0X710007FFE8,".rela.plt");
	SegClass (0X710007FFE8,"CONST");
	SegDefReg(0x710007FFE8,"T",0x0);
	SegDefReg(0x710007FFE8,"DS",0x0);
	set_segm_type(0X710007FFE8,3);
	add_segm_ex(0X7100080000,0X7100080038,0,2,1,2,ADDSEG_NOSREG);
	SegRename(0X7100080000,".hash");
	SegClass (0X7100080000,"CONST");
	SegDefReg(0x7100080000,"T",0x0);
	SegDefReg(0x7100080000,"DS",0x0);
	set_segm_type(0X7100080000,3);
	add_segm_ex(0X7100080038,0X7100080054,0,2,1,2,ADDSEG_NOSREG);
	SegRename(0X7100080038,".gnu.hash");
	SegClass (0X7100080038,"CONST");
	SegDefReg(0x7100080038,"T",0x0);
	SegDefReg(0x7100080038,"DS",0x0);
	set_segm_type(0X7100080038,3);
	add_segm_ex(0X7100080054,0X7100080058,0,2,1,2,ADDSEG_NOSREG);
	SegRename(0X7100080054,".rodata.1");
	SegClass (0X7100080054,"CONST");
	SegDefReg(0x7100080054,"T",0x0);
	SegDefReg(0x7100080054,"DS",0x0);
	set_segm_type(0X7100080054,3);
	add_segm_ex(0X7100080058,0X71000800E8,0,2,1,2,ADDSEG_NOSREG);
	SegRename(0X7100080058,".dynsym");
	SegClass (0X7100080058,"CONST");
	SegDefReg(0x7100080058,"T",0x0);
	SegDefReg(0x7100080058,"DS",0x0);
	set_segm_type(0X7100080058,3);
	add_segm_ex(0X71000800E8,0X710008015D,0,2,1,2,ADDSEG_NOSREG);
	SegRename(0X71000800E8,".dynstr");
	SegClass (0X71000800E8,"CONST");
	SegDefReg(0x71000800E8,"T",0x0);
	SegDefReg(0x71000800E8,"DS",0x0);
	set_segm_type(0X71000800E8,3);
	add_segm_ex(0X710008015D,0X710008CB20,0,2,1,2,ADDSEG_NOSREG);
	SegRename(0X710008015D,".rodata.2");
	SegClass (0X710008015D,"CONST");
	SegDefReg(0x710008015D,"T",0x0);
	SegDefReg(0x710008015D,"DS",0x0);
	set_segm_type(0X710008015D,3);
	add_segm_ex(0X710008CB20,0X7100092B4C,0,2,1,2,ADDSEG_NOSREG);
	SegRename(0X710008CB20,".eh_frame_hdr");
	SegClass (0X710008CB20,"CONST");
	SegDefReg(0x710008CB20,"T",0x0);
	SegDefReg(0x710008CB20,"DS",0x0);
	set_segm_type(0X710008CB20,3);
	add_segm_ex(0X7100092B4C,0X7100092B50,0,2,1,2,ADDSEG_NOSREG);
	SegRename(0X7100092B4C,".rodata.3");
	SegClass (0X7100092B4C,"CONST");
	SegDefReg(0x7100092B4C,"T",0x0);
	SegDefReg(0x7100092B4C,"DS",0x0);
	set_segm_type(0X7100092B4C,3);
	add_segm_ex(0X7100092B50,0X71000AA4F0,0,2,1,2,ADDSEG_NOSREG);
	SegRename(0X7100092B50,".eh_frame");
	SegClass (0X7100092B50,"CONST");
	SegDefReg(0x7100092B50,"T",0x0);
	SegDefReg(0x7100092B50,"DS",0x0);
	set_segm_type(0X7100092B50,3);
	add_segm_ex(0X71000AA4F0,0X71000AA530,0,2,1,2,ADDSEG_NOSREG);
	SegRename(0X71000AA4F0,".rodata.4");
	SegClass (0X71000AA4F0,"CONST");
	SegDefReg(0x71000AA4F0,"T",0x0);
	SegDefReg(0x71000AA4F0,"DS",0x0);
	set_segm_type(0X71000AA4F0,3);
	add_segm_ex(0X71000AB000,0X71000B4228,0,2,1,2,ADDSEG_NOSREG);
	SegRename(0X71000AB000,".data");
	SegClass (0X71000AB000,"DATA");
	SegDefReg(0x71000AB000,"T",0x0);
	SegDefReg(0x71000AB000,"DS",0x0);
	set_segm_type(0X71000AB000,3);
	add_segm_ex(0X71000B4228,0X71000B43A8,0,2,1,2,ADDSEG_NOSREG);
	SegRename(0X71000B4228,".dynamic");
	SegClass (0X71000B4228,"DATA");
	SegDefReg(0x71000B4228,"T",0x0);
	SegDefReg(0x71000B4228,"DS",0x0);
	set_segm_type(0X71000B4228,3);
	add_segm_ex(0X71000B43A8,0X71000B43C8,0,2,1,2,ADDSEG_NOSREG);
	SegRename(0X71000B43A8,".got.plt");
	SegClass (0X71000B43A8,"CONST");
	SegDefReg(0x71000B43A8,"T",0x0);
	SegDefReg(0x71000B43A8,"DS",0x0);
	set_segm_type(0X71000B43A8,3);
	add_segm_ex(0X71000B43C8,0X71000B4BD8,0,2,1,2,ADDSEG_NOSREG);
	SegRename(0X71000B43C8,".got");
	SegClass (0X71000B43C8,"CONST");
	SegDefReg(0x71000B43C8,"T",0x0);
	SegDefReg(0x71000B43C8,"DS",0x0);
	set_segm_type(0X71000B43C8,3);
	add_segm_ex(0X71000B4BD8,0X71000B4C60,0,2,1,2,ADDSEG_NOSREG);
	SegRename(0X71000B4BD8,".init_array");
	SegClass (0X71000B4BD8,"DATA");
	SegDefReg(0x71000B4BD8,"T",0x0);
	SegDefReg(0x71000B4BD8,"DS",0x0);
	set_segm_type(0X71000B4BD8,3);
	add_segm_ex(0X71000B4C60,0X71000B6000,0,2,1,2,ADDSEG_NOSREG);
	SegRename(0X71000B4C60,".data.1");
	SegClass (0X71000B4C60,"DATA");
	SegDefReg(0x71000B4C60,"T",0x0);
	SegDefReg(0x71000B4C60,"DS",0x0);
	set_segm_type(0X71000B4C60,3);
	add_segm_ex(0X71000B6000,0X7100240720,0,2,1,2,ADDSEG_NOSREG);
	SegRename(0X71000B6000,".bss");
	SegClass (0X71000B6000,"BSS");
	SegDefReg(0x71000B6000,"T",0x0);
	SegDefReg(0x71000B6000,"DS",0x0);
	set_segm_type(0X71000B6000,9);
	add_segm_ex(0X7100241008,0X7100241030,0,1,1,2,ADDSEG_NOSREG);
	SegRename(0X7100241008,"UNDEF");
	SegClass (0X7100241008,"XTRN");
	SegDefReg(0x7100241008,"T",0x0);
	SegDefReg(0x7100241008,"DS",0x0);
	set_segm_type(0X7100241008,1);
	set_inf_attr(INF_LOW_OFF, 0x7100000000);
	set_inf_attr(INF_HIGH_OFF, 0x7100241030);
}

static Enums_0(id) {

	id = add_enum(-1,"nn::psc::PmModuleId",0x1100000);
	add_enum_member(id,"Reserved0",	0,	-1);
	add_enum_member(id,"Reserved1",	0X1,	-1);
	add_enum_member(id,"Reserved2",	0X2,	-1);
	add_enum_member(id,"Socket",	0X3,	-1);
	add_enum_member(id,"Usb",	0X4,	-1);
	add_enum_member(id,"Eth",	0X5,	-1);
	add_enum_member(id,"Fgm",	0X6,	-1);
	add_enum_member(id,"PcvClock",	0X7,	-1);
	add_enum_member(id,"PcvVoltage",	0X8,	-1);
	add_enum_member(id,"Gpio",	0X9,	-1);
	add_enum_member(id,"Pinmux",	0XA,	-1);
	add_enum_member(id,"Uart",	0XB,	-1);
	add_enum_member(id,"I2c",	0XC,	-1);
	add_enum_member(id,"I2cPowerBus",	0XD,	-1);
	add_enum_member(id,"Spi",	0XE,	-1);
	add_enum_member(id,"Pwm",	0XF,	-1);
	add_enum_member(id,"Psm",	0X10,	-1);
	add_enum_member(id,"Tc",	0X11,	-1);
	add_enum_member(id,"Omm",	0X12,	-1);
	add_enum_member(id,"Pcie",	0X13,	-1);
	add_enum_member(id,"Lbl",	0X14,	-1);
	add_enum_member(id,"Display",	0X15,	-1);
	add_enum_member(id,"Multimedia",	0X16,	-1);
	add_enum_member(id,"Time17",	0X17,	-1);
	add_enum_member(id,"Hid",	0X18,	-1);
	add_enum_member(id,"SocketWlan",	0X19,	-1);
	add_enum_member(id,"Wlan",	0X1A,	-1);
	add_enum_member(id,"Fs",	0X1B,	-1);
	add_enum_member(id,"Audio",	0X1C,	-1);
	add_enum_member(id,"Tm",	0X1D,	-1);
	add_enum_member(id,"TmHostIo",	0X1E,	-1);
	add_enum_member(id,"Bluetooth",	0X1F,	-1);
	add_enum_member(id,"Bpc",	0X20,	-1);
	add_enum_member(id,"Fan",	0X21,	-1);
	add_enum_member(id,"Pcm",	0X22,	-1);
	add_enum_member(id,"Nfc",	0X23,	-1);
	add_enum_member(id,"Apm",	0X24,	-1);
	add_enum_member(id,"Btm",	0X25,	-1);
	add_enum_member(id,"Nifm",	0X26,	-1);
	add_enum_member(id,"GpioLow",	0X27,	-1);
	add_enum_member(id,"Npns",	0X28,	-1);
	add_enum_member(id,"Lm",	0X29,	-1);
	add_enum_member(id,"Bcat",	0X2A,	-1);
	add_enum_member(id,"Time2B",	0X2B,	-1);
	add_enum_member(id,"Pctl",	0X2C,	-1);
	add_enum_member(id,"Erpt",	0X2D,	-1);
	add_enum_member(id,"Eupld",	0X2E,	-1);
	add_enum_member(id,"Friends",	0X2F,	-1);
	add_enum_member(id,"Bgtc",	0X30,	-1);
	add_enum_member(id,"Account",	0X31,	-1);
	add_enum_member(id,"Sasbus",	0X32,	-1);
	add_enum_member(id,"Ntc",	0X33,	-1);
	add_enum_member(id,"Idle",	0X34,	-1);
	add_enum_member(id,"Tcap",	0X35,	-1);
	add_enum_member(id,"PsmLow",	0X36,	-1);
	add_enum_member(id,"Ndd",	0X37,	-1);
	add_enum_member(id,"Olsc",	0X38,	-1);
	add_enum_member(id,"Rtc",	0X39,	-1);
	add_enum_member(id,"Unk3A",	0X3A,	-1);
	add_enum_member(id,"Unk3B",	0X3B,	-1);
	add_enum_member(id,"Led",	0X3C,	-1);
	add_enum_member(id,"Ns",	0X3D,	-1);
	add_enum_member(id,"Unk3E",	0X3E,	-1);
	add_enum_member(id,"NotificationPresenter",	0X3F,	-1);
	add_enum_member(id,"Unk40",	0X40,	-1);
	add_enum_member(id,"DhcpClient",	0X41,	-1);
	add_enum_member(id,"NvHost",	0X65,	-1);
	add_enum_member(id,"NvDbgSvc",	0X69,	-1);
	add_enum_member(id,"Tspm",	0X6A,	-1);
	add_enum_member(id,"Spsm",	0X7F,	-1);
	id = add_enum(-1,"nn::psc::PmState",0x1100000);
	add_enum_member(id,"FullAwake",	0,	-1);
	add_enum_member(id,"MinimumAwake",	0X1,	-1);
	add_enum_member(id,"SleepReady",	0X2,	-1);
	add_enum_member(id,"EssentialServicesSleepReady",	0X3,	-1);
	add_enum_member(id,"EssentialServicesAwake",	0X4,	-1);
	add_enum_member(id,"ShutdownReady",	0X5,	-1);
	return id;
}

//------------------------------------------------------------------------
// Information about enum types

static Enums(void) {
        auto id;
        begin_type_updating(UTP_ENUM);
	id = Enums_0(id);
        end_type_updating(UTP_ENUM);
}

static ApplyStrucTInfos_0(void) {
        auto id;
	id = get_struc_id("TimeServiceManager_Wrap");
	SetType(get_member_id(id, 0x0), "nn::timesrv::detail::service::ITimeServiceManager::vtbl *");
	SetType(get_member_id(id, 0x8), "TimeServiceManager");
	id = get_struc_id("TimeServiceManager");
	SetType(get_member_id(id, 0x0), "struct TimeServer *");
	SetType(get_member_id(id, 0x8), "nn::lmem::detail::HeapHead **");
	SetType(get_member_id(id, 0x10), "StandardLocalSystemClockCore *");
	SetType(get_member_id(id, 0x18), "StandardUserSystemClockCore *");
	SetType(get_member_id(id, 0x20), "StandardNetworkSystemClockCore *");
	SetType(get_member_id(id, 0x28), "StandardSteadyClockCore *");
	SetType(get_member_id(id, 0x30), "TimeZone *");
	SetType(get_member_id(id, 0x38), "EphemeralNetworkSystemClockCore *");
	SetType(get_member_id(id, 0x40), "TimeSharedMemory *");
	SetType(get_member_id(id, 0x48), "Alarms *");
	SetType(get_member_id(id, 0x50), "LocalSystemClockContextWriter *");
	SetType(get_member_id(id, 0x58), "NetworkSystemClockContextWriter *");
	SetType(get_member_id(id, 0x60), "EphemeralNetworkSystemClockContextWriter *");
	SetType(get_member_id(id, 0x68), "Node");
	SetType(get_member_id(id, 0x78), "nn::os::SystemEventType");
	SetType(get_member_id(id, 0xA8), "Node");
	SetType(get_member_id(id, 0xB8), "nn::os::SystemEventType");
	SetType(get_member_id(id, 0xE8), "Node");
	SetType(get_member_id(id, 0xF8), "nn::os::SystemEventType");
	id = get_struc_id("Node");
	SetType(get_member_id(id, 0x0), "Node *");
	SetType(get_member_id(id, 0x8), "Node *");
	id = get_struc_id("nn::os::SystemEventType");
	SetType(get_member_id(id, 0x0), "union nn::os::SystemEventType::$015B4E3048C8FCE03A6C3A7C05892448");
	SetType(get_member_id(id, 0x28), "uint8_t");
	id = get_struc_id("nn::os::SystemEventType::$015B4E3048C8FCE03A6C3A7C05892448");
	SetType(get_member_id(id, 0x0), "nn::os::EventType");
	SetType(get_member_id(id, 0x1), "nn::os::detail::InterProcessEventType");
	id = get_struc_id("nn::os::EventType");
	SetType(get_member_id(id, 0x0), "nn::os::EventType *");
	SetType(get_member_id(id, 0x8), "nn::os::EventType *");
	SetType(get_member_id(id, 0x10), "bool");
	SetType(get_member_id(id, 0x11), "bool");
	SetType(get_member_id(id, 0x12), "bool");
	SetType(get_member_id(id, 0x13), "bool");
	SetType(get_member_id(id, 0x14), "uint32_t");
	SetType(get_member_id(id, 0x18), "uint32_t");
	SetType(get_member_id(id, 0x1C), "nn::os::detail::InternalCriticalSectionImplByHorizon");
	SetType(get_member_id(id, 0x20), "nn::os::detail::InternalConditionVariableImplByHorizon");
	id = get_struc_id("nn::os::detail::InternalCriticalSectionImplByHorizon");
	SetType(get_member_id(id, 0x0), "uint32_t");
	id = get_struc_id("nn::os::detail::InternalConditionVariableImplByHorizon");
	SetType(get_member_id(id, 0x0), "uint32_t");
	id = get_struc_id("nn::os::detail::InterProcessEventType");
	SetType(get_member_id(id, 0x0), "nn::os::EventType *");
	SetType(get_member_id(id, 0x8), "nn::os::EventType *");
	SetType(get_member_id(id, 0x10), "bool");
	SetType(get_member_id(id, 0x11), "bool");
	SetType(get_member_id(id, 0x12), "bool");
	SetType(get_member_id(id, 0x13), "bool");
	SetType(get_member_id(id, 0x14), "uint32_t");
	SetType(get_member_id(id, 0x18), "uint32_t");
	SetType(get_member_id(id, 0x1C), "nn::os::detail::InternalCriticalSectionImplByHorizon");
	SetType(get_member_id(id, 0x20), "nn::os::detail::InternalConditionVariableImplByHorizon");
	id = get_struc_id("nn::timesrv::detail::service::ITimeServiceManager::vtbl");
	SetType(get_member_id(id, 0x0), "void (__fastcall *)(TimeServiceManager *)");
	SetType(get_member_id(id, 0x8), "void (__fastcall *)(TimeServiceManager *)");
	SetType(get_member_id(id, 0x10), "void (__fastcall *)(TimeServiceManager *)");
	SetType(get_member_id(id, 0x18), "void (__fastcall *)(TimeServiceManager *)");
	SetType(get_member_id(id, 0x20), "nn::Result (__fastcall *)(TimeServiceManager *)");
	SetType(get_member_id(id, 0x28), "nn::Result (__fastcall *)(TimeServiceManager *)");
	SetType(get_member_id(id, 0x30), "nn::Result (__fastcall *)(TimeServiceManager *)");
	SetType(get_member_id(id, 0x38), "nn::Result (__fastcall *)(TimeServiceManager *)");
	SetType(get_member_id(id, 0x40), "nn::Result (__fastcall *)(TimeServiceManager *)");
	SetType(get_member_id(id, 0x48), "nn::Result (__fastcall *)(TimeServiceManager *)");
	SetType(get_member_id(id, 0x50), "nn::Result (__fastcall *)(TimeServiceManager *)");
	SetType(get_member_id(id, 0x58), "nn::Result (__fastcall *)(TimeServiceManager *)");
	SetType(get_member_id(id, 0x60), "nn::Result (__fastcall *)(TimeServiceManager *)");
	SetType(get_member_id(id, 0x68), "nn::Result (__fastcall *)(TimeServiceManager *)");
	SetType(get_member_id(id, 0x70), "nn::Result (__fastcall *)(TimeServiceManager *)");
	SetType(get_member_id(id, 0x78), "nn::Result (__fastcall *)(TimeServiceManager *)");
	SetType(get_member_id(id, 0x80), "nn::Result (__fastcall *)(TimeServiceManager *)");
	SetType(get_member_id(id, 0x88), "nn::Result (__fastcall *)(TimeServiceManager *)");
	SetType(get_member_id(id, 0x90), "nn::Result (__fastcall *)(TimeServiceManager *)");
	SetType(get_member_id(id, 0x98), "nn::Result (__fastcall *)(TimeServiceManager *)");
	SetType(get_member_id(id, 0xA0), "nn::Result (__fastcall *)(TimeServiceManager *)");
	SetType(get_member_id(id, 0xA8), "nn::Result (__fastcall *)(TimeServiceManager *)");
	id = get_struc_id("StaticService_Wrap");
	SetType(get_member_id(id, 0x0), "nn::timesrv::detail::service::IStaticService::vtable *");
	SetType(get_member_id(id, 0x8), "StaticService");
	id = get_struc_id("StaticService");
	SetType(get_member_id(id, 0x0), "StaticServiceSetupInfo");
	SetType(get_member_id(id, 0x8), "nn::lmem::detail::HeapHead *");
	SetType(get_member_id(id, 0x10), "StandardLocalSystemClockCore *");
	SetType(get_member_id(id, 0x18), "StandardUserSystemClockCore *");
	SetType(get_member_id(id, 0x20), "StandardNetworkSystemClockCore *");
	SetType(get_member_id(id, 0x28), "struct TimeServer *");
	SetType(get_member_id(id, 0x30), "TimeZone *");
	SetType(get_member_id(id, 0x38), "EphemeralNetworkSystemClockCore *");
	SetType(get_member_id(id, 0x40), "TimeSharedMemory *");
	id = get_struc_id("SystemClock_Wrap");
	SetType(get_member_id(id, 0x0), "nn::timesrv::detail::service::ISystemClock::vtbl *");
	SetType(get_member_id(id, 0x8), "SystemClock");
	SetType(get_member_id(id, 0x28), "u32");
	SetType(get_member_id(id, 0x30), "void *");
	id = get_struc_id("SystemClock");
	SetType(get_member_id(id, 0x0), "StandardUserSystemClockCore *");
	SetType(get_member_id(id, 0x8), "nn::lmem::detail::HeapHead *");
	SetType(get_member_id(id, 0x10), "u8");
	SetType(get_member_id(id, 0x11), "u8");
	SetType(get_member_id(id, 0x18), "OperationEvent *");
	id = get_struc_id("nn::settings::ISystemSettingsServer");
	SetType(get_member_id(id, 0x0), "struct nn::settings::ISystemSettingsServer::vtable_16 *");
	id = get_struc_id("nn::settings::ISystemSettingsServer::vtable");
	SetType(get_member_id(id, 0x0), "void (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x8), "void (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x10), "void (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x18), "void (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x20), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x28), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x30), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x38), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x40), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x48), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x50), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x58), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x60), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x68), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x70), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x78), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x80), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x88), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x90), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x98), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0xA0), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0xA8), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0xB0), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0xB8), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0xC0), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0xC8), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0xD0), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0xD8), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0xE0), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0xE8), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0xF0), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0xF8), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x100), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x108), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x110), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x118), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x120), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x128), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x130), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x138), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x140), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x148), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x150), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x158), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x160), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x168), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x170), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x178), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x180), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x188), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x190), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x198), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x1A0), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x1A8), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x1B0), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x1B8), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x1C0), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x1C8), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x1D0), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x1D8), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x1E0), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x1E8), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x1F0), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x1F8), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x200), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x208), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x210), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x218), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x220), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x228), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x230), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x238), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x240), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x248), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x250), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x258), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x260), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x268), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x270), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x278), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x280), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x288), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x290), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x298), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x2A0), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x2A8), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x2B0), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x2B8), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x2C0), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x2C8), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x2D0), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x2D8), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x2E0), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x2E8), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x2F0), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x2F8), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x300), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x308), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x310), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x318), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x320), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x328), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x330), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x338), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x340), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x348), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x350), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x358), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x360), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x368), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x370), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x378), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x380), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x388), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x390), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x398), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x3A0), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x3A8), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x3B0), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x3B8), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x3C0), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x3C8), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x3D0), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x3D8), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x3E0), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x3E8), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x3F0), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x3F8), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x400), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x408), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x410), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x418), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x420), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x428), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x430), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x438), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x440), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x448), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x450), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x458), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x460), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x468), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x470), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x478), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x480), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x488), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x490), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x498), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x4A0), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x4A8), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x4B0), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x4B8), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x4C0), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x4C8), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x4D0), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x4D8), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x4E0), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x4E8), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x4F0), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x4F8), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x500), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x508), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x510), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x518), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x520), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x528), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x530), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x538), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x540), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x548), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x550), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x558), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x560), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x568), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x570), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x578), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x580), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x588), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x590), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x598), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x5A0), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x5A8), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x5B0), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x5B8), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x5C0), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x5C8), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x5D0), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x5D8), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x5E0), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x5E8), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x5F0), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x5F8), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x600), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x608), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x610), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x618), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x620), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x628), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x630), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x638), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x640), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x648), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x650), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x658), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x660), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x668), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x670), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x678), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x680), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x688), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x690), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x698), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	id = get_struc_id("__va_list_tag");
	SetType(get_member_id(id, 0x0), "void *");
	SetType(get_member_id(id, 0x8), "void *");
	SetType(get_member_id(id, 0x10), "void *");
	SetType(get_member_id(id, 0x18), "int");
	SetType(get_member_id(id, 0x1C), "int");
	id = get_struc_id("SystemClockContext");
	SetType(get_member_id(id, 0x0), "s64");
	SetType(get_member_id(id, 0x8), "SteadyClockTimePoint");
	id = get_struc_id("SteadyClockTimePoint");
	SetType(get_member_id(id, 0x0), "s64");
	SetType(get_member_id(id, 0x8), "char[16]");
	id = get_struc_id("nn::timesrv::detail::service::IStaticService::vtable");
	SetType(get_member_id(id, 0x0), "void (__fastcall *)(SystemClock *)");
	SetType(get_member_id(id, 0x8), "void (__fastcall *)(SystemClock *)");
	SetType(get_member_id(id, 0x10), "void (__fastcall *)(SystemClock *)");
	SetType(get_member_id(id, 0x18), "void (__fastcall *)(SystemClock *)");
	SetType(get_member_id(id, 0x20), "nn::Result (__fastcall *)(StaticService *)");
	SetType(get_member_id(id, 0x28), "nn::Result (__fastcall *)(StaticService *)");
	SetType(get_member_id(id, 0x30), "nn::Result (__fastcall *)(StaticService *)");
	SetType(get_member_id(id, 0x38), "nn::Result (__fastcall *)(StaticService *)");
	SetType(get_member_id(id, 0x40), "nn::Result (__fastcall *)(StaticService *)");
	SetType(get_member_id(id, 0x48), "nn::Result (__fastcall *)(StaticService *)");
	SetType(get_member_id(id, 0x50), "nn::Result (__fastcall *)(StaticService *)");
	SetType(get_member_id(id, 0x58), "nn::Result (__fastcall *)(StaticService *)");
	SetType(get_member_id(id, 0x60), "nn::Result (__fastcall *)(StaticService *)");
	SetType(get_member_id(id, 0x68), "nn::Result (__fastcall *)(StaticService *)");
	SetType(get_member_id(id, 0x70), "nn::Result (__fastcall *)(StaticService *)");
	SetType(get_member_id(id, 0x78), "nn::Result (__fastcall *)(StaticService *)");
	SetType(get_member_id(id, 0x80), "nn::Result (__fastcall *)(StaticService *)");
	SetType(get_member_id(id, 0x88), "nn::Result (__fastcall *)(StaticService *)");
	SetType(get_member_id(id, 0x90), "nn::Result (__fastcall *)(StaticService *)");
	SetType(get_member_id(id, 0x98), "nn::Result (__fastcall *)(StaticService *)");
	SetType(get_member_id(id, 0xA0), "nn::Result (__fastcall *)(StaticService *)");
	SetType(get_member_id(id, 0xA8), "nn::Result (__fastcall *)(StaticService *)");
	SetType(get_member_id(id, 0xB0), "nn::Result (__fastcall *)(StaticService *)");
	id = get_struc_id("nn::settings::ISystemSettingsServer::vtable_16");
	SetType(get_member_id(id, 0x0), "void (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x8), "void (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x10), "void (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x18), "void (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x20), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x28), "nn::Result (__fastcall *)(nn::settings::ISystemSettingsServer *)");
	SetType(get_member_id(id, 0x30), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x38), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x40), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x48), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x50), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x58), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x60), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x68), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x70), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x78), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x80), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x88), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x90), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x98), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0xA0), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0xA8), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0xB0), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0xB8), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0xC0), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0xC8), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0xD0), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0xD8), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0xE0), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0xE8), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0xF0), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0xF8), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x100), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x108), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x110), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x118), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x120), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x128), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x130), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x138), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x140), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x148), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x150), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x158), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x160), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x168), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x170), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x178), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x180), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x188), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x190), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x198), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x1A0), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x1A8), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x1B0), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x1B8), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x1C0), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x1C8), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x1D0), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x1D8), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x1E0), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x1E8), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x1F0), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x1F8), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x200), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x208), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x210), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x218), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x220), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x228), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x230), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x238), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x240), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x248), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x250), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x258), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x260), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x268), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x270), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x278), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x280), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x288), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x290), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x298), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x2A0), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x2A8), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x2B0), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x2B8), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x2C0), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x2C8), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x2D0), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x2D8), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x2E0), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x2E8), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x2F0), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x2F8), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x300), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x308), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x310), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x318), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x320), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x328), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x330), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x338), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x340), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x348), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x350), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x358), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x360), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x368), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x370), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x378), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x380), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x388), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x390), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x398), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x3A0), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x3A8), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x3B0), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x3B8), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x3C0), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x3C8), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x3D0), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x3D8), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x3E0), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x3E8), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x3F0), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x3F8), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x400), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x408), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x410), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x418), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x420), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x428), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x430), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x438), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x440), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x448), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x450), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x458), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x460), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x468), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x470), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x478), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x480), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x488), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x490), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x498), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x4A0), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x4A8), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x4B0), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x4B8), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x4C0), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x4C8), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x4D0), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x4D8), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x4E0), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x4E8), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x4F0), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x4F8), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x500), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x508), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x510), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x518), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x520), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x528), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x530), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x538), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x540), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x548), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x550), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x558), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x560), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x568), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x570), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x578), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x580), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x588), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x590), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x598), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x5A0), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x5A8), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x5B0), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x5B8), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x5C0), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x5C8), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x5D0), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x5D8), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x5E0), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x5E8), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x5F0), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x5F8), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x600), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x608), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x610), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x618), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x620), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x628), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x630), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x638), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x640), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x648), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x650), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x658), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x660), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x668), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x670), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x678), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x680), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x688), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x690), "nn::Result (__fastcall *)()");
	id = get_struc_id("TimeZone::LocationName");
	SetType(get_member_id(id, 0x0), "char[36]");
	id = get_struc_id("nn::sf::NativeHandle");
	SetType(get_member_id(id, 0x0), "nn::svc::Handle");
	SetType(get_member_id(id, 0x4), "bool");
	SetType(get_member_id(id, 0x5), "bool");
	id = get_struc_id("nn::timesrv::detail::service::ISystemClock::vtbl");
	SetType(get_member_id(id, 0x0), "void (__fastcall *)(SystemClock *)");
	SetType(get_member_id(id, 0x8), "void (__fastcall *)(SystemClock *)");
	SetType(get_member_id(id, 0x10), "void (__fastcall *)(SystemClock *)");
	SetType(get_member_id(id, 0x18), "void (__fastcall *)(SystemClock *)");
	SetType(get_member_id(id, 0x20), "nn::Result (__fastcall *)(SystemClock *)");
	SetType(get_member_id(id, 0x28), "nn::Result (__fastcall *)(SystemClock *)");
	SetType(get_member_id(id, 0x30), "nn::Result (__fastcall *)(SystemClock *)");
	SetType(get_member_id(id, 0x38), "nn::Result (__fastcall *)(SystemClock *)");
	SetType(get_member_id(id, 0x40), "nn::Result (__fastcall *)(SystemClock *)");
	id = get_struc_id("StaticService_Wrap2");
	SetType(get_member_id(id, 0x0), "nn::timesrv::detail::service::IStaticService::vtable *");
	SetType(get_member_id(id, 0x8), "StaticService");
	SetType(get_member_id(id, 0x50), "u32");
	SetType(get_member_id(id, 0x58), "nn::lmem::detail::HeapHead **");
	id = get_struc_id("nn::lmem::detail::HeapHead_Wrap");
	SetType(get_member_id(id, 0x0), "nn::lmem::detail::HeapHead *");
	SetType(get_member_id(id, 0x8), "s64");
	id = get_struc_id("nn::timesrv::detail::service::IAlarmService::vtable");
	SetType(get_member_id(id, 0x0), "void (__fastcall *)(AlarmService_Wrap *)");
	SetType(get_member_id(id, 0x8), "void (__fastcall *)(AlarmService_Wrap *)");
	SetType(get_member_id(id, 0x10), "void (__fastcall *)(AlarmService_Wrap *)");
	SetType(get_member_id(id, 0x18), "void (__fastcall *)(AlarmService_Wrap *)");
	SetType(get_member_id(id, 0x20), "nn::Result (__fastcall *)(AlarmService_Wrap *)");
	SetType(get_member_id(id, 0x28), "nn::Result (__fastcall *)(AlarmService_Wrap *)");
	id = get_struc_id("nn::timesrv::detail::service::ITimeZoneService::vtable");
	SetType(get_member_id(id, 0x0), "void (__fastcall *)(SteadyClock *)");
	SetType(get_member_id(id, 0x8), "void (__fastcall *)(SteadyClock *)");
	SetType(get_member_id(id, 0x10), "void (__fastcall *)(SteadyClock *)");
	SetType(get_member_id(id, 0x18), "void (__fastcall *)(SteadyClock *)");
	SetType(get_member_id(id, 0x20), "nn::Result (__fastcall *)(TimeZoneService *)");
	SetType(get_member_id(id, 0x28), "nn::Result (__fastcall *)(TimeZoneService *)");
	SetType(get_member_id(id, 0x30), "nn::Result (__fastcall *)(TimeZoneService *)");
	SetType(get_member_id(id, 0x38), "nn::Result (__fastcall *)(TimeZoneService *)");
	SetType(get_member_id(id, 0x40), "nn::Result (__fastcall *)(TimeZoneService *)");
	SetType(get_member_id(id, 0x48), "nn::Result (__fastcall *)(TimeZoneService *)");
	SetType(get_member_id(id, 0x50), "nn::Result (__fastcall *)(TimeZoneService *)");
	SetType(get_member_id(id, 0x58), "nn::Result (__fastcall *)(TimeZoneService *)");
	SetType(get_member_id(id, 0x60), "nn::Result (__fastcall *)(TimeZoneService *)");
	SetType(get_member_id(id, 0x68), "nn::Result (__fastcall *)(TimeZoneService *)");
	SetType(get_member_id(id, 0x70), "nn::Result (__fastcall *)(TimeZoneService *)");
	SetType(get_member_id(id, 0x78), "nn::Result (__fastcall *)(TimeZoneService *)");
	SetType(get_member_id(id, 0x80), "nn::Result (__fastcall *)(TimeZoneService *)");
	SetType(get_member_id(id, 0x88), "nn::Result (__fastcall *)(TimeZoneService *)");
	id = get_struc_id("TimeZone::CalendarAdditionalInfo");
	SetType(get_member_id(id, 0x0), "u32");
	SetType(get_member_id(id, 0x4), "u32");
	SetType(get_member_id(id, 0x8), "char[8]");
	SetType(get_member_id(id, 0x10), "bool");
	SetType(get_member_id(id, 0x14), "s32");
	id = get_struc_id("TimeZoneService_Wrap");
	SetType(get_member_id(id, 0x0), "nn::timesrv::detail::service::ITimeZoneService::vtable *");
	SetType(get_member_id(id, 0x8), "TimeZoneService");
	SetType(get_member_id(id, 0x20), "u32");
	SetType(get_member_id(id, 0x28), "void *");
	id = get_struc_id("TimeZoneService");
	SetType(get_member_id(id, 0x0), "StandardSteadyClockCore *");
	SetType(get_member_id(id, 0x8), "TimeZone *");
	SetType(get_member_id(id, 0x10), "u8");
	id = get_struc_id("nn::os::SharedMemoryType");
	SetType(get_member_id(id, 0x0), "u8");
	SetType(get_member_id(id, 0x1), "bool");
	SetType(get_member_id(id, 0x2), "bool");
	SetType(get_member_id(id, 0x8), "void *");
	SetType(get_member_id(id, 0x10), "size_t");
	SetType(get_member_id(id, 0x18), "uint32_t");
	SetType(get_member_id(id, 0x1C), "char[32]");
	SetType(get_member_id(id, 0x3C), "nn::os::detail::InternalCriticalSectionImplByHorizon");
	id = get_struc_id("TimeSharedMemory");
	SetType(get_member_id(id, 0x0), "nn::os::SharedMemoryType");
	SetType(get_member_id(id, 0x40), "SharedMemory *");
	id = get_struc_id("SharedMemory");
	SetType(get_member_id(id, 0x0), "LockFreeAtomic_SteadyClockTimePoint");
	SetType(get_member_id(id, 0x38), "LockFreeAtomic_SystemClockContext");
	SetType(get_member_id(id, 0x80), "LockFreeAtomic_SystemClockContext");
	SetType(get_member_id(id, 0xC8), "LockFreeAtomic_AutomaticCorrection");
	SetType(get_member_id(id, 0xD0), "LockFreeAtomic_ContinuousAdjustmentTimePoint");
	SetType(get_member_id(id, 0x148), "char[3768]");
	id = get_struc_id("ContinuousAdjustmentTimePoint");
	SetType(get_member_id(id, 0x0), "s64");
	SetType(get_member_id(id, 0x8), "s64");
	SetType(get_member_id(id, 0x10), "s64");
	SetType(get_member_id(id, 0x18), "s64");
	SetType(get_member_id(id, 0x20), "s64");
	SetType(get_member_id(id, 0x28), "char[16]");
	id = get_struc_id("SDKTimeSharedMemory_Related");
	SetType(get_member_id(id, 0x0), "nn::os::SdkMutexType");
	SetType(get_member_id(id, 0x4), "char[4]");
	SetType(get_member_id(id, 0x8), "u32");
	SetType(get_member_id(id, 0x10), "SystemClockContext[2]");
	id = get_struc_id("nn::os::SdkMutexType");
	SetType(get_member_id(id, 0x0), "u32");
	id = get_struc_id("TimeZone::CalendarTime");
	SetType(get_member_id(id, 0x0), "s16");
	SetType(get_member_id(id, 0x2), "s8");
	SetType(get_member_id(id, 0x3), "s8");
	SetType(get_member_id(id, 0x4), "s8");
	SetType(get_member_id(id, 0x5), "s8");
	SetType(get_member_id(id, 0x6), "s8");
	SetType(get_member_id(id, 0x7), "char[1]");
	id = get_struc_id("nn::sf::detail::PointerAndSize");
	SetType(get_member_id(id, 0x0), "void *");
	SetType(get_member_id(id, 0x8), "size_t");
	id = get_struc_id("nn::os::Thread");
	SetType(get_member_id(id, 0x0), "char[416]");
	SetType(get_member_id(id, 0x1A0), "char *");
	SetType(get_member_id(id, 0x1A8), "char[24]");
	id = get_struc_id("EventHandlerArg");
	SetType(get_member_id(id, 0x0), "u8[140640]");
	id = get_struc_id("NotifEventHandlerStruct");
	SetType(get_member_id(id, 0x0), "u8[65664]");
	SetType(get_member_id(id, 0x10080), "u8[7288]");
	SetType(get_member_id(id, 0x11CF8), "u8[67688]");
	id = get_struc_id("StaticServiceSetupInfo");
	SetType(get_member_id(id, 0x0), "bool");
	SetType(get_member_id(id, 0x1), "bool");
	SetType(get_member_id(id, 0x2), "bool");
	SetType(get_member_id(id, 0x3), "bool");
	SetType(get_member_id(id, 0x4), "bool");
	SetType(get_member_id(id, 0x5), "bool");
	id = get_struc_id("GlueStaticService");
	SetType(get_member_id(id, 0x0), "StaticServiceSetupInfo");
	SetType(get_member_id(id, 0x8), "StaticService_Wrap *");
	SetType(get_member_id(id, 0x10), "TimeZoneService_Wrap *");
	SetType(get_member_id(id, 0x18), "GlueTime40 *");
	SetType(get_member_id(id, 0x20), "StandardSteadyClockResource *");
	id = get_struc_id("nn::os::MutexType");
	SetType(get_member_id(id, 0x0), "uint8_t");
	SetType(get_member_id(id, 0x1), "bool");
	SetType(get_member_id(id, 0x4), "int");
	SetType(get_member_id(id, 0x8), "int");
	SetType(get_member_id(id, 0x10), "nn::os::ThreadType *");
	SetType(get_member_id(id, 0x18), "union nn::os::MutexType::$08BC7EEE3E858AA1510DFCFE2DD2AE43");
	id = get_struc_id("nn::os::MutexType::$08BC7EEE3E858AA1510DFCFE2DD2AE43");
	SetType(get_member_id(id, 0x0), "int32_t[1]");
	SetType(get_member_id(id, 0x1), "nn::os::detail::InternalCriticalSectionStorage");
	id = get_struc_id("nn::os::detail::InternalCriticalSectionStorage");
	SetType(get_member_id(id, 0x0), "nn::os::detail::InternalCriticalSection");
	id = get_struc_id("nn::os::detail::InternalCriticalSection");
	SetType(get_member_id(id, 0x0), "u32");
	id = get_struc_id("nn::psc::sf::IPmService");
	SetType(get_member_id(id, 0x0), "struct nn::psc::sf::IPmService::vtable *");
	id = get_struc_id("nn::psc::sf::IPmModule::vtable");
	SetType(get_member_id(id, 0x0), "void (__fastcall *)(nn::psc::sf::IPmModule *)");
	SetType(get_member_id(id, 0x8), "void (__fastcall *)(nn::psc::sf::IPmModule *)");
	SetType(get_member_id(id, 0x10), "void (__fastcall *)(nn::psc::sf::IPmModule *)");
	SetType(get_member_id(id, 0x18), "void (__fastcall *)(nn::psc::sf::IPmModule *)");
	SetType(get_member_id(id, 0x20), "nn::Result (__fastcall *)(nn::psc::sf::IPmModule *)");
	SetType(get_member_id(id, 0x28), "nn::Result (__fastcall *)(nn::psc::sf::IPmModule *)");
	SetType(get_member_id(id, 0x30), "nn::Result (__fastcall *)(nn::psc::sf::IPmModule *)");
	SetType(get_member_id(id, 0x38), "nn::Result (__fastcall *)(nn::psc::sf::IPmModule *)");
	SetType(get_member_id(id, 0x40), "nn::Result (__fastcall *)(nn::psc::sf::IPmModule *)");
	id = get_struc_id("AlarmService_Wrap");
	SetType(get_member_id(id, 0x0), "struct AlarmService_Wrap::nn::timesrv::detail::service::IAlarmService::vtable *");
	SetType(get_member_id(id, 0x8), "AlarmService");
	id = get_struc_id("AlarmService");
	SetType(get_member_id(id, 0x0), "nn::lmem::detail::HeapHead **");
	SetType(get_member_id(id, 0x8), "Alarms *");
	id = get_struc_id("GlueTime");
	SetType(get_member_id(id, 0x0), "void *");
	SetType(get_member_id(id, 0x8), "StaticService_Wrap *");
	SetType(get_member_id(id, 0x10), "StandardSteadyClockResource");
	SetType(get_member_id(id, 0x40), "GlueTime40");
	SetType(get_member_id(id, 0x58), "GlueTime58");
	SetType(get_member_id(id, 0x458), "GlueTime458");
	id = get_struc_id("StandardSteadyClockResource");
	SetType(get_member_id(id, 0x0), "void *");
	SetType(get_member_id(id, 0x8), "nn::os::SdkMutexType");
	SetType(get_member_id(id, 0xC), "char[16]");
	SetType(get_member_id(id, 0x20), "s64");
	SetType(get_member_id(id, 0x28), "nn::Result");
	SetType(get_member_id(id, 0x2C), "bool");
	id = get_struc_id("GlueTime40");
	SetType(get_member_id(id, 0x0), "SystemClock_Wrap *");
	SetType(get_member_id(id, 0x8), "TimeZoneService_Wrap *");
	SetType(get_member_id(id, 0x10), "bool");
	SetType(get_member_id(id, 0x11), "char[7]");
	id = get_struc_id("GlueTime58");
	SetType(get_member_id(id, 0x0), "nn::os::ThreadType");
	SetType(get_member_id(id, 0x1C0), "nn::os::EventType");
	SetType(get_member_id(id, 0x1E8), "StaticService_Wrap *");
	SetType(get_member_id(id, 0x1F0), "SystemClock_Wrap *");
	SetType(get_member_id(id, 0x1F8), "SystemClock_Wrap *");
	SetType(get_member_id(id, 0x200), "SystemClock_Wrap *");
	SetType(get_member_id(id, 0x208), "StandardSteadyClockResource *");
	SetType(get_member_id(id, 0x210), "GlueTime40 *");
	SetType(get_member_id(id, 0x218), "nn::os::SystemEventType");
	SetType(get_member_id(id, 0x248), "nn::os::SystemEventType");
	SetType(get_member_id(id, 0x278), "nn::os::SystemEventType");
	SetType(get_member_id(id, 0x2A8), "nn::os::SystemEventType");
	SetType(get_member_id(id, 0x2D8), "nn::os::TimerEventType");
	SetType(get_member_id(id, 0x318), "nn::os::TimerEventType");
	SetType(get_member_id(id, 0x358), "GlueTime58Sub");
	SetType(get_member_id(id, 0x3E8), "GlueTime58PmStateChangeHandler");
	id = get_struc_id("GlueTime458");
	SetType(get_member_id(id, 0x0), "char[39728]");
	SetType(get_member_id(id, 0x9B30), "GlueStaticService_Wrap");
	SetType(get_member_id(id, 0x9B68), "GlueStaticService_Wrap");
	SetType(get_member_id(id, 0x9BA0), "GlueStaticService_Wrap");
	SetType(get_member_id(id, 0x9BD8), "char[4096]");
	SetType(get_member_id(id, 0xABD8), "nn::lmem::detail::HeapHead *");
	SetType(get_member_id(id, 0xABE0), "nn::os::MutexType");
	id = get_struc_id("GlueStaticService_Wrap");
	SetType(get_member_id(id, 0x0), "nn::timesrv::detail::service::IStaticService::vtable *");
	SetType(get_member_id(id, 0x8), "GlueStaticService");
	SetType(get_member_id(id, 0x30), "nn::lmem::detail::HeapHead *");
	id = get_struc_id("GlueTimeZoneService_Wrap");
	SetType(get_member_id(id, 0x0), "nn::timesrv::detail::service::ITimeZoneService::vtable *");
	SetType(get_member_id(id, 0x8), "GlueTimeZoneService");
	SetType(get_member_id(id, 0x70), "u32");
	SetType(get_member_id(id, 0x78), "void *");
	id = get_struc_id("GlueTimeZoneService");
	SetType(get_member_id(id, 0x0), "bool");
	SetType(get_member_id(id, 0x8), "struct GlueTime40 *");
	SetType(get_member_id(id, 0x10), "TimeZoneService_Wrap *");
	SetType(get_member_id(id, 0x18), "nn::os::SdkRecursiveMutexType");
	SetType(get_member_id(id, 0x20), "bool");
	SetType(get_member_id(id, 0x28), "Node");
	SetType(get_member_id(id, 0x38), "nn::os::SystemEventType");
	id = get_struc_id("nn::os::SdkRecursiveMutexType");
	SetType(get_member_id(id, 0x0), "u32");
	SetType(get_member_id(id, 0x4), "u32");
	id = get_struc_id("nn::fssrv::sf::IFileSystemProxy");
	SetType(get_member_id(id, 0x0), "struct nn::fssrv::sf::IFileSystemProxy::vtable *");
	id = get_struc_id("nn::fssrv::sf::IFileSystemProxy::vtable");
	SetType(get_member_id(id, 0x0), "void (__fastcall *)(nn::ins::ISenderManager *)");
	SetType(get_member_id(id, 0x8), "void (__fastcall *)(nn::ins::ISenderManager *)");
	SetType(get_member_id(id, 0x10), "void (__fastcall *)(nn::ins::ISenderManager *)");
	SetType(get_member_id(id, 0x18), "void (__fastcall *)(nn::ins::ISenderManager *)");
	SetType(get_member_id(id, 0x20), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x28), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x30), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x38), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x40), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x48), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x50), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x58), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x60), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x68), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x70), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x78), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x80), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x88), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x90), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x98), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0xA0), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0xA8), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0xB0), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0xB8), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0xC0), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0xC8), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0xD0), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0xD8), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0xE0), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0xE8), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0xF0), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0xF8), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x100), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x108), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x110), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x118), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x120), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x128), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x130), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x138), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x140), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x148), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x150), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x158), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x160), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x168), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x170), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x178), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x180), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x188), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x190), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x198), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x1A0), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x1A8), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x1B0), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x1B8), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x1C0), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x1C8), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x1D0), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x1D8), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x1E0), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x1E8), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x1F0), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x1F8), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x200), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x208), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x210), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x218), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x220), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x228), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x230), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x238), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x240), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x248), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x250), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x258), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x260), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x268), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x270), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x278), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x280), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x288), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x290), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x298), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x2A0), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x2A8), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x2B0), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x2B8), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x2C0), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x2C8), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x2D0), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x2D8), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x2E0), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x2E8), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x2F0), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x2F8), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x300), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x308), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x310), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x318), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x320), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x328), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x330), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x338), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x340), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x348), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x350), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x358), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x360), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x368), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x370), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x378), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x380), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x388), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x390), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x398), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x3A0), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x3A8), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x3B0), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x3B8), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x3C0), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x3C8), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x3D0), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x3D8), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x3E0), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x3E8), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x3F0), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x3F8), "nn::Result (__fastcall *)()");
	SetType(get_member_id(id, 0x400), "nn::Result (__fastcall *)()");
	id = get_struc_id("TimeZone::Rule");
	SetType(get_member_id(id, 0x0), "s32");
	SetType(get_member_id(id, 0x4), "s32");
	SetType(get_member_id(id, 0x8), "s32");
	SetType(get_member_id(id, 0xC), "bool");
	SetType(get_member_id(id, 0xD), "bool");
	SetType(get_member_id(id, 0xE), "bool[2]");
	SetType(get_member_id(id, 0x10), "s64[1000]");
	SetType(get_member_id(id, 0x1F50), "u8[1000]");
	SetType(get_member_id(id, 0x2338), "ttinfo[128]");
	SetType(get_member_id(id, 0x2B38), "s8[512]");
	SetType(get_member_id(id, 0x2D38), "s32");
	SetType(get_member_id(id, 0x2D3C), "char[4804]");
	id = get_struc_id("ttinfo");
	SetType(get_member_id(id, 0x0), "s32");
	SetType(get_member_id(id, 0x4), "bool");
	SetType(get_member_id(id, 0x8), "s32");
	SetType(get_member_id(id, 0xC), "bool");
	SetType(get_member_id(id, 0xD), "bool");
	id = get_struc_id("nn::os::TimerEventType");
	SetType(get_member_id(id, 0x0), "void *");
	SetType(get_member_id(id, 0x8), "void *");
	SetType(get_member_id(id, 0x10), "u8");
	SetType(get_member_id(id, 0x11), "u8");
	SetType(get_member_id(id, 0x12), "bool");
	SetType(get_member_id(id, 0x13), "u8");
	SetType(get_member_id(id, 0x14), "u32");
	SetType(get_member_id(id, 0x18), "u32");
	SetType(get_member_id(id, 0x20), "s64");
	SetType(get_member_id(id, 0x28), "s64");
	SetType(get_member_id(id, 0x30), "s64");
	SetType(get_member_id(id, 0x38), "nn::os::detail::InternalCriticalSectionImplByHorizon");
	SetType(get_member_id(id, 0x3C), "nn::os::detail::InternalConditionVariableImplByHorizon");
	id = get_struc_id("nn::os::ThreadType");
	SetType(get_member_id(id, 0x0), "__int64");
	SetType(get_member_id(id, 0x8), "__int64");
	SetType(get_member_id(id, 0x10), "__int64");
	SetType(get_member_id(id, 0x18), "char[32]");
	SetType(get_member_id(id, 0x38), "uint32_t");
	SetType(get_member_id(id, 0x3C), "char");
	SetType(get_member_id(id, 0x3E), "__int16");
	SetType(get_member_id(id, 0x40), "uint32_t");
	SetType(get_member_id(id, 0x48), "uint64_t");
	SetType(get_member_id(id, 0x50), "uint64_t");
	SetType(get_member_id(id, 0x58), "uint64_t");
	SetType(get_member_id(id, 0x60), "uint64_t");
	SetType(get_member_id(id, 0x68), "uint64_t");
	SetType(get_member_id(id, 0x70), "__int64");
	SetType(get_member_id(id, 0x78), "__int64");
	SetType(get_member_id(id, 0x80), "__int64");
	SetType(get_member_id(id, 0x88), "char[256]");
	SetType(get_member_id(id, 0x188), "char[32]");
	SetType(get_member_id(id, 0x1A8), "const char *");
	SetType(get_member_id(id, 0x1B0), "nn::os::detail::InternalCriticalSection");
	SetType(get_member_id(id, 0x1B4), "nn::os::detail::InternalConditionVariable");
	SetType(get_member_id(id, 0x1B8), "nn::svc::Handle");
	id = get_struc_id("nn::os::detail::InternalConditionVariable");
	SetType(get_member_id(id, 0x0), "u32");
	id = get_struc_id("GlueTime58Sub");
	SetType(get_member_id(id, 0x0), "nn::os::SystemEventType");
	SetType(get_member_id(id, 0x30), "nn::os::TimerEventType");
	SetType(get_member_id(id, 0x70), "char[24]");
	SetType(get_member_id(id, 0x88), "StandardSteadyClockResource *");
	id = get_struc_id("GlueTime58PmStateChangeHandler");
	SetType(get_member_id(id, 0x0), "struct GlueTime58PmStateChangeHandler::nn::timemgr::detail::core::PmStateChangeHandler::vtable *");
	SetType(get_member_id(id, 0x8), "GlueTime58Sub *");
	SetType(get_member_id(id, 0x10), "s32");
	SetType(get_member_id(id, 0x14), "char[4]");
	id = get_struc_id("AlarmInfo");
	SetType(get_member_id(id, 0x0), "s64");
	SetType(get_member_id(id, 0x8), "u32");
	id = get_struc_id("nn::rtc::IRtcManager");
	SetType(get_member_id(id, 0x0), "struct nn::rtc::IRtcManager::vtable *");
	id = get_struc_id("nn::rtc::IRtcManager::vtable");
	SetType(get_member_id(id, 0x0), "void (__fastcall *)(nn::rtc::IRtcManager *)");
	SetType(get_member_id(id, 0x8), "void (__fastcall *)(nn::rtc::IRtcManager *)");
	SetType(get_member_id(id, 0x10), "void (__fastcall *)(nn::rtc::IRtcManager *)");
	SetType(get_member_id(id, 0x18), "void (__fastcall *)(nn::rtc::IRtcManager *)");
	SetType(get_member_id(id, 0x20), "nn::Result (__fastcall *)(nn::rtc::IRtcManager *)");
	SetType(get_member_id(id, 0x28), "nn::Result (__fastcall *)(nn::rtc::IRtcManager *)");
	SetType(get_member_id(id, 0x30), "nn::Result (__fastcall *)(nn::rtc::IRtcManager *)");
	SetType(get_member_id(id, 0x38), "nn::Result (__fastcall *)(nn::rtc::IRtcManager *)");
	SetType(get_member_id(id, 0x40), "nn::Result (__fastcall *)(nn::rtc::IRtcManager *)");
	SetType(get_member_id(id, 0x48), "nn::Result (__fastcall *)(nn::rtc::IRtcManager *)");
	SetType(get_member_id(id, 0x50), "nn::Result (__fastcall *)(nn::rtc::IRtcManager *)");
	id = get_struc_id("nn::srepo::SystemReport");
	SetType(get_member_id(id, 0x0), "nn::srepo::EventId");
	SetType(get_member_id(id, 0x20), "u64");
	SetType(get_member_id(id, 0x28), "u32");
	SetType(get_member_id(id, 0x2C), "bool");
	SetType(get_member_id(id, 0x2D), "char[3]");
	SetType(get_member_id(id, 0x30), "u64");
	SetType(get_member_id(id, 0x38), "u64");
	SetType(get_member_id(id, 0x40), "u64");
	id = get_struc_id("nn::srepo::EventId");
	SetType(get_member_id(id, 0x0), "char[32]");
	id = get_struc_id("nn::psc::sf::IPmModule");
	SetType(get_member_id(id, 0x0), "struct nn::psc::sf::IPmModule::vtable *");
	SetType(get_member_id(id, 0x8), "nn::os::SystemEventType");
	id = get_struc_id("GlueTimeServiceManager_Wrap");
	SetType(get_member_id(id, 0x0), "nn::timesrv::detail::service::ITimeServiceManager::vtbl *");
	SetType(get_member_id(id, 0x8), "GlueTimeServiceManager");
	SetType(get_member_id(id, 0x28), "u32");
	SetType(get_member_id(id, 0x30), "void *");
	id = get_struc_id("GlueTimeServiceManager");
	SetType(get_member_id(id, 0x0), "bool");
	SetType(get_member_id(id, 0x8), "void *");
	SetType(get_member_id(id, 0x10), "u32");
	SetType(get_member_id(id, 0x18), "void *");
	id = get_struc_id("RomFSHeader");
	SetType(get_member_id(id, 0x0), "u64");
	SetType(get_member_id(id, 0x8), "u64");
	SetType(get_member_id(id, 0x10), "u64");
	SetType(get_member_id(id, 0x18), "u64");
	SetType(get_member_id(id, 0x20), "u64");
	SetType(get_member_id(id, 0x28), "u64");
	SetType(get_member_id(id, 0x30), "u64");
	SetType(get_member_id(id, 0x38), "u64");
	SetType(get_member_id(id, 0x40), "u64");
	SetType(get_member_id(id, 0x48), "u64");
	id = get_struc_id("LockFreeAtomic_SteadyClockTimePoint");
	SetType(get_member_id(id, 0x0), "u32");
	SetType(get_member_id(id, 0x8), "SteadyClockTimePoint[2]");
	id = get_struc_id("LockFreeAtomic_SystemClockContext");
	SetType(get_member_id(id, 0x0), "u32");
	SetType(get_member_id(id, 0x8), "SystemClockContext[2]");
	id = get_struc_id("LockFreeAtomic_AutomaticCorrection");
	SetType(get_member_id(id, 0x0), "u32");
	SetType(get_member_id(id, 0x4), "bool[2]");
	id = get_struc_id("LockFreeAtomic_ContinuousAdjustmentTimePoint");
	SetType(get_member_id(id, 0x0), "u32");
	SetType(get_member_id(id, 0x8), "ContinuousAdjustmentTimePoint[2]");
	id = get_struc_id("GlueLockFreeAtomics");
	SetType(get_member_id(id, 0x0), "u32");
	SetType(get_member_id(id, 0x8), "LockFreeAtomic_SystemClockContext");
	return id;
}

//------------------------------------------------------------------------
// Information about type information for structure members

static ApplyStrucTInfos() {
	ApplyStrucTInfos_0();
}

static Structures_0(id) {
        auto mid;

	id = add_struc(-1,"TimeServiceManager_Wrap",0);
	id = add_struc(-1,"TimeServiceManager",0);
	id = add_struc(-1,"Node",0);
	id = add_struc(-1,"nn::os::SystemEventType",0);
	id = add_struc(-1,"nn::os::SystemEventType::$015B4E3048C8FCE03A6C3A7C05892448",1);
	id = add_struc(-1,"nn::os::EventType",0);
	id = add_struc(-1,"nn::os::detail::InternalCriticalSectionImplByHorizon",0);
	id = add_struc(-1,"nn::os::detail::InternalConditionVariableImplByHorizon",0);
	id = add_struc(-1,"nn::os::detail::InterProcessEventType",0);
	id = add_struc(-1,"nn::timesrv::detail::service::ITimeServiceManager::vtbl",0);
	id = add_struc(-1,"StaticService_Wrap",0);
	id = add_struc(-1,"StaticService",0);
	id = add_struc(-1,"SystemClock_Wrap",0);
	id = add_struc(-1,"SystemClock",0);
	id = add_struc(-1,"nn::settings::ISystemSettingsServer",0);
	id = add_struc(-1,"nn::settings::ISystemSettingsServer::vtable",0);
	id = add_struc(-1,"__va_list_tag",0);
	id = add_struc(-1,"SystemClockContext",0);
	id = add_struc(-1,"SteadyClockTimePoint",0);
	id = add_struc(-1,"nn::timesrv::detail::service::IStaticService::vtable",0);
	id = add_struc(-1,"nn::settings::ISystemSettingsServer::vtable_16",0);
	id = add_struc(-1,"TimeZone::LocationName",0);
	id = add_struc(-1,"nn::sf::NativeHandle",0);
	id = add_struc(-1,"nn::timesrv::detail::service::ISystemClock::vtbl",0);
	id = add_struc(-1,"StaticService_Wrap2",0);
	id = add_struc(-1,"nn::lmem::detail::HeapHead_Wrap",0);
	id = add_struc(-1,"nn::timesrv::detail::service::IAlarmService::vtable",0);
	id = add_struc(-1,"nn::timesrv::detail::service::ITimeZoneService::vtable",0);
	id = add_struc(-1,"TimeZone::CalendarAdditionalInfo",0);
	id = add_struc(-1,"TimeZoneService_Wrap",0);
	id = add_struc(-1,"TimeZoneService",0);
	id = add_struc(-1,"nn::os::SharedMemoryType",0);
	id = add_struc(-1,"TimeSharedMemory",0);
	id = add_struc(-1,"SharedMemory",0);
	id = add_struc(-1,"ContinuousAdjustmentTimePoint",0);
	id = add_struc(-1,"SDKTimeSharedMemory_Related",0);
	id = add_struc(-1,"nn::os::SdkMutexType",0);
	id = add_struc(-1,"TimeZone::CalendarTime",0);
	id = add_struc(-1,"nn::sf::detail::PointerAndSize",0);
	id = add_struc(-1,"nn::os::Thread",0);
	id = add_struc(-1,"EventHandlerArg",0);
	id = add_struc(-1,"NotifEventHandlerStruct",0);
	id = add_struc(-1,"StaticServiceSetupInfo",0);
	id = add_struc(-1,"GlueStaticService",0);
	id = add_struc(-1,"nn::os::MutexType",0);
	id = add_struc(-1,"nn::os::MutexType::$08BC7EEE3E858AA1510DFCFE2DD2AE43",1);
	id = add_struc(-1,"nn::os::detail::InternalCriticalSectionStorage",0);
	id = add_struc(-1,"nn::os::detail::InternalCriticalSection",0);
	id = add_struc(-1,"nn::psc::sf::IPmService",0);
	id = add_struc(-1,"nn::psc::sf::IPmModule::vtable",0);
	id = add_struc(-1,"AlarmService_Wrap",0);
	id = add_struc(-1,"AlarmService",0);
	id = add_struc(-1,"GlueTime",0);
	id = add_struc(-1,"StandardSteadyClockResource",0);
	id = add_struc(-1,"GlueTime40",0);
	id = add_struc(-1,"GlueTime58",0);
	id = add_struc(-1,"GlueTime458",0);
	id = add_struc(-1,"GlueStaticService_Wrap",0);
	id = add_struc(-1,"GlueTimeZoneService_Wrap",0);
	id = add_struc(-1,"GlueTimeZoneService",0);
	id = add_struc(-1,"nn::os::SdkRecursiveMutexType",0);
	id = add_struc(-1,"nn::fssrv::sf::IFileSystemProxy",0);
	id = add_struc(-1,"nn::fssrv::sf::IFileSystemProxy::vtable",0);
	id = add_struc(-1,"TimeZone::Rule",0);
	id = add_struc(-1,"ttinfo",0);
	id = add_struc(-1,"nn::os::TimerEventType",0);
	id = add_struc(-1,"nn::os::ThreadType",0);
	id = add_struc(-1,"nn::os::detail::InternalConditionVariable",0);
	id = add_struc(-1,"GlueTime58Sub",0);
	id = add_struc(-1,"GlueTime58PmStateChangeHandler",0);
	id = add_struc(-1,"AlarmInfo",0);
	id = add_struc(-1,"nn::rtc::IRtcManager",0);
	id = add_struc(-1,"nn::rtc::IRtcManager::vtable",0);
	id = add_struc(-1,"nn::srepo::SystemReport",0);
	id = add_struc(-1,"nn::srepo::EventId",0);
	id = add_struc(-1,"nn::psc::sf::IPmModule",0);
	id = add_struc(-1,"GlueTimeServiceManager_Wrap",0);
	id = add_struc(-1,"GlueTimeServiceManager",0);
	id = add_struc(-1,"RomFSHeader",0);
	id = add_struc(-1,"LockFreeAtomic_SteadyClockTimePoint",0);
	id = add_struc(-1,"LockFreeAtomic_SystemClockContext",0);
	id = add_struc(-1,"LockFreeAtomic_AutomaticCorrection",0);
	id = add_struc(-1,"LockFreeAtomic_ContinuousAdjustmentTimePoint",0);
	id = add_struc(-1,"GlueLockFreeAtomics",0);
	
	id = get_struc_id("Node");
	mid = add_struc_member(id,"tail",	0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"head",	0X8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	set_struc_align(id,3);
	
	id = get_struc_id("nn::os::detail::InternalCriticalSectionImplByHorizon");
	mid = add_struc_member(id,"image",	0,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("nn::os::detail::InternalConditionVariableImplByHorizon");
	mid = add_struc_member(id,"image",	0,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("nn::os::EventType");
	mid = add_struc_member(id,"field_0",	0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"field_8",	0X8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"is_signalled",	0X10,	0x000400,	-1,	1);
	mid = add_struc_member(id,"is_initially_signaled",	0X11,	0x000400,	-1,	1);
	mid = add_struc_member(id,"should_autoclear",	0X12,	0x000400,	-1,	1);
	mid = add_struc_member(id,"is_initialized",	0X13,	0x000400,	-1,	1);
	mid = add_struc_member(id,"signal_counter",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"signal_counter_2",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"crit",	0X1C,	0x60000400,	get_struc_id("nn::os::detail::InternalCriticalSectionImplByHorizon"),	4);
	mid = add_struc_member(id,"condvar",	0X20,	0x60000400,	get_struc_id("nn::os::detail::InternalConditionVariableImplByHorizon"),	4);
	set_struc_align(id,3);
	
	id = get_struc_id("nn::os::detail::InterProcessEventType");
	mid = add_struc_member(id,"field_0",	0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"field_8",	0X8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"unk2",	0X10,	0x000400,	-1,	1);
	mid = add_struc_member(id,"is_initially_signaled",	0X11,	0x000400,	-1,	1);
	mid = add_struc_member(id,"should_autoclear",	0X12,	0x000400,	-1,	1);
	mid = add_struc_member(id,"unk3",	0X13,	0x000400,	-1,	1);
	mid = add_struc_member(id,"readable_handle",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"writable_handle",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"crit",	0X1C,	0x60000400,	get_struc_id("nn::os::detail::InternalCriticalSectionImplByHorizon"),	4);
	mid = add_struc_member(id,"condvar",	0X20,	0x60000400,	get_struc_id("nn::os::detail::InternalConditionVariableImplByHorizon"),	4);
	set_struc_align(id,3);
	
	id = get_struc_id("nn::os::SystemEventType::$015B4E3048C8FCE03A6C3A7C05892448");
	mid = add_struc_member(id,"event",	0,	0x60000400,	get_struc_id("nn::os::EventType"),	40);
	mid = add_struc_member(id,"ipe",	0,	0x60000400,	get_struc_id("nn::os::detail::InterProcessEventType"),	40);
	set_struc_align(id,3);
	
	id = get_struc_id("nn::os::SystemEventType");
	mid = add_struc_member(id,"anonymous_0",	0,	0x60000400,	get_struc_id("nn::os::SystemEventType::$015B4E3048C8FCE03A6C3A7C05892448"),	40);
	mid = add_struc_member(id,"state",	0X28,	0x000400,	-1,	1);
	set_struc_align(id,3);
	
	id = get_struc_id("TimeServiceManager");
	mid = add_struc_member(id,"time",	0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"heap",	0X8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"local_system_clock",	0X10,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"user_system_clock",	0X18,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"network_system_clock",	0X20,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"steady_clock",	0X28,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"time_zone",	0X30,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"ephemeral_network_clock",	0X38,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"shared_memory",	0X40,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"alarms",	0X48,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"local_system_context_writer",	0X50,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"network_system_context_writer",	0X58,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"ephemeral_system_context_writer",	0X60,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"local_node",	0X68,	0x60000400,	get_struc_id("Node"),	16);
	mid = add_struc_member(id,"local_event",	0X78,	0x60000400,	get_struc_id("nn::os::SystemEventType"),	48);
	mid = add_struc_member(id,"network_node",	0XA8,	0x60000400,	get_struc_id("Node"),	16);
	mid = add_struc_member(id,"network_event",	0XB8,	0x60000400,	get_struc_id("nn::os::SystemEventType"),	48);
	mid = add_struc_member(id,"ephemeral_node",	0XE8,	0x60000400,	get_struc_id("Node"),	16);
	mid = add_struc_member(id,"ephemeral_event",	0XF8,	0x60000400,	get_struc_id("nn::os::SystemEventType"),	48);
	set_struc_align(id,3);
	
	id = get_struc_id("TimeServiceManager_Wrap");
	mid = add_struc_member(id,"__vftable",	0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"impl",	0X8,	0x60000400,	get_struc_id("TimeServiceManager"),	296);
	set_struc_align(id,3);
	
	id = get_struc_id("nn::timesrv::detail::service::ITimeServiceManager::vtbl");
	mid = add_struc_member(id,"AddReference",	0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"Release",	0X8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetProxyInfo",	0X10,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetInterfaceTypeInfo",	0X18,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetStaticServiceAsUser",	0X20,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetStaticServiceAsAdmin",	0X28,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetStaticServiceAsRepair",	0X30,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetStaticServiceAsServiceManager",	0X38,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetupStandardSteadyClockCore",	0X40,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetupStandardLocalSystemClockCore",	0X48,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetupStandardNetworkSystemClockCore",	0X50,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetupStandardUserSystemClockCore",	0X58,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetupTimeZoneServiceCore",	0X60,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetupEphemeralNetworkSystemClockCore",	0X68,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetStandardLocalClockOperationEvent",	0X70,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetStandardNetworkClockOperationEventForServiceManager",	0X78,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetEphemeralNetworkClockOperationEventForServiceManager",	0X80,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetStandardUserSystemClockAutomaticCorrectionUpdatedEvent",	0X88,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetStandardSteadyClockBaseTime",	0X90,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetClosestAlarmUpdatedEvent",	0X98,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"CheckAndSignalAlarms",	0XA0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetClosestAlarmInfo",	0XA8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	set_struc_align(id,3);
	
	id = get_struc_id("StaticServiceSetupInfo");
	mid = add_struc_member(id,"unk_00",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"unk_01",	0X1,	0x000400,	-1,	1);
	mid = add_struc_member(id,"unk_02",	0X2,	0x000400,	-1,	1);
	mid = add_struc_member(id,"unk_03",	0X3,	0x000400,	-1,	1);
	mid = add_struc_member(id,"unk_04",	0X4,	0x000400,	-1,	1);
	mid = add_struc_member(id,"unk_05",	0X5,	0x000400,	-1,	1);
	
	id = get_struc_id("StaticService");
	mid = add_struc_member(id,"setup_info",	0,	0x60000400,	get_struc_id("StaticServiceSetupInfo"),	6);
	mid = add_struc_member(id,"heap",	0X8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"local_system_clock",	0X10,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"user_system_clock",	0X18,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"network_system_clock",	0X20,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"time",	0X28,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"time_zone",	0X30,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"ephemeral_network_clock",	0X38,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"shared_memory",	0X40,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	set_struc_align(id,3);
	
	id = get_struc_id("StaticService_Wrap");
	mid = add_struc_member(id,"__vftable",	0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"impl",	0X8,	0x60000400,	get_struc_id("StaticService"),	72);
	set_struc_align(id,3);
	
	id = get_struc_id("SystemClock");
	mid = add_struc_member(id,"system_clock_iface",	0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"heap",	0X8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"unk_10",	0X10,	0x000400,	-1,	1);
	mid = add_struc_member(id,"unk_11",	0X11,	0x000400,	-1,	1);
	mid = add_struc_member(id,"operation_event",	0X18,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	set_struc_align(id,3);
	
	id = get_struc_id("SystemClock_Wrap");
	mid = add_struc_member(id,"__vftable",	0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"impl",	0X8,	0x60000400,	get_struc_id("SystemClock"),	32);
	mid = add_struc_member(id,"heap_initialised",	0X28,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"heap",	0X30,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	set_struc_align(id,3);
	
	id = get_struc_id("nn::settings::ISystemSettingsServer");
	mid = add_struc_member(id,"__vftable",	0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	set_struc_align(id,3);
	
	id = get_struc_id("nn::settings::ISystemSettingsServer::vtable");
	mid = add_struc_member(id,"AddReference",	0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"Release",	0X8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetProxyInfo",	0X10,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetInterfaceTypeInfo",	0X18,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetLanguageCode",	0X20,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetNetworkSettings",	0X28,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetNetworkSettings",	0X30,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetFirmwareVersion",	0X38,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetFirmwareVersion2",	0X40,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetFirmwareVersionDigest",	0X48,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetLockScreenFlag",	0X50,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetLockScreenFlag",	0X58,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetBacklightSettings",	0X60,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetBacklightSettings",	0X68,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetBluetoothDevicesSettings",	0X70,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetBluetoothDevicesSettings",	0X78,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetExternalSteadyClockSourceId",	0X80,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetExternalSteadyClockSourceId",	0X88,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetUserSystemClockContext",	0X90,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetUserSystemClockContext",	0X98,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetAccountSettings",	0XA0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetAccountSettings",	0XA8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetAudioVolume",	0XB0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetAudioVolume",	0XB8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetEulaVersions",	0XC0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetEulaVersions",	0XC8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetColorSetId",	0XD0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetColorSetId",	0XD8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetConsoleInformationUploadFlag",	0XE0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetConsoleInformationUploadFlag",	0XE8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetAutomaticApplicationDownloadFlag",	0XF0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetAutomaticApplicationDownloadFlag",	0XF8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetNotificationSettings",	0X100,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetNotificationSettings",	0X108,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetAccountNotificationSettings",	0X110,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetAccountNotificationSettings",	0X118,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetVibrationMasterVolume",	0X120,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetVibrationMasterVolume",	0X128,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetSettingsItemValueSize",	0X130,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetSettingsItemValue",	0X138,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetTvSettings",	0X140,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetTvSettings",	0X148,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetEdid",	0X150,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetEdid",	0X158,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetAudioOutputMode",	0X160,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetAudioOutputMode",	0X168,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetSpeakerAutoMuteFlag",	0X170,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetSpeakerAutoMuteFlag",	0X178,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetQuestFlag",	0X180,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetQuestFlag",	0X188,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetDataDeletionSettings",	0X190,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetDataDeletionSettings",	0X198,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetInitialSystemAppletProgramId",	0X1A0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetOverlayDispProgramId",	0X1A8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetDeviceTimeZoneLocationName",	0X1B0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetDeviceTimeZoneLocationName",	0X1B8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetWirelessCertificationFileSize",	0X1C0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetWirelessCertificationFile",	0X1C8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetRegionCode",	0X1D0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetNetworkSystemClockContext",	0X1D8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetNetworkSystemClockContext",	0X1E0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"IsUserSystemClockAutomaticCorrectionEnabled",	0X1E8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetUserSystemClockAutomaticCorrectionEnabled",	0X1F0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetDebugModeFlag",	0X1F8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetPrimaryAlbumStorage",	0X200,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetPrimaryAlbumStorage",	0X208,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetUsb30EnableFlag",	0X210,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetUsb30EnableFlag",	0X218,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetBatteryLot",	0X220,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetSerialNumber",	0X228,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetNfcEnableFlag",	0X230,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetNfcEnableFlag",	0X238,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetSleepSettings",	0X240,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetSleepSettings",	0X248,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetWirelessLanEnableFlag",	0X250,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetWirelessLanEnableFlag",	0X258,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetInitialLaunchSettings",	0X260,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetInitialLaunchSettings",	0X268,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetDeviceNickName",	0X270,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetDeviceNickName",	0X278,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetProductModel",	0X280,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetLdnChannel",	0X288,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetLdnChannel",	0X290,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"AcquireTelemetryDirtyFlagEventHandle",	0X298,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetTelemetryDirtyFlags",	0X2A0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetPtmBatteryLot",	0X2A8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetPtmBatteryLot",	0X2B0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetPtmFuelGaugeParameter",	0X2B8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetPtmFuelGaugeParameter",	0X2C0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetBluetoothEnableFlag",	0X2C8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetBluetoothEnableFlag",	0X2D0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetMiiAuthorId",	0X2D8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetShutdownRtcValue",	0X2E0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetShutdownRtcValue",	0X2E8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"AcquireFatalDirtyFlagEventHandle",	0X2F0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetFatalDirtyFlags",	0X2F8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetAutoUpdateEnableFlag",	0X300,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetAutoUpdateEnableFlag",	0X308,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetNxControllerSettings",	0X310,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetNxControllerSettings",	0X318,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetBatteryPercentageFlag",	0X320,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetBatteryPercentageFlag",	0X328,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetExternalRtcResetFlag",	0X330,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetExternalRtcResetFlag",	0X338,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetUsbFullKeyEnableFlag",	0X340,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetUsbFullKeyEnableFlag",	0X348,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetExternalSteadyClockInternalOffset",	0X350,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetExternalSteadyClockInternalOffset",	0X358,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetBacklightSettingsEx",	0X360,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetBacklightSettingsEx",	0X368,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetHeadphoneVolumeWarningCount",	0X370,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetHeadphoneVolumeWarningCount",	0X378,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetBluetoothAfhEnableFlag",	0X380,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetBluetoothAfhEnableFlag",	0X388,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetBluetoothBoostEnableFlag",	0X390,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetBluetoothBoostEnableFlag",	0X398,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetInRepairProcessEnableFlag",	0X3A0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetInRepairProcessEnableFlag",	0X3A8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetHeadphoneVolumeUpdateFlag",	0X3B0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetHeadphoneVolumeUpdateFlag",	0X3B8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"NeedsToUpdateHeadphoneVolume",	0X3C0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetPushNotificationActivityModeOnSleep",	0X3C8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetPushNotificationActivityModeOnSleep",	0X3D0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetServiceDiscoveryControlSettings",	0X3D8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetServiceDiscoveryControlSettings",	0X3E0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetErrorReportSharePermission",	0X3E8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetErrorReportSharePermission",	0X3F0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetAppletLaunchFlags",	0X3F8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetAppletLaunchFlags",	0X400,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetConsoleSixAxisSensorAccelerationBias",	0X408,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetConsoleSixAxisSensorAccelerationBias",	0X410,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetConsoleSixAxisSensorAngularVelocityBias",	0X418,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetConsoleSixAxisSensorAngularVelocityBias",	0X420,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetConsoleSixAxisSensorAccelerationGain",	0X428,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetConsoleSixAxisSensorAccelerationGain",	0X430,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetConsoleSixAxisSensorAngularVelocityGain",	0X438,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetConsoleSixAxisSensorAngularVelocityGain",	0X440,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetKeyboardLayout",	0X448,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetKeyboardLayout",	0X450,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetWebInspectorFlag",	0X458,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetAllowedSslHosts",	0X460,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetHostFsMountPoint",	0X468,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetRequiresRunRepairTimeReviser",	0X470,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetRequiresRunRepairTimeReviser",	0X478,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetBlePairingSettings",	0X480,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetBlePairingSettings",	0X488,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetConsoleSixAxisSensorAngularVelocityTimeBias",	0X490,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetConsoleSixAxisSensorAngularVelocityTimeBias",	0X498,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetConsoleSixAxisSensorAngularAcceleration",	0X4A0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetConsoleSixAxisSensorAngularAcceleration",	0X4A8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetRebootlessSystemUpdateVersion",	0X4B0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetDeviceTimeZoneLocationUpdatedTime",	0X4B8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetDeviceTimeZoneLocationUpdatedTime",	0X4C0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetUserSystemClockAutomaticCorrectionUpdatedTime",	0X4C8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetUserSystemClockAutomaticCorrectionUpdatedTime",	0X4D0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetAccountOnlineStorageSettings",	0X4D8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetAccountOnlineStorageSettings",	0X4E0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetPctlReadyFlag",	0X4E8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetPctlReadyFlag",	0X4F0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetAnalogStickUserCalibrationL",	0X4F8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetAnalogStickUserCalibrationL",	0X500,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetAnalogStickUserCalibrationR",	0X508,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetAnalogStickUserCalibrationR",	0X510,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetPtmBatteryVersion",	0X518,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetPtmBatteryVersion",	0X520,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetUsb30HostEnableFlag",	0X528,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetUsb30HostEnableFlag",	0X530,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetUsb30DeviceEnableFlag",	0X538,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetUsb30DeviceEnableFlag",	0X540,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetThemeId",	0X548,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetThemeId",	0X550,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetChineseTraditionalInputMethod",	0X558,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetChineseTraditionalInputMethod",	0X560,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetPtmCycleCountReliability",	0X568,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetPtmCycleCountReliability",	0X570,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetHomeMenuScheme",	0X578,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetThemeSettings",	0X580,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetThemeSettings",	0X588,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetThemeKey",	0X590,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetThemeKey",	0X598,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetZoomFlag",	0X5A0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetZoomFlag",	0X5A8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetT",	0X5B0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetT",	0X5B8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetPlatformRegion",	0X5C0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetPlatformRegion",	0X5C8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetHomeMenuSchemeModel",	0X5D0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetMemoryUsageRateFlag",	0X5D8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetTouchScreenMode",	0X5E0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetTouchScreenMode",	0X5E8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetButtonConfigSettingsFull",	0X5F0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetButtonConfigSettingsFull",	0X5F8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetButtonConfigSettingsEmbedded",	0X600,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetButtonConfigSettingsEmbedded",	0X608,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetButtonConfigSettingsLeft",	0X610,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetButtonConfigSettingsLeft",	0X618,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetButtonConfigSettingsRight",	0X620,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetButtonConfigSettingsRight",	0X628,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetButtonConfigRegisteredSettingsEmbedded",	0X630,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetButtonConfigRegisteredSettingsEmbedded",	0X638,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetButtonConfigRegisteredSettings",	0X640,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetButtonConfigRegisteredSettings",	0X648,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetFieldTestingFlag",	0X650,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetFieldTestingFlag",	0X658,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetPanelCrcMode",	0X660,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetPanelCrcMode",	0X668,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetNxControllerSettingsEx",	0X670,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetNxControllerSettingsEx",	0X678,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetHearingProtectionSafeguardFlag",	0X680,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetHearingProtectionSafeguardFlag",	0X688,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetHearingProtectionSafeguardRemainingTime",	0X690,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetHearingProtectionSafeguardRemainingTime",	0X698,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	set_struc_align(id,3);
	
	id = get_struc_id("__va_list_tag");
	mid = add_struc_member(id,"__stack",	0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"__gr_top",	0X8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"__vr_top",	0X10,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"__gr_offs",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"__vr_offs",	0X1C,	0x20000400,	-1,	4);
	set_struc_align(id,3);
	
	id = get_struc_id("nn::timesrv::detail::service::IStaticService::vtable");
	mid = add_struc_member(id,"AddReference",	0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"Release",	0X8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetProxyInfo",	0X10,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetInterfaceTypeInfo",	0X18,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetStandardUserSystemClock",	0X20,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetStandardNetworkSystemClock",	0X28,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetStandardSteadyClock",	0X30,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetTimeZoneService",	0X38,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetStandardLocalSystemClock",	0X40,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetEphemeralNetworkSystemClock",	0X48,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetSharedMemoryNativeHandle",	0X50,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetStandardSteadyClockInternalOffset",	0X58,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetStandardSteadyClockRtcValue",	0X60,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"IsStandardUserSystemClockAutomaticCorrectionEnabled",	0X68,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetStandardUserSystemClockAutomaticCorrectionEnabled",	0X70,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetStandardUserSystemClockInitialYear",	0X78,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"IsStandardNetworkSystemClockAccuracySufficient",	0X80,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetStandardUserSystemClockAutomaticCorrectionUpdatedTime",	0X88,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"CalculateMonotonicSystemClockBaseTimePoint",	0X90,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetClockSnapshot",	0X98,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetClockSnapshotFromSystemClockContext",	0XA0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"CalculateStandardUserSystemClockDifferenceByUser",	0XA8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"CalculateSpanBetween",	0XB0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	set_struc_align(id,3);
	
	id = get_struc_id("nn::settings::ISystemSettingsServer::vtable_16");
	mid = add_struc_member(id,"AddReference",	0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"Release",	0X8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetProxyInfo",	0X10,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetInterfaceTypeInfo",	0X18,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetLanguageCode",	0X20,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetNetworkSettings",	0X28,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetNetworkSettings",	0X30,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetFirmwareVersion",	0X38,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetFirmwareVersion2",	0X40,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetFirmwareVersionDigest",	0X48,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetLockScreenFlag",	0X50,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetLockScreenFlag",	0X58,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetBacklightSettings",	0X60,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetBacklightSettings",	0X68,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetBluetoothDevicesSettings",	0X70,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetBluetoothDevicesSettings",	0X78,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetExternalSteadyClockSourceId",	0X80,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetExternalSteadyClockSourceId",	0X88,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetUserSystemClockContext",	0X90,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetUserSystemClockContext",	0X98,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetAccountSettings",	0XA0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetAccountSettings",	0XA8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetAudioVolume",	0XB0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetAudioVolume",	0XB8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetEulaVersions",	0XC0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetEulaVersions",	0XC8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetColorSetId",	0XD0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetColorSetId",	0XD8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetConsoleInformationUploadFlag",	0XE0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetConsoleInformationUploadFlag",	0XE8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetAutomaticApplicationDownloadFlag",	0XF0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetAutomaticApplicationDownloadFlag",	0XF8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetNotificationSettings",	0X100,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetNotificationSettings",	0X108,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetAccountNotificationSettings",	0X110,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetAccountNotificationSettings",	0X118,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetVibrationMasterVolume",	0X120,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetVibrationMasterVolume",	0X128,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetSettingsItemValueSize",	0X130,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetSettingsItemValue",	0X138,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetTvSettings",	0X140,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetTvSettings",	0X148,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetEdid",	0X150,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetEdid",	0X158,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetAudioOutputMode",	0X160,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetAudioOutputMode",	0X168,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"IsForceMuteOnHeadphoneRemoved",	0X170,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetForceMuteOnHeadphoneRemoved",	0X178,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetQuestFlag",	0X180,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetQuestFlag",	0X188,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetDataDeletionSettings",	0X190,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetDataDeletionSettings",	0X198,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetInitialSystemAppletProgramId",	0X1A0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetOverlayDispProgramId",	0X1A8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetDeviceTimeZoneLocationName",	0X1B0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetDeviceTimeZoneLocationName",	0X1B8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetWirelessCertificationFileSize",	0X1C0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetWirelessCertificationFile",	0X1C8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetRegionCode",	0X1D0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetNetworkSystemClockContext",	0X1D8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetNetworkSystemClockContext",	0X1E0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"IsUserSystemClockAutomaticCorrectionEnabled",	0X1E8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetUserSystemClockAutomaticCorrectionEnabled",	0X1F0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetDebugModeFlag",	0X1F8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetPrimaryAlbumStorage",	0X200,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetPrimaryAlbumStorage",	0X208,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetUsb30EnableFlag",	0X210,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetUsb30EnableFlag",	0X218,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetBatteryLot",	0X220,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetSerialNumber",	0X228,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetNfcEnableFlag",	0X230,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetNfcEnableFlag",	0X238,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetSleepSettings",	0X240,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetSleepSettings",	0X248,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetWirelessLanEnableFlag",	0X250,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetWirelessLanEnableFlag",	0X258,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetInitialLaunchSettings",	0X260,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetInitialLaunchSettings",	0X268,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetDeviceNickName",	0X270,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetDeviceNickName",	0X278,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetProductModel",	0X280,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetLdnChannel",	0X288,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetLdnChannel",	0X290,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"AcquireTelemetryDirtyFlagEventHandle",	0X298,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetTelemetryDirtyFlags",	0X2A0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetPtmBatteryLot",	0X2A8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetPtmBatteryLot",	0X2B0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetPtmFuelGaugeParameter",	0X2B8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetPtmFuelGaugeParameter",	0X2C0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetBluetoothEnableFlag",	0X2C8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetBluetoothEnableFlag",	0X2D0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetMiiAuthorId",	0X2D8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetShutdownRtcValue",	0X2E0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetShutdownRtcValue",	0X2E8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"AcquireFatalDirtyFlagEventHandle",	0X2F0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetFatalDirtyFlags",	0X2F8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetAutoUpdateEnableFlag",	0X300,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetAutoUpdateEnableFlag",	0X308,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetNxControllerSettings",	0X310,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetNxControllerSettings",	0X318,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetBatteryPercentageFlag",	0X320,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetBatteryPercentageFlag",	0X328,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetExternalRtcResetFlag",	0X330,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetExternalRtcResetFlag",	0X338,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetUsbFullKeyEnableFlag",	0X340,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetUsbFullKeyEnableFlag",	0X348,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetExternalSteadyClockInternalOffset",	0X350,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetExternalSteadyClockInternalOffset",	0X358,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetBacklightSettingsEx",	0X360,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetBacklightSettingsEx",	0X368,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetHeadphoneVolumeWarningCount",	0X370,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetHeadphoneVolumeWarningCount",	0X378,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetBluetoothAfhEnableFlag",	0X380,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetBluetoothAfhEnableFlag",	0X388,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetBluetoothBoostEnableFlag",	0X390,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetBluetoothBoostEnableFlag",	0X398,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetInRepairProcessEnableFlag",	0X3A0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetInRepairProcessEnableFlag",	0X3A8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetHeadphoneVolumeUpdateFlag",	0X3B0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetHeadphoneVolumeUpdateFlag",	0X3B8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetPushNotificationActivityModeOnSleep",	0X3C0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetPushNotificationActivityModeOnSleep",	0X3C8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetServiceDiscoveryControlSettings",	0X3D0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetServiceDiscoveryControlSettings",	0X3D8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetErrorReportSharePermission",	0X3E0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetErrorReportSharePermission",	0X3E8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetAppletLaunchFlags",	0X3F0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetAppletLaunchFlags",	0X3F8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetConsoleSixAxisSensorAccelerationBias",	0X400,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetConsoleSixAxisSensorAccelerationBias",	0X408,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetConsoleSixAxisSensorAngularVelocityBias",	0X410,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetConsoleSixAxisSensorAngularVelocityBias",	0X418,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetConsoleSixAxisSensorAccelerationGain",	0X420,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetConsoleSixAxisSensorAccelerationGain",	0X428,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetConsoleSixAxisSensorAngularVelocityGain",	0X430,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetConsoleSixAxisSensorAngularVelocityGain",	0X438,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetKeyboardLayout",	0X440,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetKeyboardLayout",	0X448,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetWebInspectorFlag",	0X450,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetAllowedSslHosts",	0X458,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetHostFsMountPoint",	0X460,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetRequiresRunRepairTimeReviser",	0X468,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetRequiresRunRepairTimeReviser",	0X470,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetBlePairingSettings",	0X478,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetBlePairingSettings",	0X480,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetConsoleSixAxisSensorAngularVelocityTimeBias",	0X488,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetConsoleSixAxisSensorAngularVelocityTimeBias",	0X490,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetConsoleSixAxisSensorAngularAcceleration",	0X498,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetConsoleSixAxisSensorAngularAcceleration",	0X4A0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetRebootlessSystemUpdateVersion",	0X4A8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetDeviceTimeZoneLocationUpdatedTime",	0X4B0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetDeviceTimeZoneLocationUpdatedTime",	0X4B8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetUserSystemClockAutomaticCorrectionUpdatedTime",	0X4C0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetUserSystemClockAutomaticCorrectionUpdatedTime",	0X4C8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetAccountOnlineStorageSettings",	0X4D0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetAccountOnlineStorageSettings",	0X4D8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetPctlReadyFlag",	0X4E0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetPctlReadyFlag",	0X4E8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetAnalogStickUserCalibrationL",	0X4F0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetAnalogStickUserCalibrationL",	0X4F8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetAnalogStickUserCalibrationR",	0X500,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetAnalogStickUserCalibrationR",	0X508,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetPtmBatteryVersion",	0X510,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetPtmBatteryVersion",	0X518,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetUsb30HostEnableFlag",	0X520,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetUsb30HostEnableFlag",	0X528,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetUsb30DeviceEnableFlag",	0X530,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetUsb30DeviceEnableFlag",	0X538,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetThemeId",	0X540,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetThemeId",	0X548,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetChineseTraditionalInputMethod",	0X550,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetChineseTraditionalInputMethod",	0X558,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetPtmCycleCountReliability",	0X560,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetPtmCycleCountReliability",	0X568,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetHomeMenuScheme",	0X570,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetThemeSettings",	0X578,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetThemeSettings",	0X580,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetThemeKey",	0X588,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetThemeKey",	0X590,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetZoomFlag",	0X598,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetZoomFlag",	0X5A0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetT",	0X5A8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetT",	0X5B0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetPlatformRegion",	0X5B8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetPlatformRegion",	0X5C0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetHomeMenuSchemeModel",	0X5C8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetMemoryUsageRateFlag",	0X5D0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetTouchScreenMode",	0X5D8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetTouchScreenMode",	0X5E0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetButtonConfigSettingsFull",	0X5E8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetButtonConfigSettingsFull",	0X5F0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetButtonConfigSettingsEmbedded",	0X5F8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetButtonConfigSettingsEmbedded",	0X600,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetButtonConfigSettingsLeft",	0X608,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetButtonConfigSettingsLeft",	0X610,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetButtonConfigSettingsRight",	0X618,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetButtonConfigSettingsRight",	0X620,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetButtonConfigRegisteredSettingsEmbedded",	0X628,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetButtonConfigRegisteredSettingsEmbedded",	0X630,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetButtonConfigRegisteredSettings",	0X638,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetButtonConfigRegisteredSettings",	0X640,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetFieldTestingFlag",	0X648,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetFieldTestingFlag",	0X650,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetPanelCrcMode",	0X658,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetPanelCrcMode",	0X660,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetNxControllerSettingsEx",	0X668,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetNxControllerSettingsEx",	0X670,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetHearingProtectionSafeguardFlag",	0X678,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetHearingProtectionSafeguardFlag",	0X680,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetHearingProtectionSafeguardRemainingTime",	0X688,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetHearingProtectionSafeguardRemainingTime",	0X690,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	set_struc_align(id,3);
	
	id = get_struc_id("TimeZone::LocationName");
	mid = add_struc_member(id,"name",	0,	0x000400,	-1,	36);
	
	id = get_struc_id("nn::sf::NativeHandle");
	mid = add_struc_member(id,"handle",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"managed",	0X4,	0x000400,	-1,	1);
	mid = add_struc_member(id,"unk_05",	0X5,	0x000400,	-1,	1);
	set_struc_align(id,2);
	
	id = get_struc_id("nn::timesrv::detail::service::ISystemClock::vtbl");
	mid = add_struc_member(id,"AddReference",	0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"Release",	0X8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetProxyInfo",	0X10,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetInterfaceTypeInfo",	0X18,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetCurrentTime",	0X20,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetCurrentTime",	0X28,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetSystemClockContext",	0X30,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetSystemClockContext",	0X38,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetOperationEventReadableHandle",	0X40,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	set_struc_align(id,3);
	
	id = get_struc_id("StaticService_Wrap2");
	mid = add_struc_member(id,"__vftable",	0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"impl",	0X8,	0x60000400,	get_struc_id("StaticService"),	72);
	mid = add_struc_member(id,"initialised",	0X50,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"heap",	0X58,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	set_struc_align(id,3);
	
	id = get_struc_id("nn::lmem::detail::HeapHead_Wrap");
	mid = add_struc_member(id,"heapHead",	0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"size",	0X8,	0x30000400,	-1,	8);
	set_struc_align(id,3);
	
	id = get_struc_id("nn::timesrv::detail::service::IAlarmService::vtable");
	mid = add_struc_member(id,"AddReference",	0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"Release",	0X8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetProxyInfo",	0X10,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetInterfaceTypeInfo",	0X18,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"CreateWakeupAlarm",	0X20,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"CreateBackgroundTaskAlarm",	0X28,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	set_struc_align(id,3);
	
	id = get_struc_id("nn::timesrv::detail::service::ITimeZoneService::vtable");
	mid = add_struc_member(id,"AddReference",	0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"Release",	0X8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetProxyInfo",	0X10,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetInterfaceTypeInfo",	0X18,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetDeviceLocationName",	0X20,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetDeviceLocationName",	0X28,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetTotalLocationNameCount",	0X30,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"LoadLocationNameList",	0X38,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"LoadTimeZoneRule",	0X40,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetTimeZoneRuleVersion",	0X48,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetDeviceLocationNameAndUpdatedTime",	0X50,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetDeviceLocationNameWithTimeZoneRule",	0X58,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"ParseTimeZoneBinary",	0X60,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetDeviceLocationNameOperationEventReadableHandle",	0X68,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"ToCalendarTime",	0X70,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"ToCalendarTimeWithMyRule",	0X78,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"ToPosixTime",	0X80,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"ToPosixTimeWithMyRule",	0X88,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	set_struc_align(id,3);
	
	id = get_struc_id("TimeZone::CalendarAdditionalInfo");
	mid = add_struc_member(id,"day_of_week",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"day_of_year",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"name",	0X8,	0x000400,	-1,	8);
	mid = add_struc_member(id,"is_dst",	0X10,	0x000400,	-1,	1);
	mid = add_struc_member(id,"ut_off",	0X14,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("TimeZoneService");
	mid = add_struc_member(id,"standard_steady_clock",	0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"time_zone",	0X8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"unk_10",	0X10,	0x000400,	-1,	1);
	set_struc_align(id,3);
	
	id = get_struc_id("TimeZoneService_Wrap");
	mid = add_struc_member(id,"__vftable",	0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"impl",	0X8,	0x60000400,	get_struc_id("TimeZoneService"),	24);
	mid = add_struc_member(id,"heap_initialised",	0X20,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"heap",	0X28,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	set_struc_align(id,3);
	
	id = get_struc_id("nn::os::SharedMemoryType");
	mid = add_struc_member(id,"state",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"managed",	0X1,	0x000400,	-1,	1);
	mid = add_struc_member(id,"mapped",	0X2,	0x000400,	-1,	1);
	mid = add_struc_member(id,"address",	0X8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"size",	0X10,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"handle",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"unk1C",	0X1C,	0x000400,	-1,	32);
	mid = add_struc_member(id,"crit",	0X3C,	0x60000400,	get_struc_id("nn::os::detail::InternalCriticalSectionImplByHorizon"),	4);
	set_struc_align(id,3);
	
	id = get_struc_id("TimeSharedMemory");
	mid = add_struc_member(id,"shared_memory",	0,	0x60000400,	get_struc_id("nn::os::SharedMemoryType"),	64);
	mid = add_struc_member(id,"memory",	0X40,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	set_struc_align(id,3);
	
	id = get_struc_id("SteadyClockTimePoint");
	mid = add_struc_member(id,"time_point",	0,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"clock_source_id",	0X8,	0x000400,	-1,	16);
	set_struc_align(id,3);
	
	id = get_struc_id("LockFreeAtomic_SteadyClockTimePoint");
	mid = add_struc_member(id,"counter",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"time_points",	0X8,	0x60000400,	get_struc_id("SteadyClockTimePoint"),	48);
	set_struc_align(id,3);
	
	id = get_struc_id("SystemClockContext");
	mid = add_struc_member(id,"offset",	0,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"steady_time_point",	0X8,	0x60000400,	get_struc_id("SteadyClockTimePoint"),	24);
	set_struc_align(id,3);
	
	id = get_struc_id("LockFreeAtomic_SystemClockContext");
	mid = add_struc_member(id,"counter",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"contexts",	0X8,	0x60000400,	get_struc_id("SystemClockContext"),	64);
	set_struc_align(id,3);
	
	id = get_struc_id("LockFreeAtomic_AutomaticCorrection");
	mid = add_struc_member(id,"counter",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"auto_corrects",	0X4,	0x000400,	-1,	2);
	set_struc_align(id,2);
	
	id = get_struc_id("ContinuousAdjustmentTimePoint");
	mid = add_struc_member(id,"rtc_offset",	0,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"diff_scale",	0X8,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"shift_amount",	0X10,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"lower",	0X18,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"upper",	0X20,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"clock_source_id",	0X28,	0x000400,	-1,	16);
	set_struc_align(id,3);
	
	id = get_struc_id("LockFreeAtomic_ContinuousAdjustmentTimePoint");
	mid = add_struc_member(id,"counter",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"time_points",	0X8,	0x60000400,	get_struc_id("ContinuousAdjustmentTimePoint"),	112);
	set_struc_align(id,3);
	
	id = get_struc_id("SharedMemory");
	mid = add_struc_member(id,"steady_time_points",	0,	0x60000400,	get_struc_id("LockFreeAtomic_SteadyClockTimePoint"),	56);
	mid = add_struc_member(id,"local_system_contexts",	0X38,	0x60000400,	get_struc_id("LockFreeAtomic_SystemClockContext"),	72);
	mid = add_struc_member(id,"network_system_contexts",	0X80,	0x60000400,	get_struc_id("LockFreeAtomic_SystemClockContext"),	72);
	mid = add_struc_member(id,"automatic_corrections",	0XC8,	0x60000400,	get_struc_id("LockFreeAtomic_AutomaticCorrection"),	8);
	mid = add_struc_member(id,"continuous_time_points",	0XD0,	0x60000400,	get_struc_id("LockFreeAtomic_ContinuousAdjustmentTimePoint"),	120);
	mid = add_struc_member(id,"unk0148",	0X148,	0x000400,	-1,	3768);
	set_struc_align(id,3);
	
	id = get_struc_id("nn::os::SdkMutexType");
	mid = add_struc_member(id,"mutex",	0,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("SDKTimeSharedMemory_Related");
	mid = add_struc_member(id,"mutex",	0,	0x60000400,	get_struc_id("nn::os::SdkMutexType"),	4);
	mid = add_struc_member(id,"unk_04",	0X4,	0x000400,	-1,	4);
	mid = add_struc_member(id,"index",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"clock_contexts",	0X10,	0x60000400,	get_struc_id("SystemClockContext"),	64);
	set_struc_align(id,3);
	
	id = get_struc_id("TimeZone::CalendarTime");
	mid = add_struc_member(id,"year",	0,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"month",	0X2,	0x000400,	-1,	1);
	mid = add_struc_member(id,"day",	0X3,	0x000400,	-1,	1);
	mid = add_struc_member(id,"hour",	0X4,	0x000400,	-1,	1);
	mid = add_struc_member(id,"minute",	0X5,	0x000400,	-1,	1);
	mid = add_struc_member(id,"second",	0X6,	0x000400,	-1,	1);
	mid = add_struc_member(id,"pad",	0X7,	0x000400,	-1,	1);
	set_struc_align(id,1);
	
	id = get_struc_id("nn::sf::detail::PointerAndSize");
	mid = add_struc_member(id,"pointer",	0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"size",	0X8,	0x30000400,	-1,	8);
	set_struc_align(id,3);
	
	id = get_struc_id("nn::os::Thread");
	mid = add_struc_member(id,"unk000",	0,	0x000400,	-1,	416);
	mid = add_struc_member(id,"name",	0X1A0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"unk1A8",	0X1A8,	0x000400,	-1,	24);
	set_struc_align(id,3);
	
	id = get_struc_id("EventHandlerArg");
	mid = add_struc_member(id,"data",	0,	0x000400,	-1,	140640);
	
	id = get_struc_id("NotifEventHandlerStruct");
	mid = add_struc_member(id,"unk_00000",	0,	0x000400,	-1,	65664);
	mid = add_struc_member(id,"unk_10080",	0X10080,	0x000400,	-1,	7288);
	mid = add_struc_member(id,"unk_11CF8",	0X11CF8,	0x000400,	-1,	67688);
	
	id = get_struc_id("nn::psc::sf::IPmService");
	mid = add_struc_member(id,"__vftable",	0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	set_struc_align(id,3);
	
	id = get_struc_id("nn::psc::sf::IPmModule::vtable");
	mid = add_struc_member(id,"AddReference",	0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"Release",	0X8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetProxyInfo",	0X10,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetInterfaceTypeInfo",	0X18,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"Initialize",	0X20,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetRequest",	0X28,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"Acknowledge",	0X30,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"Finalize",	0X38,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"AcknowledgeEx",	0X40,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	set_struc_align(id,3);
	
	id = get_struc_id("AlarmService");
	mid = add_struc_member(id,"heap",	0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"alarms",	0X8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	set_struc_align(id,3);
	
	id = get_struc_id("AlarmService_Wrap");
	mid = add_struc_member(id,"__vftable",	0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"impl",	0X8,	0x60000400,	get_struc_id("AlarmService"),	16);
	set_struc_align(id,3);
	
	id = get_struc_id("StandardSteadyClockResource");
	mid = add_struc_member(id,"__vftable",	0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"anonymous_0",	0X8,	0x60000400,	get_struc_id("nn::os::SdkMutexType"),	4);
	mid = add_struc_member(id,"clock_source_id",	0XC,	0x000400,	-1,	16);
	mid = add_struc_member(id,"time",	0X20,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"set_time_result",	0X28,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"rtc_reset",	0X2C,	0x000400,	-1,	1);
	set_struc_align(id,3);
	
	id = get_struc_id("GlueTime40");
	mid = add_struc_member(id,"standard_user_system_clock",	0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"timezone_service",	0X8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"initialised",	0X10,	0x000400,	-1,	1);
	mid = add_struc_member(id,"unk_11",	0X11,	0x000400,	-1,	7);
	set_struc_align(id,3);
	
	id = get_struc_id("nn::os::TimerEventType");
	mid = add_struc_member(id,"head",	0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"tail",	0X8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"state",	0X10,	0x000400,	-1,	1);
	mid = add_struc_member(id,"clear_mode",	0X11,	0x000400,	-1,	1);
	mid = add_struc_member(id,"signalled",	0X12,	0x000400,	-1,	1);
	mid = add_struc_member(id,"timer_state",	0X13,	0x000400,	-1,	1);
	mid = add_struc_member(id,"broadcast_counter_low",	0X14,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"broadcast_counter_high",	0X18,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"next_time_to_wakeup",	0X20,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"first",	0X28,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"interval",	0X30,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"cs_timer_event",	0X38,	0x60000400,	get_struc_id("nn::os::detail::InternalCriticalSectionImplByHorizon"),	4);
	mid = add_struc_member(id,"cv_signaled",	0X3C,	0x60000400,	get_struc_id("nn::os::detail::InternalConditionVariableImplByHorizon"),	4);
	set_struc_align(id,3);
	
	id = get_struc_id("nn::os::detail::InternalCriticalSection");
	mid = add_struc_member(id,"image",	0,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("nn::os::detail::InternalConditionVariable");
	mid = add_struc_member(id,"image",	0,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("nn::os::ThreadType");
	mid = add_struc_member(id,"field_8",	0,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"field_10",	0X8,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"field_18",	0X10,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"field_20",	0X18,	0x000400,	-1,	32);
	mid = add_struc_member(id,"thread_status",	0X38,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"field_41",	0X3C,	0x000400,	-1,	1);
	mid = add_struc_member(id,"field_42",	0X3E,	0x10000400,	-1,	2);
	mid = add_struc_member(id,"thread_prio_shift",	0X40,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"thread_stack_base_addr",	0X48,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"thread_stack_base_addr_mirror",	0X50,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"thread_stack_size",	0X58,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"thread_param",	0X60,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"thread_func",	0X68,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"field_70",	0X70,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"field_78",	0X78,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"field_80",	0X80,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"field_88",	0X88,	0x000400,	-1,	256);
	mid = add_struc_member(id,"thread_name",	0X188,	0x000400,	-1,	32);
	mid = add_struc_member(id,"thread_name_addr",	0X1A8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"crit",	0X1B0,	0x60000400,	get_struc_id("nn::os::detail::InternalCriticalSection"),	4);
	mid = add_struc_member(id,"condvar",	0X1B4,	0x60000400,	get_struc_id("nn::os::detail::InternalConditionVariable"),	4);
	mid = add_struc_member(id,"thread_handle",	0X1B8,	0x20000400,	-1,	4);
	set_struc_align(id,3);
	
	id = get_struc_id("GlueTime58Sub");
	mid = add_struc_member(id,"event",	0,	0x60000400,	get_struc_id("nn::os::SystemEventType"),	48);
	mid = add_struc_member(id,"timer_event",	0X30,	0x60000400,	get_struc_id("nn::os::TimerEventType"),	64);
	mid = add_struc_member(id,"unk70",	0X70,	0x000400,	-1,	24);
	mid = add_struc_member(id,"steady_clock_resource",	0X88,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	set_struc_align(id,3);
	
	id = get_struc_id("GlueTime58PmStateChangeHandler");
	mid = add_struc_member(id,"__vftable",	0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"sub58",	0X8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"unk_10",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"unk14",	0X14,	0x000400,	-1,	4);
	set_struc_align(id,3);
	
	id = get_struc_id("GlueTime58");
	mid = add_struc_member(id,"thread",	0,	0x60000400,	get_struc_id("nn::os::ThreadType"),	448);
	mid = add_struc_member(id,"event",	0X1C0,	0x60000400,	get_struc_id("nn::os::EventType"),	40);
	mid = add_struc_member(id,"service_manager",	0X1E8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"network_system_clock",	0X1F0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"local_system_clock",	0X1F8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"ephemeral_system_clock",	0X200,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"steady_clock_resource",	0X208,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"glue40",	0X210,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"local_clock_event",	0X218,	0x60000400,	get_struc_id("nn::os::SystemEventType"),	48);
	mid = add_struc_member(id,"network_clock_event",	0X248,	0x60000400,	get_struc_id("nn::os::SystemEventType"),	48);
	mid = add_struc_member(id,"ephemeral_clock_event",	0X278,	0x60000400,	get_struc_id("nn::os::SystemEventType"),	48);
	mid = add_struc_member(id,"standard_user_auto_correct_clock_event",	0X2A8,	0x60000400,	get_struc_id("nn::os::SystemEventType"),	48);
	mid = add_struc_member(id,"timer_steady_clock",	0X2D8,	0x60000400,	get_struc_id("nn::os::TimerEventType"),	64);
	mid = add_struc_member(id,"timer_file_system",	0X318,	0x60000400,	get_struc_id("nn::os::TimerEventType"),	64);
	mid = add_struc_member(id,"unk_358",	0X358,	0x60000400,	get_struc_id("GlueTime58Sub"),	144);
	mid = add_struc_member(id,"power_state_change_handler",	0X3E8,	0x60000400,	get_struc_id("GlueTime58PmStateChangeHandler"),	24);
	set_struc_align(id,3);
	return id;
}

static Structures_1(id) {
        auto mid;

	
	id = get_struc_id("nn::os::detail::InternalCriticalSectionStorage");
	mid = add_struc_member(id,"storage",	0,	0x60000400,	get_struc_id("nn::os::detail::InternalCriticalSection"),	4);
	set_struc_align(id,2);
	
	id = get_struc_id("nn::os::MutexType::$08BC7EEE3E858AA1510DFCFE2DD2AE43");
	mid = add_struc_member(id,"_mutexImage",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"_mutex",	0,	0x60000400,	get_struc_id("nn::os::detail::InternalCriticalSectionStorage"),	4);
	set_struc_align(id,2);
	
	id = get_struc_id("nn::os::MutexType");
	mid = add_struc_member(id,"_state",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"_isRecursive",	0X1,	0x000400,	-1,	1);
	mid = add_struc_member(id,"_lockLevel",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"_nestCount",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"_ownerThread",	0X10,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"anonymous_0",	0X18,	0x60000400,	get_struc_id("nn::os::MutexType::$08BC7EEE3E858AA1510DFCFE2DD2AE43"),	4);
	set_struc_align(id,3);
	
	id = get_struc_id("GlueStaticService");
	mid = add_struc_member(id,"setup_info",	0,	0x60000400,	get_struc_id("StaticServiceSetupInfo"),	6);
	mid = add_struc_member(id,"static_service",	0X8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"timezone_service",	0X10,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"unk_18",	0X18,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"steady_clock_resource",	0X20,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	set_struc_align(id,3);
	
	id = get_struc_id("GlueStaticService_Wrap");
	mid = add_struc_member(id,"__vftable",	0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"impl",	0X8,	0x60000400,	get_struc_id("GlueStaticService"),	40);
	mid = add_struc_member(id,"heap",	0X30,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	set_struc_align(id,3);
	
	id = get_struc_id("GlueTime458");
	mid = add_struc_member(id,"unk_0000",	0,	0x000400,	-1,	39728);
	mid = add_struc_member(id,"time_u",	0X9B30,	0x60000400,	get_struc_id("GlueStaticService_Wrap"),	56);
	mid = add_struc_member(id,"time_a",	0X9B68,	0x60000400,	get_struc_id("GlueStaticService_Wrap"),	56);
	mid = add_struc_member(id,"time_r",	0X9BA0,	0x60000400,	get_struc_id("GlueStaticService_Wrap"),	56);
	mid = add_struc_member(id,"unk_9BD8",	0X9BD8,	0x000400,	-1,	4096);
	mid = add_struc_member(id,"heap",	0XABD8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"mutex",	0XABE0,	0x60000400,	get_struc_id("nn::os::MutexType"),	32);
	set_struc_align(id,3);
	
	id = get_struc_id("GlueTime");
	mid = add_struc_member(id,"unk_0000",	0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"service_manager",	0X8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"steady_clock_resource",	0X10,	0x60000400,	get_struc_id("StandardSteadyClockResource"),	48);
	mid = add_struc_member(id,"unk_0040",	0X40,	0x60000400,	get_struc_id("GlueTime40"),	24);
	mid = add_struc_member(id,"unk_0058",	0X58,	0x60000400,	get_struc_id("GlueTime58"),	1024);
	mid = add_struc_member(id,"unk_0458",	0X458,	0x60000400,	get_struc_id("GlueTime458"),	44032);
	set_struc_align(id,3);
	
	id = get_struc_id("nn::os::SdkRecursiveMutexType");
	mid = add_struc_member(id,"mutex",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"unk_04",	0X4,	0x20000400,	-1,	4);
	set_struc_align(id,2);
	
	id = get_struc_id("GlueTimeZoneService");
	mid = add_struc_member(id,"unk_00",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"unk_08",	0X8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"timezone_service",	0X10,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"mutex",	0X18,	0x60000400,	get_struc_id("nn::os::SdkRecursiveMutexType"),	8);
	mid = add_struc_member(id,"event_initialied",	0X20,	0x000400,	-1,	1);
	mid = add_struc_member(id,"node",	0X28,	0x60000400,	get_struc_id("Node"),	16);
	mid = add_struc_member(id,"event",	0X38,	0x60000400,	get_struc_id("nn::os::SystemEventType"),	48);
	set_struc_align(id,3);
	
	id = get_struc_id("GlueTimeZoneService_Wrap");
	mid = add_struc_member(id,"__vftable",	0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"impl",	0X8,	0x60000400,	get_struc_id("GlueTimeZoneService"),	104);
	mid = add_struc_member(id,"heap_initialised",	0X70,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"heap",	0X78,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	set_struc_align(id,3);
	
	id = get_struc_id("nn::fssrv::sf::IFileSystemProxy");
	mid = add_struc_member(id,"__vftable",	0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	set_struc_align(id,3);
	
	id = get_struc_id("nn::fssrv::sf::IFileSystemProxy::vtable");
	mid = add_struc_member(id,"AddReference",	0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"Release",	0X8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetProxyInfo",	0X10,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetInterfaceTypeInfo",	0X18,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"FakePad",	0X20,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"OpenFileSystem",	0X28,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetCurrentProcess",	0X30,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"OpenDataFileSystemByCurrentProcess",	0X38,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"OpenFileSystemWithPatch",	0X40,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"OpenFileSystemWithIdObsolete",	0X48,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"OpenDataFileSystemByProgramId",	0X50,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"OpenFileSystemWithId",	0X58,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"OpenBisFileSystem",	0X60,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"OpenBisStorage",	0X68,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"InvalidateBisCache",	0X70,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"OpenHostFileSystem",	0X78,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"OpenSdCardFileSystem",	0X80,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"FormatSdCardFileSystem",	0X88,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"DeleteSaveDataFileSystem",	0X90,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"CreateSaveDataFileSystem",	0X98,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"CreateSaveDataFileSystemBySystemSaveDataId",	0XA0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"RegisterSaveDataFileSystemAtomicDeletion",	0XA8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"DeleteSaveDataFileSystemBySaveDataSpaceId",	0XB0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"FormatSdCardDryRun",	0XB8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"IsExFatSupported",	0XC0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"DeleteSaveDataFileSystemBySaveDataAttribute",	0XC8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"OpenGameCardStorage",	0XD0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"OpenGameCardFileSystem",	0XD8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"ExtendSaveDataFileSystem",	0XE0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"DeleteCacheStorage",	0XE8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetCacheStorageSize",	0XF0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"CreateSaveDataFileSystemWithHashSalt",	0XF8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"OpenHostFileSystemWithOption",	0X100,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"CreateSaveDataFileSystemWithCreationInfo2",	0X108,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"OpenSaveDataFileSystem",	0X110,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"OpenSaveDataFileSystemBySystemSaveDataId",	0X118,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"OpenReadOnlySaveDataFileSystem",	0X120,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"ReadSaveDataFileSystemExtraDataBySaveDataSpaceId",	0X128,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"ReadSaveDataFileSystemExtraData",	0X130,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"WriteSaveDataFileSystemExtraData",	0X138,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"OpenSaveDataInfoReader",	0X140,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"OpenSaveDataInfoReaderBySaveDataSpaceId",	0X148,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"OpenSaveDataInfoReaderOnlyCacheStorage",	0X150,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"OpenSaveDataInternalStorageFileSystem",	0X158,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"UpdateSaveDataMacForDebug",	0X160,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"WriteSaveDataFileSystemExtraDataWithMask",	0X168,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"FindSaveDataWithFilter",	0X170,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"OpenSaveDataInfoReaderWithFilter",	0X178,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"ReadSaveDataFileSystemExtraDataBySaveDataAttribute",	0X180,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"WriteSaveDataFileSystemExtraDataWithMaskBySaveDataAttribute",	0X188,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"ReadSaveDataFileSystemExtraDataWithMaskBySaveDataAttribute",	0X190,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"OpenSaveDataMetaFile",	0X198,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"OpenSaveDataTransferManager",	0X1A0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"OpenSaveDataTransferManagerVersion2",	0X1A8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"OpenSaveDataTransferProhibiter",	0X1B0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"ListAccessibleSaveDataOwnerId",	0X1B8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"OpenSaveDataTransferManagerForSaveDataRepair",	0X1C0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"OpenSaveDataMover",	0X1C8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"OpenSaveDataTransferManagerForRepair",	0X1D0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"OpenImageDirectoryFileSystem",	0X1D8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"OpenBaseFileSystem",	0X1E0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"FormatBaseFileSystem",	0X1E8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"OpenContentStorageFileSystem",	0X1F0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"OpenCloudBackupWorkStorageFileSystem",	0X1F8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"OpenCustomStorageFileSystem",	0X200,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"OpenDataStorageByCurrentProcess",	0X208,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"OpenDataStorageByProgramId",	0X210,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"OpenDataStorageByDataId",	0X218,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"OpenPatchDataStorageByCurrentProcess",	0X220,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"OpenDataFileSystemWithProgramIndex",	0X228,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"OpenDataStorageWithProgramIndex",	0X230,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"OpenDataStorageByPath",	0X238,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"OpenDataFileSystemByDataId",	0X240,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"OpenDeviceOperator",	0X248,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"OpenSdCardDetectionEventNotifier",	0X250,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"OpenGameCardDetectionEventNotifier",	0X258,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"OpenSystemDataUpdateEventNotifier",	0X260,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"NotifySystemDataUpdateEvent",	0X268,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SimulateDeviceDetectionEvent",	0X270,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetCurrentPosixTime",	0X278,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"QuerySaveDataTotalSize",	0X280,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"VerifySaveDataFileSystem",	0X288,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"CorruptSaveDataFileSystem",	0X290,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"CreatePaddingFile",	0X298,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"DeleteAllPaddingFiles",	0X2A0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetRightsId",	0X2A8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"RegisterExternalKey",	0X2B0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"UnregisterAllExternalKey",	0X2B8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetRightsIdAndKeyGenerationByPath",	0X2C0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetCurrentPosixTimeWithTimeDifference",	0X2C8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetFreeSpaceSizeForSaveData",	0X2D0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"VerifySaveDataFileSystemBySaveDataSpaceId",	0X2D8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"CorruptSaveDataFileSystemBySaveDataSpaceId",	0X2E0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"QuerySaveDataInternalStorageTotalSize",	0X2E8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetSaveDataCommitId",	0X2F0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"UnregisterExternalKey",	0X2F8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetProgramId",	0X300,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetSdCardEncryptionSeed",	0X308,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetSdCardAccessibility",	0X310,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"IsSdCardAccessible",	0X318,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"OpenAccessFailureDetectionEventNotifier",	0X320,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetAccessFailureDetectionEvent",	0X328,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"IsAccessFailureDetected",	0X330,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"ResolveAccessFailure",	0X338,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"AbandonAccessFailure",	0X340,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetAndClearErrorInfo",	0X348,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"RegisterProgramIndexMapInfo",	0X350,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetSaveDataSize",	0X358,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetSaveDataRootPath",	0X360,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"DisableAutoSaveDataCreation",	0X368,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetGlobalAccessLogMode",	0X370,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetGlobalAccessLogMode",	0X378,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"OutputAccessLogToSdCard",	0X380,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"RegisterUpdatePartition",	0X388,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"OpenRegisteredUpdatePartition",	0X390,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetAndClearMemoryReportInfo",	0X398,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetDataStorageRedirectTarget",	0X3A0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetProgramIndexForAccessLog",	0X3A8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetFsStackUsage",	0X3B0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"UnsetSaveDataRootPath",	0X3B8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"FlushAccessLogOnSdCard",	0X3C0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"OutputApplicationInfoAccessLog",	0X3C8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetDebugOption",	0X3D0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"UnsetDebugOption",	0X3D8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"OverrideSaveDataTransferTokenSignVerificationKey",	0X3E0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"CorruptSaveDataFileSystemByOffset",	0X3E8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"OpenMultiCommitManager",	0X3F0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"OpenBisWiper",	0X3F8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"NotifyErrorContextServiceReady",	0X400,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	set_struc_align(id,3);
	
	id = get_struc_id("ttinfo");
	mid = add_struc_member(id,"tt_utoff",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"tt_isdst",	0X4,	0x000400,	-1,	1);
	mid = add_struc_member(id,"tt_desigidx",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"tt_ttisstd",	0XC,	0x000400,	-1,	1);
	mid = add_struc_member(id,"tt_ttisut",	0XD,	0x000400,	-1,	1);
	set_struc_align(id,2);
	
	id = get_struc_id("TimeZone::Rule");
	mid = add_struc_member(id,"timecnt",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"typecnt",	0X4,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"charcnt",	0X8,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"goback",	0XC,	0x000400,	-1,	1);
	mid = add_struc_member(id,"goahead",	0XD,	0x000400,	-1,	1);
	mid = add_struc_member(id,"pad",	0XE,	0x000400,	-1,	2);
	mid = add_struc_member(id,"ats",	0X10,	0x30000400,	-1,	8000);
	mid = add_struc_member(id,"types",	0X1F50,	0x000400,	-1,	1000);
	mid = add_struc_member(id,"ttis",	0X2338,	0x60000400,	get_struc_id("ttinfo"),	2048);
	mid = add_struc_member(id,"chars",	0X2B38,	0x000400,	-1,	512);
	mid = add_struc_member(id,"defaulttype",	0X2D38,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"reserved",	0X2D3C,	0x000400,	-1,	4804);
	set_struc_align(id,3);
	
	id = get_struc_id("AlarmInfo");
	mid = add_struc_member(id,"alert_time",	0,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"priority",	0X8,	0x20000400,	-1,	4);
	set_struc_align(id,3);
	
	id = get_struc_id("nn::rtc::IRtcManager");
	mid = add_struc_member(id,"__vftable",	0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	set_struc_align(id,3);
	
	id = get_struc_id("nn::rtc::IRtcManager::vtable");
	mid = add_struc_member(id,"AddReference",	0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"Release",	0X8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetProxyInfo",	0X10,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetInterfaceTypeInfo",	0X18,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetTimeInSeconds",	0X20,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetTimeInSeconds",	0X28,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"SetResetOnShutdown",	0X30,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"GetResetDetected",	0X38,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"ClearResetDetected",	0X40,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"EnableAlarm",	0X48,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"DisableRtcAlarm",	0X50,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	set_struc_align(id,3);
	
	id = get_struc_id("nn::srepo::EventId");
	mid = add_struc_member(id,"string",	0,	0x000400,	-1,	32);
	
	id = get_struc_id("nn::srepo::SystemReport");
	mid = add_struc_member(id,"event_id",	0,	0x60000400,	get_struc_id("nn::srepo::EventId"),	32);
	mid = add_struc_member(id,"application_id",	0X20,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"flags",	0X28,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"unk_2C",	0X2C,	0x000400,	-1,	1);
	mid = add_struc_member(id,"unk_2D",	0X2D,	0x000400,	-1,	3);
	mid = add_struc_member(id,"report_address",	0X30,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"report_total_size",	0X38,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"report_current_size",	0X40,	0x30000400,	-1,	8);
	set_struc_align(id,3);
	
	id = get_struc_id("nn::psc::sf::IPmModule");
	mid = add_struc_member(id,"__vftable",	0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"event",	0X8,	0x60000400,	get_struc_id("nn::os::SystemEventType"),	48);
	set_struc_align(id,3);
	
	id = get_struc_id("GlueTimeServiceManager");
	mid = add_struc_member(id,"initialised",	0,	0x000400,	-1,	1);
	mid = add_struc_member(id,"unk_08",	0X8,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"unk_10",	0X10,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"unk_vtable",	0X18,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	set_struc_align(id,3);
	
	id = get_struc_id("GlueTimeServiceManager_Wrap");
	mid = add_struc_member(id,"__vftable",	0,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	mid = add_struc_member(id,"impl",	0X8,	0x60000400,	get_struc_id("GlueTimeServiceManager"),	32);
	mid = add_struc_member(id,"heap_initialised",	0X28,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"heap",	0X30,	0x35500400,	0XFFFFFFFFFFFFFFFF,	8,	0XFFFFFFFFFFFFFFFF,	0,	0x000009);
	set_struc_align(id,3);
	
	id = get_struc_id("RomFSHeader");
	mid = add_struc_member(id,"header_size",	0,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"dir_hash_table_ofs",	0X8,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"dir_hash_table_size",	0X10,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"dir_table_ofs",	0X18,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"dir_table_size",	0X20,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"file_hash_table_ofs",	0X28,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"file_hash_table_size",	0X30,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"file_table_ofs",	0X38,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"file_table_size",	0X40,	0x30000400,	-1,	8);
	mid = add_struc_member(id,"file_partition_ofs",	0X48,	0x30000400,	-1,	8);
	set_struc_align(id,3);
	
	id = get_struc_id("GlueLockFreeAtomics");
	mid = add_struc_member(id,"unk_00",	0,	0x20000400,	-1,	4);
	mid = add_struc_member(id,"lock_free",	0X8,	0x60000400,	get_struc_id("LockFreeAtomic_SystemClockContext"),	72);
	set_struc_align(id,3);
	return id;
}

//------------------------------------------------------------------------
// Information about structure types

static Structures(void) {
        auto id;
        begin_type_updating(UTP_STRUCT);
	id = Structures_0(id);
	id = Structures_1(id);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_0(void) {
        auto x;
#define id x

	create_insn	(0X7100000000);
	create_dword	(0X7100000004);
	create_insn	(0X7100000008);
	create_byte	(0X7100000018);
	make_array	(0X7100000018,	0X4);
	create_insn	(0X710000001C);
	create_dword	(0X710000002C);
	create_insn	(0X7100000030);
	create_dword	(0X710000004C);
	create_insn	(0X7100000050);
	create_byte	(0X7100000060);
	make_array	(0X7100000060,	0X4);
	create_insn	(0X7100000064);
	create_insn	(x=0X710000008C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100000090);
	create_byte	(0X7100000098);
	make_array	(0X7100000098,	0X4);
	create_insn	(0X710000009C);
	create_dword	(0X71000000AC);
	create_insn	(0X71000000B0);
	create_byte	(0X71000000C0);
	make_array	(0X71000000C0,	0X4);
	create_insn	(0X71000000C4);
	create_insn	(0X71000000D8);
	create_dword	(0X71000000DC);
	create_insn	(0X71000000E0);
	create_insn	(x=0X71000000F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7100000104);
	create_insn	(0X7100000110);
	create_insn	(x=0X7100000114);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100000118);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100000120);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100000124);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100000128);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710000012C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100000134);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100000138);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710000013C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100000140);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100000144);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100000148);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710000014C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100000150);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100000154);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100000158);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710000015C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100000160);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100000164);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100000168);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710000016C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100000170);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100000174);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100000178);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710000017C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100000180);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100000184);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100000188);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710000018C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100000190);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100000194);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100000198);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000019C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000001A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000001A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000001A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000001AC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000001B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000001B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000001B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000001BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000001C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000001C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000001C8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000001CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000001D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000001D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000001D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000001DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000001E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000001E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000001E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000001EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000001F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000001F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000001FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100000200);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710000020C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100000210);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710000021C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100000220);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100000234);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100000238);
	op_stkvar	(x,	1);
	make_array	(0X7100000244,	0XC);
	create_insn	(x=0X7100000250);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100000254);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000025C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100000264);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100000268);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710000026C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100000274);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100000278);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710000027C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100000280);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710000028C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100000290);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000002A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000002A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000002B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000002B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000002C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000002CC);
	op_stkvar	(x,	1);
	make_array	(0X71000002D4,	0XC);
	create_insn	(0X71000002E0);
	create_insn	(x=0X71000002E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000002E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000002EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000002F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100000308);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710000030C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100000318);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7100000350);
	make_array	(0X7100000358,	0X8);
	create_insn	(0X7100000360);
	create_insn	(x=0X7100000364);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100000368);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710000036C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100000370);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100000388);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710000038C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100000398);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X71000003D0);
	make_array	(0X71000003D8,	0X8);
	create_insn	(0X71000003E0);
	set_name	(0X71000003E0,	"j_nullsub_18");
	make_array	(0X71000003E4,	0XC);
	create_insn	(x=0X71000003F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000003F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000003F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000003FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100000404);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100000408);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710000040C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100000410);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100000448);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7100000454);
	create_insn	(x=0X710000046C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710000048C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100000494);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100000498);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000049C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000004A0);
	op_stkvar	(x,	1);
	make_array	(0X71000004A8,	0X8);
	create_insn	(0X71000004B0);
	create_insn	(x=0X71000004B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X71000004BC,	0X4);
	create_insn	(0X71000004C0);
	create_insn	(x=0X71000004C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X71000004CC,	0X4);
	create_insn	(x=0X71000004D0);
	op_stkvar	(x,	1);
	set_name	(0X71000004D0,	"SetupService_bgtc");
	create_insn	(x=0X71000004D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000004E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000004EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000004F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100000508);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100000514);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710000051C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100000520,	"result",	0);
	create_insn	(x=0X710000052C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100000530);
	op_stkvar	(x,	1);
	create_insn	(0X7100000538);
	create_insn	(x=0X7100000540);
	op_stkvar	(x,	1);
	set_name	(0X7100000540,	"bgtc_MainThread");
	create_insn	(x=0X7100000550);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100000558);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000055C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100000564);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X710000075C,	"result",	0);
	set_cmt	(0X7100000764,	"a1",	0);
	create_insn	(x=0X7100000768);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000076C);
	op_stkvar	(x,	1);
	make_array	(0X7100000774,	0XC);
	create_insn	(0X7100000780);
	set_name	(0X7100000780,	"SetupService_ectx");
	create_insn	(x=0X7100000784);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100000788);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000078C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100000794);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710000079C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000007A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100000944);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100000948);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100000960);
	op_plain_offset	(x,	1,	0X71000C0C18);
	op_plain_offset	(x,	129,	0X71000C0C18);
	create_insn	(x=0X7100000968);
	op_plain_offset	(x,	1,	0X71000C0C18);
	op_plain_offset	(x,	129,	0X71000C0C18);
	create_insn	(x=0X7100000974);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100000978);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100000980);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100000994);
	op_plain_offset	(x,	1,	0X71000C0C18);
	op_plain_offset	(x,	129,	0X71000C0C18);
	create_insn	(x=0X71000009A8);
	op_plain_offset	(x,	1,	0X71000C0C18);
	op_plain_offset	(x,	129,	0X71000C0C18);
	create_insn	(x=0X71000009BC);
	op_plain_offset	(x,	1,	0X71000C0C18);
	op_plain_offset	(x,	129,	0X71000C0C18);
	create_insn	(x=0X71000009C4);
	op_plain_offset	(x,	1,	0X710018E5D8);
	op_plain_offset	(x,	129,	0X710018E5D8);
	create_insn	(x=0X71000009CC);
	op_plain_offset	(x,	1,	0X71000C0C18);
	op_plain_offset	(x,	129,	0X71000C0C18);
	create_insn	(x=0X71000009DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000009E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000009EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100000A00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100000A10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100000A1C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100000A20);
	op_plain_offset	(x,	1,	0X71000BF000);
	op_plain_offset	(x,	129,	0X71000BF000);
	create_insn	(x=0X7100000A28);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100000A38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100000A44);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100000A4C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100000A5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100000A68);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100000A70);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100000A84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100000A94);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100000A9C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100000AB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100000AC4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100000ACC,	"result",	0);
	set_cmt	(0X7100000AD4,	"this",	0);
	create_insn	(x=0X7100000AEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100000AF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100000AF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100000AFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100000B08);
	op_stkvar	(x,	1);
	create_insn	(0X7100000B10);
	create_insn	(x=0X7100000B1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100000B20);
	op_stkvar	(x,	1);
	create_insn	(0X7100000BE8);
	create_insn	(0X7100000BF4);
	create_insn	(0X7100000C00);
	create_insn	(0X7100000C0C);
	create_insn	(0X7100000C18);
	create_insn	(0X7100000C24);
	create_insn	(0X7100000C30);
	create_insn	(0X7100000C3C);
	create_insn	(0X7100000C48);
	create_insn	(0X7100000C54);
	create_insn	(0X7100000C60);
	create_insn	(0X7100000C6C);
	create_insn	(0X7100000C78);
	create_insn	(0X7100000C84);
	create_insn	(0X7100000C90);
	create_insn	(0X7100000C9C);
	create_insn	(0X7100000CA8);
	create_insn	(0X7100000CB4);
	create_insn	(0X7100000CC0);
	create_insn	(0X7100000CCC);
	create_insn	(0X7100000CD8);
	create_insn	(x=0X7100000D00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100000D04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100000D0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100000D10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100000D14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100000D40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100000D54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100000D58);
	op_stkvar	(x,	1);
	create_insn	(0X7100000D60);
	create_insn	(0X7100000D6C);
	set_name	(0X7100000D6C,	"nullsub_1");
	create_insn	(x=0X7100000D70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100000D8C);
	op_stkvar	(x,	1);
	create_insn	(0X7100000D94);
	create_insn	(x=0X7100000D98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100000D9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100000DA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100000DC8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100000DD0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7100000DDC);
	create_insn	(x=0X7100000E08);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100000E10);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100000E2C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100000E34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100000E48);
	op_stkvar	(x,	1);
	create_insn	(0X7100000E54);
	create_insn	(x=0X7100000E58);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100000E60);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100000E6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100000E80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100000E98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100000E9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100000EA0);
	op_stkvar	(x,	1);
	create_insn	(0X7100000EAC);
	create_insn	(x=0X7100000EB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100000EB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100000EF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100000EF8);
	op_stkvar	(x,	1);
	create_insn	(0X7100000F00);
	create_insn	(0X7100000F0C);
	create_insn	(0X7100000F18);
	create_insn	(x=0X7100000F40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100000F44);
	op_stkvar	(x,	1);
	create_insn	(0X7100000F4C);
	create_insn	(0X7100000F54);
	set_name	(0X7100000F54,	"nullsub_2");
	create_insn	(x=0X7100000F58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100000F5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100000F60);
	op_stkvar	(x,	1);
	create_insn	(0X7100001030);
	create_insn	(0X7100001038);
	create_insn	(0X7100001040);
	create_insn	(0X7100001048);
	create_insn	(0X7100001050);
	create_insn	(0X7100001058);
	create_insn	(0X7100001060);
	create_insn	(0X7100001068);
	create_insn	(0X7100001070);
	create_insn	(0X7100001078);
	create_insn	(0X7100001080);
	create_insn	(0X7100001088);
	create_insn	(0X7100001090);
	create_insn	(0X7100001098);
	create_insn	(0X71000010A0);
	create_insn	(0X71000010A8);
	create_insn	(0X71000010B0);
	create_insn	(0X71000010B8);
	create_insn	(0X71000010C0);
	create_insn	(0X71000010C8);
	create_insn	(0X71000010D0);
	create_insn	(x=0X71000010F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000010F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000010FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001104);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001108);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000110C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001138);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000114C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001154);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000115C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001160);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001174);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001178);
	op_stkvar	(x,	1);
	create_insn	(0X7100001180);
	create_insn	(0X710000118C);
	set_name	(0X710000118C,	"nullsub_3");
	create_insn	(0X7100001190);
	create_insn	(x=0X7100001198);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000119C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000011A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000011CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000011E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000011E8);
	op_stkvar	(x,	1);
	create_insn	(0X71000011F0);
	create_insn	(0X71000011FC);
	set_name	(0X71000011FC,	"nullsub_4");
	create_insn	(0X7100001200);
	create_insn	(x=0X7100001204);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001208);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000120C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001210);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001214);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000122C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001234);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001244);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001260);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001278);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000127C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001290);
	op_hex		(x,	1);
	create_insn	(0X71000012A0);
	create_insn	(0X71000012AC);
	create_insn	(x=0X71000012B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000012B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000012BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000012C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000012C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000012D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000012D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000012D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000012DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000012E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000012E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000012E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001310);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001324);
	op_hex		(x,	1);
	create_insn	(x=0X7100001350);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001364);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001370);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000137C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001380);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001394);
	op_hex		(x,	1);
	create_insn	(0X71000013A4);
	create_insn	(x=0X71000013AC);
	op_hex		(x,	1);
	create_insn	(x=0X71000013C8);
	op_stkvar	(x,	1);
	create_insn	(0X7100001400);
	create_insn	(x=0X710000140C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001410);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001414);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001418);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000141C);
	op_stkvar	(x,	1);
	create_insn	(0X7100001428);
	create_insn	(0X7100001430);
	create_insn	(x=0X7100001434);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001444);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001450);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001458);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001460);
	op_hex		(x,	1);
	create_insn	(0X7100001470);
	create_insn	(0X7100001474);
	create_insn	(x=0X7100001478);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000147C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001480);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001484);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001490);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000149C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000014A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000014B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000014B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000014C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000014C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000014C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000014CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000014D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000014D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000014D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000014DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000014F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000014FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001504);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001510);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001520);
	op_hex		(x,	1);
	create_insn	(x=0X710000154C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001560);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000156C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001574);
	op_stkvar	(x,	1);
	create_insn	(0X7100001580);
	create_insn	(x=0X7100001584);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001594);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000015A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000015A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000015B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000015B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000015BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000015C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000015C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000015DC);
	op_stkvar	(x,	1);
	create_insn	(0X71000015E8);
	create_insn	(x=0X71000015F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001604);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000161C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001620);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001624);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001628);
	op_stkvar	(x,	1);
	create_insn	(0X7100001634);
	create_insn	(x=0X710000163C);
	op_stkvar	(x,	1);
	create_insn	(0X7100001648);
	create_insn	(x=0X710000164C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001650);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001654);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001658);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000165C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000166C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001670);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000167C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001684);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001694);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000169C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000016A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000016A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000016AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000016B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000016B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000016B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000016BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000016C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000016E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001710);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001728);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001738);
	op_hex		(x,	1);
	create_insn	(x=0X7100001778);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001784);
	op_stkvar	(x,	1);
	create_insn	(0X7100001790);
	create_insn	(x=0X710000179C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000017A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000017A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000017A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000017AC);
	op_stkvar	(x,	1);
	create_insn	(0X71000017B8);
	create_insn	(x=0X71000017CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000017D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000017DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000017EC);
	op_stkvar	(x,	1);
	create_insn	(0X7100001804);
	create_insn	(0X710000180C);
	create_insn	(x=0X7100001810);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001814);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001820);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000182C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001834);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001854);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001864);
	op_hex		(x,	1);
	create_insn	(0X7100001874);
	create_insn	(x=0X710000187C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001880);
	op_stkvar	(x,	1);
	create_insn	(0X710000188C);
	create_insn	(x=0X7100001894);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001898);
	op_stkvar	(x,	1);
	create_insn	(0X71000018A4);
	create_insn	(x=0X71000018B8);
	op_hex		(x,	1);
	create_insn	(x=0X71000018D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001908);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000190C);
	op_stkvar	(x,	1);
	create_insn	(0X7100001918);
	create_insn	(0X7100001920);
	create_insn	(x=0X7100001924);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001928);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000192C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001930);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000193C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001948);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000194C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001960);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001964);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000196C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001970);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001978);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000197C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001980);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001984);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001988);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000198C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001990);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000019C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000019D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000019EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000019F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000019F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001A00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001A10);
	op_hex		(x,	1);
	create_insn	(x=0X7100001A3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001A50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001A5C);
	op_stkvar	(x,	1);
	create_insn	(0X7100001A68);
	create_insn	(x=0X7100001A6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001A7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001A88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001A8C);
	op_hex		(x,	1);
	create_insn	(0X7100001AA4);
	create_insn	(x=0X7100001AB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001AB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001AB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001ABC);
	op_stkvar	(x,	1);
	create_insn	(0X7100001AC8);
	create_insn	(x=0X7100001AD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001AD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001AE8);
	op_stkvar	(x,	1);
	create_insn	(0X7100001AF8);
	create_insn	(x=0X7100001AFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001B00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001B0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001B18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001B20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001B44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001B6C);
	op_hex		(x,	1);
	create_insn	(0X7100001B7C);
	create_insn	(x=0X7100001B84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001B88);
	op_stkvar	(x,	1);
	create_insn	(0X7100001B94);
	create_insn	(x=0X7100001B9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001BA0);
	op_stkvar	(x,	1);
	create_insn	(0X7100001BAC);
	create_insn	(x=0X7100001BBC);
	op_hex		(x,	1);
	create_insn	(0X7100001BCC);
	create_insn	(x=0X7100001BDC);
	op_hex		(x,	1);
	create_insn	(0X7100001BEC);
	create_insn	(x=0X7100001BF4);
	op_hex		(x,	1);
	create_insn	(x=0X7100001C10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001C44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001C48);
	op_stkvar	(x,	1);
	create_insn	(0X7100001C54);
	create_insn	(0X7100001C5C);
	create_insn	(x=0X7100001C60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001C64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001C68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001C6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001C7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001C80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001C8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001C94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001CA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001CA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001CAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001CB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001CB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001CB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001CBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001CC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001CF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001D00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001D08);
	op_hex		(x,	1);
	create_insn	(x=0X7100001D14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001D20);
	op_hex		(x,	1);
	create_insn	(x=0X7100001D60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001D6C);
	op_stkvar	(x,	1);
	create_insn	(0X7100001D78);
	create_insn	(x=0X7100001D8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001D98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001D9C);
	op_hex		(x,	1);
	create_insn	(0X7100001DB4);
	create_insn	(x=0X7100001DC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001DC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001DC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001DCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001DD8);
	op_stkvar	(x,	1);
	create_insn	(0X7100001DE8);
	create_insn	(x=0X7100001DEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001DF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001DF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001DF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001DFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001E0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001E10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001E1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001E24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001E34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001E3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001E40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001E48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001E4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001E50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001E54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001E58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001E5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001E60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001E90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001EA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001EAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001EC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001EC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001ECC);
	op_hex		(x,	1);
	create_insn	(x=0X7100001ED8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001EE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001EF4);
	op_hex		(x,	1);
	create_insn	(x=0X7100001F34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001F40);
	op_stkvar	(x,	1);
	create_insn	(0X7100001F4C);
	create_insn	(x=0X7100001F60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001F6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001F84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001F8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001F9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001FA4);
	op_stkvar	(x,	1);
	create_insn	(0X7100001FB4);
	create_insn	(x=0X7100001FC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001FC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001FC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001FCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001FD0);
	op_stkvar	(x,	1);
	create_insn	(0X7100001FDC);
	create_insn	(0X7100001FE4);
	create_insn	(x=0X7100001FE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001FEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001FF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100001FF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002004);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002008);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002014);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000201C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000202C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002034);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002038);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002040);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002044);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002048);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000204C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002050);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002054);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002058);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002070);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002078);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000020A4);
	op_hex		(x,	1);
	create_insn	(x=0X71000020A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000020B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000020C4);
	op_hex		(x,	1);
	create_insn	(x=0X7100002104);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002110);
	op_stkvar	(x,	1);
	create_insn	(0X710000211C);
	create_insn	(x=0X7100002130);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000213C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002140);
	op_hex		(x,	1);
	create_insn	(0X710000215C);
	create_insn	(x=0X7100002168);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000216C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002170);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002174);
	op_stkvar	(x,	1);
	create_insn	(0X7100002180);
	create_insn	(x=0X7100002188);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000218C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000021A0);
	op_stkvar	(x,	1);
	create_insn	(0X71000021B0);
	create_insn	(x=0X71000021B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000021B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000021C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000021D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000021D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000021FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000221C);
	op_hex		(x,	1);
	create_insn	(0X710000222C);
	create_insn	(x=0X7100002234);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002238);
	op_stkvar	(x,	1);
	create_insn	(0X7100002244);
	create_insn	(x=0X710000224C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002250);
	op_stkvar	(x,	1);
	create_insn	(0X710000225C);
	create_insn	(x=0X710000226C);
	op_hex		(x,	1);
	create_insn	(0X710000227C);
	create_insn	(x=0X7100002284);
	op_hex		(x,	1);
	create_insn	(x=0X71000022A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000022D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000022D8);
	op_stkvar	(x,	1);
	create_insn	(0X71000022E4);
	create_insn	(0X71000022EC);
	create_insn	(x=0X71000022F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000022F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000022F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000022FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002308);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002314);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002318);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000232C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002330);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002338);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000233C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002340);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002344);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002348);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000234C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002350);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002354);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000236C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002374);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000237C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002388);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002398);
	op_hex		(x,	1);
	create_insn	(x=0X71000023C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000023D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000023E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000023EC);
	op_stkvar	(x,	1);
	create_insn	(0X71000023F8);
	create_insn	(x=0X71000023FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000240C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002418);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000241C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000242C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002430);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002434);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000243C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100002440);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002454);
	op_stkvar	(x,	1);
	create_insn	(0X7100002460);
	create_insn	(x=0X7100002468);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000247C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002494);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002498);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000249C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000024A0);
	op_stkvar	(x,	1);
	create_insn	(0X71000024AC);
	create_insn	(x=0X71000024B4);
	op_stkvar	(x,	1);
	create_insn	(0X71000024C0);
	create_insn	(x=0X71000024C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000024C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000024CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000024D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000024D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000024E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000024E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000024F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000024FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000250C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002514);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002518);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002520);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002524);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002528);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000252C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002530);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002534);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002538);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000255C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002588);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000025A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000025B0);
	op_hex		(x,	1);
	create_insn	(x=0X71000025F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000025FC);
	op_stkvar	(x,	1);
	create_insn	(0X7100002608);
	create_insn	(x=0X7100002614);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002618);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000261C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002620);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002624);
	op_stkvar	(x,	1);
	create_insn	(0X7100002630);
	create_insn	(x=0X7100002644);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002650);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002654);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002664);
	op_stkvar	(x,	1);
	create_insn	(0X710000267C);
	create_insn	(0X7100002684);
	create_insn	(x=0X710000268C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002690);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000026B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000026C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000026CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000026D0);
	op_stkvar	(x,	1);
	create_insn	(0X71000026D8);
	create_insn	(0X71000026E0);
	create_insn	(0X71000026E8);
	create_insn	(x=0X71000026EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000026FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002700);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002708);
	op_stkvar	(x,	1);
	create_insn	(0X7100002714);
	create_insn	(x=0X7100002718);
	op_hex		(x,	1);
	create_insn	(x=0X710000271C);
	op_hex		(x,	1);
	create_insn	(x=0X7100002720);
	op_hex		(x,	1);
	create_insn	(0X7100002728);
	create_insn	(x=0X7100002730);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002734);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002758);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002768);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002770);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002774);
	op_stkvar	(x,	1);
	make_array	(0X710000277C,	0X4);
	create_insn	(0X7100002780);
	create_insn	(x=0X7100002784);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002788);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000278C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000027A4);
	op_stkvar	(x,	1);
	create_insn	(0X71000027E4);
	create_insn	(0X7100002808);
	create_insn	(x=0X7100002838);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000283C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002840);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000284C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002854);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002858);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000286C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002870);
	op_stkvar	(x,	1);
	create_insn	(0X7100002878);
	create_insn	(x=0X710000287C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002880);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002894);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002898);
	op_stkvar	(x,	1);
	create_insn	(0X71000028A0);
	create_insn	(0X71000028A4);
	set_name	(0X71000028A4,	"nullsub_5");
	create_insn	(0X71000028A8);
	set_name	(0X71000028A8,	"nullsub_6");
	create_insn	(0X71000028AC);
	create_insn	(x=0X71000028B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000028C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000028C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000028CC);
	op_stkvar	(x,	1);
	create_insn	(0X71000028D8);
	create_insn	(x=0X71000028DC);
	op_hex		(x,	1);
	create_insn	(x=0X71000028E0);
	op_hex		(x,	1);
	create_insn	(x=0X71000028E4);
	op_hex		(x,	1);
	create_insn	(0X71000028EC);
	create_insn	(x=0X71000028F0);
	op_hex		(x,	1);
	create_insn	(x=0X71000028F4);
	op_hex		(x,	1);
	create_insn	(0X71000028FC);
	set_name	(0X71000028FC,	"nullsub_7");
	create_insn	(0X7100002900);
	set_name	(0X7100002900,	"nullsub_8");
	create_insn	(0X7100002904);
	set_name	(0X7100002904,	"nullsub_9");
	create_insn	(0X7100002908);
	set_name	(0X7100002908,	"nullsub_10");
	create_insn	(0X710000290C);
	create_insn	(x=0X7100002910);
	op_hex		(x,	1);
	create_insn	(x=0X7100002914);
	op_hex		(x,	1);
	create_insn	(0X710000291C);
	create_insn	(x=0X7100002920);
	op_hex		(x,	1);
	create_insn	(x=0X7100002924);
	op_hex		(x,	1);
	create_insn	(0X710000292C);
	make_array	(0X710000293C,	0X4);
	create_insn	(x=0X7100002940);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002944);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002948);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002954);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100002958);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710000296C);
	op_plain_offset	(x,	1,	0X71000BF000);
	op_plain_offset	(x,	129,	0X71000BF000);
	create_insn	(x=0X7100002990);
	op_plain_offset	(x,	1,	0X71000BF000);
	op_plain_offset	(x,	129,	0X71000BF000);
	create_insn	(x=0X710000299C);
	op_plain_offset	(x,	1,	0X71000BF000);
	op_plain_offset	(x,	129,	0X71000BF000);
	create_insn	(x=0X71000029A4);
	op_plain_offset	(x,	1,	0X71000BF000);
	op_plain_offset	(x,	129,	0X71000BF000);
	create_insn	(x=0X71000029A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000029B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000029B4);
	op_plain_offset	(x,	1,	0X71000BF000);
	op_plain_offset	(x,	129,	0X71000BF000);
	create_insn	(x=0X71000029BC);
	op_plain_offset	(x,	1,	0X71000BF000);
	op_plain_offset	(x,	129,	0X71000BF000);
	create_insn	(x=0X71000029C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000029C8);
	op_plain_offset	(x,	1,	0X71000BF000);
	op_plain_offset	(x,	129,	0X71000BF000);
	create_insn	(x=0X71000029D0);
	op_plain_offset	(x,	1,	0X71000BF000);
	op_plain_offset	(x,	129,	0X71000BF000);
	create_insn	(x=0X71000029D4);
	op_plain_offset	(x,	1,	0X71000BF000);
	op_plain_offset	(x,	129,	0X71000BF000);
	create_insn	(x=0X7100002AF0);
	op_hex		(x,	1);
	create_insn	(x=0X7100002AF4);
	op_plain_offset	(x,	1,	0X71000BF000);
	op_plain_offset	(x,	129,	0X71000BF000);
	create_insn	(x=0X7100002AFC);
	op_hex		(x,	1);
	create_insn	(x=0X7100002B00);
	op_plain_offset	(x,	1,	0X71000BF000);
	op_plain_offset	(x,	129,	0X71000BF000);
	create_insn	(x=0X7100002B04);
	op_plain_offset	(x,	1,	0X71000BF000);
	op_plain_offset	(x,	129,	0X71000BF000);
	create_insn	(x=0X7100002B08);
	op_plain_offset	(x,	1,	0X71000BF000);
	op_plain_offset	(x,	129,	0X71000BF000);
	create_insn	(x=0X7100002B0C);
	op_plain_offset	(x,	1,	0X71000BF000);
	op_plain_offset	(x,	129,	0X71000BF000);
	create_insn	(x=0X7100002B10);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100002B24);
	op_plain_offset	(x,	1,	0X71000BF000);
	op_plain_offset	(x,	129,	0X71000BF000);
	create_insn	(x=0X7100002B28);
	op_plain_offset	(x,	1,	0X71000BF000);
	op_plain_offset	(x,	129,	0X71000BF000);
	create_insn	(x=0X7100002B2C);
	op_plain_offset	(x,	1,	0X71000BF000);
	op_plain_offset	(x,	129,	0X71000BF000);
	create_insn	(x=0X7100002B30);
	op_plain_offset	(x,	1,	0X71000BF000);
	op_plain_offset	(x,	129,	0X71000BF000);
	create_insn	(x=0X7100002B34);
	op_plain_offset	(x,	1,	0X71000BF000);
	op_plain_offset	(x,	129,	0X71000BF000);
	create_insn	(x=0X7100002B38);
	op_plain_offset	(x,	1,	0X71000BF000);
	op_plain_offset	(x,	129,	0X71000BF000);
	create_insn	(x=0X7100002B3C);
	op_plain_offset	(x,	1,	0X71000BF000);
	op_plain_offset	(x,	129,	0X71000BF000);
	create_insn	(x=0X7100002B40);
	op_plain_offset	(x,	1,	0X71000BF000);
	op_plain_offset	(x,	129,	0X71000BF000);
	create_insn	(x=0X7100002B44);
	op_plain_offset	(x,	1,	0X71000BF000);
	op_plain_offset	(x,	129,	0X71000BF000);
	create_insn	(x=0X7100002B48);
	op_plain_offset	(x,	1,	0X71000BF000);
	op_plain_offset	(x,	129,	0X71000BF000);
	create_insn	(x=0X7100002B4C);
	op_plain_offset	(x,	1,	0X71000BF000);
	op_plain_offset	(x,	129,	0X71000BF000);
	create_insn	(x=0X7100002B50);
	op_plain_offset	(x,	1,	0X71000BF000);
	op_plain_offset	(x,	129,	0X71000BF000);
	create_insn	(x=0X7100002B54);
	op_plain_offset	(x,	1,	0X71000BF000);
	op_plain_offset	(x,	129,	0X71000BF000);
	create_insn	(x=0X7100002B58);
	op_plain_offset	(x,	1,	0X71000BF000);
	op_plain_offset	(x,	129,	0X71000BF000);
	create_insn	(x=0X7100002B5C);
	op_plain_offset	(x,	1,	0X71000BF000);
	op_plain_offset	(x,	129,	0X71000BF000);
	create_insn	(x=0X7100002B60);
	op_plain_offset	(x,	1,	0X71000BF000);
	op_plain_offset	(x,	129,	0X71000BF000);
	create_insn	(x=0X7100002B64);
	op_plain_offset	(x,	1,	0X71000BF000);
	op_plain_offset	(x,	129,	0X71000BF000);
	create_insn	(x=0X7100002B68);
	op_plain_offset	(x,	1,	0X71000BF000);
	op_plain_offset	(x,	129,	0X71000BF000);
	create_insn	(x=0X7100002B6C);
	op_plain_offset	(x,	1,	0X71000BF000);
	op_plain_offset	(x,	129,	0X71000BF000);
	create_insn	(x=0X7100002B70);
	op_plain_offset	(x,	1,	0X71000BF000);
	op_plain_offset	(x,	129,	0X71000BF000);
	create_insn	(x=0X7100002B74);
	op_plain_offset	(x,	1,	0X71000BF000);
	op_plain_offset	(x,	129,	0X71000BF000);
	create_insn	(x=0X7100002B78);
	op_plain_offset	(x,	1,	0X71000BF000);
	op_plain_offset	(x,	129,	0X71000BF000);
	create_insn	(x=0X7100002B7C);
	op_plain_offset	(x,	1,	0X71000BF000);
	op_plain_offset	(x,	129,	0X71000BF000);
	create_insn	(x=0X7100002B80);
	op_plain_offset	(x,	1,	0X71000BF000);
	op_plain_offset	(x,	129,	0X71000BF000);
	create_insn	(x=0X7100002B84);
	op_plain_offset	(x,	1,	0X71000BF000);
	op_plain_offset	(x,	129,	0X71000BF000);
	create_insn	(x=0X7100002B88);
	op_plain_offset	(x,	1,	0X71000BF000);
	op_plain_offset	(x,	129,	0X71000BF000);
	create_insn	(x=0X7100002B8C);
	op_plain_offset	(x,	1,	0X71000BF000);
	op_plain_offset	(x,	129,	0X71000BF000);
	create_insn	(x=0X7100002B90);
	op_plain_offset	(x,	1,	0X71000BF000);
	op_plain_offset	(x,	129,	0X71000BF000);
	create_insn	(x=0X7100002B94);
	op_plain_offset	(x,	1,	0X71000BF000);
	op_plain_offset	(x,	129,	0X71000BF000);
	create_insn	(x=0X7100002B98);
	op_plain_offset	(x,	1,	0X71000BF000);
	op_plain_offset	(x,	129,	0X71000BF000);
	create_insn	(x=0X7100002B9C);
	op_plain_offset	(x,	1,	0X71000BF000);
	op_plain_offset	(x,	129,	0X71000BF000);
	create_insn	(x=0X7100002BA0);
	op_plain_offset	(x,	1,	0X71000BF000);
	op_plain_offset	(x,	129,	0X71000BF000);
	create_insn	(x=0X7100002BA4);
	op_plain_offset	(x,	1,	0X71000BF000);
	op_plain_offset	(x,	129,	0X71000BF000);
	create_insn	(x=0X7100002BA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002BAC);
	op_stkvar	(x,	1);
	make_array	(0X7100002BB4,	0XC);
	create_insn	(x=0X7100002BC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002BC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002BCC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100002BD8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100002BDC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100002BF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002BFC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100002C08);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100002C0C,	"result",	0);
	create_insn	(x=0X7100002C18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002C1C);
	op_stkvar	(x,	1);
	create_insn	(0X7100002C24);
	create_insn	(0X7100002C2C);
	create_insn	(0X7100002C30);
	create_insn	(x=0X7100002C34);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100002C3C);
	op_plain_offset	(x,	1,	0X710019A008);
	op_plain_offset	(x,	129,	0X710019A008);
	make_array	(0X7100002C44,	0XC);
	create_insn	(0X7100002C50);
	create_insn	(x=0X7100002C54);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100002C5C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100002C60);
	op_plain_offset	(x,	1,	0X710019A008);
	op_plain_offset	(x,	129,	0X710019A008);
	create_insn	(0X7100002C68);
	make_array	(0X7100002C6C,	0X4);
	create_insn	(0X7100002C70);
	create_insn	(x=0X7100002C74);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100002C7C);
	op_plain_offset	(x,	1,	0X710019A008);
	op_plain_offset	(x,	129,	0X710019A008);
	make_array	(0X7100002C84,	0XC);
	create_insn	(0X7100002C90);
	set_name	(0X7100002C90,	"delete");
	create_insn	(x=0X7100002C94);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100002C9C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100002CA0);
	op_plain_offset	(x,	1,	0X710019A008);
	op_plain_offset	(x,	129,	0X710019A008);
	create_insn	(0X7100002CA8);
	make_array	(0X7100002CAC,	0X4);
	create_insn	(x=0X7100002CB0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100002CB8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100002CBC);
	op_plain_offset	(x,	1,	0X7100195000);
	op_plain_offset	(x,	129,	0X7100195000);
	make_array	(0X7100002CC4,	0XC);
	create_insn	(x=0X7100002CD0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100002CD8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100002CDC);
	op_plain_offset	(x,	1,	0X7100195000);
	op_plain_offset	(x,	129,	0X7100195000);
	make_array	(0X7100002CE4,	0XC);
	create_insn	(x=0X7100002CF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002CF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002D00);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100002D08);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100002D18);
	op_plain_offset	(x,	1,	0X7100195000);
	op_plain_offset	(x,	129,	0X7100195000);
	create_insn	(x=0X7100002D20);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100002D24);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100002D28);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100002D2C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100002D30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002D34);
	op_stkvar	(x,	1);
	create_insn	(0X7100002D3C);
	create_insn	(0X7100002D40);
	set_name	(0X7100002D40,	"nullsub_11");
	make_array	(0X7100002D44,	0XC);
	create_insn	(0X7100002D50);
	set_name	(0X7100002D50,	"nnMain");
	create_insn	(x=0X7100002D54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002D60);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100002D84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002D94);
	op_stkvar	(x,	1);
	set_cmt	(0X7100002D9C,	"result",	0);
	create_insn	(x=0X7100002D9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002DA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002DB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002DB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002DBC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100002DC0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100002DCC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100002DD0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100002DD8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100002DDC);
	op_plain_offset	(x,	1,	0X710019A008);
	op_plain_offset	(x,	129,	0X710019A008);
	create_insn	(x=0X7100002DE0);
	op_plain_offset	(x,	1,	0X710019A008);
	op_plain_offset	(x,	129,	0X710019A008);
	create_insn	(x=0X7100002DE8);
	op_plain_offset	(x,	1,	0X710019A008);
	op_plain_offset	(x,	129,	0X710019A008);
	create_insn	(x=0X7100002DEC);
	op_plain_offset	(x,	1,	0X710019A008);
	op_plain_offset	(x,	129,	0X710019A008);
	create_insn	(x=0X7100002DF4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100002E04);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100002E14);
	op_plain_offset	(x,	1,	0X710019A008);
	op_plain_offset	(x,	129,	0X710019A008);
	create_insn	(x=0X7100002E18);
	op_plain_offset	(x,	1,	0X710019A008);
	op_plain_offset	(x,	129,	0X710019A008);
	create_insn	(x=0X7100002E20);
	op_plain_offset	(x,	1,	0X710019A008);
	op_plain_offset	(x,	129,	0X710019A008);
	create_insn	(x=0X7100002E24);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100002E2C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100002E30);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100002E44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002E48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002E50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002E54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002E5C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100002E64);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100002E80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002E84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002E8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002E90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002E98);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100002EA0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100002EBC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100002EC4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100002EC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002ECC);
	op_plain_offset	(x,	1,	0X710019A008);
	op_plain_offset	(x,	129,	0X710019A008);
	create_insn	(x=0X7100002ED0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002ED8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002EDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002EE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002FEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002FF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100002FF4);
	op_stkvar	(x,	1);
	make_array	(0X7100002FFC,	0X4);
	create_insn	(x=0X7100003000);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100003008);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710000300C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100003010);
	op_plain_offset	(x,	1,	0X710019A008);
	op_plain_offset	(x,	129,	0X710019A008);
	make_array	(0X7100003018,	0X8);
	create_insn	(0X7100003020);
	set_name	(0X7100003020,	"SetupService_notif");
	create_insn	(x=0X7100003024);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003028);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000302C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003030);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003034);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003040);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003048);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100003068);
	op_plain_offset	(x,	1,	0X71001AE448);
	op_plain_offset	(x,	129,	0X71001AE448);
	create_insn	(x=0X710000306C);
	op_plain_offset	(x,	1,	0X710019E440);
	op_plain_offset	(x,	129,	0X710019E440);
	create_insn	(x=0X7100003074);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710000307C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710000308C);
	op_plain_offset	(x,	1,	0X710019E440);
	op_plain_offset	(x,	129,	0X710019E440);
	create_insn	(x=0X71000030A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100003120);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100003124);
	op_plain_offset	(x,	1,	0X710019E440);
	op_plain_offset	(x,	129,	0X710019E440);
	create_insn	(x=0X710000312C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100003158);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100003160);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100003174);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100003178);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000317C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100003184);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710000318C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100003190);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003194);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000031A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000031A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000031BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000031D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000031D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000031E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000031E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000031E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000031F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000031F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100003200);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003204);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000320C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003214);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003228);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000323C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100003248);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710000324C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710000326C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100003274,	"result",	0);
	set_cmt	(0X710000327C,	"this",	0);
	create_insn	(x=0X710000327C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100003294);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100003298);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000032A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000032BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000032C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X71000032CC,	"result",	0);
	set_cmt	(0X71000032D4,	"this",	0);
	create_insn	(x=0X71000032D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000032E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000032EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000032F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000032F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000032F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003304);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003308);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003310);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003314);
	op_stkvar	(x,	1);
	create_insn	(0X7100003384);
	create_insn	(0X7100003390);
	create_insn	(0X710000339C);
	create_insn	(0X71000033A8);
	create_insn	(0X71000033B4);
	create_insn	(0X71000033C0);
	create_insn	(0X71000033CC);
	create_insn	(0X71000033D8);
	create_insn	(0X71000033E4);
	create_insn	(0X71000033F0);
	create_insn	(x=0X7100003418);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000341C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003424);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003428);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000342C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003458);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000346C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003470);
	op_stkvar	(x,	1);
	create_insn	(0X7100003478);
	create_insn	(0X7100003484);
	set_name	(0X7100003484,	"nullsub_12");
	create_insn	(x=0X7100003488);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000034A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000034AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000034B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000034BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000034F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000034F8);
	op_stkvar	(x,	1);
	create_insn	(0X7100003500);
	create_insn	(0X710000350C);
	create_insn	(x=0X7100003534);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003538);
	op_stkvar	(x,	1);
	create_insn	(0X7100003540);
	create_insn	(0X7100003548);
	set_name	(0X7100003548,	"nullsub_13");
	create_insn	(x=0X710000354C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003550);
	op_stkvar	(x,	1);
	create_insn	(0X71000035C0);
	create_insn	(0X71000035C8);
	create_insn	(0X71000035D0);
	create_insn	(0X71000035D8);
	create_insn	(0X71000035E0);
	create_insn	(0X71000035E8);
	create_insn	(0X71000035F0);
	create_insn	(0X71000035F8);
	create_insn	(0X7100003600);
	create_insn	(0X7100003608);
	create_insn	(x=0X7100003630);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003634);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000363C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003640);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003644);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003670);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003684);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003688);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003690);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003694);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000036A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000036AC);
	op_stkvar	(x,	1);
	create_insn	(0X71000036B4);
	create_insn	(0X71000036C0);
	set_name	(0X71000036C0,	"nullsub_14");
	create_insn	(x=0X71000036C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000036C8);
	op_stkvar	(x,	1);
	create_insn	(0X7100003738);
	create_insn	(0X7100003740);
	create_insn	(0X7100003748);
	create_insn	(0X7100003750);
	create_insn	(0X7100003758);
	create_insn	(0X7100003760);
	create_insn	(0X7100003768);
	create_insn	(0X7100003770);
	create_insn	(0X7100003778);
	create_insn	(0X7100003780);
	create_insn	(x=0X71000037A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000037AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000037B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000037B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000037BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000037E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000037FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003800);
	op_stkvar	(x,	1);
	create_insn	(0X7100003808);
	create_insn	(x=0X7100003814);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003818);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003820);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100003928,	"result",	0);
	set_cmt	(0X7100003930,	"a1",	0);
	create_insn	(x=0X7100003934);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003938);
	op_stkvar	(x,	1);
	create_insn	(0X7100003940);
	set_name	(0X7100003940,	"nullsub_15");
	create_insn	(0X7100003944);
	set_name	(0X7100003944,	"j_delete");
	create_insn	(0X7100003948);
	create_insn	(0X7100003950);
	create_insn	(0X7100003958);
	create_insn	(0X7100003964);
	set_name	(0X7100003964,	"nullsub_16");
	create_insn	(0X7100003968);
	set_name	(0X7100003968,	"nullsub_17");
	create_insn	(0X710000396C);
	create_insn	(0X7100003974);
	create_insn	(0X710000397C);
	create_insn	(0X7100003984);
	create_insn	(x=0X7100003988);
	op_hex		(x,	1);
	create_insn	(0X7100003990);
	create_insn	(x=0X7100003994);
	op_hex		(x,	1);
	create_insn	(0X710000399C);
	create_insn	(0X71000039A4);
	create_insn	(0X71000039B8);
	create_insn	(0X71000039C8);
	create_insn	(0X71000039D0);
	create_insn	(x=0X71000039D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000039E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000039E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000039F0);
	op_stkvar	(x,	1);
	create_insn	(0X71000039FC);
	create_insn	(0X7100003A04);
	create_insn	(0X7100003A0C);
	create_insn	(x=0X7100003A10);
	op_hex		(x,	1);
	create_insn	(0X7100003A18);
	create_insn	(x=0X7100003A20);
	op_hex		(x,	1);
	create_insn	(0X7100003A30);
	create_insn	(x=0X7100003A34);
	op_hex		(x,	1);
	create_insn	(0X7100003A3C);
	create_insn	(x=0X7100003A40);
	op_hex		(x,	1);
	create_insn	(0X7100003A48);
	create_insn	(0X7100003A50);
	create_insn	(0X7100003A58);
	create_insn	(0X7100003A60);
	create_insn	(x=0X7100003A64);
	op_hex		(x,	1);
	make_array	(0X7100003A6C,	0X4);
	create_insn	(x=0X7100003A70);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X7100003A70,	"NotificationIpcServer_ThreadFunc");
	create_insn	(0X7100003A7C);
	create_insn	(x=0X7100003A80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003A84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003A90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003A9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003AA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003AD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003AE4);
	op_hex		(x,	1);
	create_insn	(0X7100003AF4);
	create_insn	(x=0X7100003AFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003B00);
	op_stkvar	(x,	1);
	create_insn	(0X7100003B0C);
	create_insn	(x=0X7100003B14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003B18);
	op_stkvar	(x,	1);
	create_insn	(0X7100003B24);
	create_insn	(x=0X7100003B28);
	op_hex		(x,	1);
	create_insn	(x=0X7100003B44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003B78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003B7C);
	op_stkvar	(x,	1);
	create_insn	(0X7100003B88);
	create_insn	(0X7100003B90);
	create_insn	(x=0X7100003B94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003B98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003B9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003BA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003BAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003BB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003BBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003BC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003BD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003BE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003BE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003BE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003BEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003BF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003BF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003BF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003C30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003C50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003C5C);
	op_hex		(x,	1);
	create_insn	(x=0X7100003C9C);
	op_stkvar	(x,	1);
	create_insn	(0X7100003CAC);
	create_insn	(x=0X7100003CB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003CBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003CC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003CC4);
	op_stkvar	(x,	1);
	create_insn	(0X7100003CD0);
	create_insn	(x=0X7100003CE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003CF4);
	op_stkvar	(x,	1);
	create_insn	(0X7100003D00);
	create_insn	(0X7100003D08);
	create_insn	(x=0X7100003D0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003D10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003D14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003D18);
	op_stkvar	(x,	1);
	set_cmt	(0X7100003D20,	"switch 41 cases",	0);
	create_insn	(x=0X7100003D38);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100003D3C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100003D58,	"switch jump",	0);
	set_cmt	(0X7100003D5C,	"jumptable 0000007100003D58 case 500",	1);
	create_insn	(0X7100003D5C);
	create_insn	(x=0X7100003D64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003D70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003D74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003D78);
	op_stkvar	(x,	1);
	set_cmt	(0X7100003D84,	"jumptable 0000007100003D58 case 510",	1);
	create_insn	(0X7100003D84);
	create_insn	(x=0X7100003D8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003D98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003D9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003DA0);
	op_stkvar	(x,	1);
	set_cmt	(0X7100003DAC,	"jumptable 0000007100003D58 case 520",	1);
	create_insn	(0X7100003DAC);
	create_insn	(x=0X7100003DB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003DC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003DC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003DC8);
	op_stkvar	(x,	1);
	set_cmt	(0X7100003DD4,	"jumptable 0000007100003D58 case 530",	1);
	create_insn	(0X7100003DD4);
	create_insn	(x=0X7100003DDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003DE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003DEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003DF0);
	op_stkvar	(x,	1);
	set_cmt	(0X7100003DFC,	"jumptable 0000007100003D58 case 540",	1);
	create_insn	(0X7100003DFC);
	create_insn	(x=0X7100003E04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003E08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003E0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003E14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003E18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003E20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003E24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003E28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003E2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003E30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003E34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003E38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003E78);
	op_hex		(x,	1);
	create_insn	(x=0X7100003EB8);
	op_stkvar	(x,	1);
	create_insn	(0X7100003EC8);
	set_cmt	(0X7100003ED0,	"jumptable 0000007100003D58 default case, cases 501-509,511-519,521-529,531-539",	1);
	set_name	(0X7100003ED0,	"def_7100003D58");
	create_insn	(x=0X7100003ED4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003ED8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003EDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003EE0);
	op_stkvar	(x,	1);
	create_insn	(0X7100003EEC);
	create_insn	(x=0X7100003F00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003F10);
	op_stkvar	(x,	1);
	create_insn	(0X7100003F1C);
	create_insn	(0X7100003F24);
	create_insn	(x=0X7100003F28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003F2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003F30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003F34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003F40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003F50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003F58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003F64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003F70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003F7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003F80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003F84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003F90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003F94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003F98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003F9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003FA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003FA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003FBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003FC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003FE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003FE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003FEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003FF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100003FF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004008);
	op_hex		(x,	1);
	create_insn	(x=0X7100004034);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004048);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004054);
	op_stkvar	(x,	1);
	create_insn	(0X7100004060);
	create_insn	(x=0X7100004064);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004074);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004080);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004084);
	op_hex		(x,	1);
	create_insn	(0X71000040A0);
	create_insn	(x=0X71000040AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000040B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000040B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000040B8);
	op_stkvar	(x,	1);
	create_insn	(0X71000040C4);
	create_insn	(x=0X71000040CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000040D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000040E4);
	op_stkvar	(x,	1);
	create_insn	(0X71000040F4);
	create_insn	(x=0X71000040F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000040FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004100);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004104);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004110);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004120);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004124);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004134);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000413C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004148);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000414C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004150);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000415C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004160);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004164);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004168);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000416C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004170);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004188);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000041AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000041B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000041BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000041CC);
	op_hex		(x,	1);
	create_insn	(x=0X710000420C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004218);
	op_stkvar	(x,	1);
	create_insn	(0X7100004224);
	create_insn	(x=0X7100004238);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004244);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004248);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004258);
	op_stkvar	(x,	1);
	create_insn	(0X7100004270);
	create_insn	(x=0X710000427C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004280);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004284);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004288);
	op_stkvar	(x,	1);
	create_insn	(0X7100004294);
	create_insn	(x=0X7100004298);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000429C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000042A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000042A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000042B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000042B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000042C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000042CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000042DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000042E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000042E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000042F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000042F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000042F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000042FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004300);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004304);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004308);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004320);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004328);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004348);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000435C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000436C);
	op_hex		(x,	1);
	create_insn	(x=0X71000043AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000043B8);
	op_stkvar	(x,	1);
	create_insn	(0X71000043C4);
	create_insn	(x=0X71000043D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000043E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000043E8);
	op_hex		(x,	1);
	create_insn	(0X7100004404);
	create_insn	(x=0X7100004410);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004414);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004418);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000441C);
	op_stkvar	(x,	1);
	create_insn	(0X7100004428);
	create_insn	(x=0X7100004430);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004434);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004448);
	op_stkvar	(x,	1);
	create_insn	(0X7100004458);
	create_insn	(x=0X710000445C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004460);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004464);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004468);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004478);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000447C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004488);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004490);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000044A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000044A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000044AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000044B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000044B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000044BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000044C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000044C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000044C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000044CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000044FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004514);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004528);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000452C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004530);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000453C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000454C);
	op_hex		(x,	1);
	create_insn	(x=0X7100004578);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000458C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004598);
	op_stkvar	(x,	1);
	create_insn	(0X71000045A4);
	create_insn	(x=0X71000045A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000045B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000045C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000045C8);
	op_hex		(x,	1);
	create_insn	(0X71000045E0);
	create_insn	(x=0X71000045EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000045F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000045F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000045F8);
	op_stkvar	(x,	1);
	create_insn	(0X7100004604);
	create_insn	(x=0X710000460C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004610);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004624);
	op_stkvar	(x,	1);
	create_insn	(0X7100004634);
	create_insn	(x=0X7100004638);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000463C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004648);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004654);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000465C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004688);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004694);
	op_hex		(x,	1);
	create_insn	(x=0X71000046B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000046B4);
	op_stkvar	(x,	1);
	create_insn	(0X71000046C0);
	create_insn	(x=0X71000046C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000046CC);
	op_stkvar	(x,	1);
	create_insn	(0X71000046D8);
	create_insn	(x=0X71000046E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000046E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000046F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004724);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004728);
	op_stkvar	(x,	1);
	create_insn	(0X7100004734);
	create_insn	(0X710000473C);
	create_insn	(x=0X7100004740);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004744);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004748);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000474C);
	op_stkvar	(x,	1);
	set_cmt	(0X7100004778,	"switch 21 cases",	0);
	create_insn	(x=0X7100004784);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710000478C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100004798,	"switch jump",	0);
	set_cmt	(0X710000479C,	"jumptable 0000007100004798 case 2000",	1);
	create_insn	(0X710000479C);
	create_insn	(x=0X71000047A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000047B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000047B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000047B8);
	op_stkvar	(x,	1);
	set_cmt	(0X71000047C4,	"switch 41 cases",	0);
	create_insn	(0X71000047C4);
	create_insn	(x=0X71000047D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000047D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X71000047E4,	"switch jump",	0);
	set_cmt	(0X71000047E8,	"jumptable 00000071000047E4 case 1000",	1);
	create_insn	(0X71000047E8);
	create_insn	(x=0X71000047F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000047FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004800);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004804);
	op_stkvar	(x,	1);
	create_insn	(0X7100004810);
	create_insn	(x=0X710000483C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004840);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004844);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000484C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004850);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004858);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000485C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004860);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004864);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004868);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000486C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004870);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000048B0);
	op_hex		(x,	1);
	create_insn	(x=0X71000048F0);
	op_stkvar	(x,	1);
	set_cmt	(0X7100004900,	"jumptable 00000071000047E4 default case",	1);
	create_insn	(0X7100004900);
	set_name	(0X7100004900,	"def_71000047E4");
	create_insn	(x=0X7100004918);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004924);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004928);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000492C);
	op_stkvar	(x,	1);
	create_insn	(0X7100004938);
	create_insn	(x=0X7100004958);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004964);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004968);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000496C);
	op_stkvar	(x,	1);
	set_cmt	(0X7100004978,	"jumptable 00000071000047E4 case 1010",	1);
	create_insn	(0X7100004978);
	create_insn	(x=0X7100004980);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000498C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004990);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004994);
	op_stkvar	(x,	1);
	set_cmt	(0X71000049A0,	"jumptable 00000071000047E4 case 1020",	1);
	create_insn	(0X71000049A0);
	create_insn	(x=0X71000049A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000049B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000049B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000049BC);
	op_stkvar	(x,	1);
	set_cmt	(0X71000049C8,	"jumptable 00000071000047E4 case 1030",	1);
	create_insn	(0X71000049C8);
	create_insn	(x=0X71000049CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000049D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000049D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000049DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000049E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000049E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000049EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000049F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000049F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000049F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000049FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004A00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004A30);
	op_hex		(x,	1);
	create_insn	(x=0X7100004A78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004A84);
	op_stkvar	(x,	1);
	set_cmt	(0X7100004A90,	"jumptable 00000071000047E4 case 1040",	1);
	create_insn	(0X7100004A90);
	create_insn	(x=0X7100004A98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004AA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004AA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004AAC);
	op_stkvar	(x,	1);
	set_cmt	(0X7100004AB8,	"jumptable 0000007100004798 case 2001",	1);
	create_insn	(0X7100004AB8);
	create_insn	(x=0X7100004AC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004ACC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004AD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004AD4);
	op_stkvar	(x,	1);
	set_cmt	(0X7100004AE0,	"jumptable 0000007100004798 case 2010",	1);
	create_insn	(0X7100004AE0);
	create_insn	(x=0X7100004AE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004AF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004AF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004AFC);
	op_stkvar	(x,	1);
	set_cmt	(0X7100004B08,	"jumptable 0000007100004798 case 2020",	1);
	create_insn	(0X7100004B08);
	create_insn	(x=0X7100004B10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004B1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004B20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004B24);
	op_stkvar	(x,	1);
	create_insn	(0X7100004B30);
	create_insn	(x=0X7100004B38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004B44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004B48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004B4C);
	op_stkvar	(x,	1);
	create_insn	(0X7100004B58);
	create_insn	(x=0X7100004B60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004B6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004B70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004B74);
	op_stkvar	(x,	1);
	set_cmt	(0X7100004B80,	"jumptable 0000007100004798 default case, cases 2002-2009,2011-2019\njumptable 00000071000047E4 cases 1001-1009,1011-1019,1021-1029,1031-1039",	1);
	create_insn	(0X7100004B80);
	set_name	(0X7100004B80,	"def_7100004798");
	create_insn	(x=0X7100004B88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004B94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004B98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004B9C);
	op_stkvar	(x,	1);
	create_insn	(0X7100004BA8);
	create_insn	(x=0X7100004BB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004BBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004BC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004BC4);
	op_stkvar	(x,	1);
	create_insn	(0X7100004BD0);
	create_insn	(0X7100004BDC);
	create_insn	(x=0X7100004BF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004BFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004C10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004C14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004C18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004C1C);
	op_stkvar	(x,	1);
	create_insn	(0X7100004C28);
	create_insn	(x=0X7100004C3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004C4C);
	op_stkvar	(x,	1);
	create_insn	(0X7100004C58);
	create_insn	(0X7100004C64);
	create_insn	(x=0X7100004C68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004C6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004C70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004C74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004C84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004C88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004C94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004C9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004CAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004CB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004CB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004CB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004CBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004CC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004CC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004CC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004CE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004D00);
	op_hex		(x,	1);
	create_insn	(x=0X7100004D40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004D4C);
	op_stkvar	(x,	1);
	create_insn	(0X7100004D58);
	create_insn	(x=0X7100004D6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004D78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004D7C);
	op_hex		(x,	1);
	create_insn	(0X7100004D98);
	create_insn	(x=0X7100004DA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004DA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004DAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004DB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004DBC);
	op_stkvar	(x,	1);
	create_insn	(0X7100004DCC);
	create_insn	(x=0X7100004DD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004DD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004DD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004DDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004DE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004DF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004DF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004E0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004E10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004E18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004E1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004E24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004E28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004E2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004E30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004E34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004E38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004E3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004E6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004E84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004E98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004E9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004EA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004EB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004EC0);
	op_hex		(x,	1);
	create_insn	(x=0X7100004EEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004F00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004F0C);
	op_stkvar	(x,	1);
	create_insn	(0X7100004F18);
	create_insn	(x=0X7100004F1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004F2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004F38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004F3C);
	op_hex		(x,	1);
	create_insn	(0X7100004F54);
	create_insn	(x=0X7100004F60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004F64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004F68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004F6C);
	op_stkvar	(x,	1);
	create_insn	(0X7100004F78);
	create_insn	(x=0X7100004F80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004F84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004F98);
	op_stkvar	(x,	1);
	create_insn	(0X7100004FA8);
	create_insn	(x=0X7100004FAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004FB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004FB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004FB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004FC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004FCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004FD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004FE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004FEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004FF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004FF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100004FFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005004);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005008);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000500C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005010);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005014);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005018);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005030);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000505C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005068);
	op_hex		(x,	1);
	create_insn	(x=0X71000050A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000050B4);
	op_stkvar	(x,	1);
	create_insn	(0X71000050C0);
	create_insn	(x=0X71000050D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000050E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000050E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000050F4);
	op_stkvar	(x,	1);
	create_insn	(0X710000510C);
	create_insn	(x=0X7100005118);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000511C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005120);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005124);
	op_stkvar	(x,	1);
	create_insn	(0X7100005130);
	create_insn	(x=0X7100005134);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005138);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000513C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005140);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000514C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005158);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000515C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005170);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005174);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000517C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005180);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005184);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005188);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000518C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005190);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005194);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005198);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000051B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000051B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000051C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000051CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000051DC);
	op_hex		(x,	1);
	create_insn	(x=0X7100005208);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000521C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005228);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005230);
	op_stkvar	(x,	1);
	create_insn	(0X710000523C);
	create_insn	(x=0X7100005240);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005250);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000525C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005260);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005270);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005274);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005278);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005280);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100005284);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005298);
	op_stkvar	(x,	1);
	create_insn	(0X71000052A4);
	create_insn	(x=0X71000052AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000052C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000052D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000052DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000052E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000052E4);
	op_stkvar	(x,	1);
	create_insn	(0X71000052F0);
	create_insn	(x=0X71000052F8);
	op_stkvar	(x,	1);
	create_insn	(0X7100005304);
	create_insn	(x=0X7100005308);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000530C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005310);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005314);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005324);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005328);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005334);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000533C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000534C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005350);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005354);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005358);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000535C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005360);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005364);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005368);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000053A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000053A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000053A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000053AC);
	op_hex		(x,	1);
	create_insn	(x=0X71000053BC);
	op_hex		(x,	1);
	create_insn	(x=0X71000053E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000053FC);
	op_stkvar	(x,	1);
	create_insn	(0X710000540C);
	create_insn	(x=0X7100005418);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000541C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005420);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005424);
	op_stkvar	(x,	1);
	create_insn	(0X7100005430);
	create_insn	(x=0X7100005434);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005444);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005454);
	op_stkvar	(x,	1);
	create_insn	(0X7100005460);
	create_insn	(0X7100005468);
	create_insn	(x=0X710000546C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005470);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005474);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005478);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005488);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000548C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005498);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000054A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000054B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000054B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000054B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000054BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000054C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000054C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000054C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000054CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000054E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000054E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000054EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000054F0);
	op_stkvar	(x,	1);
	create_insn	(0X71000054FC);
	create_insn	(x=0X7100005514);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000552C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005538);
	op_hex		(x,	1);
	create_insn	(x=0X7100005578);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005584);
	op_stkvar	(x,	1);
	create_insn	(0X7100005590);
	create_insn	(0X7100005598);
	create_insn	(x=0X71000055AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000055B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000055BC);
	op_hex		(x,	1);
	create_insn	(0X71000055D4);
	create_insn	(x=0X71000055E0);
	op_stkvar	(x,	1);
	create_insn	(0X71000055F0);
	create_insn	(x=0X71000055F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000055F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000055FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005600);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005610);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005614);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005620);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005628);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005638);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000563C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005644);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000564C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005654);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005658);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000565C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005660);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005664);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005668);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000568C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000056C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000056CC);
	op_hex		(x,	1);
	create_insn	(x=0X710000570C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005718);
	op_stkvar	(x,	1);
	create_insn	(0X7100005724);
	create_insn	(x=0X7100005730);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005734);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005738);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000573C);
	op_stkvar	(x,	1);
	create_insn	(0X7100005748);
	create_insn	(x=0X710000575C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005768);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000576C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000577C);
	op_stkvar	(x,	1);
	create_insn	(0X7100005794);
	create_insn	(0X710000579C);
	create_insn	(x=0X71000057A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000057A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000057A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000057AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000057B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000057BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000057CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000057D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000057E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000057EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000057F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000057FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005800);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000580C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005810);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005814);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005818);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000581C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005820);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005850);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005868);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000587C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005884);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005894);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000058A4);
	op_hex		(x,	1);
	create_insn	(x=0X71000058E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000058F0);
	op_stkvar	(x,	1);
	create_insn	(0X71000058FC);
	create_insn	(x=0X7100005910);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000591C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005920);
	op_hex		(x,	1);
	create_insn	(0X7100005938);
	create_insn	(x=0X7100005944);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005948);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000594C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005950);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005954);
	op_stkvar	(x,	1);
	create_insn	(0X7100005960);
	create_insn	(x=0X7100005968);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000596C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005980);
	op_stkvar	(x,	1);
	create_insn	(0X7100005990);
	create_insn	(x=0X7100005994);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005998);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000599C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000059A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000059B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000059B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000059C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000059C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000059D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000059DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000059E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000059E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000059E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000059EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000059F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000059F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005A2C);
	op_hex		(x,	1);
	create_insn	(x=0X7100005A3C);
	op_hex		(x,	1);
	create_insn	(x=0X7100005A7C);
	op_stkvar	(x,	1);
	create_insn	(0X7100005A8C);
	create_insn	(x=0X7100005A98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005A9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005AA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005AA4);
	op_stkvar	(x,	1);
	create_insn	(0X7100005AB0);
	create_insn	(x=0X7100005AC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005AD4);
	op_stkvar	(x,	1);
	create_insn	(0X7100005AE0);
	create_insn	(0X7100005AE8);
	create_insn	(x=0X7100005AEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005AF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005AF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005AF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005B08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005B0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005B18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005B20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005B30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005B34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005B38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005B3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005B40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005B44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005B48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005B4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005B7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005B94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005BA0);
	op_hex		(x,	1);
	create_insn	(x=0X7100005BCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005BE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005BEC);
	op_stkvar	(x,	1);
	create_insn	(0X7100005BF8);
	create_insn	(x=0X7100005BFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005C0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005C18);
	op_stkvar	(x,	1);
	create_insn	(0X7100005C30);
	create_insn	(x=0X7100005C3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005C40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005C44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005C48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005C54);
	op_stkvar	(x,	1);
	create_insn	(0X7100005C64);
	create_insn	(x=0X7100005C68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005C6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005C70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005C74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005C84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005C88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005C94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005C9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005CAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005CB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005CB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005CB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005CBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005CC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005CC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005CC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005D08);
	op_hex		(x,	1);
	create_insn	(x=0X7100005D48);
	op_stkvar	(x,	1);
	create_insn	(0X7100005D58);
	create_insn	(x=0X7100005D64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005D68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005D6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005D70);
	op_stkvar	(x,	1);
	create_insn	(0X7100005D7C);
	create_insn	(x=0X7100005D90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005DA0);
	op_stkvar	(x,	1);
	create_insn	(0X7100005DAC);
	create_insn	(0X7100005DB4);
	create_insn	(x=0X7100005DB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005DBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005DC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005DC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005DD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005DD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005DE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005DEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005DFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005E00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005E04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005E08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005E0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005E10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005E14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005E18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005E38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005E50);
	op_hex		(x,	1);
	create_insn	(x=0X7100005E90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005E9C);
	op_stkvar	(x,	1);
	create_insn	(0X7100005EA8);
	create_insn	(x=0X7100005EBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005EC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005ECC);
	op_hex		(x,	1);
	create_insn	(0X7100005EE8);
	create_insn	(x=0X7100005EF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005EF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005EFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005F00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005F0C);
	op_stkvar	(x,	1);
	create_insn	(0X7100005F1C);
	create_insn	(x=0X7100005F20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005F24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005F28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005F2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005F3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005F40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005F4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005F54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005F64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005F68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005F6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005F70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005F74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005F78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005F7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005F80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005FB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005FC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005FD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100005FDC);
	op_hex		(x,	1);
	create_insn	(x=0X710000601C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006028);
	op_stkvar	(x,	1);
	create_insn	(0X7100006034);
	create_insn	(x=0X7100006048);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006054);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006058);
	op_hex		(x,	1);
	create_insn	(0X7100006070);
	create_insn	(x=0X710000607C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006080);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006084);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006088);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006094);
	op_stkvar	(x,	1);
	create_insn	(0X71000060A4);
	create_insn	(x=0X71000060A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000060AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000060B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000060C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000060CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000060EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000060FC);
	op_hex		(x,	1);
	create_insn	(0X710000610C);
	create_insn	(x=0X7100006114);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006118);
	op_stkvar	(x,	1);
	create_insn	(0X7100006124);
	create_insn	(x=0X710000612C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006130);
	op_stkvar	(x,	1);
	create_insn	(0X710000613C);
	create_insn	(x=0X7100006150);
	op_hex		(x,	1);
	create_insn	(x=0X710000616C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000061A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000061A4);
	op_stkvar	(x,	1);
	create_insn	(0X71000061B0);
	create_insn	(0X71000061B8);
	create_insn	(x=0X71000061BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000061C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000061C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000061C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000061D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000061E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000061E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000061F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000061FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006200);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006204);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000620C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006210);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006214);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006218);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000621C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006220);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006224);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006244);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006248);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006260);
	op_hex		(x,	1);
	create_insn	(x=0X71000062A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000062AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000062B4);
	op_stkvar	(x,	1);
	create_insn	(0X71000062C0);
	create_insn	(x=0X71000062D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000062E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000062F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006308);
	op_stkvar	(x,	1);
	create_insn	(0X7100006314);
	create_insn	(x=0X710000631C);
	op_stkvar	(x,	1);
	set_cmt	(0X7100006324,	"result",	0);
	create_insn	(x=0X7100006324);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006330);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006334);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006338);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000633C);
	op_stkvar	(x,	1);
	create_insn	(0X7100006348);
	create_insn	(x=0X7100006350);
	op_stkvar	(x,	1);
	make_array	(0X710000635C,	0X4);
	create_insn	(x=0X7100006360);
	op_stkvar	(x,	1);
	set_name	(0X7100006360,	"NotificationEventHandler_ThreadFunc");
	create_insn	(x=0X7100006364);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006368);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000636C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006370);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006374);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006388);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000639C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000063A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000063A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000063B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000063C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000063D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000063EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000063F0);
	op_stkvar	(x,	1);
	set_cmt	(0X71000063F8,	"a1",	0);
	create_insn	(x=0X71000063F8);
	op_stkvar	(x,	1);
	set_cmt	(0X71000063FC,	"a2",	0);
	create_insn	(x=0X71000063FC);
	op_stkvar	(x,	1);
	set_cmt	(0X7100006400,	"a3",	0);
	create_insn	(x=0X7100006400);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006408);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006410);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006414);
	op_hex		(x,	1);
	create_insn	(x=0X7100006420);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006438);
	op_stkvar	(x,	1);
	create_insn	(0X7100006448);
	create_insn	(x=0X7100006458);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006464);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006470);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006474);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006480);
	op_stkvar	(x,	1);
	set_cmt	(0X7100006490,	"a1",	0);
	create_insn	(x=0X7100006490);
	op_stkvar	(x,	1);
	set_cmt	(0X7100006494,	"a2",	0);
	create_insn	(x=0X7100006494);
	op_stkvar	(x,	1);
	set_cmt	(0X7100006498,	"a3",	0);
	create_insn	(x=0X7100006498);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000064A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000064A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000064B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000064B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000064C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000064C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000064D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000064E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000064F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000064F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006500);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006508);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006510);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006518);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000651C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006524);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000652C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006538);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006540);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006544);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006558);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006560);
	op_hex		(x,	1);
	create_insn	(x=0X7100006564);
	op_stkvar	(x,	1);
	create_insn	(0X710000656C);
	create_insn	(x=0X7100006570);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006574);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006580);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006588);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006594);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006598);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000065A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000065AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000065B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000065B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000065C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000065C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000065D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000065D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000065DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000065E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000065E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000065EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000065F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000065F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006600);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006608);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006610);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006618);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006620);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006628);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006630);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006638);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006640);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006648);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006650);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006658);
	op_stkvar	(x,	1);
	set_cmt	(0X7100006678,	"a1",	0);
	create_insn	(x=0X7100006678);
	op_stkvar	(x,	1);
	set_cmt	(0X710000667C,	"a2",	0);
	create_insn	(x=0X710000667C);
	op_stkvar	(x,	1);
	set_cmt	(0X7100006680,	"a3",	0);
	create_insn	(x=0X7100006680);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006688);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006690);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000066A8);
	op_stkvar	(x,	1);
	create_insn	(0X71000066B8);
	create_insn	(x=0X71000066D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000066D8);
	op_stkvar	(x,	1);
	create_insn	(0X71000066F8);
	create_insn	(x=0X7100006700);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000670C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006718);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000671C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006728);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006748);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006754);
	op_stkvar	(x,	1);
	set_cmt	(0X7100006760,	"a1",	0);
	create_insn	(x=0X7100006760);
	op_stkvar	(x,	1);
	set_cmt	(0X7100006768,	"a1",	0);
	create_insn	(x=0X7100006768);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006778);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006788);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006794);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000067A0);
	op_stkvar	(x,	1);
	create_insn	(0X71000067B0);
	create_insn	(0X71000067BC);
	create_insn	(x=0X71000067C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000067C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000067D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000067D8);
	op_stkvar	(x,	1);
	make_array	(0X71000067E4,	0XC);
	create_insn	(x=0X71000067F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000067F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000067F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006800);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100006808);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710000681C);
	op_plain_offset	(x,	1,	0X710019D050);
	op_plain_offset	(x,	129,	0X710019D050);
	create_insn	(x=0X710000683C);
	op_plain_offset	(x,	1,	0X710019D050);
	op_plain_offset	(x,	129,	0X710019D050);
	create_insn	(x=0X7100006848);
	op_plain_offset	(x,	1,	0X710019D050);
	op_plain_offset	(x,	129,	0X710019D050);
	create_insn	(x=0X7100006850);
	op_plain_offset	(x,	1,	0X710019D050);
	op_plain_offset	(x,	129,	0X710019D050);
	create_insn	(x=0X7100006854);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000685C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100006860);
	op_plain_offset	(x,	1,	0X710019D050);
	op_plain_offset	(x,	129,	0X710019D050);
	create_insn	(x=0X7100006868);
	op_plain_offset	(x,	1,	0X710019D050);
	op_plain_offset	(x,	129,	0X710019D050);
	create_insn	(x=0X7100006870);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100006874);
	op_plain_offset	(x,	1,	0X710019D050);
	op_plain_offset	(x,	129,	0X710019D050);
	create_insn	(x=0X71000068F0);
	op_hex		(x,	1);
	create_insn	(x=0X71000068F4);
	op_plain_offset	(x,	1,	0X710019D050);
	op_plain_offset	(x,	129,	0X710019D050);
	create_insn	(x=0X71000068FC);
	op_hex		(x,	1);
	create_insn	(x=0X7100006900);
	op_plain_offset	(x,	1,	0X710019D050);
	op_plain_offset	(x,	129,	0X710019D050);
	create_insn	(x=0X7100006904);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100006918);
	op_plain_offset	(x,	1,	0X710019D050);
	op_plain_offset	(x,	129,	0X710019D050);
	create_insn	(x=0X710000691C);
	op_plain_offset	(x,	1,	0X710019D050);
	op_plain_offset	(x,	129,	0X710019D050);
	create_insn	(x=0X7100006920);
	op_plain_offset	(x,	1,	0X710019D050);
	op_plain_offset	(x,	129,	0X710019D050);
	create_insn	(x=0X7100006924);
	op_plain_offset	(x,	1,	0X710019D050);
	op_plain_offset	(x,	129,	0X710019D050);
	create_insn	(x=0X7100006928);
	op_plain_offset	(x,	1,	0X710019D050);
	op_plain_offset	(x,	129,	0X710019D050);
	create_insn	(x=0X710000692C);
	op_plain_offset	(x,	1,	0X710019D050);
	op_plain_offset	(x,	129,	0X710019D050);
	create_insn	(x=0X7100006930);
	op_plain_offset	(x,	1,	0X710019D050);
	op_plain_offset	(x,	129,	0X710019D050);
	create_insn	(x=0X7100006934);
	op_plain_offset	(x,	1,	0X710019D050);
	op_plain_offset	(x,	129,	0X710019D050);
	create_insn	(x=0X7100006938);
	op_plain_offset	(x,	1,	0X710019D050);
	op_plain_offset	(x,	129,	0X710019D050);
	create_insn	(x=0X710000693C);
	op_plain_offset	(x,	1,	0X710019D050);
	op_plain_offset	(x,	129,	0X710019D050);
	create_insn	(x=0X7100006940);
	op_plain_offset	(x,	1,	0X710019D050);
	op_plain_offset	(x,	129,	0X710019D050);
	create_insn	(x=0X7100006944);
	op_plain_offset	(x,	1,	0X710019D050);
	op_plain_offset	(x,	129,	0X710019D050);
	create_insn	(x=0X7100006948);
	op_plain_offset	(x,	1,	0X710019D050);
	op_plain_offset	(x,	129,	0X710019D050);
	create_insn	(x=0X710000694C);
	op_plain_offset	(x,	1,	0X710019D050);
	op_plain_offset	(x,	129,	0X710019D050);
	create_insn	(x=0X7100006950);
	op_plain_offset	(x,	1,	0X710019D050);
	op_plain_offset	(x,	129,	0X710019D050);
	create_insn	(x=0X7100006954);
	op_plain_offset	(x,	1,	0X710019D050);
	op_plain_offset	(x,	129,	0X710019D050);
	create_insn	(x=0X7100006958);
	op_plain_offset	(x,	1,	0X710019D050);
	op_plain_offset	(x,	129,	0X710019D050);
	create_insn	(x=0X710000695C);
	op_plain_offset	(x,	1,	0X710019D050);
	op_plain_offset	(x,	129,	0X710019D050);
	create_insn	(x=0X7100006960);
	op_plain_offset	(x,	1,	0X710019D050);
	op_plain_offset	(x,	129,	0X710019D050);
	create_insn	(x=0X7100006964);
	op_plain_offset	(x,	1,	0X710019D050);
	op_plain_offset	(x,	129,	0X710019D050);
	create_insn	(x=0X7100006968);
	op_plain_offset	(x,	1,	0X710019D050);
	op_plain_offset	(x,	129,	0X710019D050);
	create_insn	(x=0X710000696C);
	op_plain_offset	(x,	1,	0X710019D050);
	op_plain_offset	(x,	129,	0X710019D050);
	create_insn	(x=0X7100006970);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006974);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000697C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006980);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006984);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006988);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000698C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006990);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006994);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006998);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000699C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000069A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000069A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000069C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000069C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000069CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000069D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000069D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000069D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000069DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000069E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000069E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000069E8);
	op_stkvar	(x,	1);
	create_insn	(0X71000069F0);
	create_byte	(0X71000069F8);
	make_array	(0X71000069F8,	0X4);
	create_insn	(0X71000069FC);
	make_array	(0X7100006A18,	0X8);
	create_insn	(0X7100006A20);
	make_array	(0X7100006A24,	0XC);
	create_insn	(0X7100006A30);
	create_insn	(x=0X7100006A34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006A38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006A3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006A40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006A44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006A48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006A50);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100006A54);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100006A5C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100006AB0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100006AC8);
	op_hex		(x,	1);
	create_insn	(x=0X7100006AD4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100006AF4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7100006B04);
	create_insn	(x=0X7100006B08);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100006B18);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100006B20);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100006B24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006B38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006B3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006B4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006B58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006B64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006BCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006BE0);
	op_hex		(x,	1);
	create_insn	(x=0X7100006BEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006C00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006C0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006C20);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7100006C7C);
	create_insn	(0X7100006CC0);
	create_insn	(x=0X7100006CC4);
	op_plain_offset	(x,	1,	0X71001C93A0);
	op_plain_offset	(x,	129,	0X71001C93A0);
	create_insn	(x=0X7100006CD0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100006CD4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100006CDC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100006CE4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100006CE8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100006CF0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100006CF8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100006D00);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7100006D0C);
	create_insn	(x=0X7100006D64);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100006D94);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100006DF8);
	op_plain_offset	(x,	1,	0X71001C93A0);
	op_plain_offset	(x,	129,	0X71001C93A0);
	create_insn	(x=0X7100006E08);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7100006E1C);
	create_insn	(x=0X7100006E2C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100006E34);
	op_plain_offset	(x,	1,	0X71001C9380);
	op_plain_offset	(x,	129,	0X71001C9380);
	create_insn	(x=0X7100006E38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006E40);
	op_stkvar	(x,	1);
	create_insn	(0X7100006E8C);
	create_insn	(x=0X7100006EFC);
	op_hex		(x,	1);
	create_insn	(x=0X7100006F24);
	op_plain_offset	(x,	1,	0X71001C93A0);
	op_plain_offset	(x,	129,	0X71001C93A0);
	create_insn	(0X7100006F2C);
	create_insn	(x=0X7100006F64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006F74);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7100006FA4);
	create_insn	(x=0X7100006FA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006FB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006FCC);
	op_hex		(x,	1);
	create_insn	(x=0X7100006FD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100006FE4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100007018);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7100007038);
	create_insn	(0X7100007060);
	create_insn	(x=0X71000070C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X71000070F8);
	create_insn	(x=0X7100007110);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100007158);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710000715C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100007168);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000716C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007170);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007174);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007178);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000717C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007188);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000718C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007190);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007194);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007198);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000719C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000071D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100007210,	"jumptable 0000007100007234 case 14",	1);
	create_insn	(0X7100007210);
	set_cmt	(0X7100007218,	"jumptable 0000007100007234 cases 1,15,16,21,22",	1);
	set_cmt	(0X7100007220,	"switch 24 cases",	0);
	create_insn	(x=0X7100007228);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100007234,	"switch jump",	0);
	set_cmt	(0X7100007238,	"jumptable 0000007100007234 cases 7,17",	1);
	create_insn	(0X7100007238);
	set_cmt	(0X7100007248,	"jumptable 0000007100007234 default case",	1);
	create_insn	(0X7100007248);
	set_name	(0X7100007248,	"def_7100007234");
	set_cmt	(0X7100007264,	"jumptable 0000007100007234 case 2",	1);
	create_insn	(0X7100007264);
	set_cmt	(0X7100007270,	"jumptable 0000007100007234 case 3",	1);
	create_insn	(0X7100007270);
	set_cmt	(0X7100007280,	"jumptable 0000007100007234 case 4",	1);
	create_insn	(0X7100007280);
	set_cmt	(0X710000729C,	"jumptable 0000007100007234 case 5",	1);
	create_insn	(0X710000729C);
	set_cmt	(0X71000072AC,	"jumptable 0000007100007234 case 6",	1);
	create_insn	(0X71000072AC);
	set_cmt	(0X71000072BC,	"jumptable 0000007100007234 case 8",	1);
	create_insn	(0X71000072BC);
	set_cmt	(0X71000072C8,	"jumptable 0000007100007234 case 9",	1);
	create_insn	(0X71000072C8);
	set_cmt	(0X71000072E4,	"jumptable 0000007100007234 case 10",	1);
	create_insn	(0X71000072E4);
	set_cmt	(0X71000072F0,	"jumptable 0000007100007234 case 11",	1);
	create_insn	(0X71000072F0);
	set_cmt	(0X710000730C,	"jumptable 0000007100007234 case 12",	1);
	create_insn	(0X710000730C);
	set_cmt	(0X710000731C,	"jumptable 0000007100007234 case 13",	1);
	create_insn	(0X710000731C);
	set_cmt	(0X710000732C,	"jumptable 0000007100007234 case 18",	1);
	create_insn	(0X710000732C);
	set_cmt	(0X7100007338,	"jumptable 0000007100007234 case 19",	1);
	create_insn	(0X7100007338);
	set_cmt	(0X7100007354,	"jumptable 0000007100007234 case 20",	1);
	create_insn	(0X7100007354);
	set_cmt	(0X7100007388,	"jumptable 0000007100007234 case 23",	1);
	create_insn	(0X7100007388);
	create_insn	(0X7100007394);
	set_cmt	(0X71000073A0,	"jumptable 0000007100007234 case 0",	1);
	create_insn	(0X71000073A0);
	create_insn	(x=0X71000073A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000073AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000073B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000073B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000073B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000073BC);
	op_stkvar	(x,	1);
	make_array	(0X71000073C4,	0XC);
	create_insn	(x=0X71000073D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000073D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000073D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000073DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007408);
	op_hex		(x,	1);
	create_insn	(x=0X710000740C);
	op_hex		(x,	1);
	create_insn	(0X7100007434);
	create_insn	(0X7100007458);
	create_insn	(x=0X710000747C);
	op_hex		(x,	1);
	create_insn	(x=0X71000074B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000074B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000074BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000074C0);
	op_stkvar	(x,	1);
	create_insn	(0X71000074C8);
	create_insn	(x=0X71000074D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000074D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000074D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000074DC);
	op_stkvar	(x,	1);
	make_array	(0X71000074E4,	0XC);
	create_insn	(x=0X71000074F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000074F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000074F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007500);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100007508);
	op_plain_offset	(x,	1,	0X71001C93A0);
	op_plain_offset	(x,	129,	0X71001C93A0);
	create_insn	(0X710000751C);
	create_insn	(x=0X7100007554);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007558);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000755C);
	op_stkvar	(x,	1);
	create_insn	(0X7100007564);
	create_insn	(x=0X7100007568);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000756C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007570);
	op_stkvar	(x,	1);
	make_array	(0X7100007578,	0X8);
	create_insn	(x=0X7100007580);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007584);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000758C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100007594);
	op_plain_offset	(x,	1,	0X71001C93A0);
	op_plain_offset	(x,	129,	0X71001C93A0);
	create_insn	(x=0X71000075A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000075A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X71000075B0);
	create_insn	(x=0X71000075B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000075DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000075E0);
	op_stkvar	(x,	1);
	make_array	(0X71000075E8,	0X8);
	create_insn	(x=0X71000075F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000075F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000075FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100007604);
	op_plain_offset	(x,	1,	0X71001C93A0);
	op_plain_offset	(x,	129,	0X71001C93A0);
	create_insn	(0X710000760C);
	create_insn	(x=0X710000762C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007630);
	op_stkvar	(x,	1);
	make_array	(0X7100007638,	0X8);
	create_insn	(x=0X7100007640);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007644);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007648);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000764C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007650);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000768C);
	op_hex		(x,	1);
	create_insn	(x=0X71000076B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000076E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000076E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000076EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000076F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000076F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000076FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100007700);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100007708);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710000770C);
	op_plain_offset	(x,	1,	0X71001C93A0);
	op_plain_offset	(x,	129,	0X71001C93A0);
	create_insn	(0X7100007714);
	create_insn	(0X710000774C);
	create_insn	(x=0X7100007774);
	op_hex		(x,	1);
	create_insn	(x=0X7100007780);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000077B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000077E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000077E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000077EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000077F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000077F4);
	op_stkvar	(x,	1);
	create_insn	(0X71000077FC);
	create_insn	(0X710000780C);
	make_array	(0X710000781C,	0X4);
	create_insn	(0X7100007820);
	create_insn	(0X7100007850);
	create_insn	(0X710000787C);
	create_insn	(0X7100007898);
	create_insn	(0X71000078A4);
	create_insn	(0X71000078E4);
	create_insn	(0X71000078E8);
	make_array	(0X71000078EC,	0X4);
	create_insn	(0X71000078F0);
	set_name	(0X71000078F0,	"nullsub_18");
	make_array	(0X71000078F4,	0XC);
	create_insn	(x=0X7100007900);
	op_stkvar	(x,	1);
	set_name	(0X7100007900,	"__cxa_pure_virtual");
	create_dword	(0X710000790C);
	create_insn	(x=0X7100007910);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007928);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007934);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007940);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100007944);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100007948);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710000794C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100007954);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710000795C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710000796C);
	op_stkvar	(x,	1);
	create_insn	(0X7100007974);
	create_qword	(0X7100007978);
	create_insn	(x=0X7100007980);
	op_stkvar	(x,	1);
	create_dword	(0X710000798C);
	create_insn	(0X7100007990);
	make_array	(0X710000799C,	0X4);
	create_insn	(0X71000079A0);
	set_name	(0X71000079A0,	"nullsub_19");
	make_array	(0X71000079A4,	0XC);
	create_insn	(0X71000079B0);
	create_insn	(x=0X71000079C8);
	op_hex		(x,	1);
	create_insn	(0X71000079E4);
	make_array	(0X71000079EC,	0X4);
	create_insn	(0X71000079F0);
	create_insn	(x=0X71000079F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000079F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000079FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007A00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007A04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007A08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007A38);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100007A50);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100007A60);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100007A68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007A6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007A70);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100007A74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007A78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007A7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007A80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007A8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007A90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007A94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007A98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007A9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007AA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007AA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007AAC);
	op_stkvar	(x,	1);
	make_array	(0X7100007AC4,	0XC);
	create_insn	(0X7100007AD0);
	create_insn	(x=0X7100007AD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007AE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007AF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007AF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007AF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007B04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007B08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007B0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007B10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007B14);
	op_stkvar	(x,	1);
	create_dword	(0X7100007B1C);
	create_insn	(0X7100007B20);
	create_insn	(x=0X7100007B24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007B3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007B44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007B48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007B54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007B60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007B64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007B68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007B6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007B70);
	op_stkvar	(x,	1);
	create_qword	(0X7100007B78);
	create_insn	(0X7100007B80);
	create_insn	(x=0X7100007B84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007B94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007BA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007BA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007BAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007BB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007BBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007BC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007BCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007BD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007BD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007BD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007BDC);
	op_stkvar	(x,	1);
	create_dword	(0X7100007BE4);
	make_array	(0X7100007BE8,	0X8);
	create_insn	(x=0X7100007BF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007BFC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(0X7100007C04);
	make_array	(0X7100007C08,	0X8);
	create_insn	(x=0X7100007C10);
	op_stkvar	(x,	1);
	set_name	(0X7100007C10,	"_ZN2nn4diag6detail9AbortImplEPKcS3_S3_i");
	create_insn	(x=0X7100007C1C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100007C30);
	op_stkvar	(x,	1);
	set_name	(0X7100007C30,	"_ZN2nn4diag6detail9AbortImplEPKcS3_S3_iPKNS_6ResultES3_z");
	create_insn	(x=0X7100007C40);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_qword	(0X7100007C58);
	create_insn	(x=0X7100007C60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007C70);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(0X7100007C8C);
	create_insn	(0X7100007C90);
	create_insn	(x=0X7100007C94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007C98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007C9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007CA8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100007CC8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100007CD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007CDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007CE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007CE8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100007CEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007CF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007CF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007CFC);
	op_stkvar	(x,	1);
	make_array	(0X7100007D0C,	0X4);
	create_insn	(x=0X7100007D10);
	op_stkvar	(x,	1);
	set_name	(0X7100007D10,	"_ZN2nn6detail21UnexpectedDefaultImplEPKcS2_i");
	create_insn	(x=0X7100007D1C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(0X7100007D2C);
	create_insn	(x=0X7100007D30);
	op_stkvar	(x,	1);
	make_array	(0X7100007D54,	0XC);
	create_insn	(0X7100007D60);
	create_insn	(0X7100007D78);
	make_array	(0X7100007D7C,	0X4);
	create_insn	(x=0X7100007D80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007D84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007D88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007D90);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100007D98);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100007DE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007DEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007DF0);
	op_stkvar	(x,	1);
	make_array	(0X7100007DF8,	0X8);
	create_insn	(x=0X7100007E00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007E04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007E08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007E48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007E4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007E50);
	op_stkvar	(x,	1);
	make_array	(0X7100007E58,	0X8);
	create_insn	(0X7100007E60);
	make_array	(0X7100007E6C,	0X4);
	create_insn	(x=0X7100007E70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007E74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007E78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007EA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007EBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007EC0);
	op_stkvar	(x,	1);
	make_array	(0X7100007EC8,	0X8);
	create_insn	(0X7100007ED0);
	set_name	(0X7100007ED0,	"nullsub_20");
	make_array	(0X7100007ED4,	0XC);
	create_insn	(x=0X7100007EE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007EE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007EEC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100007EFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007F00);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100007F08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007F10);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100007F2C);
	op_plain_offset	(x,	1,	0X71001C94B0);
	op_plain_offset	(x,	129,	0X71001C94B0);
	create_insn	(x=0X7100007F30);
	op_plain_offset	(x,	1,	0X71001C94B0);
	op_plain_offset	(x,	129,	0X71001C94B0);
	create_insn	(x=0X7100007F38);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100007F40);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100007F44);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100007F58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007F5C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100007F64);
	op_stkvar	(x,	1);
	make_array	(0X7100007F6C,	0X4);
	create_insn	(x=0X7100007F70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007F74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007FB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007FB4);
	op_stkvar	(x,	1);
	make_array	(0X7100007FBC,	0X4);
	create_insn	(x=0X7100007FC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007FC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007FCC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100007FDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007FE0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100007FE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100007FF0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710000800C);
	op_plain_offset	(x,	1,	0X71001C94B8);
	op_plain_offset	(x,	129,	0X71001C94B8);
	create_insn	(x=0X7100008010);
	op_plain_offset	(x,	1,	0X71001C94B8);
	op_plain_offset	(x,	129,	0X71001C94B8);
	create_insn	(x=0X7100008018);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100008020);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100008024);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100008038);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000803C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100008044);
	op_stkvar	(x,	1);
	make_array	(0X710000804C,	0X4);
	create_insn	(x=0X7100008050);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008054);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008090);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008094);
	op_stkvar	(x,	1);
	make_array	(0X710000809C,	0X4);
	create_insn	(0X71000080A0);
	set_name	(0X71000080A0,	"PtrNotNull");
	make_array	(0X71000080AC,	0X4);
	create_insn	(0X71000080B0);
	create_insn	(x=0X71000080B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000080BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000080C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000080C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000080C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000080D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000080D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000080DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000080E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000080E8);
	op_stkvar	(x,	1);
	create_insn	(0X71000080F4);
	create_insn	(x=0X71000080F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008100);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008104);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000810C);
	op_hex		(x,	1);
	create_insn	(x=0X7100008110);
	op_stkvar	(x,	1);
	create_insn	(0X710000811C);
	create_insn	(x=0X7100008120);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008128);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000812C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008130);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008138);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008140);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008148);
	op_stkvar	(x,	1);
	create_insn	(0X7100008154);
	create_insn	(x=0X7100008158);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000815C);
	op_stkvar	(x,	1);
	create_insn	(0X71000081A0);
	create_insn	(x=0X71000081A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000081AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000081B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000081B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000081BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000081C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000081C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000081D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000081E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X71000081F8);
	create_insn	(x=0X71000081FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008204);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008210);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008218);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008220);
	op_stkvar	(x,	1);
	create_insn	(0X7100008230);
	create_insn	(0X7100008234);
	create_insn	(x=0X7100008238);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000823C);
	op_stkvar	(x,	1);
	create_insn	(0X7100008248);
	create_insn	(x=0X710000824C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008254);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008258);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008260);
	op_stkvar	(x,	1);
	create_insn	(0X710000826C);
	create_insn	(x=0X7100008270);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008278);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000827C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008280);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000828C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008290);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008294);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008298);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000082A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000082A8);
	op_stkvar	(x,	1);
	create_insn	(0X71000082B4);
	create_insn	(x=0X71000082B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000082C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000082C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000082C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000082CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000082D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000082E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000082E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000082F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000082F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000082FC);
	op_stkvar	(x,	1);
	create_insn	(0X7100008310);
	create_insn	(x=0X7100008320);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000832C);
	op_stkvar	(x,	1);
	create_insn	(0X7100008338);
	create_insn	(x=0X710000833C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008344);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008348);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008350);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008360);
	op_stkvar	(x,	1);
	create_insn	(0X7100008378);
	create_insn	(0X710000837C);
	create_insn	(0X7100008388);
	create_insn	(x=0X7100008390);
	op_hex		(x,	1);
	create_insn	(0X710000839C);
	create_insn	(0X71000083A8);
	create_insn	(x=0X71000083C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000083E0);
	op_stkvar	(x,	1);
	create_insn	(0X71000083F8);
	create_insn	(0X7100008404);
	create_insn	(0X7100008408);
	create_insn	(x=0X7100008420);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008438);
	op_stkvar	(x,	1);
	create_insn	(0X7100008450);
	create_insn	(0X710000845C);
	create_insn	(x=0X710000846C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008484);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008498);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000084A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000084A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000084B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000084C0);
	op_stkvar	(x,	1);
	create_insn	(0X71000084D8);
	create_insn	(0X71000084E4);
	create_insn	(x=0X71000084E8);
	op_stkvar	(x,	1);
	create_insn	(0X71000084F4);
	create_insn	(x=0X71000084F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008500);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008504);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008508);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000850C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008510);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008514);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000851C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008520);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008528);
	op_stkvar	(x,	1);
	make_array	(0X7100008534,	0XC);
	create_insn	(0X7100008540);
	create_insn	(x=0X7100008544);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000854C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008554);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008558);
	op_stkvar	(x,	1);
	create_insn	(0X7100008564);
	create_insn	(x=0X7100008588);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008590);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008598);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000859C);
	op_stkvar	(x,	1);
	create_insn	(0X71000085AC);
	create_insn	(x=0X71000085F8);
	op_stkvar	(x,	1);
	make_array	(0X7100008604,	0XC);
	create_insn	(0X7100008610);
	create_insn	(x=0X7100008614);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000861C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008620);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008624);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008628);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008638);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000863C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008644);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008648);
	op_stkvar	(x,	1);
	create_insn	(0X7100008658);
	create_insn	(0X7100008664);
	create_insn	(0X7100008688);
	create_insn	(x=0X710000868C);
	op_stkvar	(x,	1);
	create_insn	(0X710000869C);
	create_insn	(0X71000086A8);
	create_insn	(0X71000086D8);
	create_insn	(x=0X71000086DC);
	op_stkvar	(x,	1);
	make_array	(0X71000086E8,	0X8);
	create_insn	(0X71000086F0);
	create_insn	(x=0X71000086F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000086F8);
	op_stkvar	(x,	1);
	create_insn	(0X7100008704);
	create_insn	(x=0X7100008708);
	op_stkvar	(x,	1);
	create_insn	(0X7100008710);
	create_insn	(x=0X7100008714);
	op_hex		(x,	1);
	create_insn	(0X7100008720);
	create_insn	(x=0X7100008724);
	op_stkvar	(x,	1);
	create_insn	(0X710000872C);
	create_insn	(x=0X710000873C);
	op_stkvar	(x,	1);
	make_array	(0X7100008748,	0X8);
	create_insn	(0X7100008750);
	create_insn	(x=0X7100008754);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008758);
	op_stkvar	(x,	1);
	make_array	(0X7100008764,	0XC);
	create_insn	(0X7100008770);
	create_insn	(x=0X7100008774);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000877C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008780);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008784);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000878C);
	op_stkvar	(x,	1);
	create_insn	(0X710000879C);
	create_insn	(x=0X71000087A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000087BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000087C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000087CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000087D0);
	op_stkvar	(x,	1);
	create_insn	(0X71000087E0);
	create_insn	(0X71000087EC);
	create_insn	(0X71000087F0);
	create_insn	(0X71000087FC);
	create_insn	(0X7100008808);
	create_insn	(x=0X7100008814);
	op_hex		(x,	1);
	create_insn	(0X7100008820);
	create_insn	(0X710000882C);
	create_insn	(0X7100008840);
	create_insn	(0X710000884C);
	create_insn	(0X7100008858);
	create_insn	(x=0X710000885C);
	op_stkvar	(x,	1);
	create_insn	(0X7100008868);
	create_insn	(x=0X710000886C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008870);
	op_stkvar	(x,	1);
	create_insn	(0X7100008880);
	create_insn	(x=0X7100008884);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000888C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008890);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008894);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008898);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000889C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000088A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000088A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000088A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000088AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000088B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000088B8);
	op_stkvar	(x,	1);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_1(void) {
        auto x;
#define id x

	create_insn	(x=0X71000088BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000088C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000088C8);
	op_stkvar	(x,	1);
	create_insn	(0X71000088D4);
	create_insn	(x=0X71000088D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000088E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000088E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000088E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000088EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000088F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000088F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000088FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008900);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008904);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008908);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008910);
	op_stkvar	(x,	1);
	create_insn	(0X710000891C);
	create_insn	(x=0X7100008920);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008928);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000892C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008938);
	op_hex		(x,	1);
	create_insn	(x=0X710000893C);
	op_stkvar	(x,	1);
	create_insn	(0X7100008948);
	create_insn	(x=0X710000894C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008950);
	op_stkvar	(x,	1);
	make_array	(0X7100008968,	0X8);
	create_insn	(0X7100008970);
	create_insn	(x=0X7100008974);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008978);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008980);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000898C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000089B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X71000089BC,	"__int64",	0);
	create_insn	(x=0X71000089C4);
	op_stkvar	(x,	1);
	create_insn	(0X71000089D4);
	create_insn	(x=0X71000089DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000089F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000089F8);
	op_stkvar	(x,	1);
	create_insn	(0X7100008A04);
	create_insn	(0X7100008A18);
	make_array	(0X7100008A1C,	0X4);
	create_insn	(x=0X7100008A20);
	op_stkvar	(x,	1);
	set_name	(0X7100008A20,	"GetService_FspSrv");
	create_insn	(x=0X7100008A24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008A2C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100008A3C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100008A40);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100008A50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008A58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008A60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008A64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008A6C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100008A88);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100008A8C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100008A94);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100008A9C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X7100008AB8,	0X8);
	create_insn	(0X7100008AC0);
	set_name	(0X7100008AC0,	"SetupService_fspsrv");
	create_insn	(x=0X7100008AC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008AC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008ACC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008AD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008ADC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100008AE4);
	op_plain_offset	(x,	1,	0X71001C9558);
	op_plain_offset	(x,	129,	0X71001C9558);
	create_insn	(x=0X7100008AEC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100008B20);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100008B24);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100008B28);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100008B34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008B38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008B3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008B40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008B50);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100008B5C);
	op_plain_offset	(x,	1,	0X71001C9544);
	op_plain_offset	(x,	129,	0X71001C9544);
	create_insn	(x=0X7100008B68);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100008B6C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100008B78);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100008B7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008B80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008B8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008B90);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100008BAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008BC0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100008BD8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100008BDC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100008BE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008BE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008BE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008BEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008BF8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7100008C10);
	create_insn	(x=0X7100008C30);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100008C44);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100008C48);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100008C4C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100008C64);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100008C78);
	op_plain_offset	(x,	1,	0X71001C9A40);
	op_plain_offset	(x,	129,	0X71001C9A40);
	create_insn	(x=0X7100008C80);
	op_plain_offset	(x,	1,	0X71001C9A40);
	op_plain_offset	(x,	129,	0X71001C9A40);
	create_insn	(x=0X7100008C9C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100008CC4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100008CF0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100008D0C);
	op_plain_offset	(x,	1,	0X71001C9540);
	op_plain_offset	(x,	129,	0X71001C9540);
	create_insn	(x=0X7100008D14);
	op_plain_offset	(x,	1,	0X71001C9540);
	op_plain_offset	(x,	129,	0X71001C9540);
	create_insn	(x=0X7100008D20);
	op_plain_offset	(x,	1,	0X71001C9540);
	op_plain_offset	(x,	129,	0X71001C9540);
	create_insn	(x=0X7100008D30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008D34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008D38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008D3C);
	op_stkvar	(x,	1);
	create_insn	(0X7100008D48);
	create_insn	(x=0X7100008D54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008D5C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100008D70);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100008D78);
	op_plain_offset	(x,	1,	0X71001C95A0);
	op_plain_offset	(x,	129,	0X71001C95A0);
	create_insn	(x=0X7100008D84);
	op_plain_offset	(x,	1,	0X71001C95A0);
	op_plain_offset	(x,	129,	0X71001C95A0);
	create_insn	(x=0X7100008DA0);
	op_plain_offset	(x,	1,	0X71001C95A0);
	op_plain_offset	(x,	129,	0X71001C95A0);
	create_insn	(x=0X7100008DA8);
	op_plain_offset	(x,	1,	0X71001C95A0);
	op_plain_offset	(x,	129,	0X71001C95A0);
	create_insn	(x=0X7100008DAC);
	op_plain_offset	(x,	1,	0X71001C95A0);
	op_plain_offset	(x,	129,	0X71001C95A0);
	create_insn	(x=0X7100008DC0);
	op_plain_offset	(x,	1,	0X71001C95A0);
	op_plain_offset	(x,	129,	0X71001C95A0);
	create_insn	(x=0X7100008DC8);
	op_plain_offset	(x,	1,	0X71001C95A0);
	op_plain_offset	(x,	129,	0X71001C95A0);
	create_insn	(x=0X7100008E44);
	op_plain_offset	(x,	1,	0X71001C95A0);
	op_plain_offset	(x,	129,	0X71001C95A0);
	create_insn	(x=0X7100008E50);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100008E54);
	op_plain_offset	(x,	1,	0X71001C95A0);
	op_plain_offset	(x,	129,	0X71001C95A0);
	create_insn	(x=0X7100008E5C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100008E60);
	op_plain_offset	(x,	1,	0X71001C95A0);
	op_plain_offset	(x,	129,	0X71001C95A0);
	create_insn	(x=0X7100008E68);
	op_plain_offset	(x,	1,	0X71001C95A0);
	op_plain_offset	(x,	129,	0X71001C95A0);
	create_insn	(x=0X7100008E6C);
	op_plain_offset	(x,	1,	0X71001C95A0);
	op_plain_offset	(x,	129,	0X71001C95A0);
	create_insn	(x=0X7100008E70);
	op_plain_offset	(x,	1,	0X71001C95A0);
	op_plain_offset	(x,	129,	0X71001C95A0);
	create_insn	(x=0X7100008E74);
	op_plain_offset	(x,	1,	0X71001C95A0);
	op_plain_offset	(x,	129,	0X71001C95A0);
	create_insn	(x=0X7100008E78);
	op_plain_offset	(x,	1,	0X71001C95A0);
	op_plain_offset	(x,	129,	0X71001C95A0);
	create_insn	(x=0X7100008E7C);
	op_plain_offset	(x,	1,	0X71001C95A0);
	op_plain_offset	(x,	129,	0X71001C95A0);
	create_insn	(x=0X7100008E80);
	op_plain_offset	(x,	1,	0X71001C95A0);
	op_plain_offset	(x,	129,	0X71001C95A0);
	create_insn	(x=0X7100008E84);
	op_plain_offset	(x,	1,	0X71001C95A0);
	op_plain_offset	(x,	129,	0X71001C95A0);
	create_insn	(x=0X7100008E88);
	op_plain_offset	(x,	1,	0X71001C95A0);
	op_plain_offset	(x,	129,	0X71001C95A0);
	create_insn	(x=0X7100008E8C);
	op_plain_offset	(x,	1,	0X71001C95A0);
	op_plain_offset	(x,	129,	0X71001C95A0);
	create_insn	(x=0X7100008E90);
	op_plain_offset	(x,	1,	0X71001C95A0);
	op_plain_offset	(x,	129,	0X71001C95A0);
	create_insn	(x=0X7100008E94);
	op_plain_offset	(x,	1,	0X71001C95A0);
	op_plain_offset	(x,	129,	0X71001C95A0);
	create_insn	(x=0X7100008E98);
	op_plain_offset	(x,	1,	0X71001C95A0);
	op_plain_offset	(x,	129,	0X71001C95A0);
	create_insn	(x=0X7100008E9C);
	op_plain_offset	(x,	1,	0X71001C95A0);
	op_plain_offset	(x,	129,	0X71001C95A0);
	create_insn	(x=0X7100008EA0);
	op_plain_offset	(x,	1,	0X71001C95A0);
	op_plain_offset	(x,	129,	0X71001C95A0);
	create_insn	(x=0X7100008EA4);
	op_plain_offset	(x,	1,	0X71001C95A0);
	op_plain_offset	(x,	129,	0X71001C95A0);
	create_insn	(0X7100008EBC);
	create_insn	(0X7100008EC0);
	create_insn	(0X7100008EC4);
	create_insn	(0X7100008ED8);
	create_insn	(0X7100008EDC);
	create_insn	(0X7100008EF0);
	make_array	(0X7100008EF4,	0XC);
	create_insn	(x=0X7100008F00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008F08);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100008F0C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100008F18);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100008F1C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100008F28);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100008F2C);
	op_stkvar	(x,	1);
	create_insn	(0X7100008F34);
	create_insn	(0X7100008F38);
	set_name	(0X7100008F38,	"nullsub_21");
	create_insn	(0X7100008F3C);
	create_insn	(x=0X7100008F44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008F48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008F68);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100008F78);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100008F88);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100008F9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008FA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008FAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008FB0);
	op_stkvar	(x,	1);
	create_insn	(0X7100008FB8);
	create_insn	(0X7100008FC0);
	create_insn	(0X7100008FCC);
	create_insn	(x=0X7100008FD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008FD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008FE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008FE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008FE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008FF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100008FF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009008);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000900C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009014);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009020);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009038);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000903C);
	op_stkvar	(x,	1);
	create_insn	(0X7100009048);
	create_insn	(x=0X710000904C);
	op_stkvar	(x,	1);
	create_insn	(0X7100009058);
	create_insn	(x=0X710000905C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009060);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009064);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009070);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009074);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009078);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009088);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009090);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000090A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000090A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000090AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000090C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000090D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000090DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000090E0);
	op_stkvar	(x,	1);
	create_insn	(0X71000090EC);
	create_insn	(x=0X71000090F0);
	op_stkvar	(x,	1);
	create_insn	(0X71000090FC);
	create_insn	(x=0X7100009100);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009104);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009108);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000910C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000911C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009130);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000913C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009158);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009174);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000918C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009190);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009194);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009198);
	op_stkvar	(x,	1);
	create_insn	(0X71000091A4);
	create_insn	(x=0X71000091A8);
	op_stkvar	(x,	1);
	create_insn	(0X71000091B4);
	create_insn	(x=0X71000091B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000091BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000091C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000091D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000091E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000091E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009204);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009214);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000922C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009230);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009234);
	op_stkvar	(x,	1);
	create_insn	(0X7100009240);
	create_insn	(x=0X7100009244);
	op_stkvar	(x,	1);
	create_insn	(0X7100009250);
	create_insn	(x=0X7100009254);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009258);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000925C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009260);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009264);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009274);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009278);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009288);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009298);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000092A8);
	op_hex		(x,	1);
	create_insn	(x=0X71000092B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000092BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000092C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000092D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000092EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000092F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000092F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000092F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000092FC);
	op_stkvar	(x,	1);
	create_insn	(0X7100009308);
	create_insn	(x=0X710000930C);
	op_stkvar	(x,	1);
	create_insn	(0X7100009318);
	create_insn	(x=0X710000931C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009320);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009324);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009330);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009334);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009338);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009348);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009350);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000936C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009370);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009374);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009384);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000939C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000093A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000093A4);
	op_stkvar	(x,	1);
	create_insn	(0X71000093B0);
	create_insn	(x=0X71000093B4);
	op_stkvar	(x,	1);
	create_insn	(0X71000093C0);
	create_insn	(x=0X71000093C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000093C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000093CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000093DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000093EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000093F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009410);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009420);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009438);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000943C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009440);
	op_stkvar	(x,	1);
	create_insn	(0X710000944C);
	create_insn	(x=0X7100009450);
	op_stkvar	(x,	1);
	create_insn	(0X710000945C);
	create_insn	(0X7100009468);
	create_insn	(x=0X710000946C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009470);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009474);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009484);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009494);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000949C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000094B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000094CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000094E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000094E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000094EC);
	op_stkvar	(x,	1);
	create_insn	(0X71000094F8);
	create_insn	(x=0X71000094FC);
	op_stkvar	(x,	1);
	create_insn	(0X7100009508);
	create_insn	(x=0X710000950C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009510);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000951C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009520);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009524);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000952C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009534);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009548);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000954C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009550);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000955C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009574);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009578);
	op_stkvar	(x,	1);
	create_insn	(0X7100009584);
	create_insn	(x=0X7100009588);
	op_stkvar	(x,	1);
	create_insn	(0X7100009594);
	create_insn	(0X71000095A0);
	create_insn	(0X71000095AC);
	create_insn	(0X71000095B8);
	create_insn	(0X71000095C4);
	create_insn	(0X71000095D8);
	create_insn	(x=0X71000095DC);
	op_hex		(x,	1);
	create_insn	(0X71000095E8);
	create_insn	(0X71000095F4);
	create_insn	(0X7100009600);
	create_insn	(x=0X7100009604);
	op_hex		(x,	1);
	create_insn	(0X7100009610);
	create_insn	(x=0X7100009614);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009618);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000961C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009628);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000962C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009630);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009640);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009648);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009660);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009664);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009668);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009678);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009690);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009694);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009698);
	op_stkvar	(x,	1);
	create_insn	(0X71000096A4);
	create_insn	(x=0X71000096A8);
	op_stkvar	(x,	1);
	create_insn	(0X71000096B4);
	create_insn	(x=0X71000096B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000096BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000096C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000096CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000096D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000096D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000096E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000096EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009704);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009708);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000970C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000971C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009734);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009738);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000973C);
	op_stkvar	(x,	1);
	create_insn	(0X7100009748);
	create_insn	(x=0X710000974C);
	op_stkvar	(x,	1);
	create_insn	(0X7100009758);
	create_insn	(x=0X710000975C);
	op_hex		(x,	1);
	create_insn	(0X7100009768);
	create_insn	(x=0X710000976C);
	op_hex		(x,	1);
	create_insn	(0X7100009778);
	create_insn	(x=0X710000977C);
	op_hex		(x,	1);
	create_insn	(0X7100009788);
	create_insn	(0X7100009794);
	create_insn	(x=0X7100009798);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000979C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000097A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000097AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000097B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000097B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000097C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000097CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000097E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000097EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000097F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009800);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009818);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000981C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009820);
	op_stkvar	(x,	1);
	create_insn	(0X710000982C);
	create_insn	(x=0X7100009830);
	op_stkvar	(x,	1);
	create_insn	(0X710000983C);
	create_insn	(0X710000984C);
	create_insn	(x=0X7100009850);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009854);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009858);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009864);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009868);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000986C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000987C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009884);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009894);
	op_hex		(x,	1);
	create_insn	(x=0X710000989C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000098A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000098A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000098B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000098CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000098D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000098D4);
	op_stkvar	(x,	1);
	create_insn	(0X71000098E0);
	create_insn	(x=0X71000098E4);
	op_stkvar	(x,	1);
	create_insn	(0X71000098F0);
	create_insn	(x=0X71000098F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000098F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000098FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009908);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000990C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009910);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009920);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009928);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009938);
	op_hex		(x,	1);
	create_insn	(x=0X7100009940);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009944);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009948);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009958);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009970);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009974);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009978);
	op_stkvar	(x,	1);
	create_insn	(0X7100009984);
	create_insn	(x=0X7100009988);
	op_stkvar	(x,	1);
	create_insn	(0X7100009994);
	create_insn	(x=0X7100009998);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000999C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000099A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000099AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000099B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000099B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000099C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000099CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000099DC);
	op_hex		(x,	1);
	create_insn	(x=0X71000099E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000099E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000099EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000099FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009A14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009A18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009A1C);
	op_stkvar	(x,	1);
	create_insn	(0X7100009A28);
	create_insn	(x=0X7100009A2C);
	op_stkvar	(x,	1);
	create_insn	(0X7100009A38);
	create_insn	(x=0X7100009A44);
	op_hex		(x,	1);
	create_insn	(0X7100009A58);
	create_insn	(0X7100009A70);
	create_insn	(x=0X7100009A78);
	op_hex		(x,	1);
	create_insn	(0X7100009A88);
	create_insn	(x=0X7100009A8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009A90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009A9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009AA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009AA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009AAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009AB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009AC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009AC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009AD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009ADC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009AF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009AF8);
	op_stkvar	(x,	1);
	create_insn	(0X7100009B04);
	create_insn	(x=0X7100009B08);
	op_stkvar	(x,	1);
	create_insn	(0X7100009B14);
	create_insn	(x=0X7100009B18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009B1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009B20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009B30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009B40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009B48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009B58);
	op_hex		(x,	1);
	create_insn	(x=0X7100009B64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009B74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009B8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009B90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009B94);
	op_stkvar	(x,	1);
	create_insn	(0X7100009BA0);
	create_insn	(x=0X7100009BA4);
	op_stkvar	(x,	1);
	create_insn	(0X7100009BB0);
	create_insn	(x=0X7100009BB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009BB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009BC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009BC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009BCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009BD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009BDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009BEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009BF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009BF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009C04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009C1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009C20);
	op_stkvar	(x,	1);
	create_insn	(0X7100009C2C);
	create_insn	(x=0X7100009C30);
	op_stkvar	(x,	1);
	create_insn	(0X7100009C3C);
	create_insn	(x=0X7100009C40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009C44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009C48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009C54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009C58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009C5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009C6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009C74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009C84);
	op_hex		(x,	1);
	create_insn	(x=0X7100009C88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009C8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009C90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009CA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009CBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009CC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009CC4);
	op_stkvar	(x,	1);
	create_insn	(0X7100009CD0);
	create_insn	(x=0X7100009CD4);
	op_stkvar	(x,	1);
	create_insn	(0X7100009CE0);
	create_insn	(x=0X7100009CE4);
	op_hex		(x,	1);
	create_insn	(0X7100009CF0);
	create_insn	(x=0X7100009CFC);
	op_hex		(x,	1);
	create_insn	(0X7100009D10);
	create_insn	(x=0X7100009D1C);
	op_hex		(x,	1);
	create_insn	(0X7100009D30);
	create_insn	(x=0X7100009D34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009D38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009D3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009D48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009D4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009D50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009D60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009D68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009D78);
	op_hex		(x,	1);
	create_insn	(x=0X7100009D80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009D84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009D88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009D98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009DB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009DB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009DB8);
	op_stkvar	(x,	1);
	create_insn	(0X7100009DC4);
	create_insn	(x=0X7100009DC8);
	op_stkvar	(x,	1);
	create_insn	(0X7100009DD4);
	create_insn	(x=0X7100009DE0);
	op_hex		(x,	1);
	create_insn	(0X7100009DF4);
	create_insn	(x=0X7100009E00);
	op_hex		(x,	1);
	create_insn	(0X7100009E14);
	create_insn	(x=0X7100009E28);
	op_hex		(x,	1);
	create_insn	(0X7100009E3C);
	create_insn	(x=0X7100009E40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009E44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009E48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009E4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009E5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009E70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009E7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009E8C);
	op_hex		(x,	1);
	create_insn	(x=0X7100009E98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009EB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009EC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009ECC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009ED0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009ED4);
	op_stkvar	(x,	1);
	create_insn	(0X7100009EE0);
	create_insn	(x=0X7100009EE4);
	op_stkvar	(x,	1);
	create_insn	(0X7100009EF0);
	create_insn	(0X7100009F18);
	create_insn	(x=0X7100009F1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009F20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009F24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009F34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009F44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009F4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009F68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009F78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009F90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009F94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009F98);
	op_stkvar	(x,	1);
	create_insn	(0X7100009FA4);
	create_insn	(x=0X7100009FA8);
	op_stkvar	(x,	1);
	create_insn	(0X7100009FB4);
	create_insn	(x=0X7100009FB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009FBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009FC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009FD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009FE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100009FE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A004);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A014);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A02C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A030);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A034);
	op_stkvar	(x,	1);
	create_insn	(0X710000A040);
	create_insn	(x=0X710000A044);
	op_stkvar	(x,	1);
	create_insn	(0X710000A050);
	create_insn	(0X710000A060);
	create_insn	(x=0X710000A064);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A068);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A06C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A07C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A08C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A094);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A0B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A0C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A0D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A0DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A0E0);
	op_stkvar	(x,	1);
	create_insn	(0X710000A0EC);
	create_insn	(x=0X710000A0F0);
	op_stkvar	(x,	1);
	create_insn	(0X710000A0FC);
	create_insn	(x=0X710000A100);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A104);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A108);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A118);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A128);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A130);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A14C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A15C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A174);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A178);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A17C);
	op_stkvar	(x,	1);
	create_insn	(0X710000A188);
	create_insn	(x=0X710000A18C);
	op_stkvar	(x,	1);
	create_insn	(0X710000A198);
	create_insn	(x=0X710000A19C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A1A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A1AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A1B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A1B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A1BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A1C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A1D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A1DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A1E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A1EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A204);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A208);
	op_stkvar	(x,	1);
	create_insn	(0X710000A214);
	create_insn	(x=0X710000A218);
	op_stkvar	(x,	1);
	create_insn	(0X710000A224);
	create_insn	(x=0X710000A228);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A22C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A230);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A240);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A250);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A258);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A274);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A284);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A29C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A2A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A2A4);
	op_stkvar	(x,	1);
	create_insn	(0X710000A2B0);
	create_insn	(x=0X710000A2B4);
	op_stkvar	(x,	1);
	create_insn	(0X710000A2C0);
	set_name	(0X710000A2C0,	"fspsrv_OpenDataStorageByDataId");
	create_insn	(x=0X710000A2C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A2C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A2CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A2D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A2DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A2E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A2F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A2F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A308);
	op_hex		(x,	1);
	create_insn	(x=0X710000A310);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A314);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A318);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A328);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A340);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A344);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A348);
	op_stkvar	(x,	1);
	create_insn	(0X710000A354);
	create_insn	(x=0X710000A358);
	op_stkvar	(x,	1);
	create_insn	(0X710000A364);
	create_insn	(x=0X710000A368);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A36C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A378);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A37C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A380);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A388);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A390);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A3A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A3A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A3AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A3B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A3D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A3D4);
	op_stkvar	(x,	1);
	create_insn	(0X710000A3E0);
	create_insn	(x=0X710000A3E4);
	op_stkvar	(x,	1);
	create_insn	(0X710000A3F0);
	create_insn	(x=0X710000A3F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A3F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A3FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A40C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A41C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A424);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A434);
	op_hex		(x,	1);
	create_insn	(x=0X710000A440);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A450);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A468);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A46C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A470);
	op_stkvar	(x,	1);
	create_insn	(0X710000A47C);
	create_insn	(x=0X710000A480);
	op_stkvar	(x,	1);
	create_insn	(0X710000A48C);
	create_insn	(x=0X710000A490);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A494);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A498);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A4A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A4B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A4C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A4D0);
	op_hex		(x,	1);
	create_insn	(x=0X710000A4DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A4EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A504);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A508);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A50C);
	op_stkvar	(x,	1);
	create_insn	(0X710000A518);
	create_insn	(x=0X710000A51C);
	op_stkvar	(x,	1);
	create_insn	(0X710000A528);
	create_insn	(x=0X710000A52C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A530);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A534);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A538);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A548);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A55C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A568);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A578);
	op_hex		(x,	1);
	create_insn	(x=0X710000A584);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A5A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A5B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A5BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A5C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A5C4);
	op_stkvar	(x,	1);
	create_insn	(0X710000A5D0);
	create_insn	(x=0X710000A5D4);
	op_stkvar	(x,	1);
	create_insn	(0X710000A5E0);
	create_insn	(x=0X710000A5E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A5E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A5EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A5F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A5FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A600);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A610);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A618);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A628);
	op_hex		(x,	1);
	create_insn	(x=0X710000A630);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A634);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A638);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A648);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A660);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A664);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A668);
	op_stkvar	(x,	1);
	create_insn	(0X710000A674);
	create_insn	(x=0X710000A678);
	op_stkvar	(x,	1);
	create_insn	(0X710000A684);
	create_insn	(x=0X710000A688);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A68C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A698);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A69C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A6A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A6A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A6B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A6C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A6C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A6CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A6D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A6F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A6F4);
	op_stkvar	(x,	1);
	create_insn	(0X710000A700);
	create_insn	(x=0X710000A704);
	op_stkvar	(x,	1);
	create_insn	(0X710000A710);
	create_insn	(x=0X710000A714);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A718);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A724);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A728);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A72C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A734);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A73C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A750);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A754);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A758);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A764);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A77C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A780);
	op_stkvar	(x,	1);
	create_insn	(0X710000A78C);
	create_insn	(x=0X710000A790);
	op_stkvar	(x,	1);
	create_insn	(0X710000A79C);
	create_insn	(x=0X710000A7A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A7A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A7B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A7B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A7B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A7C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A7C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A7DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A7E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A7E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A7F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A808);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A80C);
	op_stkvar	(x,	1);
	create_insn	(0X710000A818);
	create_insn	(x=0X710000A81C);
	op_stkvar	(x,	1);
	create_insn	(0X710000A828);
	create_insn	(x=0X710000A82C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A830);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A83C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A840);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A844);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A84C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A854);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A864);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A868);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A870);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A87C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A894);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A898);
	op_stkvar	(x,	1);
	create_insn	(0X710000A8A4);
	create_insn	(x=0X710000A8A8);
	op_stkvar	(x,	1);
	create_insn	(0X710000A8B4);
	create_insn	(0X710000A8C0);
	create_insn	(x=0X710000A8CC);
	op_hex		(x,	1);
	create_insn	(0X710000A8D8);
	create_insn	(0X710000A8E4);
	create_insn	(0X710000A8F8);
	create_insn	(0X710000A904);
	create_insn	(0X710000A910);
	create_insn	(0X710000A91C);
	create_insn	(x=0X710000A920);
	op_hex		(x,	1);
	create_insn	(0X710000A92C);
	create_insn	(0X710000A938);
	create_insn	(0X710000A944);
	create_insn	(x=0X710000A948);
	op_hex		(x,	1);
	create_insn	(0X710000A958);
	create_insn	(0X710000A968);
	create_insn	(x=0X710000A96C);
	op_hex		(x,	1);
	create_insn	(0X710000A978);
	create_insn	(x=0X710000A980);
	op_hex		(x,	1);
	create_insn	(0X710000A990);
	create_insn	(x=0X710000A994);
	op_hex		(x,	1);
	create_insn	(0X710000A9A0);
	create_insn	(x=0X710000A9A4);
	op_hex		(x,	1);
	create_insn	(0X710000A9B0);
	create_insn	(x=0X710000A9B4);
	op_hex		(x,	1);
	create_insn	(0X710000A9C0);
	create_insn	(0X710000A9CC);
	create_insn	(0X710000A9D8);
	create_insn	(x=0X710000A9DC);
	op_hex		(x,	1);
	create_insn	(0X710000A9E8);
	create_insn	(0X710000A9F4);
	create_insn	(x=0X710000A9F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000A9FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AA00);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AA0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AA10);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AA14);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AA24);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AA2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AA3C);
	op_hex		(x,	1);
	create_insn	(x=0X710000AA44);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AA48);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AA4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AA5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AA74);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AA78);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AA7C);
	op_stkvar	(x,	1);
	create_insn	(0X710000AA88);
	create_insn	(x=0X710000AA8C);
	op_stkvar	(x,	1);
	create_insn	(0X710000AA98);
	create_insn	(0X710000AAA4);
	create_insn	(0X710000AAB0);
	create_insn	(0X710000AABC);
	create_insn	(0X710000AAC8);
	create_insn	(0X710000AAD4);
	create_insn	(0X710000AAF0);
	create_insn	(0X710000AAFC);
	create_insn	(0X710000AB0C);
	create_insn	(0X710000AB18);
	create_insn	(0X710000AB28);
	create_insn	(0X710000AB34);
	create_insn	(0X710000AB48);
	create_insn	(0X710000AB54);
	create_insn	(x=0X710000AB58);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AB5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AB68);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AB6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AB70);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AB78);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AB80);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AB90);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AB94);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AB9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000ABA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000ABC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000ABC4);
	op_stkvar	(x,	1);
	create_insn	(0X710000ABD0);
	create_insn	(x=0X710000ABD4);
	op_stkvar	(x,	1);
	create_insn	(0X710000ABE0);
	create_insn	(0X710000ABEC);
	create_insn	(0X710000ABF8);
	create_insn	(0X710000AC08);
	create_insn	(0X710000AC14);
	create_insn	(0X710000AC20);
	create_insn	(0X710000AC2C);
	create_insn	(0X710000AC3C);
	create_insn	(0X710000AC4C);
	create_insn	(0X710000AC60);
	create_insn	(x=0X710000AC64);
	op_hex		(x,	1);
	create_insn	(0X710000AC70);
	create_insn	(x=0X710000AC74);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AC78);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AC84);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AC88);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AC8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AC94);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AC9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000ACB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000ACB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000ACB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000ACC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000ACDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000ACE0);
	op_stkvar	(x,	1);
	create_insn	(0X710000ACEC);
	create_insn	(x=0X710000ACF0);
	op_stkvar	(x,	1);
	create_insn	(0X710000ACFC);
	create_insn	(x=0X710000AD00);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AD04);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AD08);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AD14);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AD18);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AD1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AD2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AD34);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AD48);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AD4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AD50);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AD64);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AD7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AD80);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AD84);
	op_stkvar	(x,	1);
	create_insn	(0X710000AD90);
	create_insn	(x=0X710000AD94);
	op_stkvar	(x,	1);
	create_insn	(0X710000ADA0);
	create_insn	(x=0X710000ADA4);
	op_hex		(x,	1);
	create_insn	(0X710000ADB0);
	create_insn	(0X710000ADB8);
	create_insn	(0X710000ADC0);
	create_insn	(x=0X710000ADC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000ADC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000ADCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000ADE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000ADEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000ADFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AE08);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710000AE10);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AE14);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AE1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AE20);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AE24);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AE38);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AE40);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AE48);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AE50);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AE60);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AE68);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AE74);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AE94);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AEAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AEC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AEDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AEFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AF10);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AF1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AF20);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AF24);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AF28);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AF34);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AF38);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AF3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AF44);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AF4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AF5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AF68);
	op_hex		(x,	1);
	create_insn	(x=0X710000AF84);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AF90);
	op_hex		(x,	1);
	create_insn	(x=0X710000AF98);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AF9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AFAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AFBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AFCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AFD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AFE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AFE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AFE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AFF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000AFF8);
	op_stkvar	(x,	1);
	create_insn	(0X710000B000);
	create_dword	(0X710000B004);
	make_array	(0X710000B008,	0X8);
	create_insn	(0X710000B010);
	create_insn	(x=0X710000B014);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000B018);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000B01C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000B020);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000B024);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000B028);
	op_stkvar	(x,	1);
	create_insn	(0X710000B090);
	create_insn	(x=0X710000B098);
	op_hex		(x,	1);
	create_insn	(x=0X710000B0A0);
	op_hex		(x,	1);
	create_insn	(x=0X710000B0B4);
	op_hex		(x,	1);
	create_insn	(x=0X710000B0B8);
	op_hex		(x,	1);
	create_insn	(x=0X710000B0C8);
	op_hex		(x,	1);
	create_insn	(x=0X710000B150);
	op_hex		(x,	1);
	create_insn	(x=0X710000B154);
	op_hex		(x,	1);
	create_insn	(x=0X710000B160);
	op_hex		(x,	1);
	create_insn	(x=0X710000B174);
	op_hex		(x,	1);
	create_insn	(x=0X710000B178);
	op_hex		(x,	1);
	create_insn	(0X710000B1DC);
	create_insn	(x=0X710000B1F0);
	op_hex		(x,	1);
	create_insn	(x=0X710000B1F8);
	op_hex		(x,	1);
	create_insn	(x=0X710000B20C);
	op_hex		(x,	1);
	create_insn	(x=0X710000B210);
	op_hex		(x,	1);
	create_insn	(x=0X710000B220);
	op_hex		(x,	1);
	create_insn	(0X710000B238);
	create_insn	(x=0X710000B24C);
	op_hex		(x,	1);
	create_insn	(0X710000B2B4);
	create_insn	(x=0X710000B2CC);
	op_hex		(x,	1);
	create_insn	(x=0X710000B2D0);
	op_hex		(x,	1);
	create_insn	(x=0X710000B2E0);
	op_hex		(x,	1);
	create_insn	(x=0X710000B2F0);
	op_hex		(x,	1);
	create_insn	(x=0X710000B2F8);
	op_hex		(x,	1);
	create_insn	(0X710000B360);
	create_insn	(x=0X710000B374);
	op_hex		(x,	1);
	create_insn	(x=0X710000B378);
	op_hex		(x,	1);
	create_insn	(0X710000B3B4);
	create_insn	(0X710000B3D4);
	create_insn	(0X710000B400);
	create_insn	(x=0X710000B414);
	op_hex		(x,	1);
	create_insn	(0X710000B420);
	create_insn	(x=0X710000B440);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000B48C);
	op_hex		(x,	1);
	create_insn	(x=0X710000B4AC);
	op_hex		(x,	1);
	create_insn	(x=0X710000B4B0);
	op_hex		(x,	1);
	create_insn	(0X710000B548);
	create_insn	(0X710000B560);
	create_insn	(x=0X710000B5A4);
	op_hex		(x,	1);
	create_insn	(x=0X710000B5A8);
	op_hex		(x,	1);
	create_insn	(0X710000B5F8);
	create_insn	(x=0X710000B608);
	op_hex		(x,	1);
	create_insn	(0X710000B610);
	create_insn	(x=0X710000B61C);
	op_hex		(x,	1);
	create_insn	(x=0X710000B628);
	op_hex		(x,	1);
	create_insn	(x=0X710000B630);
	op_hex		(x,	1);
	create_insn	(x=0X710000B688);
	op_hex		(x,	1);
	create_insn	(x=0X710000B6C0);
	op_hex		(x,	1);
	create_insn	(x=0X710000B6C8);
	op_hex		(x,	1);
	create_insn	(x=0X710000B6E8);
	op_hex		(x,	1);
	create_insn	(x=0X710000B6EC);
	op_hex		(x,	1);
	create_insn	(x=0X710000B6F4);
	op_hex		(x,	1);
	create_insn	(x=0X710000B734);
	op_hex		(x,	1);
	create_insn	(0X710000B750);
	create_insn	(x=0X710000B754);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000B758);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000B75C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000B760);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000B764);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000B768);
	op_stkvar	(x,	1);
	create_insn	(0X710000B774);
	create_insn	(0X710000B77C);
	create_insn	(0X710000B780);
	create_insn	(x=0X710000B798);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X710000B7B4);
	create_insn	(x=0X710000B7C4);
	op_hex		(x,	1);
	create_insn	(x=0X710000B850);
	op_hex		(x,	1);
	create_insn	(0X710000B8BC);
	create_insn	(x=0X710000B8C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000B8C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000B8C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000B8CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000B924);
	op_hex		(x,	1);
	create_insn	(x=0X710000B968);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000B974);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000B980);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000B98C);
	op_hex		(x,	1);
	create_insn	(0X710000B9B0);
	create_insn	(x=0X710000B9D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000B9D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000B9D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000B9DC);
	op_stkvar	(x,	1);
	create_insn	(0X710000B9E8);
	create_insn	(x=0X710000B9EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000B9F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000B9F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000B9F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000B9FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000BA48);
	op_hex		(x,	1);
	create_insn	(x=0X710000BA94);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000BAA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000BAAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000BAB8);
	op_hex		(x,	1);
	create_insn	(0X710000BADC);
	create_insn	(0X710000BB30);
	create_insn	(x=0X710000BB68);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000BB6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000BB70);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000BB74);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000BB78);
	op_stkvar	(x,	1);
	create_insn	(0X710000BB84);
	create_insn	(x=0X710000BBA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000BBA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000BBB8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710000BBD4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710000BBEC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X710000BC04);
	create_insn	(x=0X710000BC1C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710000BC48);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000BC50);
	op_stkvar	(x,	1);
	create_insn	(0X710000BC58);
	create_insn	(x=0X710000BC5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000BC60);
	op_stkvar	(x,	1);
	create_insn	(0X710000BC68);
	create_insn	(x=0X710000BC70);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000BC74);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000BC94);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710000BCA4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710000BCB4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710000BCC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000BCD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000BCD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000BCDC);
	op_stkvar	(x,	1);
	create_insn	(0X710000BCE4);
	create_insn	(x=0X710000BCEC);
	op_stkvar	(x,	1);
	create_insn	(0X710000BCF8);
	create_insn	(0X710000BD14);
	create_insn	(0X710000BD24);
	create_insn	(0X710000BD34);
	create_insn	(0X710000BD44);
	create_insn	(0X710000BD54);
	create_insn	(0X710000BD6C);
	create_insn	(0X710000BD84);
	create_insn	(0X710000BD94);
	create_insn	(x=0X710000BD98);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000BD9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000BDA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000BDAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000BDB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000BDB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000BDC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000BDCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000BDE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000BDE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000BDEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000BE00);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000BE18);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000BE1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000BE20);
	op_stkvar	(x,	1);
	create_insn	(0X710000BE2C);
	create_insn	(x=0X710000BE30);
	op_stkvar	(x,	1);
	create_insn	(0X710000BE3C);
	create_insn	(x=0X710000BE40);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000BE44);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000BE48);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000BE54);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000BE58);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000BE5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000BE6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000BE74);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000BE90);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000BE94);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000BE98);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000BEA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000BEC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000BEC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000BEC8);
	op_stkvar	(x,	1);
	create_insn	(0X710000BED4);
	create_insn	(x=0X710000BED8);
	op_stkvar	(x,	1);
	create_insn	(0X710000BEE4);
	create_insn	(0X710000BEF0);
	create_insn	(0X710000BF00);
	create_insn	(0X710000BF10);
	create_insn	(0X710000BF20);
	create_insn	(0X710000BF30);
	create_insn	(x=0X710000BF34);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000BF58);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000BF68);
	op_stkvar	(x,	1);
	create_insn	(0X710000BF74);
	create_insn	(0X710000BF80);
	create_insn	(0X710000BF88);
	create_insn	(0X710000BF90);
	create_insn	(x=0X710000BF94);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000BF98);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000BF9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000BFA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000BFA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000BFA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000BFEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000BFF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000BFFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000C004);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000C00C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000C014);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000C018);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000C020);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000C028);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000C02C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000C034);
	op_hex		(x,	1);
	create_insn	(x=0X710000C038);
	op_hex		(x,	1);
	create_insn	(x=0X710000C040);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000C048);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000C058);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000C064);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000C068);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000C06C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000C070);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000C07C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000C098);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000C0B4);
	op_hex		(x,	1);
	create_insn	(0X710000C100);
	create_insn	(x=0X710000C10C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000C118);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000C124);
	op_hex		(x,	1);
	create_insn	(0X710000C148);
	create_insn	(x=0X710000C168);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000C16C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000C170);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000C174);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000C178);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000C17C);
	op_stkvar	(x,	1);
	make_array	(0X710000C188,	0X8);
	create_insn	(0X710000C190);
	create_insn	(x=0X710000C194);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000C198);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000C19C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000C1A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000C1A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000C1A8);
	op_stkvar	(x,	1);
	create_insn	(0X710000C20C);
	create_insn	(x=0X710000C218);
	op_hex		(x,	1);
	create_insn	(x=0X710000C21C);
	op_hex		(x,	1);
	create_insn	(x=0X710000C230);
	op_hex		(x,	1);
	create_insn	(x=0X710000C234);
	op_hex		(x,	1);
	create_insn	(x=0X710000C244);
	op_hex		(x,	1);
	create_insn	(x=0X710000C2BC);
	op_hex		(x,	1);
	create_insn	(x=0X710000C2C4);
	op_hex		(x,	1);
	create_insn	(x=0X710000C2D0);
	op_hex		(x,	1);
	create_insn	(x=0X710000C2E4);
	op_hex		(x,	1);
	create_insn	(x=0X710000C2E8);
	op_hex		(x,	1);
	create_insn	(0X710000C34C);
	create_insn	(x=0X710000C360);
	op_hex		(x,	1);
	create_insn	(x=0X710000C364);
	op_hex		(x,	1);
	create_insn	(x=0X710000C378);
	op_hex		(x,	1);
	create_insn	(x=0X710000C37C);
	op_hex		(x,	1);
	create_insn	(x=0X710000C38C);
	op_hex		(x,	1);
	create_insn	(0X710000C3A4);
	create_insn	(x=0X710000C3AC);
	op_hex		(x,	1);
	create_insn	(0X710000C414);
	create_insn	(x=0X710000C428);
	op_hex		(x,	1);
	create_insn	(x=0X710000C42C);
	op_hex		(x,	1);
	create_insn	(x=0X710000C434);
	op_hex		(x,	1);
	create_insn	(x=0X710000C44C);
	op_hex		(x,	1);
	create_insn	(x=0X710000C450);
	op_hex		(x,	1);
	create_insn	(0X710000C4BC);
	create_insn	(x=0X710000C4D0);
	op_hex		(x,	1);
	create_insn	(x=0X710000C4D4);
	op_hex		(x,	1);
	create_insn	(0X710000C510);
	create_insn	(0X710000C530);
	create_insn	(0X710000C55C);
	create_insn	(x=0X710000C570);
	op_hex		(x,	1);
	create_insn	(0X710000C57C);
	create_insn	(x=0X710000C59C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000C5EC);
	op_hex		(x,	1);
	create_insn	(x=0X710000C60C);
	op_hex		(x,	1);
	create_insn	(x=0X710000C610);
	op_hex		(x,	1);
	create_insn	(0X710000C6A8);
	create_insn	(0X710000C6C0);
	create_insn	(x=0X710000C704);
	op_hex		(x,	1);
	create_insn	(x=0X710000C708);
	op_hex		(x,	1);
	create_insn	(0X710000C758);
	create_insn	(x=0X710000C768);
	op_hex		(x,	1);
	create_insn	(0X710000C770);
	create_insn	(x=0X710000C77C);
	op_hex		(x,	1);
	create_insn	(x=0X710000C788);
	op_hex		(x,	1);
	create_insn	(x=0X710000C790);
	op_hex		(x,	1);
	create_insn	(x=0X710000C7E8);
	op_hex		(x,	1);
	create_insn	(x=0X710000C820);
	op_hex		(x,	1);
	create_insn	(x=0X710000C824);
	op_hex		(x,	1);
	create_insn	(x=0X710000C844);
	op_hex		(x,	1);
	create_insn	(x=0X710000C848);
	op_hex		(x,	1);
	create_insn	(x=0X710000C850);
	op_hex		(x,	1);
	create_insn	(x=0X710000C890);
	op_hex		(x,	1);
	create_insn	(0X710000C8AC);
	create_insn	(x=0X710000C8B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000C8B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000C8BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000C8C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000C8C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000C8C8);
	op_stkvar	(x,	1);
	create_insn	(0X710000C8D4);
	create_insn	(0X710000C8DC);
	create_insn	(0X710000C8E0);
	create_insn	(x=0X710000C8E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000C8E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000C8EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000C8F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000C8F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000C930);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000C93C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000C940);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000C948);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000C950);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000C958);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000C95C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000C964);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000C96C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000C970);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000C978);
	op_hex		(x,	1);
	create_insn	(x=0X710000C97C);
	op_hex		(x,	1);
	create_insn	(x=0X710000C984);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000C98C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000C99C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000C9A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000C9AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000C9B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000C9B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000C9C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000C9DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000C9F0);
	op_hex		(x,	1);
	create_insn	(0X710000CA3C);
	create_insn	(x=0X710000CA48);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CA54);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CA60);
	op_hex		(x,	1);
	create_insn	(0X710000CA84);
	create_insn	(x=0X710000CAA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CAA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CAAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CAB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CAB4);
	op_stkvar	(x,	1);
	create_insn	(0X710000CAC0);
	create_insn	(x=0X710000CAC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CAC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CACC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CAD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CAD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CAD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CB1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CB28);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CB2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CB34);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CB3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CB44);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CB48);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CB50);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CB58);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CB5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CB64);
	op_hex		(x,	1);
	create_insn	(x=0X710000CB68);
	op_hex		(x,	1);
	create_insn	(x=0X710000CB70);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CB78);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CB88);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CB94);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CB98);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CBA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CBA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CBAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CBB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CBD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CBE4);
	op_hex		(x,	1);
	create_insn	(0X710000CC30);
	create_insn	(x=0X710000CC3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CC48);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CC54);
	op_hex		(x,	1);
	create_insn	(0X710000CC78);
	create_insn	(x=0X710000CC98);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CC9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CCA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CCA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CCA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CCAC);
	op_stkvar	(x,	1);
	create_insn	(0X710000CCB8);
	create_insn	(x=0X710000CCBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CCC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CCC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CCC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CCCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CCD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CD10);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CD1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CD20);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CD28);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CD30);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CD38);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CD3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CD44);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CD48);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CD4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CD50);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CD58);
	op_hex		(x,	1);
	create_insn	(x=0X710000CD5C);
	op_hex		(x,	1);
	create_insn	(x=0X710000CD64);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CD6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CD7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CD88);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CD8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CD90);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CDA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CDBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CDD0);
	op_hex		(x,	1);
	create_insn	(x=0X710000CE1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CE28);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CE34);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CE40);
	op_hex		(x,	1);
	create_insn	(0X710000CE64);
	create_insn	(0X710000CE70);
	create_insn	(x=0X710000CE90);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CE94);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CE98);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CE9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CEA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CEA4);
	op_stkvar	(x,	1);
	create_insn	(0X710000CEB0);
	create_insn	(x=0X710000CEB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CEB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CEBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CEC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CEC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CEC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CEF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CF14);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CF20);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CF24);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CF2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CF34);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CF3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CF40);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CF48);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CF4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CF50);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CF54);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CF5C);
	op_hex		(x,	1);
	create_insn	(x=0X710000CF60);
	op_hex		(x,	1);
	create_insn	(x=0X710000CF68);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CF70);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CF80);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CF90);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CF94);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CF98);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CF9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CFA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CFC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000CFD4);
	op_hex		(x,	1);
	create_insn	(x=0X710000D024);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D030);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D03C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D048);
	op_hex		(x,	1);
	create_insn	(0X710000D06C);
	create_insn	(0X710000D0C0);
	create_insn	(x=0X710000D0D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D0FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D100);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D104);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D108);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D10C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D110);
	op_stkvar	(x,	1);
	create_insn	(0X710000D11C);
	create_insn	(x=0X710000D13C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D140);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D150);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710000D16C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710000D184);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X710000D19C);
	create_insn	(x=0X710000D1B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710000D1E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D1E8);
	op_stkvar	(x,	1);
	create_insn	(0X710000D1F0);
	create_insn	(x=0X710000D1F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D1F8);
	op_stkvar	(x,	1);
	create_insn	(0X710000D200);
	create_insn	(x=0X710000D208);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D20C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D22C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710000D23C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710000D24C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710000D260);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D268);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D270);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D274);
	op_stkvar	(x,	1);
	create_insn	(0X710000D27C);
	create_insn	(0X710000D284);
	create_insn	(x=0X710000D290);
	op_hex		(x,	1);
	create_insn	(0X710000D2A4);
	create_insn	(x=0X710000D2B0);
	op_hex		(x,	1);
	create_insn	(0X710000D2C4);
	create_insn	(0X710000D2D0);
	create_insn	(0X710000D2DC);
	create_insn	(0X710000D2E8);
	create_insn	(0X710000D2F8);
	create_insn	(x=0X710000D2FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D320);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D334);
	op_stkvar	(x,	1);
	create_insn	(0X710000D340);
	create_insn	(0X710000D348);
	create_insn	(0X710000D350);
	create_insn	(x=0X710000D354);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D358);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D35C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D360);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D364);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D368);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D380);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D3B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D3BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D3C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D3CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D3D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D3DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D3E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D3E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D3E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D3EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D3F4);
	op_hex		(x,	1);
	create_insn	(x=0X710000D3F8);
	op_hex		(x,	1);
	create_insn	(x=0X710000D3FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D404);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D40C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D41C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D42C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D430);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D434);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D438);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D440);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D45C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D478);
	op_hex		(x,	1);
	create_insn	(x=0X710000D48C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D4C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D4D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D4E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D4EC);
	op_hex		(x,	1);
	create_insn	(0X710000D510);
	create_insn	(0X710000D51C);
	create_insn	(x=0X710000D520);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D540);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D544);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D548);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D54C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D550);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D554);
	op_stkvar	(x,	1);
	create_insn	(0X710000D560);
	create_insn	(x=0X710000D564);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D568);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D56C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D570);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D574);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D578);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D588);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D5C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D5CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D5D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D5DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D5E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D5EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D5F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D5F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D5F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D5FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D604);
	op_hex		(x,	1);
	create_insn	(x=0X710000D608);
	op_hex		(x,	1);
	create_insn	(x=0X710000D60C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D614);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D61C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D62C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D63C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D640);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D644);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D648);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D650);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D66C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D688);
	op_hex		(x,	1);
	create_insn	(x=0X710000D69C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D6D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D6E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D6F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D6FC);
	op_hex		(x,	1);
	create_insn	(0X710000D720);
	create_insn	(x=0X710000D740);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D744);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D748);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D74C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D750);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D754);
	op_stkvar	(x,	1);
	create_insn	(0X710000D760);
	create_insn	(x=0X710000D764);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D768);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D76C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D770);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D7B4);
	op_hex		(x,	1);
	create_insn	(x=0X710000D7FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D808);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D814);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D820);
	op_hex		(x,	1);
	create_insn	(0X710000D844);
	create_insn	(x=0X710000D864);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D868);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D86C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D870);
	op_stkvar	(x,	1);
	create_insn	(0X710000D87C);
	create_insn	(x=0X710000D880);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D884);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D888);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D88C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D8D4);
	op_hex		(x,	1);
	create_insn	(x=0X710000D91C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D928);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D934);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D940);
	op_hex		(x,	1);
	create_insn	(0X710000D964);
	create_insn	(x=0X710000D984);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D988);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D98C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D990);
	op_stkvar	(x,	1);
	create_insn	(0X710000D99C);
	create_insn	(x=0X710000D9A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D9A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D9A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D9AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000D9F4);
	op_hex		(x,	1);
	create_insn	(x=0X710000DA3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000DA48);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000DA54);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000DA60);
	op_hex		(x,	1);
	create_insn	(0X710000DA84);
	create_insn	(0X710000DA90);
	create_insn	(x=0X710000DAB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000DAB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000DAB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000DABC);
	op_stkvar	(x,	1);
	create_insn	(0X710000DAC8);
	create_insn	(x=0X710000DACC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000DAD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000DAD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000DAD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000DADC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000DAE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000DB34);
	op_hex		(x,	1);
	create_insn	(x=0X710000DB84);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000DB90);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000DB9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000DBA8);
	op_hex		(x,	1);
	create_insn	(0X710000DBCC);
	create_insn	(0X710000DBD8);
	create_insn	(x=0X710000DC10);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000DC14);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000DC18);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000DC1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000DC20);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000DC24);
	op_stkvar	(x,	1);
	create_insn	(0X710000DC30);
	create_insn	(x=0X710000DC34);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000DC38);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000DC3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000DC40);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000DC44);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000DC48);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000DC54);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000DC90);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710000DCA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000DCA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000DCB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000DCB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000DCC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000DCC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000DCD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000DCDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000DCEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000DCFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000DD04);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000DD08);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000DD0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000DD10);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000DD1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000DD34);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000DD38);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000DD50);
	op_hex		(x,	1);
	create_insn	(x=0X710000DD60);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000DDA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000DDAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000DDB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000DDC4);
	op_hex		(x,	1);
	create_insn	(0X710000DDE8);
	create_insn	(x=0X710000DE08);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000DE0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000DE10);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000DE14);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000DE18);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000DE1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000DE28);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000DE2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000DE3C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710000DE58);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710000DE70);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X710000DE88);
	create_insn	(x=0X710000DEA0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710000DECC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000DED4);
	op_stkvar	(x,	1);
	create_insn	(0X710000DEDC);
	create_insn	(x=0X710000DEE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000DEE4);
	op_stkvar	(x,	1);
	create_insn	(0X710000DEEC);
	create_insn	(x=0X710000DEF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000DEF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000DF18);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710000DF28);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710000DF38);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710000DF4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000DF54);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000DF5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000DF60);
	op_stkvar	(x,	1);
	create_insn	(0X710000DF68);
	create_insn	(0X710000DF70);
	create_insn	(0X710000DF84);
	create_insn	(0X710000DF90);
	create_insn	(0X710000DF98);
	create_insn	(0X710000DFA0);
	create_insn	(x=0X710000DFA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000DFA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000DFAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000DFB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000DFB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000DFB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000DFF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E004);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E00C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E014);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E020);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E024);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E028);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E02C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E030);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E034);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E03C);
	op_hex		(x,	1);
	create_insn	(x=0X710000E040);
	op_hex		(x,	1);
	create_insn	(x=0X710000E044);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E04C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E054);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E064);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E070);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E074);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E078);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E088);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E0A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E0B8);
	op_hex		(x,	1);
	create_insn	(x=0X710000E104);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E110);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E11C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E128);
	op_hex		(x,	1);
	create_insn	(0X710000E14C);
	create_insn	(0X710000E158);
	create_insn	(x=0X710000E178);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E17C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E180);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E184);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E188);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E18C);
	op_stkvar	(x,	1);
	create_insn	(0X710000E198);
	create_insn	(x=0X710000E19C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E1A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E1A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E1A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E1AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E1B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E1F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E1FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E200);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E208);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E210);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E218);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E21C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E224);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E228);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E22C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E230);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E238);
	op_hex		(x,	1);
	create_insn	(x=0X710000E23C);
	op_hex		(x,	1);
	create_insn	(x=0X710000E244);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E24C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E25C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E268);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E26C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E270);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E280);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E29C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E2B0);
	op_hex		(x,	1);
	create_insn	(x=0X710000E2FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E308);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E314);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E320);
	op_hex		(x,	1);
	create_insn	(0X710000E344);
	create_insn	(0X710000E350);
	create_insn	(x=0X710000E370);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E374);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E378);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E37C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E380);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E384);
	op_stkvar	(x,	1);
	create_insn	(0X710000E390);
	create_insn	(x=0X710000E394);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E398);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E39C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E3A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E3A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E3A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E3E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E3F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E3F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E400);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E408);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E410);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E414);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E41C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E420);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E424);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E428);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E430);
	op_hex		(x,	1);
	create_insn	(x=0X710000E434);
	op_hex		(x,	1);
	create_insn	(x=0X710000E43C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E444);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E454);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E460);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E464);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E468);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E478);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E494);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E4A8);
	op_hex		(x,	1);
	create_insn	(x=0X710000E4F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E500);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E50C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E518);
	op_hex		(x,	1);
	create_insn	(0X710000E53C);
	create_insn	(0X710000E548);
	create_insn	(x=0X710000E570);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E574);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E578);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E57C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E580);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E584);
	op_stkvar	(x,	1);
	create_insn	(0X710000E590);
	create_insn	(x=0X710000E594);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E598);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E59C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E5A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E5A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E5A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E5C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E5D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E5F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710000E608);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E614);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E618);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E620);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E628);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E630);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E640);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E648);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E658);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E668);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E670);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E674);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E67C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E680);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E688);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E690);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E694);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E6AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E6B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E6C0);
	op_hex		(x,	1);
	create_insn	(x=0X710000E6C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E6DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E71C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E728);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E734);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E740);
	op_hex		(x,	1);
	create_insn	(0X710000E764);
	create_insn	(x=0X710000E784);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E788);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E78C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E790);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E794);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E798);
	op_stkvar	(x,	1);
	create_insn	(0X710000E7A4);
	create_insn	(x=0X710000E7A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E7AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E7B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E7B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E7FC);
	op_hex		(x,	1);
	create_insn	(x=0X710000E844);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E850);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E85C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E868);
	op_hex		(x,	1);
	create_insn	(0X710000E88C);
	create_insn	(0X710000E898);
	create_insn	(x=0X710000E8C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E8C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E8C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E8CC);
	op_stkvar	(x,	1);
	create_insn	(0X710000E8D8);
	create_insn	(x=0X710000E8DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E8E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E8E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E8E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E8EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E8F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E944);
	op_hex		(x,	1);
	create_insn	(x=0X710000E998);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E9A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E9B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000E9BC);
	op_hex		(x,	1);
	create_insn	(0X710000E9E0);
	create_insn	(0X710000EA34);
	create_insn	(x=0X710000EA6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000EA70);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000EA74);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000EA78);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000EA7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000EA80);
	op_stkvar	(x,	1);
	create_insn	(0X710000EA8C);
	create_insn	(0X710000EAAC);
	create_insn	(x=0X710000EAB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000EAB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000EAB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000EABC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000EAC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000EAC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000EAF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000EB10);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000EB1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000EB20);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000EB28);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000EB30);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000EB38);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000EB3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000EB44);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000EB48);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000EB4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000EB50);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000EB58);
	op_hex		(x,	1);
	create_insn	(x=0X710000EB5C);
	op_hex		(x,	1);
	create_insn	(x=0X710000EB64);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000EB6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000EB7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000EB88);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000EB8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000EB90);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000EB94);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000EBA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000EBBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000EBD8);
	op_hex		(x,	1);
	create_insn	(x=0X710000EC24);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000EC30);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000EC3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000EC48);
	op_hex		(x,	1);
	create_insn	(0X710000EC6C);
	create_insn	(x=0X710000EC8C);
	op_stkvar	(x,	1);
	create_insn	(0X710000ECC4);
	create_insn	(x=0X710000ECD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000ED00);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000ED04);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000ED08);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000ED0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000ED10);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000ED14);
	op_stkvar	(x,	1);
	create_insn	(0X710000ED20);
	create_insn	(0X710000ED40);
	create_insn	(x=0X710000ED44);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000ED48);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000ED4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000ED50);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000ED54);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000EDA4);
	op_hex		(x,	1);
	create_insn	(x=0X710000EDF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000EDFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000EE08);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000EE14);
	op_hex		(x,	1);
	create_insn	(0X710000EE38);
	create_insn	(0X710000EE8C);
	create_insn	(x=0X710000EEC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000EEC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000EECC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000EED0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000EED4);
	op_stkvar	(x,	1);
	create_insn	(0X710000EEE0);
	create_insn	(0X710000EF00);
	create_insn	(x=0X710000EF04);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000EF08);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000EF0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000EF10);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000EF14);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000EF18);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000EF44);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000EF64);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000EF70);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000EF74);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000EF7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000EF84);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000EF8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000EF90);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000EF98);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000EF9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000EFA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000EFA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000EFAC);
	op_hex		(x,	1);
	create_insn	(x=0X710000EFB0);
	op_hex		(x,	1);
	create_insn	(x=0X710000EFB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000EFC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000EFD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000EFDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000EFE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000EFE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000EFE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000EFF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F010);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F02C);
	op_hex		(x,	1);
	create_insn	(x=0X710000F040);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F080);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F08C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F098);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F0A4);
	op_hex		(x,	1);
	create_insn	(0X710000F0C8);
	create_insn	(x=0X710000F0E8);
	op_stkvar	(x,	1);
	create_insn	(0X710000F120);
	create_insn	(x=0X710000F134);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F15C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F160);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F164);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F168);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F16C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F170);
	op_stkvar	(x,	1);
	create_insn	(0X710000F17C);
	create_insn	(0X710000F19C);
	create_insn	(x=0X710000F1A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F1A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F1A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F1AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F1B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F208);
	op_hex		(x,	1);
	create_insn	(x=0X710000F250);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F25C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F268);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F274);
	op_hex		(x,	1);
	create_insn	(0X710000F298);
	create_insn	(0X710000F2EC);
	create_insn	(x=0X710000F324);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F328);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F32C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F330);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F334);
	op_stkvar	(x,	1);
	create_insn	(0X710000F340);
	create_insn	(x=0X710000F360);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F364);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F374);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710000F390);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710000F3A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X710000F3C0);
	create_insn	(x=0X710000F3D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710000F404);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F40C);
	op_stkvar	(x,	1);
	create_insn	(0X710000F414);
	create_insn	(x=0X710000F418);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F41C);
	op_stkvar	(x,	1);
	create_insn	(0X710000F424);
	create_insn	(x=0X710000F42C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F430);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F450);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710000F460);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710000F470);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710000F484);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F48C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F494);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F498);
	op_stkvar	(x,	1);
	create_insn	(0X710000F4A0);
	create_insn	(0X710000F4A8);
	create_insn	(0X710000F4C0);
	create_insn	(0X710000F4D8);
	create_insn	(0X710000F4E4);
	create_insn	(0X710000F4F0);
	create_insn	(0X710000F4FC);
	create_insn	(0X710000F50C);
	create_insn	(0X710000F514);
	create_insn	(0X710000F51C);
	create_insn	(x=0X710000F520);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F524);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F528);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F52C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F530);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F534);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F578);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F584);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F58C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F594);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F5A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F5A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F5AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F5B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F5B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F5BC);
	op_hex		(x,	1);
	create_insn	(x=0X710000F5C0);
	op_hex		(x,	1);
	create_insn	(x=0X710000F5C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F5CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F5D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F5E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F5F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F5F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F5F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F5FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F608);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F624);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F638);
	op_hex		(x,	1);
	create_insn	(0X710000F688);
	create_insn	(x=0X710000F694);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F6A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F6AC);
	op_hex		(x,	1);
	create_insn	(0X710000F6D0);
	create_insn	(x=0X710000F6F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F6F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F6F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F6FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F700);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F704);
	op_stkvar	(x,	1);
	create_insn	(0X710000F710);
	create_insn	(x=0X710000F714);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F718);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F71C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F720);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F724);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F728);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F76C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F778);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F780);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F788);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F794);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F798);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F7A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F7A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F7A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F7B0);
	op_hex		(x,	1);
	create_insn	(x=0X710000F7B4);
	op_hex		(x,	1);
	create_insn	(x=0X710000F7B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F7C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F7C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F7D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F7E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F7E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F7EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F7F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F7FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F818);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F82C);
	op_hex		(x,	1);
	create_insn	(0X710000F87C);
	create_insn	(x=0X710000F888);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F894);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F8A0);
	op_hex		(x,	1);
	create_insn	(0X710000F8C4);
	create_insn	(x=0X710000F8E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F8E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F8EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F8F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F8F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F8F8);
	op_stkvar	(x,	1);
	create_insn	(0X710000F904);
	create_insn	(x=0X710000F908);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F90C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F910);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F914);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F918);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F91C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F960);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F96C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F970);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F978);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F980);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F988);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F98C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F994);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F99C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F9A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F9A8);
	op_hex		(x,	1);
	create_insn	(x=0X710000F9AC);
	op_hex		(x,	1);
	create_insn	(x=0X710000F9B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F9BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F9CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F9D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F9DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F9E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F9E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000F9F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000FA0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000FA20);
	op_hex		(x,	1);
	create_insn	(0X710000FA6C);
	create_insn	(x=0X710000FA78);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000FA84);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000FA90);
	op_hex		(x,	1);
	create_insn	(0X710000FAB4);
	create_insn	(0X710000FB08);
	create_insn	(x=0X710000FB40);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000FB44);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000FB48);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000FB4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000FB50);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000FB54);
	op_stkvar	(x,	1);
	create_insn	(0X710000FB60);
	create_insn	(0X710000FB80);
	create_insn	(x=0X710000FB84);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000FB88);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000FB8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000FB90);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000FB94);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000FBF0);
	op_hex		(x,	1);
	create_insn	(x=0X710000FC98);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000FCA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000FCB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000FCBC);
	op_hex		(x,	1);
	create_insn	(0X710000FCE0);
	create_insn	(x=0X710000FD00);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000FD04);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000FD08);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000FD0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000FD10);
	op_stkvar	(x,	1);
	create_insn	(0X710000FD1C);
	create_insn	(x=0X710000FD20);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000FD24);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000FD28);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000FD2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000FD30);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000FD88);
	op_hex		(x,	1);
	create_insn	(x=0X710000FE24);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000FE30);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000FE3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000FE48);
	op_hex		(x,	1);
	create_insn	(0X710000FE6C);
	create_insn	(x=0X710000FE8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000FE90);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000FE94);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000FE98);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000FE9C);
	op_stkvar	(x,	1);
	create_insn	(0X710000FEA8);
	create_insn	(x=0X710000FEAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000FEB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000FEB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000FEB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000FEBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000FEF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000FF04);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000FF0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000FF14);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000FF20);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000FF24);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000FF2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000FF30);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000FF34);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000FF3C);
	op_hex		(x,	1);
	create_insn	(x=0X710000FF40);
	op_hex		(x,	1);
	create_insn	(x=0X710000FF44);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000FF4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000FF54);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000FF64);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000FF6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000FF70);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000FF74);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000FF78);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000FF88);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000FFA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710000FFB4);
	op_hex		(x,	1);
	create_insn	(0X7100010000);
	create_insn	(x=0X710001000C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010018);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010024);
	op_hex		(x,	1);
	create_insn	(0X7100010048);
	create_insn	(x=0X7100010068);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001006C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010070);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010074);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010078);
	op_stkvar	(x,	1);
	create_insn	(0X7100010084);
	create_insn	(x=0X7100010088);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001008C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010090);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010094);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010098);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000100E4);
	op_hex		(x,	1);
	create_insn	(x=0X7100010134);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010140);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001014C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010158);
	op_hex		(x,	1);
	create_insn	(0X710001017C);
	create_insn	(x=0X710001019C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000101A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000101A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000101A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000101AC);
	op_stkvar	(x,	1);
	create_insn	(0X71000101B8);
	create_insn	(x=0X71000101BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000101C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000101C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000101C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010210);
	op_hex		(x,	1);
	create_insn	(x=0X7100010258);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010264);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010270);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001027C);
	op_hex		(x,	1);
	create_insn	(0X71000102A0);
	create_insn	(0X71000102AC);
	create_insn	(x=0X71000102CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000102D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000102D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000102D8);
	op_stkvar	(x,	1);
	create_insn	(0X71000102E4);
	create_insn	(x=0X71000102E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000102EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000102F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000102F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000102F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010350);
	op_hex		(x,	1);
	create_insn	(x=0X71000103C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000103D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000103DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000103E8);
	op_hex		(x,	1);
	create_insn	(0X710001040C);
	create_insn	(x=0X710001042C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010430);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010434);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010438);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001043C);
	op_stkvar	(x,	1);
	create_insn	(0X7100010448);
	create_insn	(x=0X710001044C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010450);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010454);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010458);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001045C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010460);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000104BC);
	op_hex		(x,	1);
	create_insn	(x=0X7100010504);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010510);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001051C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010528);
	op_hex		(x,	1);
	create_insn	(0X710001054C);
	create_insn	(0X71000105A0);
	create_insn	(x=0X71000105D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000105DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000105E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000105E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000105E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000105EC);
	op_stkvar	(x,	1);
	create_insn	(0X71000105F8);
	create_insn	(0X7100010618);
	create_insn	(x=0X710001061C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010620);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010624);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010628);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001062C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010630);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010684);
	op_hex		(x,	1);
	create_insn	(x=0X71000106D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000106E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000106F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000106FC);
	op_hex		(x,	1);
	create_insn	(0X7100010720);
	create_insn	(x=0X7100010740);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010744);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010748);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001074C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010750);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010754);
	op_stkvar	(x,	1);
	create_insn	(0X7100010760);
	create_insn	(x=0X7100010764);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010768);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001076C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010770);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000107C0);
	op_hex		(x,	1);
	create_insn	(x=0X7100010804);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010810);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001081C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010828);
	op_hex		(x,	1);
	create_insn	(0X710001084C);
	create_insn	(x=0X710001086C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010870);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010874);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010878);
	op_stkvar	(x,	1);
	create_insn	(0X7100010884);
	create_insn	(x=0X7100010888);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001088C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010890);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010894);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010898);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000108F0);
	op_hex		(x,	1);
	create_insn	(x=0X7100010934);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010940);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001094C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010958);
	op_hex		(x,	1);
	create_insn	(0X710001097C);
	create_insn	(0X7100010988);
	create_insn	(x=0X71000109B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000109B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000109B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000109BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000109C0);
	op_stkvar	(x,	1);
	create_insn	(0X71000109CC);
	create_insn	(x=0X71000109D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000109D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000109D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000109DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000109E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000109E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010A44);
	op_hex		(x,	1);
	create_insn	(x=0X7100010B04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010B10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010B1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010B28);
	op_hex		(x,	1);
	create_insn	(0X7100010B4C);
	create_insn	(x=0X7100010B6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010B70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010B74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010B78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010B7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010B80);
	op_stkvar	(x,	1);
	create_insn	(0X7100010B8C);
	create_insn	(x=0X7100010B90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010B94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010B98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010B9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010BA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010BDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010BE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010BEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010BF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010BFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010C04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010C08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010C10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010C18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010C1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010C24);
	op_hex		(x,	1);
	create_insn	(x=0X7100010C28);
	op_hex		(x,	1);
	create_insn	(x=0X7100010C30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010C38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010C48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010C54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010C58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010C5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010C60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010C6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010C88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010C9C);
	op_hex		(x,	1);
	create_insn	(0X7100010CE8);
	create_insn	(x=0X7100010CF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010D00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010D0C);
	op_hex		(x,	1);
	create_insn	(0X7100010D30);
	create_insn	(x=0X7100010D50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010D54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010D58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010D5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010D60);
	op_stkvar	(x,	1);
	create_insn	(0X7100010D6C);
	create_insn	(x=0X7100010D70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010D74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010D78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010D7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010D80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010D84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010DE4);
	op_hex		(x,	1);
	create_insn	(x=0X7100010E5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010E68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010E74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010E80);
	op_hex		(x,	1);
	create_insn	(0X7100010EA4);
	create_insn	(0X7100010EF8);
	create_insn	(x=0X7100010F30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010F34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010F38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010F3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010F40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010F44);
	op_stkvar	(x,	1);
	create_insn	(0X7100010F50);
	create_insn	(0X7100010F70);
	create_insn	(x=0X7100010F74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010F78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010F7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010F80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010F84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010F88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010FCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010FD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010FE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010FE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010FF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100010FF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011000);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011004);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011008);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011010);
	op_hex		(x,	1);
	create_insn	(x=0X7100011014);
	op_hex		(x,	1);
	create_insn	(x=0X7100011018);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011020);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011028);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011038);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011044);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011048);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001104C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011050);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001105C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011078);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011094);
	op_hex		(x,	1);
	create_insn	(0X71000110E0);
	create_insn	(x=0X71000110EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000110F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011104);
	op_hex		(x,	1);
	create_insn	(0X7100011128);
	create_insn	(x=0X7100011148);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001114C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011150);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011154);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011158);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001115C);
	op_stkvar	(x,	1);
	create_insn	(0X7100011168);
	create_insn	(x=0X710001116C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011170);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011174);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011178);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001117C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011180);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000111C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000111CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000111D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000111DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000111E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000111EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000111F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000111F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000111F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000111FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011204);
	op_hex		(x,	1);
	create_insn	(x=0X7100011208);
	op_hex		(x,	1);
	create_insn	(x=0X710001120C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011214);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001121C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001122C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011238);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001123C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011240);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011250);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001126C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011280);
	op_hex		(x,	1);
	create_insn	(x=0X71000112CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000112D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000112E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000112F0);
	op_hex		(x,	1);
	create_insn	(0X7100011314);
	create_insn	(x=0X7100011334);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011338);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001133C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011340);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011344);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011348);
	op_stkvar	(x,	1);
	create_insn	(0X7100011354);
	create_insn	(x=0X7100011358);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001135C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011360);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011364);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011368);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001136C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000113B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000113BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000113C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000113CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000113D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000113DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000113E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000113E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000113EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000113F4);
	op_hex		(x,	1);
	create_insn	(x=0X71000113F8);
	op_hex		(x,	1);
	create_insn	(x=0X71000113FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011404);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001140C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001141C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011424);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011428);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001142C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011430);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011440);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011458);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011474);
	op_hex		(x,	1);
	create_insn	(0X71000114C0);
	create_insn	(x=0X71000114CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000114D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000114E4);
	op_hex		(x,	1);
	create_insn	(0X7100011508);
	create_insn	(x=0X7100011528);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001152C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011530);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011534);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011538);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001153C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011548);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001154C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001155C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100011578);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100011590);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X71000115A8);
	create_insn	(x=0X71000115C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000115EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000115F4);
	op_stkvar	(x,	1);
	create_insn	(0X71000115FC);
	create_insn	(x=0X7100011600);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011604);
	op_stkvar	(x,	1);
	create_insn	(0X710001160C);
	create_insn	(x=0X7100011614);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011618);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011638);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100011648);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100011658);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710001166C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011674);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001167C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011680);
	op_stkvar	(x,	1);
	create_insn	(0X7100011688);
	create_insn	(0X7100011690);
	create_insn	(0X71000116A4);
	create_insn	(0X71000116AC);
	create_insn	(0X71000116B4);
	create_insn	(x=0X71000116B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000116BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000116C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000116C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000116C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011720);
	op_hex		(x,	1);
	create_insn	(x=0X7100011768);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011774);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011780);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001178C);
	op_hex		(x,	1);
	create_insn	(0X71000117B0);
	create_insn	(0X7100011804);
	create_insn	(x=0X710001183C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011840);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011844);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011848);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001184C);
	op_stkvar	(x,	1);
	create_insn	(0X7100011858);
	create_insn	(0X7100011878);
	create_insn	(x=0X710001187C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011880);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011884);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011888);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001188C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011890);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000118E4);
	op_hex		(x,	1);
	create_insn	(x=0X7100011938);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011944);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011950);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001195C);
	op_hex		(x,	1);
	create_insn	(0X7100011980);
	create_insn	(0X71000119D4);
	create_insn	(x=0X7100011A0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011A10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011A14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011A18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011A1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011A20);
	op_stkvar	(x,	1);
	create_insn	(0X7100011A2C);
	create_insn	(0X7100011A4C);
	create_insn	(x=0X7100011A50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011A54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011A58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011A5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011A60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011A64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011A88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011A90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011AB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011AC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011AC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011AD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011ADC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011AE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011AE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011AE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011AEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011AF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011AF8);
	op_hex		(x,	1);
	create_insn	(x=0X7100011AFC);
	op_hex		(x,	1);
	create_insn	(x=0X7100011B00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011B08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011B10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011B20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011B2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011B30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011B38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011B3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011B44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011B50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011B68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011B84);
	op_hex		(x,	1);
	create_insn	(x=0X7100011B88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011B90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011BDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011BE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011BF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011C00);
	op_hex		(x,	1);
	create_insn	(0X7100011C24);
	create_insn	(x=0X7100011C44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011C48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011C4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011C50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011C54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011C58);
	op_stkvar	(x,	1);
	create_insn	(0X7100011C64);
	create_insn	(x=0X7100011C68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011C6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011C70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011C74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011C78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011C7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011CA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011CC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011CD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011CD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011CE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011CEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011CF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011CF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011CF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011CFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011D00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011D08);
	op_hex		(x,	1);
	create_insn	(x=0X7100011D0C);
	op_hex		(x,	1);
	create_insn	(x=0X7100011D10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011D18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011D20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011D30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011D3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011D40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011D44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011D48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011D54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011D70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011D98);
	op_hex		(x,	1);
	create_insn	(x=0X7100011E10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011E1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011E28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011E34);
	op_hex		(x,	1);
	create_insn	(0X7100011E58);
	create_insn	(0X7100011E64);
	create_insn	(x=0X7100011E68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011E88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011E8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011E90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011E94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011E98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011E9C);
	op_stkvar	(x,	1);
	create_insn	(0X7100011EA8);
	create_insn	(x=0X7100011EAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011EB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011EB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011EB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011EBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011EC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011F20);
	op_hex		(x,	1);
	create_insn	(x=0X7100011FA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011FAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011FB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100011FC4);
	op_hex		(x,	1);
	create_insn	(0X7100011FE8);
	create_insn	(0X710001203C);
	create_insn	(x=0X7100012074);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012078);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001207C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012080);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012084);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012088);
	op_stkvar	(x,	1);
	create_insn	(0X7100012094);
	create_insn	(0X71000120B4);
	create_insn	(x=0X71000120B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000120BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000120C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000120C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000120C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000120CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012110);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001211C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012124);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001212C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012138);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001213C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012144);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012148);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001214C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012154);
	op_hex		(x,	1);
	create_insn	(x=0X7100012158);
	op_hex		(x,	1);
	create_insn	(x=0X710001215C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012164);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001216C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001217C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012188);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001218C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012190);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012194);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000121A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000121BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000121E4);
	op_hex		(x,	1);
	create_insn	(0X7100012254);
	create_insn	(x=0X7100012260);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001226C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012278);
	op_hex		(x,	1);
	create_insn	(0X710001229C);
	create_insn	(x=0X71000122BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000122C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000122C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000122C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000122CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000122D0);
	op_stkvar	(x,	1);
	create_insn	(0X71000122DC);
	create_insn	(x=0X71000122E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000122E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000122E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000122EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000122F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000122F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012318);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012320);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012344);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012350);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012358);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012360);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001236C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012370);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012374);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012378);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001237C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012380);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012388);
	op_hex		(x,	1);
	create_insn	(x=0X710001238C);
	op_hex		(x,	1);
	create_insn	(x=0X7100012390);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012398);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000123A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000123B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000123BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000123C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000123C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000123CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000123D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000123E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000123F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012408);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012424);
	op_hex		(x,	1);
	create_insn	(x=0X7100012464);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012498);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000124A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000124B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000124BC);
	op_hex		(x,	1);
	create_insn	(0X71000124E0);
	create_insn	(x=0X7100012500);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012504);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012508);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001250C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012510);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012514);
	op_stkvar	(x,	1);
	create_insn	(0X7100012520);
	create_insn	(x=0X7100012524);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012528);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001252C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012530);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012534);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012538);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012558);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012564);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012588);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100012598);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000125A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000125A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000125B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000125B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000125BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000125CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000125D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000125E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000125F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000125F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000125FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012600);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012608);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012614);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001262C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012654);
	op_hex		(x,	1);
	create_insn	(x=0X7100012658);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012698);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000126CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000126D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000126E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000126F0);
	op_hex		(x,	1);
	create_insn	(0X7100012714);
	create_insn	(x=0X7100012734);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012738);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001273C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012740);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012744);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012748);
	op_stkvar	(x,	1);
	create_insn	(0X7100012754);
	create_insn	(x=0X7100012758);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001275C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012760);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012764);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012768);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001276C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000127D0);
	op_hex		(x,	1);
	create_insn	(x=0X710001284C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012858);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012864);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012870);
	op_hex		(x,	1);
	create_insn	(0X7100012894);
	create_insn	(0X71000128E8);
	create_insn	(x=0X7100012920);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012924);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012928);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001292C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012930);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012934);
	op_stkvar	(x,	1);
	create_insn	(0X7100012940);
	create_insn	(0X7100012960);
	create_insn	(x=0X7100012964);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012968);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001296C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012970);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012974);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012978);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012990);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000129C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000129CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000129D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000129DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000129E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000129EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000129F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000129F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000129F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000129FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012A04);
	op_hex		(x,	1);
	create_insn	(x=0X7100012A08);
	op_hex		(x,	1);
	create_insn	(x=0X7100012A0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012A14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012A1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012A2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012A38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012A3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012A40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012A44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012A50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012A6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012A88);
	op_hex		(x,	1);
	create_insn	(x=0X7100012A8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012AD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012AE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012AF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012AFC);
	op_hex		(x,	1);
	create_insn	(0X7100012B20);
	create_insn	(0X7100012B2C);
	create_insn	(x=0X7100012B30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012B50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012B54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012B58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012B5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012B60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012B64);
	op_stkvar	(x,	1);
	create_insn	(0X7100012B70);
	create_insn	(x=0X7100012B74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012B78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012B7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012B80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012BD0);
	op_hex		(x,	1);
	create_insn	(x=0X7100012C14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012C20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012C2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012C38);
	op_hex		(x,	1);
	create_insn	(0X7100012C5C);
	create_insn	(x=0X7100012C7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012C80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012C84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012C88);
	op_stkvar	(x,	1);
	create_insn	(0X7100012C94);
	create_insn	(x=0X7100012C98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012C9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012CA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012CA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012CA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012CAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012D00);
	op_hex		(x,	1);
	create_insn	(x=0X7100012D54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012D60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012D6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012D78);
	op_hex		(x,	1);
	create_insn	(0X7100012D9C);
	create_insn	(0X7100012DF0);
	create_insn	(x=0X7100012E28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012E2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012E30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012E34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012E38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012E3C);
	op_stkvar	(x,	1);
	create_insn	(0X7100012E48);
	create_insn	(0X7100012E68);
	create_insn	(x=0X7100012E6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012E70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012E74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012E78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012E7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012E80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012EAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012ECC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012ED8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012EDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012EE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012EEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012EF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012EF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012F00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012F04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012F08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012F0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012F14);
	op_hex		(x,	1);
	create_insn	(x=0X7100012F18);
	op_hex		(x,	1);
	create_insn	(x=0X7100012F20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012F28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012F38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012F44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012F48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012F4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012F50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012F5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012F78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012F94);
	op_hex		(x,	1);
	create_insn	(x=0X7100012FE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012FEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100012FF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013004);
	op_hex		(x,	1);
	create_insn	(0X7100013028);
	create_insn	(x=0X7100013048);
	op_stkvar	(x,	1);
	create_insn	(0X7100013080);
	create_insn	(x=0X7100013094);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000130BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000130C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000130C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000130C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000130CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000130D0);
	op_stkvar	(x,	1);
	create_insn	(0X71000130DC);
	create_insn	(x=0X71000130FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013100);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013110);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710001312C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100013144);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X710001315C);
	create_insn	(x=0X7100013174);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000131A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000131A8);
	op_stkvar	(x,	1);
	create_insn	(0X71000131B0);
	create_insn	(x=0X71000131B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000131B8);
	op_stkvar	(x,	1);
	create_insn	(0X71000131C0);
	create_insn	(x=0X71000131C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000131CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000131EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000131FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710001320C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100013220);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013228);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013230);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013234);
	op_stkvar	(x,	1);
	create_insn	(0X710001323C);
	create_insn	(0X7100013244);
	create_insn	(0X7100013250);
	create_insn	(0X710001325C);
	create_insn	(0X7100013274);
	create_insn	(0X7100013280);
	create_insn	(0X710001328C);
	create_insn	(0X71000132A4);
	create_insn	(0X71000132BC);
	create_insn	(0X71000132C8);
	create_insn	(0X71000132D8);
	create_insn	(0X71000132E8);
	create_insn	(0X71000132F4);
	create_insn	(0X710001330C);
	create_insn	(0X7100013324);
	create_insn	(0X7100013330);
	create_insn	(0X710001333C);
	create_insn	(0X7100013348);
	create_insn	(0X7100013358);
	create_insn	(0X7100013364);
	create_insn	(0X7100013374);
	create_insn	(0X7100013380);
	create_insn	(0X7100013390);
	create_insn	(0X71000133B0);
	create_insn	(0X71000133D4);
	create_insn	(0X71000133EC);
	create_insn	(0X7100013404);
	create_insn	(x=0X7100013408);
	op_hex		(x,	1);
	create_insn	(0X7100013414);
	create_insn	(0X7100013434);
	create_insn	(0X7100013458);
	create_insn	(0X7100013470);
	create_insn	(0X7100013488);
	create_insn	(0X7100013494);
	create_insn	(0X71000134A0);
	create_insn	(0X71000134AC);
	create_insn	(0X71000134C4);
	create_insn	(x=0X71000134C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000134E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013500);
	op_stkvar	(x,	1);
	create_insn	(0X710001350C);
	create_insn	(0X710001351C);
	create_insn	(0X710001352C);
	create_insn	(0X7100013538);
	create_insn	(0X7100013544);
	create_insn	(0X7100013550);
	create_insn	(0X7100013560);
	create_insn	(x=0X7100013574);
	op_hex		(x,	1);
	create_insn	(0X7100013580);
	create_insn	(0X7100013590);
	create_insn	(0X7100013598);
	create_insn	(0X71000135A0);
	create_insn	(x=0X71000135A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000135A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000135AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000135B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000135B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000135B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000135D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013600);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001360C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013614);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001361C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013628);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001362C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013630);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013634);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013638);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001363C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013644);
	op_hex		(x,	1);
	create_insn	(x=0X7100013648);
	op_hex		(x,	1);
	create_insn	(x=0X710001364C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013654);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001365C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001366C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013678);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001367C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013680);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013684);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013690);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000136AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000136C0);
	op_hex		(x,	1);
	create_insn	(x=0X710001370C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013718);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013724);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013730);
	op_hex		(x,	1);
	create_insn	(0X7100013754);
	create_insn	(0X7100013760);
	create_insn	(x=0X7100013768);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001378C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013790);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013794);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013798);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001379C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000137A0);
	op_stkvar	(x,	1);
	create_insn	(0X71000137AC);
	create_insn	(x=0X71000137B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000137B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000137B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000137BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000137C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013814);
	op_hex		(x,	1);
	create_insn	(x=0X7100013858);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013864);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013870);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001387C);
	op_hex		(x,	1);
	create_insn	(0X71000138A0);
	create_insn	(0X71000138AC);
	create_insn	(x=0X71000138CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000138D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000138D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000138D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000138DC);
	op_stkvar	(x,	1);
	create_insn	(0X71000138E8);
	create_insn	(x=0X71000138EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000138F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000138F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000138F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013940);
	op_hex		(x,	1);
	create_insn	(x=0X7100013988);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013994);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000139A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000139AC);
	op_hex		(x,	1);
	create_insn	(0X71000139D0);
	create_insn	(0X71000139DC);
	create_insn	(x=0X71000139FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013A00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013A04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013A08);
	op_stkvar	(x,	1);
	create_insn	(0X7100013A14);
	create_insn	(x=0X7100013A18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013A1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013A20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013A24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013A28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013A74);
	op_hex		(x,	1);
	create_insn	(x=0X7100013AC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013AD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013ADC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013AE8);
	op_hex		(x,	1);
	create_insn	(0X7100013B0C);
	create_insn	(x=0X7100013B2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013B30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013B34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013B38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013B3C);
	op_stkvar	(x,	1);
	create_insn	(0X7100013B48);
	create_insn	(x=0X7100013B4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013B50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013B54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013B58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013B5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013BB4);
	op_hex		(x,	1);
	create_insn	(x=0X7100013BF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013C04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013C10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013C1C);
	op_hex		(x,	1);
	create_insn	(0X7100013C40);
	create_insn	(0X7100013C4C);
	create_insn	(x=0X7100013C74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013C78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013C7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013C80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013C84);
	op_stkvar	(x,	1);
	create_insn	(0X7100013C90);
	create_insn	(x=0X7100013C94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013C98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013C9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013CA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013CA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013CF8);
	op_hex		(x,	1);
	create_insn	(x=0X7100013D3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013D48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013D54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013D60);
	op_hex		(x,	1);
	create_insn	(0X7100013D84);
	create_insn	(0X7100013D90);
	create_insn	(x=0X7100013DB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013DB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013DB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013DBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013DC0);
	op_stkvar	(x,	1);
	create_insn	(0X7100013DCC);
	create_insn	(x=0X7100013DD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013DD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013DD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013DDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013DE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013DE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013E28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013E34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013E3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013E44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013E50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013E54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013E5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013E60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013E64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013E6C);
	op_hex		(x,	1);
	create_insn	(x=0X7100013E70);
	op_hex		(x,	1);
	create_insn	(x=0X7100013E74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013E7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013E84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013E94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013EA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013EA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013EA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013EAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013EB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013ED4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013EF0);
	op_hex		(x,	1);
	create_insn	(0X7100013F3C);
	create_insn	(x=0X7100013F48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013F54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013F60);
	op_hex		(x,	1);
	create_insn	(0X7100013F84);
	create_insn	(x=0X7100013FA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013FA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013FAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013FB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013FB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013FB8);
	op_stkvar	(x,	1);
	create_insn	(0X7100013FC4);
	create_insn	(x=0X7100013FC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013FCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013FD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013FD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013FD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013FDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100013FEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014008);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001402C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710001403C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014044);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001404C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014054);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001405C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014060);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014070);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014078);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014088);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014094);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014098);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000140A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000140A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000140AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000140B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000140D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000140E4);
	op_hex		(x,	1);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_2(void) {
        auto x;
#define id x

	create_insn	(x=0X71000140E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014100);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014140);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001414C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014158);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014164);
	op_hex		(x,	1);
	create_insn	(0X7100014188);
	create_insn	(x=0X71000141A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000141AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000141B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000141B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000141B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000141BC);
	op_stkvar	(x,	1);
	create_insn	(0X71000141C8);
	create_insn	(x=0X71000141CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000141D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000141D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000141D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000141DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000141E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014224);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014230);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014238);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014240);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001424C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014250);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014258);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001425C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014260);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014268);
	op_hex		(x,	1);
	create_insn	(x=0X710001426C);
	op_hex		(x,	1);
	create_insn	(x=0X7100014270);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014278);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014280);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014290);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001429C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000142A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000142A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000142A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000142B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000142D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000142E4);
	op_hex		(x,	1);
	create_insn	(0X7100014334);
	create_insn	(x=0X7100014340);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001434C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014358);
	op_hex		(x,	1);
	create_insn	(0X710001437C);
	create_insn	(x=0X710001439C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000143A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000143A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000143A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000143AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000143B0);
	op_stkvar	(x,	1);
	create_insn	(0X71000143BC);
	create_insn	(x=0X71000143C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000143C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000143C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000143CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001441C);
	op_hex		(x,	1);
	create_insn	(x=0X7100014460);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001446C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014478);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014484);
	op_hex		(x,	1);
	create_insn	(0X71000144A8);
	create_insn	(x=0X71000144C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000144CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000144D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000144D4);
	op_stkvar	(x,	1);
	create_insn	(0X71000144E0);
	create_insn	(x=0X71000144E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000144E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000144EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000144F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000144F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000144F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014538);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014544);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001454C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014554);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014560);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014564);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014568);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001456C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014570);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014574);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001457C);
	op_hex		(x,	1);
	create_insn	(x=0X7100014580);
	op_hex		(x,	1);
	create_insn	(x=0X7100014584);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001458C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014594);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000145A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000145AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000145B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000145B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000145C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000145E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000145F4);
	op_hex		(x,	1);
	create_insn	(x=0X7100014640);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001464C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014658);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014664);
	op_hex		(x,	1);
	create_insn	(0X7100014688);
	create_insn	(x=0X71000146A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000146AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000146B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000146B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000146B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000146BC);
	op_stkvar	(x,	1);
	create_insn	(0X71000146C8);
	create_insn	(x=0X71000146CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000146D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000146D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000146D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014720);
	op_hex		(x,	1);
	create_insn	(x=0X7100014768);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014774);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014780);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001478C);
	op_hex		(x,	1);
	create_insn	(0X71000147B0);
	create_insn	(0X71000147BC);
	create_insn	(x=0X71000147DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000147E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000147E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000147E8);
	op_stkvar	(x,	1);
	create_insn	(0X71000147F4);
	create_insn	(x=0X71000147F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000147FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014800);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014804);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001484C);
	op_hex		(x,	1);
	create_insn	(x=0X7100014894);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000148A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000148AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000148B8);
	op_hex		(x,	1);
	create_insn	(0X71000148DC);
	create_insn	(0X71000148E8);
	create_insn	(x=0X7100014920);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014924);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014928);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001492C);
	op_stkvar	(x,	1);
	create_insn	(0X7100014938);
	create_insn	(x=0X710001493C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014940);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014944);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014948);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001494C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014950);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001495C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001497C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000149A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000149B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000149B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000149C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000149C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000149D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000149D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000149E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000149EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000149FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014A0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014A14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014A18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014A20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014A24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014A2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014A34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014A38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014A50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014A54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014A64);
	op_hex		(x,	1);
	create_insn	(x=0X7100014A68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014A80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014AC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014ACC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014AD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014AE4);
	op_hex		(x,	1);
	create_insn	(0X7100014B08);
	create_insn	(x=0X7100014B28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014B2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014B30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014B34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014B38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014B3C);
	op_stkvar	(x,	1);
	create_insn	(0X7100014B48);
	create_insn	(x=0X7100014B4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014B50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014B54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014B58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014B5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014BB4);
	op_hex		(x,	1);
	create_insn	(x=0X7100014BF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014C04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014C10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014C1C);
	op_hex		(x,	1);
	create_insn	(0X7100014C40);
	create_insn	(0X7100014C4C);
	create_insn	(x=0X7100014C74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014C78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014C7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014C80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014C84);
	op_stkvar	(x,	1);
	create_insn	(0X7100014C90);
	create_insn	(x=0X7100014C94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014C98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014C9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014CA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014CA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014CA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014D00);
	op_hex		(x,	1);
	create_insn	(x=0X7100014D58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014D64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014D70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014D7C);
	op_hex		(x,	1);
	create_insn	(0X7100014DA0);
	create_insn	(x=0X7100014DC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014DC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014DC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014DCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014DD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014DD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014DE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014DE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014DF4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100014E10);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100014E28);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7100014E40);
	create_insn	(x=0X7100014E58);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100014E84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014E8C);
	op_stkvar	(x,	1);
	create_insn	(0X7100014E94);
	create_insn	(x=0X7100014E98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014E9C);
	op_stkvar	(x,	1);
	create_insn	(0X7100014EA4);
	create_insn	(x=0X7100014EAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014EB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014ED0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100014EE0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100014EF0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100014F04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014F0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014F14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014F18);
	op_stkvar	(x,	1);
	create_insn	(0X7100014F20);
	create_insn	(0X7100014F28);
	create_insn	(0X7100014F34);
	create_insn	(0X7100014F3C);
	create_insn	(0X7100014F44);
	create_insn	(x=0X7100014F48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014F4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014F50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014F54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014F9C);
	op_hex		(x,	1);
	create_insn	(x=0X7100014FE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014FF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100014FFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015008);
	op_hex		(x,	1);
	create_insn	(0X710001502C);
	create_insn	(x=0X7100015038);
	op_stkvar	(x,	1);
	set_cmt	(0X710001503C,	"result",	0);
	create_insn	(x=0X7100015078);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001507C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015080);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015084);
	op_stkvar	(x,	1);
	create_insn	(0X7100015090);
	create_insn	(x=0X7100015094);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015098);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001509C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000150A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000150A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000150F4);
	op_hex		(x,	1);
	create_insn	(x=0X7100015144);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015150);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001515C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015168);
	op_hex		(x,	1);
	create_insn	(0X710001518C);
	create_insn	(x=0X71000151AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000151B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000151B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000151B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000151BC);
	op_stkvar	(x,	1);
	create_insn	(0X71000151C8);
	create_insn	(x=0X71000151CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000151D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000151D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000151D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000151DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001522C);
	op_hex		(x,	1);
	create_insn	(x=0X7100015278);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015284);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015290);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001529C);
	op_hex		(x,	1);
	create_insn	(0X71000152C0);
	create_insn	(0X71000152CC);
	create_insn	(x=0X71000152EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000152F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000152F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000152F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000152FC);
	op_stkvar	(x,	1);
	create_insn	(0X7100015308);
	create_insn	(x=0X710001530C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015310);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015314);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015318);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001531C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015320);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015360);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001536C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015374);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001537C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015388);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001538C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015390);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015394);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015398);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001539C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000153A4);
	op_hex		(x,	1);
	create_insn	(x=0X71000153A8);
	op_hex		(x,	1);
	create_insn	(x=0X71000153AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000153B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000153BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000153CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000153D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000153DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000153E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000153F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001540C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015420);
	op_hex		(x,	1);
	create_insn	(x=0X710001546C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015478);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015484);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015490);
	op_hex		(x,	1);
	create_insn	(0X71000154B4);
	create_insn	(x=0X71000154D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000154D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000154DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000154E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000154E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000154E8);
	op_stkvar	(x,	1);
	create_insn	(0X71000154F4);
	create_insn	(x=0X71000154F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000154FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015500);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015504);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015508);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015558);
	op_hex		(x,	1);
	create_insn	(x=0X71000155A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000155B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000155C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000155CC);
	op_hex		(x,	1);
	create_insn	(0X71000155F0);
	create_insn	(0X71000155FC);
	create_insn	(x=0X710001561C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015620);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015624);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015628);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001562C);
	op_stkvar	(x,	1);
	create_insn	(0X7100015638);
	create_insn	(x=0X710001563C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015640);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015644);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015648);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001564C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000156A4);
	op_hex		(x,	1);
	create_insn	(x=0X71000156F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015704);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015710);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001571C);
	op_hex		(x,	1);
	create_insn	(0X7100015740);
	create_insn	(x=0X7100015760);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015764);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015768);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001576C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015770);
	op_stkvar	(x,	1);
	create_insn	(0X710001577C);
	create_insn	(x=0X7100015780);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015784);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015788);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001578C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015790);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015794);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000157B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000157DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000157E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000157EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000157F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000157FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015804);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015808);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015810);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015814);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015818);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001581C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015824);
	op_hex		(x,	1);
	create_insn	(x=0X7100015828);
	op_hex		(x,	1);
	create_insn	(x=0X7100015830);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015838);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015848);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015858);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001585C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015860);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015864);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001586C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015888);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001589C);
	op_hex		(x,	1);
	create_insn	(x=0X71000158EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000158F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015904);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015910);
	op_hex		(x,	1);
	create_insn	(0X7100015934);
	create_insn	(0X7100015940);
	create_insn	(x=0X7100015948);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001596C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015970);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015974);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015978);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001597C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015980);
	op_stkvar	(x,	1);
	create_insn	(0X710001598C);
	create_insn	(x=0X7100015990);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015994);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015998);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001599C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000159A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000159EC);
	op_hex		(x,	1);
	create_insn	(x=0X7100015A3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015A48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015A54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015A60);
	op_hex		(x,	1);
	create_insn	(0X7100015A84);
	create_insn	(x=0X7100015AA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015AA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015AAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015AB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015AB4);
	op_stkvar	(x,	1);
	create_insn	(0X7100015AC0);
	create_insn	(x=0X7100015AC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015AC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015ACC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015AD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015AD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015B28);
	op_hex		(x,	1);
	create_insn	(x=0X7100015B6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015B78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015B84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015B90);
	op_hex		(x,	1);
	create_insn	(0X7100015BB4);
	create_insn	(0X7100015BC0);
	create_insn	(x=0X7100015BE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015BE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015BE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015BEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015BF0);
	op_stkvar	(x,	1);
	create_insn	(0X7100015BFC);
	create_insn	(x=0X7100015C00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015C04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015C08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015C0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015C10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015C14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015C58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015C64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015C6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015C74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015C80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015C84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015C8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015C90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015C94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015C9C);
	op_hex		(x,	1);
	create_insn	(x=0X7100015CA0);
	op_hex		(x,	1);
	create_insn	(x=0X7100015CA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015CAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015CB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015CC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015CD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015CD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015CD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015CDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015CE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015D04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015D20);
	op_hex		(x,	1);
	create_insn	(0X7100015D6C);
	create_insn	(x=0X7100015D78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015D84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015D90);
	op_hex		(x,	1);
	create_insn	(0X7100015DB4);
	create_insn	(x=0X7100015DD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015DD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015DDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015DE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015DE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015DE8);
	op_stkvar	(x,	1);
	create_insn	(0X7100015DF4);
	create_insn	(x=0X7100015DF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015DFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015E00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015E04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015E08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015E58);
	op_hex		(x,	1);
	create_insn	(x=0X7100015EA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015EB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015EC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015ECC);
	op_hex		(x,	1);
	create_insn	(0X7100015EF0);
	create_insn	(0X7100015EFC);
	create_insn	(x=0X7100015F1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015F20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015F24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015F28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015F2C);
	op_stkvar	(x,	1);
	create_insn	(0X7100015F38);
	create_insn	(x=0X7100015F3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015F40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015F44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015F48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015F9C);
	op_hex		(x,	1);
	create_insn	(x=0X7100015FE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015FF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100015FFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016008);
	op_hex		(x,	1);
	create_insn	(0X710001602C);
	create_insn	(x=0X710001604C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016050);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016054);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016058);
	op_stkvar	(x,	1);
	create_insn	(0X7100016064);
	create_insn	(x=0X7100016068);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001606C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016070);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016074);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000160C8);
	op_hex		(x,	1);
	create_insn	(x=0X7100016110);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001611C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016128);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016134);
	op_hex		(x,	1);
	create_insn	(0X7100016158);
	create_insn	(x=0X7100016178);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001617C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016180);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016184);
	op_stkvar	(x,	1);
	create_insn	(0X7100016190);
	create_insn	(x=0X7100016194);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016198);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001619C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000161A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000161A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000161F0);
	op_hex		(x,	1);
	create_insn	(x=0X7100016238);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016244);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016250);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001625C);
	op_hex		(x,	1);
	create_insn	(0X7100016280);
	create_insn	(0X710001628C);
	create_insn	(x=0X71000162AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000162B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000162B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000162B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000162BC);
	op_stkvar	(x,	1);
	create_insn	(0X71000162C8);
	create_insn	(x=0X71000162CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000162D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000162D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000162D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016320);
	op_hex		(x,	1);
	create_insn	(x=0X7100016368);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016374);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016380);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001638C);
	op_hex		(x,	1);
	create_insn	(0X71000163B0);
	create_insn	(0X71000163BC);
	create_insn	(x=0X7100016414);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016418);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001641C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016420);
	op_stkvar	(x,	1);
	create_insn	(0X710001642C);
	create_insn	(x=0X7100016430);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016434);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016438);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001643C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016440);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016444);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016484);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016490);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016498);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000164A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000164AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000164B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000164B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000164B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000164BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000164C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000164C8);
	op_hex		(x,	1);
	create_insn	(x=0X71000164CC);
	op_hex		(x,	1);
	create_insn	(x=0X71000164D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000164D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000164E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000164F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000164FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016500);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016504);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016514);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001652C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016540);
	op_hex		(x,	1);
	create_insn	(x=0X7100016590);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001659C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000165A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000165B4);
	op_hex		(x,	1);
	create_insn	(0X71000165D8);
	create_insn	(x=0X71000165F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000165FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016600);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016604);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016608);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001660C);
	op_stkvar	(x,	1);
	create_insn	(0X7100016618);
	create_insn	(x=0X710001661C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016620);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016624);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016628);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001662C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016678);
	op_hex		(x,	1);
	create_insn	(x=0X71000166C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000166D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000166DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000166E8);
	op_hex		(x,	1);
	create_insn	(0X710001670C);
	create_insn	(x=0X710001672C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016730);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016734);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016738);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001673C);
	op_stkvar	(x,	1);
	create_insn	(0X7100016748);
	create_insn	(x=0X710001674C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016750);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016754);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016758);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000167A0);
	op_hex		(x,	1);
	create_insn	(x=0X71000167E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000167F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016800);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001680C);
	op_hex		(x,	1);
	create_insn	(0X7100016830);
	create_insn	(0X710001683C);
	create_insn	(x=0X7100016894);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016898);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001689C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000168A0);
	op_stkvar	(x,	1);
	create_insn	(0X71000168AC);
	create_insn	(x=0X71000168B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000168B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000168B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000168BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000168C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001690C);
	op_hex		(x,	1);
	create_insn	(x=0X7100016954);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016960);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001696C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016978);
	op_hex		(x,	1);
	create_insn	(0X710001699C);
	create_insn	(0X71000169A8);
	create_insn	(x=0X71000169D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000169D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000169D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000169DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000169E0);
	op_stkvar	(x,	1);
	create_insn	(0X71000169EC);
	create_insn	(x=0X71000169F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000169F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000169F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000169FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016A00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016A54);
	op_hex		(x,	1);
	create_insn	(x=0X7100016A98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016AA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016AB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016ABC);
	op_hex		(x,	1);
	create_insn	(0X7100016AE0);
	create_insn	(0X7100016AEC);
	create_insn	(x=0X7100016B0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016B10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016B14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016B18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016B1C);
	op_stkvar	(x,	1);
	create_insn	(0X7100016B28);
	create_insn	(x=0X7100016B2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016B30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016B34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016B38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016B8C);
	op_hex		(x,	1);
	create_insn	(x=0X7100016BE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016BEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016BF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016C04);
	op_hex		(x,	1);
	create_insn	(0X7100016C28);
	create_insn	(x=0X7100016C48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016C4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016C50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016C54);
	op_stkvar	(x,	1);
	create_insn	(0X7100016C60);
	create_insn	(x=0X7100016C64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016C68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016C6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016C70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016C74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016CC4);
	op_hex		(x,	1);
	create_insn	(x=0X7100016D14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016D20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016D2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016D38);
	op_hex		(x,	1);
	create_insn	(0X7100016D5C);
	create_insn	(x=0X7100016D7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016D80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016D84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016D88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016D8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016D98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016D9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016DAC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100016DC8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100016DE0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7100016DF8);
	create_insn	(x=0X7100016E10);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100016E3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016E44);
	op_stkvar	(x,	1);
	create_insn	(0X7100016E4C);
	create_insn	(x=0X7100016E50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016E54);
	op_stkvar	(x,	1);
	create_insn	(0X7100016E5C);
	create_insn	(x=0X7100016E64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016E68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016E88);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100016E98);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100016EA8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100016EBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016EC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016ECC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016ED0);
	op_stkvar	(x,	1);
	create_insn	(0X7100016ED8);
	create_insn	(x=0X7100016EE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016EE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016F20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016F24);
	op_stkvar	(x,	1);
	create_insn	(0X7100016F2C);
	create_insn	(0X7100016F38);
	create_insn	(0X7100016F40);
	create_insn	(0X7100016F48);
	create_insn	(x=0X7100016F4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016F50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016F54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016F58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100016FBC);
	op_hex		(x,	1);
	create_insn	(x=0X7100017008);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017014);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017020);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001702C);
	op_hex		(x,	1);
	create_insn	(0X7100017050);
	create_insn	(x=0X7100017070);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017074);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017078);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001707C);
	op_stkvar	(x,	1);
	create_insn	(0X7100017088);
	create_insn	(x=0X710001708C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017090);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017094);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017098);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001709C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000170A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000170C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001711C);
	op_hex		(x,	1);
	create_insn	(x=0X7100017168);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017174);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017180);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001718C);
	op_hex		(x,	1);
	create_insn	(0X71000171B4);
	set_cmt	(0X71000171C0,	"result",	0);
	create_insn	(x=0X7100017204);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017218);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017254);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017258);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001725C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017260);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017264);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017268);
	op_stkvar	(x,	1);
	create_insn	(0X7100017274);
	create_insn	(x=0X7100017280);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017284);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017294);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000172B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000172C8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X71000172E0);
	create_insn	(x=0X71000172F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100017324);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001732C);
	op_stkvar	(x,	1);
	create_insn	(0X7100017334);
	create_insn	(x=0X7100017338);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001733C);
	op_stkvar	(x,	1);
	create_insn	(0X7100017344);
	create_insn	(x=0X710001734C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017350);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017370);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100017380);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100017390);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000173A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000173AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000173B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000173B8);
	op_stkvar	(x,	1);
	create_insn	(0X71000173C0);
	create_insn	(0X71000173C8);
	create_insn	(0X71000173D4);
	create_insn	(0X71000173E0);
	create_insn	(0X71000173E8);
	create_insn	(x=0X71000173F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000173F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000173F8);
	op_stkvar	(x,	1);
	create_insn	(0X7100017468);
	create_insn	(x=0X710001748C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017490);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017494);
	op_stkvar	(x,	1);
	create_insn	(0X710001749C);
	create_insn	(x=0X71000174B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000174B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000174BC);
	op_stkvar	(x,	1);
	make_array	(0X71000174C4,	0XC);
	create_insn	(0X71000174D0);
	create_insn	(x=0X71000174D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000174D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000174DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000174E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001750C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017518);
	op_stkvar	(x,	1);
	create_insn	(0X7100017540);
	create_insn	(x=0X7100017578);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017580);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017588);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001758C);
	op_stkvar	(x,	1);
	create_insn	(0X71000175D0);
	create_insn	(x=0X71000175EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000175F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000175FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017600);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017640);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017644);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017648);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001764C);
	op_stkvar	(x,	1);
	make_array	(0X7100017658,	0X8);
	create_insn	(x=0X7100017660);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017664);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017668);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001766C);
	op_stkvar	(x,	1);
	create_insn	(0X7100017690);
	create_insn	(0X71000176D0);
	create_insn	(0X71000176E4);
	create_insn	(0X7100017720);
	create_insn	(0X7100017734);
	create_insn	(x=0X7100017758);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001775C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017760);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017764);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001776C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017770);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017774);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001777C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100017784);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X71000177B4,	"result",	0);
	set_cmt	(0X71000177C4,	"result",	0);
	create_insn	(x=0X71000177C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000177CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000177D0);
	op_stkvar	(x,	1);
	make_array	(0X71000177D8,	0X8);
	create_insn	(x=0X71000177E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000177E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000177E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017848);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001784C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017850);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017858);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001785C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017860);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001789C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000178A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000178A4);
	op_stkvar	(x,	1);
	create_insn	(0X71000178AC);
	create_insn	(x=0X71000178B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000178BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000178C0);
	op_stkvar	(x,	1);
	make_array	(0X71000178C8,	0X8);
	create_insn	(0X71000178D0);
	create_insn	(x=0X71000178D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000178D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000178DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000178E0);
	op_stkvar	(x,	1);
	create_insn	(0X710001790C);
	create_insn	(x=0X7100017930);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017938);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017944);
	op_stkvar	(x,	1);
	create_insn	(0X7100017978);
	create_insn	(0X71000179A8);
	create_insn	(x=0X71000179C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000179C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000179CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000179D0);
	op_stkvar	(x,	1);
	make_array	(0X71000179DC,	0X4);
	create_insn	(0X71000179E0);
	create_insn	(x=0X71000179E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000179E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000179EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017A50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017A58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017A60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017A64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017A98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017A9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017AA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017AB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017AB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017AB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017ACC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100017AF4,	"result",	0);
	set_cmt	(0X7100017B04,	"result",	0);
	create_insn	(x=0X7100017B08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017B0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017B10);
	op_stkvar	(x,	1);
	create_insn	(0X7100017B18);
	create_insn	(0X7100017B20);
	create_insn	(x=0X7100017B24);
	op_hex		(x,	1);
	make_array	(0X7100017B2C,	0X4);
	create_insn	(x=0X7100017B30);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100017B34);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100017B3C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100017B44);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100017B50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017B58);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100017B68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017B70);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100017B84);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100017B8C);
	op_stkvar	(x,	1);
	make_array	(0X7100017B94,	0XC);
	create_insn	(0X7100017BA0);
	set_name	(0X7100017BA0,	"nullsub_22");
	make_array	(0X7100017BA4,	0XC);
	create_insn	(0X7100017BB0);
	create_insn	(x=0X7100017BB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017BB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017BC4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100017BCC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100017BE4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100017C00);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100017C04);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100017C18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017C20);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100017C24);
	op_stkvar	(x,	1);
	set_cmt	(0X7100017C28,	"__int64",	0);
	create_insn	(0X7100017C34);
	create_insn	(0X7100017C3C);
	create_insn	(x=0X7100017C54);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100017C58,	"__int64",	0);
	create_insn	(x=0X7100017C60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017C64);
	op_stkvar	(x,	1);
	create_dword	(0X7100017C6C);
	create_insn	(x=0X7100017C70);
	op_stkvar	(x,	1);
	set_name	(0X7100017C70,	"_ZN2nn2fs6detail8AllocateEm");
	create_insn	(x=0X7100017C74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017C80);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100017C8C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100017C94);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100017C9C);
	op_hex		(x,	1);
	create_insn	(x=0X7100017CA8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100017CB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017CBC);
	op_stkvar	(x,	1);
	create_insn	(0X7100017CC4);
	create_insn	(x=0X7100017CCC);
	op_stkvar	(x,	1);
	create_qword	(0X7100017CD8);
	create_insn	(0X7100017CE0);
	set_name	(0X7100017CE0,	"_ZN2nn2fs6detail10DeallocateEPvm");
	create_insn	(x=0X7100017CE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017CE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017CEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017CF4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100017D0C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100017D14);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100017D24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017D28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017D2C);
	op_stkvar	(x,	1);
	create_insn	(0X7100017D34);
	create_insn	(0X7100017D38);
	set_name	(0X7100017D38,	"j_delete_0");
	create_insn	(x=0X7100017D3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017D40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017D48);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100017D58);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100017D60);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100017D68);
	op_hex		(x,	1);
	create_insn	(x=0X7100017D74);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100017D84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017D88);
	op_stkvar	(x,	1);
	create_insn	(0X7100017D90);
	create_insn	(x=0X7100017D98);
	op_stkvar	(x,	1);
	create_insn	(0X7100017DA4);
	create_insn	(x=0X7100017DA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017DAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017DB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017DB8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100017DD0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100017DD8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100017DE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017DEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017DF0);
	op_stkvar	(x,	1);
	create_insn	(0X7100017DF8);
	create_insn	(0X7100017DFC);
	make_array	(0X7100017E08,	0X8);
	create_insn	(x=0X7100017E10);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100017E18);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7100017E20);
	make_array	(0X7100017E24,	0XC);
	create_insn	(0X7100017E30);
	create_insn	(x=0X7100017E34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017E50);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100017E5C);
	op_stkvar	(x,	1);
	create_insn	(0X7100017E68);
	create_insn	(0X7100017E74);
	create_insn	(x=0X7100017E7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017E80);
	op_stkvar	(x,	1);
	create_qword	(0X7100017E88);
	create_insn	(x=0X7100017E90);
	op_stkvar	(x,	1);
	set_name	(0X7100017E90,	"_ZN2nn2fs6detail13IsAbortNeededENS_6ResultE");
	create_insn	(x=0X7100017E94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017EAC);
	op_hex		(x,	1);
	create_insn	(x=0X7100017ECC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100017ED0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100017EDC);
	op_hex		(x,	1);
	create_insn	(x=0X7100017F00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017F04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017F0C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100017F10);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100017F14);
	op_hex		(x,	1);
	create_insn	(x=0X7100017F30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017F34);
	op_stkvar	(x,	1);
	create_insn	(0X7100017F3C);
	create_insn	(x=0X7100017F4C);
	op_hex		(x,	1);
	create_insn	(x=0X7100017F60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017F64);
	op_stkvar	(x,	1);
	create_insn	(0X7100017F6C);
	create_insn	(x=0X7100017F84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017F88);
	op_stkvar	(x,	1);
	create_insn	(0X7100017F90);
	create_dword	(0X7100017F94);
	make_array	(0X7100017F98,	0X8);
	create_insn	(0X7100017FA0);
	set_name	(0X7100017FA0,	"_ZN2nn2fs6detail21LogResultErrorMessageENS_6ResultEPKc");
	make_array	(0X7100017FA4,	0XC);
	create_insn	(0X7100017FB0);
	set_name	(0X7100017FB0,	"_ZN2nn2fs6detail15LogErrorMessageENS_6ResultEPKcz");
	create_insn	(x=0X7100017FB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017FB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017FBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017FC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017FC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017FC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100017FCC);
	op_stkvar	(x,	1);
	create_insn	(0X7100017FD8);
	create_insn	(x=0X7100017FE0);
	op_stkvar	(x,	1);
	set_name	(0X7100017FE0,	"_ZN2nn2fs25GetCurrentThreadFsContextEv");
	create_insn	(x=0X7100017FE8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100017FEC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100017FF4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100017FFC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100018004);
	op_stkvar	(x,	1);
	make_array	(0X710001800C,	0X4);
	create_insn	(x=0X7100018010);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100018014);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X7100018028,	0X8);
	create_insn	(0X7100018030);
	create_insn	(x=0X7100018038);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001803C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018044);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710001804C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100018054);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710001805C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100018060);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710001806C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100018074);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018078);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018080);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100018088);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7100018090);
	create_insn	(x=0X7100018094);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001809C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000180AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000180B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000180B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000180C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000180C8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000180D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000180D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000180D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000180DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000180E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000180E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000180F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100018104);
	op_stkvar	(x,	1);
	create_dword	(0X710001810C);
	create_insn	(0X7100018110);
	make_array	(0X7100018118,	0X8);
	create_insn	(0X7100018120);
	create_insn	(x=0X7100018124);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018128);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018134);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018138);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018158);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X710001815C,	"__int64",	0);
	create_insn	(x=0X7100018164);
	op_stkvar	(x,	1);
	create_insn	(0X7100018170);
	create_insn	(x=0X7100018174);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018178);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018198);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X710001819C,	"__int64",	0);
	create_insn	(x=0X71000181A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000181B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000181B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000181C0);
	op_stkvar	(x,	1);
	create_qword	(0X71000181C8);
	create_insn	(0X71000181D0);
	create_insn	(x=0X71000181D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000181D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000181DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000181F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001820C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100018214,	"__int64",	0);
	create_insn	(x=0X710001821C);
	op_stkvar	(x,	1);
	create_insn	(0X7100018228);
	create_insn	(x=0X710001822C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018234);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018250);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100018258,	"__int64",	0);
	create_insn	(x=0X7100018260);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001826C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018270);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018274);
	op_stkvar	(x,	1);
	create_insn	(0X7100018280);
	create_qword	(0X7100018288);
	create_insn	(0X7100018290);
	set_name	(0X7100018290,	"_ZN2nn2fs8OpenFileEPNS0_10FileHandleEPKci");
	create_insn	(x=0X7100018294);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018298);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001829C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000182B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000182B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000182D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X71000182D8,	"__int64",	0);
	create_insn	(x=0X71000182E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000182E8);
	op_stkvar	(x,	1);
	create_insn	(0X71000182F0);
	create_insn	(x=0X71000182F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000182FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018300);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001830C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018314);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018318);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018320);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001833C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100018344,	"__int64",	0);
	create_insn	(x=0X710001834C);
	op_stkvar	(x,	1);
	create_insn	(0X7100018358);
	create_insn	(x=0X710001836C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100018374,	"__int64",	0);
	create_insn	(x=0X710001837C);
	op_stkvar	(x,	1);
	create_insn	(0X7100018388);
	create_insn	(x=0X710001838C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018390);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000183B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000183B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000183B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000183C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000183D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000183D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000183DC);
	op_stkvar	(x,	1);
	make_array	(0X71000183E8,	0X8);
	create_insn	(0X71000183F0);
	create_insn	(x=0X71000183F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000183F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018404);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018420);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100018428,	"__int64",	0);
	create_insn	(x=0X7100018430);
	op_stkvar	(x,	1);
	create_insn	(0X710001843C);
	create_insn	(x=0X7100018440);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001845C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100018464,	"__int64",	0);
	create_insn	(x=0X710001846C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018478);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001847C);
	op_stkvar	(x,	1);
	create_insn	(0X7100018488);
	create_insn	(0X7100018490);
	make_array	(0X7100018494,	0XC);
	create_insn	(0X71000184A0);
	create_insn	(x=0X71000184A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000184A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000184AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000184C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000184C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000184E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X71000184E8,	"__int64",	0);
	create_insn	(x=0X71000184F0);
	op_stkvar	(x,	1);
	create_insn	(0X71000184FC);
	create_insn	(x=0X7100018500);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001850C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001852C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100018530,	"__int64",	0);
	create_insn	(x=0X7100018538);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018544);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018548);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001854C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018558);
	op_stkvar	(x,	1);
	create_insn	(0X7100018560);
	create_insn	(x=0X7100018568);
	op_hex		(x,	1);
	create_insn	(0X7100018598);
	create_insn	(0X71000186F8);
	create_insn	(0X7100018700);
	create_insn	(0X7100018708);
	create_insn	(0X7100018710);
	create_insn	(0X7100018718);
	create_insn	(0X7100018720);
	create_insn	(0X7100018728);
	create_insn	(0X7100018730);
	create_insn	(0X7100018738);
	create_insn	(0X7100018740);
	create_insn	(0X7100018748);
	create_insn	(0X7100018750);
	create_insn	(0X7100018758);
	create_insn	(0X7100018760);
	make_array	(0X7100018768,	0X8);
	create_insn	(0X7100018770);
	set_name	(0X7100018770,	"_ZN2nn2fs6detail14FindFileSystemEPPNS1_18FileSystemAccessorEPPKcS6_");
	create_insn	(x=0X7100018774);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018778);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001877C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000187A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000187D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000187D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000187D8);
	op_stkvar	(x,	1);
	create_insn	(0X71000187E4);
	create_insn	(x=0X71000187E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000187EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000187F0);
	op_stkvar	(x,	1);
	create_insn	(0X71000187FC);
	create_insn	(x=0X7100018804);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018808);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001880C);
	op_stkvar	(x,	1);
	create_insn	(0X7100018818);
	create_insn	(x=0X7100018824);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018828);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001882C);
	op_stkvar	(x,	1);
	make_array	(0X7100018838,	0X8);
	create_insn	(x=0X7100018840);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018844);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018848);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001884C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018894);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018898);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001889C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000188A0);
	op_stkvar	(x,	1);
	create_insn	(0X71000188A8);
	create_insn	(0X71000188D8);
	create_insn	(0X71000188F0);
	create_insn	(0X7100018908);
	create_insn	(0X7100018920);
	create_insn	(0X7100018938);
	create_insn	(0X7100018950);
	create_insn	(0X7100018968);
	create_insn	(0X7100018980);
	create_insn	(0X7100018998);
	create_insn	(0X71000189B0);
	create_insn	(0X71000189C8);
	create_insn	(0X71000189E0);
	create_insn	(0X71000189F8);
	create_insn	(0X7100018A10);
	create_insn	(0X7100018A54);
	create_insn	(x=0X7100018A5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018A60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018A64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018A68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018A70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018A74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018A98);
	op_hex		(x,	1);
	create_insn	(x=0X7100018AA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018AA8);
	op_stkvar	(x,	1);
	create_insn	(0X7100018AB0);
	create_insn	(x=0X7100018AB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018ABC);
	op_stkvar	(x,	1);
	make_array	(0X7100018AC4,	0XC);
	create_insn	(0X7100018AD0);
	create_insn	(x=0X7100018AD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018AD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018AE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018AF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018B00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018B04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018B10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018B14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018B1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018B3C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100018B40,	"__int64",	0);
	create_insn	(x=0X7100018B48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018B4C);
	op_stkvar	(x,	1);
	create_insn	(0X7100018B58);
	create_insn	(x=0X7100018B6C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100018B70,	"__int64",	0);
	create_insn	(x=0X7100018B78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018B7C);
	op_stkvar	(x,	1);
	create_dword	(0X7100018B84);
	make_array	(0X7100018B88,	0X8);
	create_insn	(0X7100018B90);
	create_insn	(x=0X7100018B94);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X7100018BA4,	0XC);
	create_insn	(0X7100018BB0);
	set_name	(0X7100018BB0,	"_ZN2nn2fs6detail4FindEPPNS1_18FileSystemAccessorEPKc");
	create_insn	(x=0X7100018BBC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X7100018BC4,	0XC);
	create_insn	(0X7100018BD0);
	create_insn	(x=0X7100018BD4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X7100018BE4,	0XC);
	create_insn	(x=0X7100018BF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018BF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018BF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018BFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018C00);
	op_stkvar	(x,	1);
	create_insn	(0X7100018C54);
	create_insn	(x=0X7100018C84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018C88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018C8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018C90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018C94);
	op_stkvar	(x,	1);
	make_array	(0X7100018C9C,	0X4);
	create_insn	(0X7100018CA0);
	create_insn	(x=0X7100018CA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018CA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018CAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018D20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018D24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018D28);
	op_stkvar	(x,	1);
	create_insn	(0X7100018D34);
	create_insn	(x=0X7100018D40);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100018D50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018D54);
	op_stkvar	(x,	1);
	create_dword	(0X7100018D5C);
	create_insn	(x=0X7100018D60);
	op_stkvar	(x,	1);
	set_name	(0X7100018D60,	"_ZN2nn2fs6detail10MountTable4FindEPPNS1_18FileSystemAccessorEPKc");
	create_insn	(x=0X7100018D64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018D68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018D6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018DD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018DDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018DE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018DE4);
	op_stkvar	(x,	1);
	create_insn	(0X7100018DEC);
	create_insn	(x=0X7100018DF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018DFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018E00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018E04);
	op_stkvar	(x,	1);
	make_array	(0X7100018E0C,	0X4);
	create_insn	(0X7100018E10);
	set_name	(0X7100018E10,	"_ZN2nn2fs14IsWindowsDriveEPKc");
	create_insn	(x=0X7100018E14);
	op_hex		(x,	1);
	create_insn	(0X7100018E34);
	make_array	(0X7100018E3C,	0X4);
	create_insn	(0X7100018E40);
	set_name	(0X7100018E40,	"_ZN2nn2fs9IsUncPathEPKc");
	create_insn	(0X7100018E68);
	create_insn	(0X7100018E7C);
	create_insn	(0X7100018E84);
	set_name	(0X7100018E84,	"_ZN2nn2fs4PathC2Ev");
	create_insn	(x=0X7100018E88);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7100018E9C);
	set_name	(0X7100018E9C,	"_ZN2nn2fs4Path16SetShallowBufferEPKc");
	create_insn	(x=0X7100018EA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018EA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018ED4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018ED8);
	op_stkvar	(x,	1);
	create_insn	(0X7100018EE0);
	create_insn	(0X7100018EEC);
	set_name	(0X7100018EEC,	"_ZNK2nn2fs4Path9GetStringEv");
	make_array	(0X7100018EF4,	0XC);
	create_insn	(0X7100018F00);
	make_array	(0X7100018F08,	0X8);
	create_insn	(0X7100018F10);
	make_array	(0X7100018F18,	0X8);
	create_insn	(0X7100018F20);
	create_insn	(x=0X7100018F24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018F28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100018F34);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100018F40);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X71000190B8);
	create_insn	(0X71000190C0);
	create_insn	(0X71000190C8);
	create_insn	(0X71000190D0);
	create_insn	(0X71000190D8);
	create_insn	(0X71000190E0);
	create_insn	(0X71000190E8);
	create_insn	(0X71000190F0);
	create_insn	(0X71000190F8);
	create_insn	(0X7100019100);
	create_insn	(0X7100019108);
	create_insn	(0X7100019110);
	create_insn	(0X7100019118);
	create_insn	(0X7100019120);
	create_insn	(x=0X7100019168);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001916C);
	op_stkvar	(x,	1);
	create_insn	(0X7100019178);
	create_insn	(x=0X710001917C);
	op_hex		(x,	1);
	create_insn	(x=0X7100019184);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019188);
	op_stkvar	(x,	1);
	create_insn	(0X7100019194);
	create_insn	(x=0X71000191A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000191B0);
	op_stkvar	(x,	1);
	create_insn	(0X71000191B8);
	create_insn	(x=0X71000191C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000191D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000191D8);
	op_stkvar	(x,	1);
	create_insn	(0X71000191E0);
	create_insn	(x=0X71000191E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000191E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000191F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000191F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100019248);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019258);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000192B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000192B8);
	op_stkvar	(x,	1);
	create_insn	(0X71000192C4);
	create_insn	(x=0X71000192CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000192DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000192E0);
	op_stkvar	(x,	1);
	create_insn	(0X71000192E8);
	create_insn	(x=0X71000192F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100019304);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019308);
	op_stkvar	(x,	1);
	create_insn	(0X7100019310);
	create_insn	(x=0X7100019314);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019318);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001931C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019320);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019324);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019328);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019334);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019380);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100019388);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100019394);
	op_stkvar	(x,	1);
	create_insn	(0X710001939C);
	create_insn	(x=0X71000193C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000193C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000193D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000193DC);
	op_hex		(x,	1);
	create_insn	(x=0X71000193E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X71000193E8,	"__int64",	0);
	set_cmt	(0X71000193EC,	"_BYTE *",	0);
	create_insn	(x=0X71000193EC);
	op_stkvar	(x,	1);
	set_cmt	(0X71000193F0,	"__int64",	0);
	set_cmt	(0X71000193F4,	"char *",	0);
	create_insn	(x=0X710001940C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100019414,	"_BYTE *",	0);
	set_cmt	(0X7100019418,	"__int64",	0);
	create_insn	(x=0X710001941C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100019424,	"__int64",	0);
	set_cmt	(0X7100019428,	"char *",	0);
	create_insn	(x=0X7100019440);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X710001944C,	"char *",	0);
	set_cmt	(0X7100019450,	"_BYTE *",	0);
	set_cmt	(0X7100019454,	"__int64",	0);
	create_insn	(x=0X7100019458);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100019460,	"__int64",	0);
	create_insn	(x=0X710001946C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019490);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019494);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019498);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001949C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000194A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000194A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000194B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000194B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000194C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000194D0);
	op_stkvar	(x,	1);
	create_insn	(0X71000194D8);
	create_insn	(x=0X71000194DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000194E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000194E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000194F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019504);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019510);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001953C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001955C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019568);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019578);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001957C);
	op_stkvar	(x,	1);
	create_insn	(0X7100019588);
	create_insn	(x=0X7100019590);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019594);
	op_stkvar	(x,	1);
	create_insn	(0X71000195A0);
	create_insn	(x=0X71000195A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000195C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000195C8);
	op_stkvar	(x,	1);
	create_insn	(0X71000195D4);
	create_insn	(x=0X71000195DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000195E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000195EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000195F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019600);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019604);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019608);
	op_stkvar	(x,	1);
	create_insn	(0X7100019614);
	create_insn	(x=0X710001961C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019620);
	op_stkvar	(x,	1);
	create_insn	(0X710001962C);
	create_insn	(x=0X7100019630);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019634);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019640);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001964C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019658);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019670);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019684);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019688);
	op_stkvar	(x,	1);
	create_insn	(0X7100019694);
	create_insn	(x=0X710001969C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000196A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000196A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000196B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000196B8);
	op_stkvar	(x,	1);
	create_insn	(0X71000196C4);
	create_insn	(x=0X71000196C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000196CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000196D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000196DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000196EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000196F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019714);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001972C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019730);
	op_stkvar	(x,	1);
	create_insn	(0X710001973C);
	create_insn	(x=0X7100019744);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019748);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019750);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001975C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019760);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019764);
	op_stkvar	(x,	1);
	create_insn	(0X7100019770);
	create_insn	(x=0X7100019778);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001977C);
	op_stkvar	(x,	1);
	create_insn	(0X7100019788);
	set_name	(0X7100019788,	"_ZN2nn2fs6detail18FileSystemAccessor8OpenFileEPNSt3__110unique_ptrINS1_12FileAccessorENS3_14default_deleteIS5_EEEEPKcNS0_8OpenModeE");
	create_insn	(x=0X710001978C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019790);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019794);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019798);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001979C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000197A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000197C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000197D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000197EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000197F8);
	op_hex		(x,	1);
	create_insn	(x=0X7100019808);
	op_stkvar	(x,	1);
	set_cmt	(0X7100019890,	"int *",	0);
	create_insn	(x=0X7100019890);
	op_stkvar	(x,	1);
	set_cmt	(0X7100019894,	"__int64 *",	0);
	create_insn	(x=0X7100019894);
	op_stkvar	(x,	1);
	set_cmt	(0X710001989C,	"void *",	0);
	create_insn	(x=0X71000198A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000198A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000198B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000198B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000198C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000198C8);
	op_stkvar	(x,	1);
	create_insn	(0X71000198D4);
	create_insn	(0X71000198DC);
	create_insn	(x=0X71000198E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000198EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000198F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019908);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001993C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019940);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019954);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019958);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019960);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001996C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019970);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019974);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019978);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001997C);
	op_stkvar	(x,	1);
	make_array	(0X7100019988,	0X8);
	create_insn	(x=0X7100019990);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019994);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019998);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000199F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000199F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019A04);
	op_stkvar	(x,	1);
	create_insn	(0X7100019A0C);
	create_insn	(x=0X7100019A14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019A20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019A24);
	op_stkvar	(x,	1);
	create_insn	(0X7100019A2C);
	make_array	(0X7100019A3C,	0X4);
	create_insn	(x=0X7100019A40);
	op_stkvar	(x,	1);
	set_name	(0X7100019A40,	"_ZN2nn2fs6detail18FileSystemAccessor15NotifyCloseFileEPNS1_12FileAccessorE");
	create_insn	(x=0X7100019A44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019A48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019AA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019AA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019AAC);
	op_stkvar	(x,	1);
	make_array	(0X7100019AB4,	0XC);
	create_insn	(0X7100019AC0);
	set_name	(0X7100019AC0,	"_ZN2nn2fs6detail33LockPathBasedFileDataCacheEntriesEv");
	make_array	(0X7100019AC8,	0X8);
	create_insn	(0X7100019AD0);
	set_name	(0X7100019AD0,	"nullsub_24");
	make_array	(0X7100019AD4,	0XC);
	create_insn	(0X7100019AE0);
	set_name	(0X7100019AE0,	"_ZN2nn2fs6detail37InvalidatePathBasedFileDataCacheEntryEPNS1_18FileSystemAccessorERKNS0_4PathE");
	make_array	(0X7100019AE4,	0XC);
	create_insn	(0X7100019AF0);
	set_name	(0X7100019AF0,	"_ZN2nn2fs6detail31FindPathBasedFileDataCacheEntryEPNS1_12FilePathHashEPiPNS1_18FileSystemAccessorERKNS0_4PathE");
	make_array	(0X7100019AF8,	0X8);
	create_insn	(x=0X7100019B00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019B08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019B34);
	op_hex		(x,	1);
	create_insn	(0X7100019B48);
	create_insn	(0X7100019B54);
	create_insn	(0X7100019B5C);
	create_insn	(0X7100019B64);
	make_array	(0X7100019B84,	0XC);
	create_insn	(x=0X7100019B90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019B98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019BBC);
	op_hex		(x,	1);
	create_insn	(x=0X7100019BDC);
	op_stkvar	(x,	1);
	create_insn	(0X7100019BE4);
	create_insn	(x=0X7100019C04);
	op_stkvar	(x,	1);
	create_insn	(0X7100019C0C);
	create_insn	(x=0X7100019C14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019C1C);
	op_hex		(x,	1);
	create_insn	(x=0X7100019C24);
	op_stkvar	(x,	1);
	create_insn	(0X7100019C2C);
	create_insn	(x=0X7100019C34);
	op_stkvar	(x,	1);
	create_insn	(0X7100019C3C);
	create_insn	(x=0X7100019C44);
	op_stkvar	(x,	1);
	create_insn	(0X7100019C4C);
	set_name	(0X7100019C4C,	"_ZN2nn2fs6detail12FileAccessorC2EONSt3__110unique_ptrINS0_3fsa5IFileENS3_14default_deleteIS6_EEEEPNS1_18FileSystemAccessorEi");
	create_insn	(x=0X7100019C6C);
	op_stkvar	(x,	1);
	set_name	(0X7100019C6C,	"_ZN2nn2fs6detail12FileAccessorD2Ev");
	create_insn	(x=0X7100019C70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019CD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019CE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019CE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019CEC);
	op_stkvar	(x,	1);
	create_insn	(0X7100019CF4);
	create_insn	(x=0X7100019D00);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100019D10);
	op_stkvar	(x,	1);
	create_insn	(0X7100019D18);
	create_insn	(x=0X7100019D1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019D20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019D24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019D28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019D2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019D30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019D40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019D4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019D60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019D64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019D68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019D6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019D70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019D74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019D78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019D7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019D8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019DA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019DAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019DBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019DC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019DCC);
	op_stkvar	(x,	1);
	create_insn	(0X7100019DDC);
	create_insn	(x=0X7100019DE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019DE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019DF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019DF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019E18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019E28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019E5C);
	op_hex		(x,	1);
	create_insn	(0X7100019E98);
	create_insn	(0X7100019EA4);
	create_insn	(0X7100019EAC);
	create_insn	(x=0X7100019EB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019EB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019EBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019EC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019EC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019EC8);
	op_stkvar	(x,	1);
	create_insn	(0X7100019ED4);
	create_insn	(x=0X7100019EDC);
	op_stkvar	(x,	1);
	set_name	(0X7100019EDC,	"_ZN2nn2fs6detail12FileAccessor4ReadEPmlPvmRKNS0_10ReadOptionE");
	create_insn	(x=0X7100019EE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019EE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019EE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019EEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019F00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019F04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019F08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019F0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019F10);
	op_stkvar	(x,	1);
	create_insn	(0X7100019F18);
	create_insn	(x=0X7100019F8C);
	op_hex		(x,	1);
	create_insn	(x=0X7100019FB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019FB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019FBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019FC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100019FCC);
	op_stkvar	(x,	1);
	create_insn	(0X7100019FD4);
	create_insn	(x=0X7100019FF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A004);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A008);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A00C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A010);
	op_stkvar	(x,	1);
	create_insn	(0X710001A018);
	create_insn	(x=0X710001A020);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A024);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A028);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A02C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A030);
	op_stkvar	(x,	1);
	create_insn	(0X710001A038);
	create_insn	(x=0X710001A03C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A040);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A044);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A048);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A04C);
	op_stkvar	(x,	1);
	create_insn	(0X710001A054);
	create_insn	(x=0X710001A058);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A05C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A060);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A064);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A068);
	op_stkvar	(x,	1);
	create_insn	(0X710001A070);
	create_insn	(x=0X710001A074);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A078);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A08C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A090);
	op_stkvar	(x,	1);
	create_insn	(0X710001A09C);
	create_insn	(x=0X710001A0C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A0D0);
	op_hex		(x,	1);
	create_insn	(x=0X710001A0F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A0F8);
	op_stkvar	(x,	1);
	create_insn	(0X710001A104);
	create_insn	(x=0X710001A124);
	op_hex		(x,	1);
	create_insn	(0X710001A154);
	create_insn	(x=0X710001A164);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A168);
	op_stkvar	(x,	1);
	create_insn	(0X710001A174);
	create_insn	(x=0X710001A198);
	op_hex		(x,	1);
	create_insn	(0X710001A1A0);
	create_insn	(0X710001A1A8);
	create_insn	(x=0X710001A1AC);
	op_hex		(x,	1);
	create_insn	(x=0X710001A1D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A1D4);
	op_stkvar	(x,	1);
	create_insn	(0X710001A1E0);
	create_insn	(x=0X710001A1F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A1F4);
	op_stkvar	(x,	1);
	create_insn	(0X710001A200);
	create_insn	(x=0X710001A20C);
	op_hex		(x,	1);
	create_insn	(x=0X710001A214);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A218);
	op_stkvar	(x,	1);
	create_insn	(0X710001A224);
	set_name	(0X710001A224,	"_ZN2nn2fs6detail12FileAccessor7GetSizeEPl");
	create_insn	(0X710001A234);
	create_insn	(0X710001A248);
	create_insn	(x=0X710001A254);
	op_stkvar	(x,	1);
	set_name	(0X710001A254,	"_ZN2nn2fs6detail12FileAccessor15SetFilePathHashEONSt3__110unique_ptrINS1_12FilePathHashENS3_14default_deleteIS5_EEEEi");
	create_insn	(x=0X710001A258);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A288);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A28C);
	op_stkvar	(x,	1);
	create_insn	(0X710001A294);
	create_insn	(x=0X710001A2BC);
	op_hex		(x,	1);
	create_insn	(0X710001A2D0);
	create_insn	(0X710001A2E4);
	create_insn	(0X710001A2EC);
	create_insn	(0X710001A2F4);
	create_insn	(0X710001A304);
	make_array	(0X710001A314,	0XC);
	create_insn	(0X710001A320);
	create_insn	(x=0X710001A324);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A328);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A32C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A330);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A334);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A33C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A364);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A388);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A3AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A3B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A3B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A3C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A3EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X710001A3F4,	"__int64",	0);
	create_insn	(x=0X710001A3FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A404);
	op_stkvar	(x,	1);
	create_insn	(0X710001A40C);
	create_insn	(x=0X710001A418);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A41C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A420);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A424);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A428);
	op_stkvar	(x,	1);
	make_array	(0X710001A434,	0XC);
	create_insn	(0X710001A440);
	make_array	(0X710001A464,	0XC);
	create_insn	(x=0X710001A470);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A474);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A478);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A498);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A4A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A4A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A4C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A4F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A4F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A4F8);
	op_stkvar	(x,	1);
	create_insn	(0X710001A500);
	create_insn	(x=0X710001A514);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710001A524);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A53C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X710001A544,	"__int64",	0);
	create_insn	(x=0X710001A558);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A55C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A560);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A568);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X710001A570,	"__int64",	0);
	create_insn	(x=0X710001A57C);
	op_stkvar	(x,	1);
	create_dword	(0X710001A584);
	make_array	(0X710001A588,	0X8);
	create_insn	(0X710001A590);
	make_array	(0X710001A59C,	0X4);
	create_insn	(x=0X710001A5A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A5A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A5A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A5AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A5CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A5D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A5DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A5F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A614);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A61C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A628);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A62C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A65C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X710001A660,	"__int64",	0);
	create_insn	(x=0X710001A668);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A670);
	op_stkvar	(x,	1);
	create_insn	(0X710001A678);
	create_insn	(x=0X710001A680);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A6A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X710001A6AC,	"__int64",	0);
	create_insn	(x=0X710001A6B4);
	op_stkvar	(x,	1);
	create_insn	(0X710001A6C4);
	create_insn	(x=0X710001A6D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A6D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A6DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A6E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A6E8);
	op_hex		(x,	1);
	create_insn	(0X710001A71C);
	create_insn	(0X710001A728);
	create_insn	(x=0X710001A73C);
	op_hex		(x,	1);
	create_insn	(x=0X710001A780);
	op_stkvar	(x,	1);
	set_name	(0X710001A780,	"nn::fs::detail::FileAccessor::Dtor");
	create_insn	(x=0X710001A784);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A798);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A7A0);
	op_stkvar	(x,	1);
	make_array	(0X710001A7A8,	0X8);
	create_insn	(0X710001A7B0);
	set_name	(0X710001A7B0,	"_ZN2nn2fs8ReadFileENS0_10FileHandleElPvm");
	create_insn	(x=0X710001A7B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A7B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A7BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A7CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A7D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A7FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X710001A800,	"__int64",	0);
	create_insn	(x=0X710001A808);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A810);
	op_stkvar	(x,	1);
	create_insn	(0X710001A818);
	create_insn	(x=0X710001A820);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A824);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A828);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A834);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A848);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A84C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A850);
	op_stkvar	(x,	1);
	create_insn	(0X710001A85C);
	create_insn	(x=0X710001A874);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X710001A878,	"__int64",	0);
	create_insn	(x=0X710001A880);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A884);
	op_stkvar	(x,	1);
	create_dword	(0X710001A88C);
	create_insn	(0X710001A890);
	create_insn	(x=0X710001A894);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A898);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A8A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A8A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A8D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X710001A8D4,	"__int64",	0);
	create_insn	(x=0X710001A8DC);
	op_stkvar	(x,	1);
	create_insn	(0X710001A8EC);
	create_insn	(x=0X710001A8F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A8F8);
	op_stkvar	(x,	1);
	create_insn	(0X710001A904);
	create_insn	(x=0X710001A90C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A910);
	op_stkvar	(x,	1);
	make_array	(0X710001A91C,	0X4);
	create_insn	(0X710001A920);
	create_insn	(x=0X710001A924);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A928);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A948);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X710001A950,	"__int64",	0);
	create_insn	(x=0X710001A958);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A960);
	op_stkvar	(x,	1);
	create_insn	(0X710001A968);
	create_insn	(x=0X710001A970);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A974);
	op_stkvar	(x,	1);
	create_insn	(0X710001A980);
	create_insn	(x=0X710001A988);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A98C);
	op_stkvar	(x,	1);
	make_array	(0X710001A998,	0X8);
	create_insn	(0X710001A9A0);
	set_name	(0X710001A9A0,	"_ZN2nn2fs11GetFileSizeEPlNS0_10FileHandleE");
	create_insn	(x=0X710001A9A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A9A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A9D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X710001A9DC,	"__int64",	0);
	create_insn	(x=0X710001A9E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001A9EC);
	op_stkvar	(x,	1);
	create_insn	(0X710001A9F4);
	create_insn	(x=0X710001A9FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001AA00);
	op_stkvar	(x,	1);
	create_insn	(0X710001AA0C);
	create_insn	(x=0X710001AA14);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001AA18);
	op_stkvar	(x,	1);
	make_array	(0X710001AA24,	0XC);
	create_insn	(0X710001AA30);
	make_array	(0X710001AA44,	0XC);
	create_insn	(0X710001AA50);
	create_insn	(x=0X710001AA54);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001AA58);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001AA5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001AA60);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001AA88);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001AA90);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001AAB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001AAB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001AABC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001AAC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001AAC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001AAC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001AAE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001AAF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001AB20);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X710001AB24,	"__int64",	0);
	create_insn	(x=0X710001AB2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001AB34);
	op_stkvar	(x,	1);
	create_insn	(0X710001AB3C);
	create_insn	(x=0X710001AB48);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001AB4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001AB50);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001AB54);
	op_stkvar	(x,	1);
	create_insn	(0X710001AB60);
	create_insn	(x=0X710001AB6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001AB78);
	op_hex		(x,	1);
	create_insn	(x=0X710001AB80);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001AB88);
	op_stkvar	(x,	1);
	create_insn	(0X710001AB98);
	create_insn	(0X710001ABA4);
	create_insn	(x=0X710001ABA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001ABAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001ABB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001ABD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001ABD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001ABE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001ABEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001AC04);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710001AC0C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X710001AC30);
	create_insn	(0X710001AC34);
	create_insn	(x=0X710001AC38);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X710001AC58);
	create_insn	(x=0X710001AC5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001AC60);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001AC74);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001AC7C);
	op_stkvar	(x,	1);
	create_insn	(0X710001AC84);
	create_insn	(x=0X710001AC88);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001AC8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001AC98);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001ACA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001ACC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001ACC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001ACD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001ACD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001ACDC);
	op_stkvar	(x,	1);
	create_insn	(0X710001ACE8);
	create_insn	(x=0X710001ACEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001ACF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001AD10);
	op_stkvar	(x,	1);
	create_insn	(0X710001AD1C);
	create_insn	(0X710001AD2C);
	create_insn	(0X710001AD3C);
	create_insn	(0X710001AD4C);
	create_insn	(x=0X710001AD50);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001AD8C);
	op_stkvar	(x,	1);
	create_insn	(0X710001ADA4);
	create_insn	(x=0X710001ADA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001ADC4);
	op_stkvar	(x,	1);
	create_insn	(0X710001ADD0);
	create_insn	(x=0X710001ADD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001ADD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001ADE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001ADF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001ADFC);
	op_hex		(x,	1);
	create_insn	(x=0X710001AE00);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001AE0C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710001AE14);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X710001AE38);
	create_insn	(0X710001AE3C);
	create_insn	(x=0X710001AE40);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X710001AE60);
	create_insn	(x=0X710001AE64);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001AE68);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001AE7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001AE84);
	op_stkvar	(x,	1);
	create_insn	(0X710001AE8C);
	create_insn	(x=0X710001AE90);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001AEA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001AEB8);
	op_stkvar	(x,	1);
	create_insn	(0X710001AEC4);
	create_insn	(x=0X710001AED4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710001AEDC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X710001AF04);
	create_insn	(0X710001AF08);
	create_insn	(x=0X710001AF0C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X710001AF30);
	create_insn	(x=0X710001AF34);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001AF38);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001AF4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001AF54);
	op_stkvar	(x,	1);
	make_array	(0X710001AF5C,	0X4);
	create_insn	(x=0X710001AF60);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001AF64);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001AF68);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001AF8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001AFC0);
	op_stkvar	(x,	1);
	create_insn	(0X710001AFCC);
	create_insn	(x=0X710001AFF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B014);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B018);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B01C);
	op_stkvar	(x,	1);
	create_insn	(0X710001B024);
	create_insn	(x=0X710001B030);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B034);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B038);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B040);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B044);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B060);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B094);
	op_stkvar	(x,	1);
	create_insn	(0X710001B0A0);
	create_insn	(x=0X710001B0C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B0DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B0E0);
	op_stkvar	(x,	1);
	create_insn	(0X710001B0E8);
	create_insn	(x=0X710001B0F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B0F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B100);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B104);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B120);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B154);
	op_stkvar	(x,	1);
	create_insn	(0X710001B160);
	create_insn	(x=0X710001B188);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B19C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B1A0);
	op_stkvar	(x,	1);
	create_insn	(0X710001B1A8);
	create_insn	(x=0X710001B1B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B1B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B1C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B1C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B1E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B214);
	op_stkvar	(x,	1);
	create_insn	(0X710001B220);
	create_insn	(x=0X710001B248);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B25C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B260);
	op_stkvar	(x,	1);
	create_insn	(0X710001B268);
	create_insn	(x=0X710001B274);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B278);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B280);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B284);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B2A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B2D4);
	op_stkvar	(x,	1);
	create_insn	(0X710001B2E0);
	create_insn	(x=0X710001B308);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B31C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B320);
	op_stkvar	(x,	1);
	create_insn	(0X710001B328);
	create_insn	(x=0X710001B334);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B338);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B340);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B344);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B360);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B394);
	op_stkvar	(x,	1);
	create_insn	(0X710001B3A0);
	create_insn	(x=0X710001B3C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B3DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B3E0);
	op_stkvar	(x,	1);
	create_insn	(0X710001B3E8);
	create_insn	(x=0X710001B3F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B3F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B400);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B404);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B408);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B428);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B460);
	op_stkvar	(x,	1);
	create_insn	(0X710001B46C);
	create_insn	(0X710001B4EC);
	create_insn	(x=0X710001B518);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B538);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B53C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B540);
	op_stkvar	(x,	1);
	make_array	(0X710001B548,	0X8);
	create_insn	(x=0X710001B550);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B554);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B558);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B578);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B5B0);
	op_stkvar	(x,	1);
	create_insn	(0X710001B5BC);
	create_insn	(0X710001B63C);
	create_insn	(x=0X710001B668);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B688);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B68C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B690);
	op_stkvar	(x,	1);
	make_array	(0X710001B698,	0X8);
	create_insn	(x=0X710001B6A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B6A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B6A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B6C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B700);
	op_stkvar	(x,	1);
	create_insn	(0X710001B70C);
	create_insn	(x=0X710001B738);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B750);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B754);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B758);
	op_stkvar	(x,	1);
	create_insn	(0X710001B760);
	create_insn	(x=0X710001B76C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B770);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B774);
	op_stkvar	(x,	1);
	make_array	(0X710001B77C,	0X4);
	create_insn	(x=0X710001B780);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B784);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B788);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B7A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B7E0);
	op_stkvar	(x,	1);
	create_insn	(0X710001B7EC);
	create_insn	(x=0X710001B818);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B830);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B834);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B838);
	op_stkvar	(x,	1);
	create_insn	(0X710001B840);
	create_insn	(x=0X710001B84C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B850);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B854);
	op_stkvar	(x,	1);
	make_array	(0X710001B85C,	0X4);
	create_insn	(x=0X710001B860);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B864);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B868);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B888);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B8C0);
	op_stkvar	(x,	1);
	create_insn	(0X710001B8CC);
	create_insn	(x=0X710001B8F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B910);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B914);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B918);
	op_stkvar	(x,	1);
	create_insn	(0X710001B920);
	create_insn	(x=0X710001B92C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B930);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B934);
	op_stkvar	(x,	1);
	make_array	(0X710001B93C,	0X4);
	create_insn	(x=0X710001B940);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B944);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B948);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B95C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B970);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B9A4);
	op_stkvar	(x,	1);
	create_insn	(0X710001B9B0);
	create_insn	(x=0X710001B9D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B9DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B9E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001B9E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BA10);
	op_stkvar	(x,	1);
	create_insn	(0X710001BA4C);
	create_insn	(x=0X710001BA54);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BA70);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BA74);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BA78);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BA80);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BA84);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BA88);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BA9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BAB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BAE4);
	op_stkvar	(x,	1);
	create_insn	(0X710001BAF0);
	create_insn	(x=0X710001BB18);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BB1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BB20);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BB24);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BB50);
	op_stkvar	(x,	1);
	create_insn	(0X710001BB8C);
	create_insn	(x=0X710001BB94);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BBB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BBB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BBB8);
	op_stkvar	(x,	1);
	create_insn	(0X710001BBC0);
	create_insn	(x=0X710001BBD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BBD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BBD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BBF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BC30);
	op_stkvar	(x,	1);
	create_insn	(0X710001BC3C);
	create_insn	(x=0X710001BC68);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BC80);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BC84);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BC88);
	op_stkvar	(x,	1);
	create_insn	(0X710001BC90);
	create_insn	(x=0X710001BC9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BCA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BCA4);
	op_stkvar	(x,	1);
	create_insn	(0X710001BCAC);
	make_array	(0X710001BCBC,	0X4);
	create_insn	(x=0X710001BCC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BCC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BCC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BCCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BCD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BD00);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BD34);
	op_stkvar	(x,	1);
	create_insn	(0X710001BD40);
	create_insn	(x=0X710001BD68);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BD6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BD70);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BD74);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BD78);
	op_stkvar	(x,	1);
	create_insn	(0X710001BD90);
	create_insn	(x=0X710001BD9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BDA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BDA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BDA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BDAC);
	op_stkvar	(x,	1);
	create_insn	(0X710001BDB4);
	create_insn	(0X710001BDC0);
	create_insn	(0X710001BDCC);
	create_insn	(0X710001BDD8);
	create_insn	(0X710001BDF0);
	create_insn	(0X710001BDF4);
	create_insn	(0X710001BE0C);
	create_insn	(0X710001BE10);
	create_insn	(x=0X710001BE14);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BE18);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BE1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BE38);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BE48);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BE58);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BE5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BE60);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BE74);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BE78);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BE98);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BE9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BEB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BEB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BEBC);
	op_stkvar	(x,	1);
	create_insn	(0X710001BEC8);
	create_insn	(x=0X710001BED4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BED8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BEDC);
	op_stkvar	(x,	1);
	make_array	(0X710001BEE8,	0X8);
	create_insn	(0X710001BEF0);
	create_insn	(x=0X710001BEF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BEF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BF08);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BF10);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BF18);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BF24);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BF38);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BF3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BF54);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BF58);
	op_stkvar	(x,	1);
	make_array	(0X710001BF64,	0XC);
	create_insn	(0X710001BF70);
	create_insn	(x=0X710001BF74);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BF78);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BF7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BF80);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BF84);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BF88);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BF90);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001BFDC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X710001C004);
	create_insn	(x=0X710001C044);
	op_hex		(x,	1);
	create_insn	(x=0X710001C048);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C04C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C054);
	op_hex		(x,	1);
	create_insn	(x=0X710001C068);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C06C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C084);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C088);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C08C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C090);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C094);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C098);
	op_stkvar	(x,	1);
	make_array	(0X710001C0A4,	0XC);
	create_insn	(0X710001C0B0);
	create_insn	(x=0X710001C0B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C0B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C0C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C0D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C0E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C0E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C100);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C104);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C110);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C114);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C11C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710001C168);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C170);
	op_stkvar	(x,	1);
	create_insn	(0X710001C178);
	create_insn	(x=0X710001C184);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C188);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C190);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C194);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C19C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710001C1F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C1FC);
	op_stkvar	(x,	1);
	create_insn	(0X710001C204);
	create_insn	(0X710001C214);
	create_insn	(0X710001C228);
	create_insn	(0X710001C234);
	create_insn	(0X710001C244);
	create_insn	(0X710001C254);
	create_insn	(0X710001C264);
	create_insn	(0X710001C274);
	create_insn	(0X710001C284);
	create_insn	(0X710001C294);
	create_insn	(0X710001C2A4);
	create_insn	(0X710001C2B8);
	create_insn	(0X710001C2C4);
	create_insn	(0X710001C2D8);
	create_insn	(0X710001C2E4);
	create_insn	(0X710001C2F8);
	create_insn	(0X710001C304);
	create_insn	(x=0X710001C31C);
	op_hex		(x,	1);
	create_insn	(0X710001C334);
	create_insn	(0X710001C340);
	create_insn	(x=0X710001C348);
	op_hex		(x,	1);
	create_insn	(x=0X710001C358);
	op_hex		(x,	1);
	create_insn	(0X710001C370);
	create_insn	(0X710001C37C);
	create_insn	(0X710001C38C);
	create_insn	(0X710001C39C);
	create_insn	(0X710001C3AC);
	create_insn	(0X710001C3BC);
	create_insn	(0X710001C3D0);
	create_insn	(0X710001C3DC);
	create_insn	(0X710001C3EC);
	create_insn	(0X710001C400);
	make_array	(0X710001C40C,	0X4);
	create_insn	(0X710001C410);
	set_name	(0X710001C410,	"QueryMountSystemDataCacheSize");
	create_insn	(x=0X710001C414);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C418);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C440);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X710001C444,	"__int64",	0);
	create_insn	(x=0X710001C44C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C454);
	op_stkvar	(x,	1);
	create_insn	(0X710001C45C);
	create_insn	(x=0X710001C464);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C468);
	op_stkvar	(x,	1);
	create_insn	(0X710001C474);
	create_insn	(x=0X710001C47C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C480);
	op_stkvar	(x,	1);
	make_array	(0X710001C48C,	0X4);
	create_insn	(0X710001C490);
	set_name	(0X710001C490,	"MountSystemData");
	create_insn	(x=0X710001C494);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C498);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C4C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X710001C4CC,	"__int64",	0);
	create_insn	(x=0X710001C4D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C4DC);
	op_stkvar	(x,	1);
	create_insn	(0X710001C4E4);
	create_insn	(x=0X710001C4EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C4F0);
	op_stkvar	(x,	1);
	create_insn	(0X710001C4FC);
	create_insn	(x=0X710001C504);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C508);
	op_stkvar	(x,	1);
	make_array	(0X710001C514,	0XC);
	create_insn	(0X710001C520);
	create_insn	(x=0X710001C524);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C528);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C52C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C540);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C54C);
	op_stkvar	(x,	1);
	create_insn	(0X710001C558);
	create_insn	(x=0X710001C564);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C568);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C56C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C578);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C57C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C580);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C594);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C5C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C5C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C5C8);
	op_stkvar	(x,	1);
	make_array	(0X710001C5D4,	0XC);
	create_insn	(0X710001C5E0);
	set_name	(0X710001C5E0,	"nn::fssrv::sf::IFileSystemProxy::OpenDataStorageByDataId");
	create_insn	(x=0X710001C5E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C5E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C5EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C5F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C608);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C610);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C614);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C630);
	op_hex		(x,	1);
	create_insn	(x=0X710001C65C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X710001C660,	"__int64",	0);
	create_insn	(x=0X710001C668);
	op_stkvar	(x,	1);
	create_insn	(0X710001C678);
	create_insn	(x=0X710001C68C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710001C698);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C69C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C6C4);
	op_stkvar	(x,	1);
	create_insn	(0X710001C6D0);
	create_insn	(x=0X710001C6D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C6EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C704);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C708);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C70C);
	op_stkvar	(x,	1);
	create_insn	(0X710001C718);
	create_insn	(x=0X710001C71C);
	op_stkvar	(x,	1);
	make_array	(0X710001C728,	0X8);
	create_insn	(0X710001C730);
	create_insn	(x=0X710001C734);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C738);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C73C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C740);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C744);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C750);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C754);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C78C);
	op_hex		(x,	1);
	create_insn	(x=0X710001C790);
	op_stkvar	(x,	1);
	create_insn	(0X710001C7B8);
	create_insn	(x=0X710001C7C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C7D4);
	op_hex		(x,	1);
	create_insn	(x=0X710001C7D8);
	op_hex		(x,	1);
	create_insn	(x=0X710001C7DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C7E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C7E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C7FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C800);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C814);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C818);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C82C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C830);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C848);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C84C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C850);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C854);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C858);
	op_stkvar	(x,	1);
	make_array	(0X710001C864,	0XC);
	create_insn	(0X710001C870);
	create_insn	(x=0X710001C874);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C878);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C87C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C880);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C8AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C8B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C8B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C8B8);
	op_stkvar	(x,	1);
	create_insn	(0X710001C8C4);
	create_insn	(x=0X710001C8C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C8D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C8F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C8FC);
	op_stkvar	(x,	1);
	create_insn	(0X710001C914);
	create_insn	(0X710001C920);
	set_name	(0X710001C920,	"nn::fssrv::sf::IStorage::D1");
	create_insn	(x=0X710001C924);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X710001C944);
	create_insn	(x=0X710001C948);
	op_stkvar	(x,	1);
	set_name	(0X710001C948,	"nn::fssrv::sf::IStorage::D0");
	create_insn	(x=0X710001C94C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C954);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710001C95C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710001C980);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C988);
	op_stkvar	(x,	1);
	create_insn	(0X710001C990);
	set_name	(0X710001C990,	"nn::fssrv::sf::IStorage::Read");
	create_insn	(x=0X710001C994);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C9A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C9B4);
	op_stkvar	(x,	1);
	create_insn	(0X710001C9C0);
	set_name	(0X710001C9C0,	"nn::fssrv::sf::IStorage::Write");
	create_insn	(x=0X710001C9C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C9D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001C9E4);
	op_stkvar	(x,	1);
	create_insn	(0X710001C9F0);
	set_name	(0X710001C9F0,	"nn::fssrv::sf::IStorage::Flush");
	create_insn	(0X710001CA00);
	set_name	(0X710001CA00,	"nn::fssrv::sf::IStorage::SetSize");
	create_insn	(0X710001CA10);
	set_name	(0X710001CA10,	"nn::fssrv::sf::IStorage::GetSize");
	create_insn	(0X710001CA20);
	set_name	(0X710001CA20,	"nn::fssrv::sf::IStorage::OperateRange");
	create_insn	(x=0X710001CA24);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001CA60);
	op_stkvar	(x,	1);
	create_insn	(0X710001CA78);
	create_insn	(x=0X710001CA98);
	op_stkvar	(x,	1);
	create_insn	(0X710001CAA4);
	create_insn	(x=0X710001CAAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001CAB8);
	op_hex		(x,	1);
	create_insn	(x=0X710001CABC);
	op_stkvar	(x,	1);
	create_insn	(0X710001CAC8);
	create_insn	(x=0X710001CACC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X710001CAE0);
	set_name	(0X710001CAE0,	"nullsub_26");
	create_insn	(x=0X710001CAE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001CAE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001CAFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001CB04);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001CB0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001CB10);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001CB14);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001CB18);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001CB34);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001CB4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001CB50);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001CB54);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001CB58);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001CB60);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001CB74);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001CB78);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001CB7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001CB80);
	op_stkvar	(x,	1);
	create_insn	(0X710001CB88);
	create_insn	(x=0X710001CBBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001CBC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001CBC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001CBC8);
	op_stkvar	(x,	1);
	create_insn	(0X710001CBD0);
	create_insn	(x=0X710001CBD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001CBDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001CBE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001CBE4);
	op_stkvar	(x,	1);
	create_insn	(0X710001CBEC);
	create_insn	(0X710001CBF4);
	create_insn	(0X710001CC08);
	create_insn	(0X710001CC44);
	create_insn	(0X710001CC68);
	create_insn	(0X710001CC74);
	create_insn	(0X710001CC7C);
	create_insn	(0X710001CCA8);
	create_insn	(0X710001CCB4);
	create_insn	(0X710001CCBC);
	create_insn	(x=0X710001CCC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001CCCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001CCD4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710001CCDC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710001CCF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001CCFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001CD04);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001CD08);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001CD10);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710001CD18);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710001CDA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001CDA4);
	op_stkvar	(x,	1);
	make_array	(0X710001CDAC,	0X4);
	create_insn	(x=0X710001CDB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001CDB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001CDB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001CDC0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710001CDC8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X710001CE34);
	create_insn	(x=0X710001CEBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001CEC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001CEC4);
	op_stkvar	(x,	1);
	create_insn	(0X710001CECC);
	create_insn	(x=0X710001CEF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001CEF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001CEF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001CF00);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001CF04);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001CF18);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001CF20);
	op_stkvar	(x,	1);
	create_insn	(0X710001CF28);
	create_insn	(x=0X710001CF2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001CF30);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001CF3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001CF4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001CF58);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001CF5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001CF64);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001CF70);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001CF74);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001CF80);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001CF84);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001CF8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001CF90);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001CFA0);
	op_hex		(x,	1);
	create_insn	(x=0X710001CFA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001CFAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001CFB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001CFBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001CFC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D000);
	op_hex		(x,	1);
	create_insn	(x=0X710001D010);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D014);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D018);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D020);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D024);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D028);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D02C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D030);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D040);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D050);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D05C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D064);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D070);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D078);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D090);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D094);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D098);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D09C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D0A0);
	op_stkvar	(x,	1);
	create_insn	(0X710001D0A8);
	create_insn	(x=0X710001D0AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D0B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D0B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D0BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D0CC);
	op_hex		(x,	1);
	create_insn	(0X710001D0E4);
	create_insn	(x=0X710001D0E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D0F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D104);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D114);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D120);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D130);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D140);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D15C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710001D164);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D1A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D1E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D224);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D280);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D284);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710001D28C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710001D290);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D294);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D298);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D29C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D2A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D2A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D2AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D2B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D2B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D2BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D2C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D2C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D2C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D2CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D2D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D2D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D2D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D2DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D2E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D2E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D2E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D2EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D2F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D2F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D2F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D2FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D300);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D304);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D308);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D30C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D310);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D314);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D318);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D31C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D320);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D324);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D328);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D32C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D340);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D348);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D350);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D358);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D360);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D368);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D370);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D37C);
	op_stkvar	(x,	1);
	create_insn	(0X710001D38C);
	create_insn	(x=0X710001D390);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D398);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D3AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D3B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D3C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D3D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D3E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D414);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D41C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D43C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D444);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D464);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D46C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D498);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710001D4A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D4D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D510);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D548);
	op_stkvar	(x,	1);
	make_array	(0X710001D55C,	0X4);
	create_insn	(x=0X710001D560);
	op_stkvar	(x,	1);
	set_name	(0X710001D560,	"nn::fs::SubStorage::D1");
	create_insn	(x=0X710001D564);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D570);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710001D5A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D5A8);
	op_stkvar	(x,	1);
	create_insn	(0X710001D5B0);
	create_insn	(x=0X710001D5C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D5C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D5D0);
	op_hex		(x,	1);
	create_insn	(x=0X710001D5E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D5E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D5E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D5EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D5FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D620);
	op_hex		(x,	1);
	create_insn	(x=0X710001D638);
	op_hex		(x,	1);
	create_insn	(x=0X710001D648);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D64C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D650);
	op_stkvar	(x,	1);
	create_insn	(0X710001D65C);
	create_insn	(0X710001D668);
	create_insn	(x=0X710001D680);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D6AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D6B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D6B4);
	op_stkvar	(x,	1);
	create_insn	(0X710001D6C0);
	create_insn	(x=0X710001D6C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D6CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D6D0);
	op_stkvar	(x,	1);
	create_insn	(0X710001D6DC);
	create_insn	(x=0X710001D6E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D6E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D6E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D6F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D710);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D728);
	op_hex		(x,	1);
	create_insn	(x=0X710001D740);
	op_hex		(x,	1);
	create_insn	(x=0X710001D750);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D754);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D758);
	op_stkvar	(x,	1);
	create_insn	(0X710001D764);
	create_insn	(x=0X710001D770);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710001D780);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D7A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D7AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D7B0);
	op_stkvar	(x,	1);
	create_insn	(0X710001D7BC);
	create_insn	(x=0X710001D7C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D7C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D7CC);
	op_stkvar	(x,	1);
	create_insn	(0X710001D7D8);
	create_insn	(x=0X710001D7DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D7E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D7F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D800);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D810);
	op_hex		(x,	1);
	create_insn	(x=0X710001D834);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D838);
	op_stkvar	(x,	1);
	create_insn	(0X710001D844);
	create_insn	(x=0X710001D84C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D850);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D85C);
	op_hex		(x,	1);
	create_insn	(x=0X710001D878);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D87C);
	op_stkvar	(x,	1);
	create_insn	(0X710001D888);
	create_insn	(0X710001D894);
	create_insn	(0X710001D8A0);
	create_insn	(0X710001D8AC);
	create_insn	(0X710001D8B8);
	create_insn	(0X710001D8C4);
	create_insn	(0X710001D8D0);
	create_insn	(0X710001D8DC);
	create_insn	(0X710001D8E8);
	create_insn	(0X710001D8F0);
	create_insn	(0X710001D8FC);
	create_insn	(0X710001D904);
	create_insn	(0X710001D910);
	create_insn	(0X710001D91C);
	create_insn	(0X710001D964);
	create_insn	(0X710001D970);
	create_insn	(0X710001D97C);
	create_insn	(x=0X710001D984);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D988);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D98C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D9C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D9C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D9C8);
	op_stkvar	(x,	1);
	create_insn	(0X710001D9D0);
	create_insn	(x=0X710001D9D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D9DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001D9E0);
	op_stkvar	(x,	1);
	create_insn	(0X710001D9E8);
	create_insn	(x=0X710001DA00);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DA04);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DA08);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DA10);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DA14);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DA18);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DA4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DA50);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DA54);
	op_stkvar	(x,	1);
	create_insn	(0X710001DA5C);
	create_insn	(x=0X710001DA64);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DA68);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DA6C);
	op_stkvar	(x,	1);
	create_insn	(0X710001DA74);
	create_insn	(x=0X710001DA8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DA90);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DA94);
	op_stkvar	(x,	1);
	create_insn	(0X710001DA9C);
	create_insn	(0X710001DAA4);
	create_insn	(0X710001DAB0);
	create_insn	(0X710001DAC0);
	create_insn	(0X710001DAFC);
	create_insn	(0X710001DB04);
	create_insn	(x=0X710001DB10);
	op_hex		(x,	1);
	create_insn	(0X710001DB18);
	set_name	(0X710001DB18,	"nullsub_27");
	make_array	(0X710001DB1C,	0X4);
	create_insn	(x=0X710001DB20);
	op_stkvar	(x,	1);
	set_name	(0X710001DB20,	"nn::fs::SubStorage::D0");
	create_insn	(x=0X710001DB24);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DB2C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710001DB34);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710001DB68);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DB70);
	op_stkvar	(x,	1);
	create_insn	(0X710001DB78);
	create_insn	(x=0X710001DB94);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DB9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DBA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DBA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DBAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DBE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DBEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DBF0);
	op_stkvar	(x,	1);
	create_insn	(0X710001DBF8);
	create_insn	(x=0X710001DC00);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DC04);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DC08);
	op_stkvar	(x,	1);
	create_insn	(0X710001DC10);
	create_insn	(x=0X710001DC14);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DC18);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DC1C);
	op_stkvar	(x,	1);
	create_insn	(0X710001DC24);
	create_insn	(x=0X710001DC2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DC30);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DC34);
	op_stkvar	(x,	1);
	create_insn	(0X710001DC3C);
	create_insn	(x=0X710001DC48);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DC58);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DC5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DC64);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DC68);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DC6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DCA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DCAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DCB0);
	op_stkvar	(x,	1);
	create_insn	(0X710001DCB8);
	create_insn	(x=0X710001DCC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DCC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DCC8);
	op_stkvar	(x,	1);
	create_insn	(0X710001DCD0);
	create_insn	(x=0X710001DCD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DCD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DCDC);
	op_stkvar	(x,	1);
	create_insn	(0X710001DCE4);
	create_insn	(x=0X710001DCEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DCF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DCF4);
	op_stkvar	(x,	1);
	create_insn	(0X710001DCFC);
	create_insn	(x=0X710001DD08);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DD18);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DD1C);
	op_stkvar	(x,	1);
	create_insn	(0X710001DD24);
	create_insn	(0X710001DD38);
	create_insn	(x=0X710001DD44);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DD48);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DD4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DD80);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DD84);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DD88);
	op_stkvar	(x,	1);
	create_insn	(0X710001DD90);
	create_insn	(x=0X710001DD94);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DD98);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DD9C);
	op_stkvar	(x,	1);
	create_insn	(0X710001DDA4);
	create_insn	(x=0X710001DDA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DDAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DDB0);
	op_stkvar	(x,	1);
	create_insn	(0X710001DDB8);
	create_insn	(x=0X710001DDD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DE00);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DE04);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DE08);
	op_stkvar	(x,	1);
	create_insn	(0X710001DE10);
	create_insn	(x=0X710001DE14);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DE18);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DE1C);
	op_stkvar	(x,	1);
	create_insn	(0X710001DE24);
	create_insn	(0X710001DE40);
	create_insn	(x=0X710001DE4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DE50);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DE54);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DE58);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DE5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DEA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DEAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DEB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DEB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DEB8);
	op_stkvar	(x,	1);
	create_insn	(0X710001DEC0);
	create_insn	(x=0X710001DEC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DECC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DED0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DED4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DED8);
	op_stkvar	(x,	1);
	create_insn	(0X710001DEE0);
	create_insn	(x=0X710001DEE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DEE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DEEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DEF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DEF4);
	op_stkvar	(x,	1);
	create_insn	(0X710001DEFC);
	create_insn	(x=0X710001DF1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DF20);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DF2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DF30);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DF38);
	op_stkvar	(x,	1);
	create_insn	(0X710001DF40);
	create_insn	(0X710001DF48);
	create_insn	(0X710001DF58);
	create_insn	(x=0X710001DF5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DF68);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DF74);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DF7C);
	op_stkvar	(x,	1);
	create_insn	(0X710001DF88);
	set_name	(0X710001DF88,	"nullsub_28");
	make_array	(0X710001DF8C,	0X4);
	create_insn	(0X710001DF90);
	create_insn	(x=0X710001DF94);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DF98);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DF9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DFA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DFA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001DFA8);
	op_stkvar	(x,	1);
	create_insn	(0X710001E0B0);
	create_insn	(0X710001E0B8);
	create_insn	(0X710001E0C4);
	create_insn	(0X710001E0CC);
	create_insn	(0X710001E0D8);
	create_insn	(x=0X710001E108);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001E110);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001E124);
	op_stkvar	(x,	1);
	create_insn	(0X710001E150);
	create_insn	(0X710001E15C);
	create_insn	(x=0X710001E164);
	op_stkvar	(x,	1);
	create_insn	(0X710001E21C);
	create_insn	(0X710001E224);
	create_insn	(0X710001E230);
	create_insn	(0X710001E238);
	create_insn	(0X710001E244);
	create_insn	(x=0X710001E294);
	op_stkvar	(x,	1);
	create_insn	(0X710001E2A0);
	create_insn	(0X710001E2D8);
	create_insn	(0X710001E2E4);
	create_insn	(x=0X710001E318);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001E320);
	op_hex		(x,	1);
	create_insn	(0X710001E340);
	create_insn	(x=0X710001E348);
	op_hex		(x,	1);
	create_insn	(x=0X710001E380);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001E384);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001E388);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001E38C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001E390);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001E394);
	op_stkvar	(x,	1);
	create_insn	(0X710001E3A0);
	create_insn	(0X710001E3A8);
	create_insn	(x=0X710001E3AC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X710001E410);
	create_insn	(x=0X710001E414);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001E418);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001E41C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001E420);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001E424);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001E428);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001E450);
	op_stkvar	(x,	1);
	create_insn	(0X710001E588);
	create_insn	(x=0X710001E590);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001E5A4);
	op_stkvar	(x,	1);
	create_insn	(0X710001E5C8);
	create_insn	(x=0X710001E634);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001E7A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001E7A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001E7AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001E7B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001E7B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001E7B8);
	op_stkvar	(x,	1);
	create_insn	(0X710001E7C4);
	create_insn	(0X710001E7F0);
	create_insn	(x=0X710001E7F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001E7F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001E7FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001E800);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001E874);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001E880);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001E888);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001E89C);
	op_hex		(x,	1);
	create_insn	(x=0X710001E904);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001E910);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001E914);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001E920);
	op_hex		(x,	1);
	create_insn	(x=0X710001E930);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001E934);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001E938);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001E93C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001E948);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001E950);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001E954);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001E960);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001E964);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001E968);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001E96C);
	op_stkvar	(x,	1);
	create_insn	(0X710001E978);
	create_insn	(x=0X710001E980);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001E984);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001E988);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001E98C);
	op_stkvar	(x,	1);
	make_array	(0X710001E998,	0X8);
	create_insn	(0X710001E9A0);
	create_insn	(x=0X710001E9A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001E9A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001E9AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001E9B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EA24);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EA30);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EA34);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EA48);
	op_hex		(x,	1);
	create_insn	(x=0X710001EAA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EAB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EAB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EAC4);
	op_hex		(x,	1);
	create_insn	(x=0X710001EAD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EAD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EADC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EAE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EAEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EAF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EAF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EAFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EB08);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EB0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EB10);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EB14);
	op_stkvar	(x,	1);
	create_insn	(0X710001EB20);
	create_insn	(x=0X710001EB28);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EB2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EB30);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EB34);
	op_stkvar	(x,	1);
	create_insn	(0X710001EB40);
	create_insn	(x=0X710001EB44);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EB48);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EB58);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EB60);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EB6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EB78);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EB7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EB88);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EB8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EB90);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EB9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EBA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EBB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EBB8);
	op_stkvar	(x,	1);
	create_insn	(0X710001EBC4);
	create_insn	(x=0X710001EBC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EBCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EBD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EBDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EBE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EBEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EBF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EBFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EC08);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EC0C);
	op_stkvar	(x,	1);
	create_insn	(0X710001EC18);
	create_insn	(x=0X710001EC1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EC20);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EC24);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EC30);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EC34);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EC84);
	op_hex		(x,	1);
	create_insn	(x=0X710001EC98);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EC9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001ECD8);
	op_hex		(x,	1);
	create_insn	(x=0X710001ECEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001ECF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001ECF4);
	op_stkvar	(x,	1);
	create_insn	(0X710001ED00);
	create_insn	(x=0X710001ED08);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001ED0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001ED10);
	op_stkvar	(x,	1);
	create_insn	(0X710001ED1C);
	create_insn	(x=0X710001ED20);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001ED24);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001ED28);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001ED34);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001ED38);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001ED40);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001ED48);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001ED4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001ED50);
	op_stkvar	(x,	1);
	create_insn	(0X710001ED5C);
	create_insn	(x=0X710001ED64);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001ED68);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001ED6C);
	op_stkvar	(x,	1);
	create_insn	(0X710001ED78);
	create_insn	(x=0X710001ED7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001ED80);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001ED90);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001ED94);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001ED98);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EDA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EDB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EDB4);
	op_stkvar	(x,	1);
	create_insn	(0X710001EDC0);
	create_insn	(x=0X710001EDC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EDC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EDCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EDD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EDDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EDE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EDF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EDF4);
	op_stkvar	(x,	1);
	create_insn	(0X710001EE00);
	create_insn	(x=0X710001EE04);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EE08);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EE24);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EE28);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EE2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EE30);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EE3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EE48);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EE4C);
	op_stkvar	(x,	1);
	create_insn	(0X710001EE58);
	create_insn	(x=0X710001EE60);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EE64);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EE70);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EE78);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EE80);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EE84);
	op_stkvar	(x,	1);
	create_insn	(0X710001EE90);
	create_insn	(x=0X710001EE94);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EE98);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EEB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EEBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EEC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EEC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EEC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EECC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EED4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EEE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EEE4);
	op_stkvar	(x,	1);
	create_insn	(0X710001EEF0);
	create_insn	(x=0X710001EEF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EEFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EF08);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EF10);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EF18);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EF1C);
	op_stkvar	(x,	1);
	create_insn	(0X710001EF28);
	create_insn	(x=0X710001EF2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EF30);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EF34);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EF38);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EF44);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EF48);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EF4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EF80);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EF84);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EF88);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EF8C);
	op_stkvar	(x,	1);
	create_insn	(0X710001EF98);
	create_insn	(x=0X710001EFA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EFA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EFA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EFAC);
	op_stkvar	(x,	1);
	create_insn	(0X710001EFB8);
	create_insn	(x=0X710001EFBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EFD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001EFE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F008);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F00C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F010);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F014);
	op_stkvar	(x,	1);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_3(void) {
        auto x;
#define id x

	create_insn	(0X710001F020);
	create_insn	(x=0X710001F024);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F028);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F02C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F030);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F034);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F038);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F040);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F048);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F054);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F060);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F06C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F078);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F084);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F088);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F08C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F09C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F0A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F0C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F0C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F0C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F0CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F0DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F0E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F0EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F0F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F0FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F110);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F124);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F140);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F148);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F14C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F154);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F158);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F178);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F194);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F198);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F1A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F1B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F1B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F1B8);
	op_stkvar	(x,	1);
	create_insn	(0X710001F1CC);
	create_insn	(x=0X710001F1D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F1D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F1D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F1DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F1E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F1F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F1F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F1FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F200);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F208);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F214);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F21C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F228);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F22C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F230);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F234);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F238);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F23C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F248);
	op_hex		(x,	1);
	create_insn	(0X710001F264);
	create_insn	(0X710001F26C);
	create_insn	(0X710001F274);
	create_insn	(x=0X710001F278);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F27C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F280);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F284);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F290);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F2A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F2BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F2C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F2C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F2C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F2D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F2EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F2F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F2F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F2F8);
	op_stkvar	(x,	1);
	create_insn	(0X710001F304);
	create_insn	(x=0X710001F308);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F30C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F310);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F320);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F334);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F344);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F34C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F360);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F380);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F384);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F388);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F398);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F3AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F3C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F3D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F3E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F3E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F400);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F41C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F424);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F428);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F430);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F458);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F45C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F47C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F488);
	op_stkvar	(x,	1);
	create_insn	(0X710001F49C);
	create_insn	(0X710001F4A8);
	create_insn	(x=0X710001F4AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F4B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F4B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F4B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F4BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F4C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F4E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F530);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F55C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F578);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F580);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F58C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F594);
	op_stkvar	(x,	1);
	create_insn	(0X710001F5B8);
	create_insn	(x=0X710001F5C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F5C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F5C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F5CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F5D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F5D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F5E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F61C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F624);
	op_stkvar	(x,	1);
	create_insn	(0X710001F644);
	create_insn	(x=0X710001F64C);
	op_stkvar	(x,	1);
	create_insn	(0X710001F654);
	create_insn	(x=0X710001F660);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F664);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F668);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F66C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F670);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F6BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F6C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F6C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F6C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F6CC);
	op_stkvar	(x,	1);
	create_insn	(0X710001F6D4);
	create_insn	(x=0X710001F6D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F6DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F6E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F6E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F6E8);
	op_stkvar	(x,	1);
	create_insn	(0X710001F6F0);
	create_insn	(x=0X710001F6F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F6F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F6FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F700);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F704);
	op_stkvar	(x,	1);
	create_insn	(0X710001F70C);
	create_insn	(x=0X710001F774);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F778);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F784);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F788);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F790);
	op_stkvar	(x,	1);
	create_insn	(0X710001F798);
	create_insn	(x=0X710001F79C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F7A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F7A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F7A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F7AC);
	op_stkvar	(x,	1);
	create_insn	(0X710001F7B4);
	create_insn	(x=0X710001F7B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F7BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F7C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F7C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F7C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F7CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F7EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F83C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F868);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F884);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F88C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F898);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F8A0);
	op_stkvar	(x,	1);
	create_insn	(0X710001F8C4);
	create_insn	(x=0X710001F8CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F8D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F8D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F8D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F8DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F8E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F8EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F928);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F930);
	op_stkvar	(x,	1);
	create_insn	(0X710001F950);
	create_insn	(x=0X710001F958);
	op_stkvar	(x,	1);
	create_insn	(0X710001F960);
	create_insn	(x=0X710001F96C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F970);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F974);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F978);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F97C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F9C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F9CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F9D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F9D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F9D8);
	op_stkvar	(x,	1);
	create_insn	(0X710001F9E0);
	create_insn	(x=0X710001F9E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F9E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F9EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F9F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001F9F4);
	op_stkvar	(x,	1);
	create_insn	(0X710001F9FC);
	create_insn	(x=0X710001FA00);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001FA04);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001FA08);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001FA0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001FA10);
	op_stkvar	(x,	1);
	create_insn	(0X710001FA18);
	create_insn	(x=0X710001FA80);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001FA84);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001FA90);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001FA94);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001FA9C);
	op_stkvar	(x,	1);
	create_insn	(0X710001FAA4);
	create_insn	(x=0X710001FAA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001FAAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001FAB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001FAB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001FAB8);
	op_stkvar	(x,	1);
	create_insn	(0X710001FAC0);
	create_insn	(x=0X710001FAC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001FAC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001FACC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001FAD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001FAD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001FAE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001FAEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001FB24);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001FB40);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001FB94);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001FBA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001FBA4);
	op_stkvar	(x,	1);
	create_insn	(0X710001FBB4);
	create_insn	(x=0X710001FBB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001FBBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001FBC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001FBC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001FBC8);
	op_stkvar	(x,	1);
	create_insn	(0X710001FBD4);
	create_insn	(0X710001FBE0);
	create_insn	(x=0X710001FBE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001FBE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001FBEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001FBF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001FBF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001FC08);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001FC0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001FC60);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001FCB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001FCC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001FCC8);
	op_stkvar	(x,	1);
	create_insn	(0X710001FCD8);
	create_insn	(x=0X710001FCDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001FCE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001FCE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001FCE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710001FCEC);
	op_stkvar	(x,	1);
	create_insn	(0X710001FCF8);
	create_insn	(0X710001FD04);
	create_insn	(x=0X710001FD08);
	op_hex		(x,	1);
	create_insn	(x=0X710001FD2C);
	op_hex		(x,	1);
	create_insn	(x=0X710001FD34);
	op_hex		(x,	1);
	create_insn	(x=0X710001FD40);
	op_hex		(x,	1);
	create_insn	(x=0X710001FD60);
	op_hex		(x,	1);
	create_insn	(x=0X710001FD68);
	op_hex		(x,	1);
	create_insn	(0X710001FD74);
	make_array	(0X710001FD84,	0XC);
	create_insn	(0X710001FD90);
	create_insn	(0X710001FDC0);
	create_insn	(0X710001FDCC);
	create_insn	(0X710001FDD4);
	create_insn	(0X710001FDF8);
	create_insn	(0X710001FE18);
	create_insn	(0X710001FE20);
	make_array	(0X710001FE28,	0X8);
	create_insn	(0X710001FE30);
	create_insn	(0X710001FE84);
	create_insn	(0X710001FE90);
	create_insn	(0X710001FEC8);
	create_insn	(0X710001FEE4);
	create_insn	(0X710001FEF0);
	create_insn	(0X710001FF0C);
	make_array	(0X710001FF18,	0X8);
	create_insn	(0X710001FF20);
	create_insn	(x=0X710001FF48);
	op_hex		(x,	1);
	create_insn	(0X710001FF7C);
	create_insn	(x=0X710001FFC0);
	op_hex		(x,	1);
	create_insn	(0X710001FFD0);
	create_insn	(x=0X710001FFE4);
	op_hex		(x,	1);
	create_insn	(0X7100020020);
	create_insn	(0X7100020050);
	make_array	(0X710002005C,	0X4);
	create_insn	(0X7100020060);
	set_name	(0X7100020060,	"fspsrv_SetCurrentPosixTimeWithTimeDifference");
	create_insn	(x=0X7100020064);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100020068);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100020070);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100020080);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000200B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X71000200B4,	"__int64",	0);
	create_insn	(x=0X71000200BC);
	op_stkvar	(x,	1);
	create_insn	(0X71000200CC);
	create_insn	(x=0X71000200D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000200EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000200F0);
	op_stkvar	(x,	1);
	make_array	(0X71000200FC,	0X4);
	create_insn	(x=0X7100020100);
	op_stkvar	(x,	1);
	set_name	(0X7100020100,	"nn::init::Start");
	create_insn	(x=0X7100020104);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100020108);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002010C);
	op_stkvar	(x,	1);
	create_insn	(0X7100020160);
	set_name	(0X7100020160,	"j_nullsub_96");
	make_array	(0X7100020164,	0XC);
	create_insn	(0X7100020170);
	make_array	(0X7100020174,	0XC);
	create_insn	(0X7100020180);
	set_name	(0X7100020180,	"j_nullsub_97");
	make_array	(0X7100020184,	0XC);
	create_insn	(x=0X7100020190);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002019C);
	op_stkvar	(x,	1);
	make_array	(0X71000201A4,	0XC);
	create_insn	(0X71000201B0);
	set_name	(0X71000201B0,	"nullsub_29");
	make_array	(0X71000201B4,	0XC);
	create_insn	(x=0X71000201C0);
	op_stkvar	(x,	1);
	set_name	(0X71000201C0,	"_ZN2nn4lmem13CreateExpHeapEPvmi");
	create_insn	(x=0X71000201C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000201F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000201F4);
	op_stkvar	(x,	1);
	make_array	(0X71000201FC,	0X4);
	create_insn	(x=0X7100020200);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100020204);
	op_stkvar	(x,	1);
	set_cmt	(0X7100020218,	"result",	0);
	create_insn	(x=0X7100020224);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100020228);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100020230);
	op_stkvar	(x,	1);
	set_name	(0X7100020230,	"_ZN2nn4lmem19AllocateFromExpHeapEPNS0_6detail8HeapHeadEm");
	create_insn	(x=0X7100020234);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002027C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100020280);
	op_stkvar	(x,	1);
	make_array	(0X7100020288,	0X8);
	create_insn	(x=0X7100020290);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100020294);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100020298);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000202E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000202E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000202EC);
	op_stkvar	(x,	1);
	make_array	(0X71000202F4,	0XC);
	create_insn	(x=0X7100020300);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100020304);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100020338);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002033C);
	op_stkvar	(x,	1);
	create_insn	(0X7100020344);
	create_insn	(x=0X7100020348);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002034C);
	op_stkvar	(x,	1);
	make_array	(0X7100020354,	0XC);
	create_insn	(x=0X7100020360);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100020364);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100020390);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100020394);
	op_stkvar	(x,	1);
	create_insn	(0X710002039C);
	create_insn	(x=0X71000203C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000203C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000203D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000203D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100020408);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002040C);
	op_stkvar	(x,	1);
	create_insn	(0X7100020414);
	create_insn	(x=0X7100020440);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100020444);
	op_stkvar	(x,	1);
	make_array	(0X710002044C,	0X4);
	create_insn	(x=0X7100020450);
	op_stkvar	(x,	1);
	set_name	(0X7100020450,	"_ZN2nn4lmem6detail13CreateExpHeapEPvmi");
	create_insn	(x=0X7100020454);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002046C);
	op_hex		(x,	1);
	create_insn	(x=0X7100020470);
	op_hex		(x,	1);
	create_insn	(x=0X7100020488);
	op_hex		(x,	1);
	create_insn	(x=0X71000204D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000204D8);
	op_stkvar	(x,	1);
	create_insn	(0X71000204E0);
	set_name	(0X71000204E0,	"j_nullsub_30");
	make_array	(0X71000204E4,	0XC);
	create_insn	(x=0X71000204F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000204F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002051C);
	op_hex		(x,	1);
	create_insn	(x=0X7100020590);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100020594);
	op_stkvar	(x,	1);
	create_insn	(0X710002059C);
	create_insn	(x=0X71000205E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000205E4);
	op_stkvar	(x,	1);
	create_insn	(0X71000205EC);
	create_insn	(0X71000205FC);
	create_insn	(0X7100020648);
	create_insn	(x=0X7100020654);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100020658);
	op_stkvar	(x,	1);
	create_insn	(0X7100020660);
	create_insn	(0X7100020670);
	create_insn	(0X71000206B0);
	create_insn	(x=0X71000206C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000206C8);
	op_stkvar	(x,	1);
	create_insn	(0X71000206D0);
	create_insn	(x=0X71000206DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000206E0);
	op_stkvar	(x,	1);
	create_insn	(0X71000206E8);
	create_insn	(0X71000206F0);
	create_insn	(x=0X7100020708);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002070C);
	op_stkvar	(x,	1);
	make_array	(0X7100020714,	0XC);
	create_insn	(0X7100020720);
	create_insn	(0X71000207A4);
	create_insn	(0X71000207B8);
	create_insn	(0X7100020864);
	create_insn	(0X71000208A0);
	create_insn	(0X71000208C4);
	make_array	(0X71000208CC,	0X4);
	create_insn	(0X71000208D0);
	create_insn	(0X71000208FC);
	create_insn	(0X7100020948);
	create_insn	(0X710002094C);
	make_array	(0X7100020954,	0XC);
	create_insn	(0X7100020960);
	create_insn	(0X7100020A20);
	create_insn	(0X7100020AF0);
	create_insn	(0X7100020B00);
	set_name	(0X7100020B00,	"nullsub_30");
	make_array	(0X7100020B04,	0XC);
	create_insn	(x=0X7100020B10);
	op_stkvar	(x,	1);
	set_name	(0X7100020B10,	"_ZN2nn4lmem14CreateUnitHeapEPvmmiiPNS0_6detail8HeapHeadE");
	create_insn	(x=0X7100020B14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100020B50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100020B54);
	op_stkvar	(x,	1);
	make_array	(0X7100020B5C,	0X4);
	create_insn	(x=0X7100020B60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100020B64);
	op_stkvar	(x,	1);
	set_cmt	(0X7100020B78,	"result",	0);
	create_insn	(x=0X7100020B84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100020B88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100020B90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100020B94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100020BC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100020BC4);
	op_stkvar	(x,	1);
	create_insn	(0X7100020BCC);
	create_insn	(x=0X7100020BF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100020BF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100020C00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100020C04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100020C38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100020C3C);
	op_stkvar	(x,	1);
	create_insn	(0X7100020C44);
	create_insn	(x=0X7100020C48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100020C4C);
	op_stkvar	(x,	1);
	make_array	(0X7100020C54,	0XC);
	create_insn	(x=0X7100020C60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100020C64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100020C68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100020C6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100020C94);
	op_hex		(x,	1);
	create_insn	(x=0X7100020CCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100020CD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100020CD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100020CD8);
	op_stkvar	(x,	1);
	create_insn	(0X7100020CE0);
	create_insn	(x=0X7100020D04);
	op_hex		(x,	1);
	create_insn	(0X7100020D20);
	create_insn	(x=0X7100020D28);
	op_hex		(x,	1);
	create_insn	(x=0X7100020D34);
	op_hex		(x,	1);
	create_insn	(0X7100020D58);
	create_insn	(x=0X7100020D8C);
	op_hex		(x,	1);
	create_insn	(x=0X7100020DBC);
	op_hex		(x,	1);
	create_insn	(x=0X7100020DC4);
	op_hex		(x,	1);
	create_insn	(x=0X7100020E24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100020E28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100020E2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100020E30);
	op_stkvar	(x,	1);
	make_array	(0X7100020E38,	0X8);
	create_insn	(0X7100020E40);
	create_insn	(0X7100020E50);
	make_array	(0X7100020E74,	0XC);
	create_insn	(0X7100020E80);
	create_insn	(x=0X7100020EA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100020EA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100020EC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100020EC4);
	op_stkvar	(x,	1);
	make_array	(0X7100020ECC,	0X4);
	create_insn	(0X7100020ED0);
	make_array	(0X7100020ED8,	0X8);
	create_insn	(0X7100020EE0);
	make_array	(0X7100020EE8,	0X8);
	create_insn	(x=0X7100020EF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100020EF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100020F4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100020F50);
	op_stkvar	(x,	1);
	create_insn	(0X7100020F58);
	create_dword	(0X7100020F5C);
	create_insn	(x=0X7100020F60);
	op_stkvar	(x,	1);
	set_name	(0X7100020F60,	"_ZN2nn2os15InitializeEventEPNS0_9EventTypeEbNS0_14EventClearModeE");
	create_insn	(x=0X7100020F64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100020F68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100020FA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100020FAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100020FB0);
	op_stkvar	(x,	1);
	make_array	(0X7100020FB8,	0X8);
	create_insn	(0X7100020FC0);
	set_name	(0X7100020FC0,	"_ZN2nn2os13FinalizeEventEPNS0_9EventTypeE");
	make_array	(0X7100020FC8,	0X8);
	create_insn	(x=0X7100020FD0);
	op_stkvar	(x,	1);
	set_name	(0X7100020FD0,	"_ZN2nn2os11SignalEventEPNS0_9EventTypeE");
	create_insn	(x=0X7100020FD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100020FD8);
	op_stkvar	(x,	1);
	create_insn	(0X7100021018);
	create_insn	(0X7100021044);
	create_insn	(x=0X7100021060);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021064);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021068);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021070);
	op_stkvar	(x,	1);
	set_name	(0X7100021070,	"_ZN2nn2os10ClearEventEPNS0_9EventTypeE");
	create_insn	(x=0X7100021074);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021094);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021098);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000210A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000210A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000210A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021104);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021108);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002110C);
	op_stkvar	(x,	1);
	make_array	(0X7100021114,	0XC);
	create_insn	(x=0X7100021120);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021124);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021164);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021168);
	op_stkvar	(x,	1);
	create_insn	(0X7100021170);
	create_insn	(x=0X7100021178);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100021180);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X7100021198,	0X8);
	create_insn	(x=0X71000211A0);
	op_stkvar	(x,	1);
	set_name	(0X71000211A0,	"_ZN2nn2os17CreateSystemEventEPNS0_15SystemEventTypeENS0_14EventClearModeEb");
	create_insn	(x=0X71000211A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000211C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000211C8);
	op_stkvar	(x,	1);
	create_insn	(0X71000211D0);
	create_insn	(x=0X71000211E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000211EC);
	op_stkvar	(x,	1);
	create_insn	(0X71000211F4);
	create_insn	(x=0X7100021200);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021204);
	op_stkvar	(x,	1);
	make_array	(0X710002120C,	0X4);
	create_insn	(x=0X7100021210);
	op_stkvar	(x,	1);
	set_name	(0X7100021210,	"_ZN2nn2os33AttachReadableHandleToSystemEventEPNS0_15SystemEventTypeEjbNS0_14EventClearModeE");
	create_insn	(x=0X7100021214);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021238);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002123C);
	op_stkvar	(x,	1);
	make_array	(0X7100021244,	0XC);
	create_insn	(x=0X7100021250);
	op_stkvar	(x,	1);
	set_name	(0X7100021250,	"_ZN2nn2os18DestroySystemEventEPNS0_15SystemEventTypeE");
	create_insn	(x=0X7100021270);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021278);
	op_stkvar	(x,	1);
	create_insn	(0X7100021280);
	create_dword	(0X7100021284);
	make_array	(0X7100021288,	0X8);
	create_insn	(x=0X7100021290);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000212AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000212B4);
	op_stkvar	(x,	1);
	create_insn	(0X71000212BC);
	create_insn	(x=0X71000212C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000212DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000212E4);
	op_stkvar	(x,	1);
	create_insn	(0X71000212EC);
	create_insn	(x=0X71000212F0);
	op_stkvar	(x,	1);
	set_name	(0X71000212F0,	"_ZN2nn2os17SignalSystemEventEPNS0_15SystemEventTypeE");
	create_insn	(x=0X710002130C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021314);
	op_stkvar	(x,	1);
	create_insn	(0X710002131C);
	create_insn	(x=0X7100021320);
	op_stkvar	(x,	1);
	set_name	(0X7100021320,	"_ZN2nn2os16ClearSystemEventEPNS0_15SystemEventTypeE");
	create_insn	(x=0X710002133C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021344);
	op_stkvar	(x,	1);
	create_insn	(0X710002134C);
	create_insn	(0X7100021350);
	set_name	(0X7100021350,	"j__ZN2nn2os6detail36GetReadableHandleOfInterProcessEventEPKNS1_21InterProcessEventTypeE");
	make_array	(0X7100021354,	0XC);
	create_insn	(x=0X7100021360);
	op_stkvar	(x,	1);
	set_name	(0X7100021360,	"_ZN2nn2os25InitializeMultiWaitHolderEPNS0_19MultiWaitHolderTypeEPNS0_15SystemEventTypeE");
	create_insn	(x=0X7100021390);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000213A0);
	op_stkvar	(x,	1);
	create_insn	(0X71000213A8);
	create_insn	(x=0X71000213BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000213CC);
	op_stkvar	(x,	1);
	create_insn	(0X71000213D4);
	create_qword	(0X71000213D8);
	create_insn	(x=0X71000213E0);
	op_stkvar	(x,	1);
	set_name	(0X71000213E0,	"_ZN2nn2os19InitializeMultiWaitEPNS0_13MultiWaitTypeE");
	create_insn	(x=0X71000213E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021410);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021414);
	op_stkvar	(x,	1);
	make_array	(0X710002141C,	0X4);
	create_insn	(0X7100021420);
	set_name	(0X7100021420,	"_ZN2nn2os17FinalizeMultiWaitEPNS0_13MultiWaitTypeE");
	make_array	(0X7100021428,	0X8);
	create_insn	(0X7100021430);
	set_name	(0X7100021430,	"_ZN2nn2os7WaitAnyEPNS0_13MultiWaitTypeE");
	create_insn	(x=0X7100021434);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021440);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021454);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021458);
	op_stkvar	(x,	1);
	make_array	(0X7100021464,	0XC);
	create_insn	(0X7100021470);
	set_name	(0X7100021470,	"nullsub_31");
	make_array	(0X7100021474,	0XC);
	create_insn	(0X7100021480);
	set_name	(0X7100021480,	"_ZN2nn2os19LinkMultiWaitHolderEPNS0_13MultiWaitTypeEPNS0_19MultiWaitHolderTypeE");
	make_array	(0X71000214A4,	0XC);
	create_insn	(0X71000214B0);
	set_name	(0X71000214B0,	"_ZN2nn2os21UnlinkMultiWaitHolderEPNS0_19MultiWaitHolderTypeE");
	make_array	(0X71000214E4,	0XC);
	create_insn	(0X71000214F0);
	set_name	(0X71000214F0,	"_ZN2nn2os24UnlinkAllMultiWaitHolderEPNS0_13MultiWaitTypeE");
	make_array	(0X7100021534,	0XC);
	create_insn	(0X7100021540);
	set_name	(0X7100021540,	"_ZN2nn2os22MoveAllMultiWaitHolderEPNS0_13MultiWaitTypeES2_");
	make_array	(0X71000215A8,	0X8);
	create_insn	(0X71000215B0);
	set_name	(0X71000215B0,	"_ZN2nn2os26SetMultiWaitHolderUserDataEPNS0_19MultiWaitHolderTypeEm");
	make_array	(0X71000215B8,	0X8);
	create_insn	(0X71000215C0);
	set_name	(0X71000215C0,	"_ZN2nn2os26GetMultiWaitHolderUserDataEPKNS0_19MultiWaitHolderTypeE");
	make_array	(0X71000215C8,	0X8);
	create_insn	(0X71000215D0);
	set_name	(0X71000215D0,	"_ZN2nn2os25InitializeMultiWaitHolderEPNS0_19MultiWaitHolderTypeEj");
	create_insn	(x=0X71000215D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000215E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X71000215FC,	0X4);
	create_insn	(x=0X7100021600);
	op_stkvar	(x,	1);
	set_name	(0X7100021600,	"_ZN2nn2os15InitializeMutexEPNS0_9MutexTypeEbi");
	create_insn	(x=0X7100021604);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021608);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021630);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002163C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021640);
	op_stkvar	(x,	1);
	make_array	(0X7100021648,	0X8);
	create_insn	(0X7100021650);
	set_name	(0X7100021650,	"_ZN2nn2os13FinalizeMutexEPNS0_9MutexTypeE");
	make_array	(0X7100021658,	0X8);
	create_insn	(x=0X7100021660);
	op_stkvar	(x,	1);
	set_name	(0X7100021660,	"_ZN2nn2os9LockMutexEPNS0_9MutexTypeE");
	create_insn	(x=0X7100021664);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000216A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000216A8);
	op_stkvar	(x,	1);
	create_insn	(0X71000216B0);
	set_name	(0X71000216B0,	"_ZN2nn2os11UnlockMutexEPNS0_9MutexTypeE");
	create_insn	(0X71000216C4);
	create_insn	(x=0X71000216D0);
	op_stkvar	(x,	1);
	set_name	(0X71000216D0,	"_ZN2nn2os26InitializeReaderWriterLockEPNS0_20ReaderWriterLockTypeE");
	create_insn	(x=0X71000216D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021704);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021708);
	op_stkvar	(x,	1);
	create_insn	(0X7100021710);
	set_name	(0X7100021710,	"_ZN2nn2os24FinalizeReaderWriterLockEPNS0_20ReaderWriterLockTypeE");
	make_array	(0X7100021718,	0X8);
	create_insn	(0X7100021720);
	set_name	(0X7100021720,	"_ZN2nn2os15AcquireReadLockEPNS0_20ReaderWriterLockTypeE");
	make_array	(0X7100021724,	0XC);
	create_insn	(0X7100021730);
	make_array	(0X7100021734,	0XC);
	create_insn	(0X7100021740);
	make_array	(0X7100021744,	0XC);
	create_insn	(x=0X7100021750);
	op_stkvar	(x,	1);
	set_name	(0X7100021750,	"_ZN2nn2os16ReleaseWriteLockEPNS0_20ReaderWriterLockTypeE");
	create_insn	(x=0X710002176C);
	op_stkvar	(x,	1);
	create_insn	(0X7100021774);
	create_insn	(0X7100021778);
	set_name	(0X7100021778,	"j_nn::svc::ThreadLocalRegion::GetThreadHandle");
	create_insn	(x=0X710002177C);
	op_stkvar	(x,	1);
	set_name	(0X710002177C,	"_ZN2nn2os12SdkMutexType4LockEv");
	create_insn	(x=0X7100021780);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021798);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002179C);
	op_stkvar	(x,	1);
	create_insn	(0X71000217A4);
	create_insn	(x=0X71000217A8);
	op_stkvar	(x,	1);
	set_name	(0X71000217A8,	"_ZN2nn2os12SdkMutexType6UnlockEv");
	create_insn	(x=0X71000217AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000217C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000217C8);
	op_stkvar	(x,	1);
	create_insn	(0X71000217D0);
	create_insn	(x=0X71000217D4);
	op_stkvar	(x,	1);
	set_name	(0X71000217D4,	"_ZN2nn2os21SdkRecursiveMutexType4LockEv");
	create_insn	(x=0X71000217D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021804);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021808);
	op_stkvar	(x,	1);
	create_insn	(0X7100021810);
	create_insn	(x=0X7100021814);
	op_stkvar	(x,	1);
	set_name	(0X7100021814,	"_ZN2nn2os21SdkRecursiveMutexType6UnlockEv");
	create_insn	(x=0X7100021818);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002183C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021840);
	op_stkvar	(x,	1);
	create_insn	(0X7100021848);
	create_insn	(x=0X710002184C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021850);
	op_stkvar	(x,	1);
	create_insn	(0X7100021858);
	create_dword	(0X710002185C);
	create_insn	(x=0X7100021860);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X7100021860,	"_ZN2nn2os12CreateThreadEPNS0_10ThreadTypeEPFvPvES3_S3_mi");
	create_insn	(x=0X7100021868);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X7100021888,	0X8);
	create_insn	(x=0X7100021890);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100021898);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X71000218A4,	0XC);
	create_insn	(x=0X71000218B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X71000218B0,	"_ZN2nn2os11StartThreadEPNS0_10ThreadTypeE");
	create_insn	(x=0X71000218B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X71000218C4,	0XC);
	create_insn	(0X71000218D0);
	set_name	(0X71000218D0,	"_ZN2nn2os20SetThreadNamePointerEPNS0_10ThreadTypeEPKc");
	create_insn	(x=0X71000218E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000218E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X71000218F4,	0XC);
	create_insn	(0X7100021900);
	make_array	(0X7100021908,	0X8);
	create_insn	(0X7100021910);
	make_array	(0X710002191C,	0X4);
	create_insn	(0X7100021920);
	set_name	(0X7100021920,	"_ZN2nn2os11SleepThreadENS_8TimeSpanE");
	make_array	(0X7100021924,	0XC);
	create_insn	(x=0X7100021930);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100021938);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X7100021944,	0XC);
	create_insn	(x=0X7100021950);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021958);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100021968);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021974);
	op_stkvar	(x,	1);
	create_dword	(0X7100021984);
	make_array	(0X7100021988,	0X8);
	create_insn	(0X7100021990);
	set_name	(0X7100021990,	"_ZN2nn2os13GetSystemTickEv");
	make_array	(0X7100021998,	0X8);
	create_insn	(x=0X71000219A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X71000219A0,	"_ZNK2nn2os6detail11TickManager17ConvertToTimeSpanENS0_4TickE_");
	create_insn	(x=0X71000219A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X71000219B4,	0XC);
	create_insn	(0X71000219C0);
	set_name	(0X71000219C0,	"nn::os::CloseHandle");
	create_insn	(x=0X71000219C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000219D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000219E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000219EC);
	op_stkvar	(x,	1);
	create_dword	(0X71000219F4);
	make_array	(0X71000219F8,	0X8);
	create_insn	(0X7100021A00);
	create_dword	(0X7100021A0C);
	create_insn	(0X7100021A10);
	set_name	(0X7100021A10,	"_ZN2nn2os6detail23CreateInterProcessEventEPNS1_21InterProcessEventTypeENS0_14EventClearModeE");
	create_insn	(x=0X7100021A14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021A18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021A28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021A2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021A38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021A3C);
	op_stkvar	(x,	1);
	create_insn	(0X7100021A48);
	create_insn	(x=0X7100021A50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021A60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021A74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021A78);
	op_stkvar	(x,	1);
	make_array	(0X7100021A84,	0XC);
	create_insn	(x=0X7100021A90);
	op_stkvar	(x,	1);
	set_name	(0X7100021A90,	"_ZN2nn2os6detail24DestroyInterProcessEventEPNS1_21InterProcessEventTypeE");
	create_insn	(x=0X7100021A94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021ADC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021AE0);
	op_stkvar	(x,	1);
	make_array	(0X7100021AE8,	0X8);
	create_insn	(0X7100021AF0);
	set_name	(0X7100021AF0,	"_ZN2nn2os6detail23AttachInterProcessEventEPNS1_21InterProcessEventTypeEjbjbNS0_14EventClearModeE");
	make_array	(0X7100021B18,	0X8);
	create_insn	(0X7100021B20);
	create_insn	(0X7100021B30);
	create_insn	(0X7100021B40);
	make_array	(0X7100021B48,	0X8);
	create_insn	(0X7100021B50);
	set_name	(0X7100021B50,	"_ZN2nn2os6detail22ClearInterProcessEventEPNS1_21InterProcessEventTypeE");
	create_insn	(0X7100021B60);
	make_array	(0X7100021B68,	0X8);
	create_insn	(0X7100021B70);
	set_name	(0X7100021B70,	"_ZN2nn2os6detail36GetReadableHandleOfInterProcessEventEPKNS1_21InterProcessEventTypeE");
	make_array	(0X7100021B78,	0X8);
	create_insn	(x=0X7100021B80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021B84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021B88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021B8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021B90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021BF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021C10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021C18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021C5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021C60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021C68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021C6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021C70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021C74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021C78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021C7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021D60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021D68);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7100021DAC);
	create_insn	(x=0X7100021DC8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7100021DE4);
	create_insn	(x=0X7100021DF4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100021E58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021E5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021E60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021E64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021E68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021E6C);
	op_stkvar	(x,	1);
	create_insn	(0X7100021E74);
	create_qword	(0X7100021E78);
	create_insn	(x=0X7100021E80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021E84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021E88);
	op_stkvar	(x,	1);
	create_insn	(0X7100021EF4);
	create_insn	(x=0X7100021EF8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100021F4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021F50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021F54);
	op_stkvar	(x,	1);
	create_insn	(0X7100021F5C);
	create_insn	(x=0X7100021F64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021F68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021F6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021FA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021FAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021FB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021FB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021FBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100021FC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100022008);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002200C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100022010);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100022018);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002201C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100022020);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100022080);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100022084);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100022088);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100022090);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100022094);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100022098);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100022148);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002214C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100022150);
	op_stkvar	(x,	1);
	make_array	(0X7100022158,	0X8);
	create_insn	(x=0X7100022160);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100022164);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100022168);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000221B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000221BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000221C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000221C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000221CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000221F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100022214);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100022218);
	op_stkvar	(x,	1);
	create_insn	(0X7100022220);
	create_insn	(x=0X7100022224);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100022248);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002224C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100022254);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100022258);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002225C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000222B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000222E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002230C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100022310);
	op_stkvar	(x,	1);
	make_array	(0X7100022318,	0X8);
	create_insn	(0X7100022320);
	create_insn	(x=0X7100022358);
	op_hex		(x,	1);
	create_insn	(0X710002237C);
	set_name	(0X710002237C,	"_ZNK2nn2os6detail11TickManager17ConvertToTimeSpanENS0_4TickE");
	create_insn	(0X710002239C);
	create_insn	(0X71000223BC);
	make_array	(0X7100022404,	0XC);
	create_insn	(x=0X7100022410);
	op_stkvar	(x,	1);
	set_name	(0X7100022410,	"_ZN2nn2os6detail13MultiWaitImpl19InternalWaitAnyImplILb0EEENS_6ResultEPPNS1_19MultiWaitHolderBaseEbNS_8TimeSpanEj");
	create_insn	(x=0X7100022414);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100022418);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002241C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100022420);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100022424);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100022450);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100022454);
	op_stkvar	(x,	1);
	create_insn	(0X710002245C);
	create_insn	(x=0X7100022470);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100022490);
	op_stkvar	(x,	1);
	create_insn	(0X71000224A4);
	create_insn	(x=0X71000224A8);
	op_stkvar	(x,	1);
	create_insn	(0X71000224B8);
	create_insn	(0X710002252C);
	create_insn	(x=0X7100022548);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002254C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100022564);
	op_stkvar	(x,	1);
	create_insn	(0X71000225A8);
	create_insn	(x=0X71000225B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000225BC);
	op_stkvar	(x,	1);
	create_insn	(0X71000225D0);
	create_insn	(x=0X71000225D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000225DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000225F4);
	op_stkvar	(x,	1);
	create_insn	(0X7100022620);
	create_insn	(x=0X7100022628);
	op_stkvar	(x,	1);
	create_insn	(0X7100022634);
	create_insn	(x=0X710002263C);
	op_stkvar	(x,	1);
	create_insn	(0X7100022648);
	create_insn	(x=0X7100022650);
	op_stkvar	(x,	1);
	create_insn	(0X7100022660);
	create_insn	(x=0X7100022668);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002266C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100022678);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100022690);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100022694);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100022698);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002269C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000226A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000226A4);
	op_stkvar	(x,	1);
	create_insn	(0X71000226AC);
	create_insn	(x=0X71000226B0);
	op_stkvar	(x,	1);
	set_name	(0X71000226B0,	"_ZN2nn2os6detail13MultiWaitImpl11WaitAnyImplILb0EEENS_6ResultEPPNS1_19MultiWaitHolderBaseEbNS_8TimeSpanEj");
	create_insn	(x=0X71000226B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000226B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000226BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000226C0);
	op_stkvar	(x,	1);
	create_insn	(0X710002272C);
	create_insn	(x=0X710002274C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100022764);
	op_hex		(x,	1);
	create_insn	(0X7100022788);
	create_insn	(x=0X71000227AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000227B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000227C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000227C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000227C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000227CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000227D4);
	op_stkvar	(x,	1);
	set_name	(0X71000227D4,	"_ZN2nn2os6detail13MultiWaitImpl21NotifyAndWakeupThreadEPNS1_19MultiWaitHolderBaseE");
	create_insn	(x=0X71000227D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000227DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100022804);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100022808);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002280C);
	op_stkvar	(x,	1);
	create_insn	(0X7100022814);
	create_insn	(x=0X7100022824);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100022828);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002282C);
	op_stkvar	(x,	1);
	create_insn	(0X7100022834);
	create_insn	(0X710002283C);
	create_insn	(x=0X7100022844);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100022848);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100022878);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002287C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100022884);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100022888);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000228DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000228E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000228E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000228EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100022938);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002293C);
	op_stkvar	(x,	1);
	create_insn	(0X7100022944);
	create_insn	(0X710002294C);
	create_insn	(0X7100022960);
	create_insn	(0X7100022968);
	set_name	(0X7100022968,	"nullsub_32");
	create_insn	(0X710002296C);
	create_insn	(0X7100022974);
	make_array	(0X7100022984,	0XC);
	create_insn	(x=0X7100022990);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100022998);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000229A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000229B4);
	op_hex		(x,	1);
	create_insn	(x=0X71000229C0);
	op_stkvar	(x,	1);
	make_array	(0X71000229C8,	0X8);
	create_insn	(x=0X71000229D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000229D4);
	op_hex		(x,	1);
	create_insn	(x=0X71000229D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X71000229E4,	0XC);
	create_insn	(0X71000229F0);
	set_name	(0X71000229F0,	"_ZN2nn2os11GetTlsValueENS0_7TlsSlotE");
	make_array	(0X7100022A04,	0XC);
	create_insn	(0X7100022A10);
	create_insn	(x=0X7100022A24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100022AAC);
	op_stkvar	(x,	1);
	create_insn	(0X7100022AB4);
	create_insn	(x=0X7100022B38);
	op_stkvar	(x,	1);
	create_insn	(0X7100022B40);
	create_insn	(x=0X7100022B44);
	op_stkvar	(x,	1);
	create_insn	(0X7100022B4C);
	create_insn	(x=0X7100022B50);
	op_stkvar	(x,	1);
	create_insn	(0X7100022B58);
	create_insn	(x=0X7100022B5C);
	op_stkvar	(x,	1);
	create_insn	(0X7100022B64);
	create_insn	(x=0X7100022B68);
	op_stkvar	(x,	1);
	create_insn	(0X7100022B70);
	create_insn	(x=0X7100022B74);
	op_stkvar	(x,	1);
	create_insn	(0X7100022B7C);
	create_insn	(x=0X7100022B80);
	op_stkvar	(x,	1);
	create_insn	(0X7100022B88);
	create_insn	(x=0X7100022B8C);
	op_stkvar	(x,	1);
	create_insn	(0X7100022B94);
	create_insn	(x=0X7100022B98);
	op_stkvar	(x,	1);
	create_insn	(0X7100022BA0);
	create_insn	(x=0X7100022BA4);
	op_stkvar	(x,	1);
	create_insn	(0X7100022BAC);
	create_insn	(x=0X7100022BB0);
	op_stkvar	(x,	1);
	create_insn	(0X7100022BB8);
	create_insn	(x=0X7100022BBC);
	op_stkvar	(x,	1);
	create_insn	(0X7100022BC4);
	create_insn	(x=0X7100022BC8);
	op_stkvar	(x,	1);
	create_insn	(0X7100022BD0);
	create_insn	(x=0X7100022BD4);
	op_stkvar	(x,	1);
	create_insn	(0X7100022BDC);
	create_insn	(x=0X7100022BE0);
	op_stkvar	(x,	1);
	create_insn	(0X7100022BE8);
	create_insn	(x=0X7100022BEC);
	op_stkvar	(x,	1);
	create_insn	(0X7100022BF4);
	create_insn	(x=0X7100022BF8);
	op_stkvar	(x,	1);
	create_insn	(0X7100022C00);
	create_insn	(x=0X7100022C04);
	op_stkvar	(x,	1);
	create_insn	(0X7100022C0C);
	create_insn	(x=0X7100022C10);
	op_stkvar	(x,	1);
	create_insn	(0X7100022C18);
	create_insn	(x=0X7100022C1C);
	op_stkvar	(x,	1);
	create_insn	(0X7100022C24);
	create_insn	(x=0X7100022C28);
	op_stkvar	(x,	1);
	create_insn	(0X7100022C30);
	create_insn	(x=0X7100022C34);
	op_stkvar	(x,	1);
	create_insn	(0X7100022C3C);
	create_insn	(x=0X7100022C40);
	op_stkvar	(x,	1);
	create_insn	(0X7100022C48);
	create_insn	(x=0X7100022C4C);
	op_stkvar	(x,	1);
	create_insn	(0X7100022C54);
	create_insn	(x=0X7100022C58);
	op_stkvar	(x,	1);
	create_insn	(0X7100022C60);
	create_insn	(x=0X7100022C64);
	op_stkvar	(x,	1);
	create_insn	(0X7100022C6C);
	create_insn	(x=0X7100022C70);
	op_stkvar	(x,	1);
	create_insn	(0X7100022C78);
	create_insn	(x=0X7100022C7C);
	op_stkvar	(x,	1);
	create_insn	(0X7100022C84);
	create_insn	(x=0X7100022C88);
	op_stkvar	(x,	1);
	create_insn	(0X7100022C90);
	create_insn	(x=0X7100022C94);
	op_stkvar	(x,	1);
	create_insn	(0X7100022C9C);
	create_insn	(x=0X7100022CA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100022CA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100022CFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100022D00);
	op_stkvar	(x,	1);
	make_array	(0X7100022D08,	0X8);
	create_insn	(x=0X7100022D10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100022D14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100022D18);
	op_stkvar	(x,	1);
	create_insn	(0X7100022D38);
	create_insn	(0X7100022D64);
	create_insn	(0X7100022D98);
	create_insn	(0X7100022DC8);
	create_insn	(0X7100022DF8);
	create_insn	(0X7100022E28);
	create_insn	(0X7100022E58);
	create_insn	(0X7100022E88);
	create_insn	(x=0X7100022E8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100022E90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100022E94);
	op_stkvar	(x,	1);
	create_insn	(0X7100022E9C);
	create_insn	(0X7100022EA4);
	create_insn	(x=0X7100022ED0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100022ED4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100022ED8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100022EDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100022EE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100022F30);
	op_hex		(x,	1);
	create_insn	(x=0X7100022F40);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100022F7C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100022F84);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100022F94);
	op_hex		(x,	1);
	create_insn	(x=0X7100022F98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100022F9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100022FA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100022FA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100022FA8);
	op_stkvar	(x,	1);
	create_insn	(0X7100022FB0);
	set_name	(0X7100022FB0,	"nullsub_33");
	create_insn	(x=0X7100022FB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100022FB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100022FBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100022FF8);
	op_hex		(x,	1);
	create_insn	(x=0X710002301C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023020);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023024);
	op_stkvar	(x,	1);
	create_insn	(0X710002302C);
	create_insn	(x=0X7100023030);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023034);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023054);
	op_hex		(x,	1);
	create_insn	(x=0X7100023078);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023080);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023088);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023090);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023098);
	op_stkvar	(x,	1);
	create_insn	(0X71000230A0);
	create_insn	(x=0X71000230A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000230B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000230B8);
	op_stkvar	(x,	1);
	create_insn	(0X71000230C4);
	set_name	(0X71000230C4,	"_ZN2nn2os6detail22MultiWaitImplByHorizon10CancelWaitEv");
	create_insn	(x=0X71000230C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000230D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000230E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000230EC);
	op_stkvar	(x,	1);
	create_insn	(0X71000230F4);
	create_insn	(x=0X71000230F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000230FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023100);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002310C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002311C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023124);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002312C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002313C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023144);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023150);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023164);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023174);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002317C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023190);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023194);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023198);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000231A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000231AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000231B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000231B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000231C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000231C8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000231D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000231E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100023200);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023204);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002320C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023218);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002321C);
	op_stkvar	(x,	1);
	create_insn	(0X7100023224);
	create_insn	(0X7100023230);
	create_insn	(x=0X7100023234);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023254);
	op_stkvar	(x,	1);
	create_insn	(0X710002325C);
	create_insn	(x=0X7100023260);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023264);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023268);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002326C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023288);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000232A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000232B4);
	op_hex		(x,	1);
	create_insn	(x=0X71000232DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000232E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023300);
	op_hex		(x,	1);
	create_insn	(x=0X710002331C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100023328);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023340);
	op_hex		(x,	1);
	create_insn	(x=0X710002335C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100023368);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023380);
	op_hex		(x,	1);
	create_insn	(x=0X710002339C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000233A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000233C0);
	op_hex		(x,	1);
	create_insn	(x=0X71000233DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000233E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023400);
	op_hex		(x,	1);
	create_insn	(x=0X710002341C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100023428);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023440);
	op_hex		(x,	1);
	create_insn	(x=0X710002345C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100023468);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023480);
	op_hex		(x,	1);
	create_insn	(x=0X710002349C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000234A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000234C0);
	op_hex		(x,	1);
	create_insn	(x=0X71000234DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000234E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023500);
	op_hex		(x,	1);
	create_insn	(x=0X7100023514);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023518);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023524);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002352C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023534);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023538);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002353C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023540);
	op_stkvar	(x,	1);
	create_insn	(0X710002354C);
	create_insn	(x=0X7100023584);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023588);
	op_stkvar	(x,	1);
	create_insn	(0X7100023590);
	create_insn	(x=0X71000235AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000235B0);
	op_stkvar	(x,	1);
	create_insn	(0X71000235B8);
	create_insn	(x=0X71000235C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000235C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000235DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000235E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100023614);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100023628);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002362C);
	op_stkvar	(x,	1);
	create_insn	(0X7100023634);
	create_insn	(x=0X7100023638);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023648);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023650);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002365C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023664);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023668);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002367C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023688);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002368C);
	op_stkvar	(x,	1);
	create_insn	(0X7100023694);
	create_dword	(0X710002369C);
	create_insn	(0X71000236A0);
	create_insn	(x=0X71000236A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000236A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000236AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000236C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000236E0);
	op_hex		(x,	1);
	create_insn	(x=0X7100023700);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002370C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023710);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023714);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023720);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023724);
	op_stkvar	(x,	1);
	set_cmt	(0X710002372C,	"__int64",	0);
	create_insn	(0X710002372C);
	set_name	(0X710002372C,	"_ZN2nn2os6detail26ThreadManagerImplByHorizon11YieldThreadEv");
	make_array	(0X7100023734,	0XC);
	create_insn	(0X7100023740);
	create_insn	(x=0X7100023744);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023748);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002374C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023764);
	op_hex		(x,	1);
	create_insn	(x=0X7100023778);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002377C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023788);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023790);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000237A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000237A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000237B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000237BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000237D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000237DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000237E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000237FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023800);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023808);
	op_stkvar	(x,	1);
	create_insn	(0X7100023814);
	create_insn	(x=0X7100023818);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023820);
	op_stkvar	(x,	1);
	create_insn	(0X7100023828);
	make_array	(0X710002382C,	0X4);
	create_insn	(x=0X7100023830);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023834);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023838);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002383C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023840);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023844);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002384C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100023850);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100023854);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100023858);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7100023880);
	create_insn	(0X71000238E4);
	create_insn	(0X71000238EC);
	create_insn	(0X71000238F4);
	create_insn	(x=0X71000238FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023900);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023904);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023908);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002390C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023910);
	op_stkvar	(x,	1);
	make_array	(0X7100023918,	0X8);
	create_insn	(x=0X7100023920);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023924);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023928);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002392C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023934);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002393C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7100023988);
	create_insn	(x=0X71000239E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000239E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000239E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000239EC);
	op_stkvar	(x,	1);
	make_array	(0X71000239F4,	0XC);
	create_insn	(0X7100023A00);
	create_insn	(x=0X7100023A04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023A08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023A0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023A10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023A14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023A18);
	op_stkvar	(x,	1);
	create_insn	(0X7100023A70);
	create_insn	(x=0X7100023A9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023AA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023AA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023AA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023AAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023AB0);
	op_stkvar	(x,	1);
	create_insn	(0X7100023ABC);
	create_insn	(x=0X7100023ACC);
	op_stkvar	(x,	1);
	create_insn	(0X7100023AD4);
	create_insn	(x=0X7100023B30);
	op_stkvar	(x,	1);
	create_insn	(0X7100023B3C);
	create_insn	(0X7100023B68);
	create_insn	(x=0X7100023B78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023B7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023B80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023BD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023BD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023BD8);
	op_stkvar	(x,	1);
	create_insn	(0X7100023BE0);
	create_insn	(x=0X7100023BE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023BE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023BEC);
	op_stkvar	(x,	1);
	make_array	(0X7100023BF4,	0XC);
	create_insn	(x=0X7100023C00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023C04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023C10);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100023C20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023C2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023C34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023C38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023C3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023C78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023C7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023C80);
	op_stkvar	(x,	1);
	create_insn	(0X7100023C88);
	create_insn	(x=0X7100023C8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023C90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023CA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023CA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023CA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023CAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023CB8);
	op_hex		(x,	1);
	create_insn	(x=0X7100023CCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023CD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023CDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023CE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023CEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023CF0);
	op_stkvar	(x,	1);
	create_insn	(0X7100023CFC);
	create_insn	(x=0X7100023D0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023D10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023D18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023D1C);
	op_stkvar	(x,	1);
	create_insn	(0X7100023D24);
	create_insn	(x=0X7100023D28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023D3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023D44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023D50);
	op_stkvar	(x,	1);
	create_insn	(0X7100023D58);
	create_insn	(x=0X7100023D5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023D6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023D74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023D80);
	op_stkvar	(x,	1);
	create_insn	(0X7100023D88);
	create_insn	(x=0X7100023D8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023D9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023DA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023DB0);
	op_stkvar	(x,	1);
	create_qword	(0X7100023DB8);
	create_insn	(0X7100023DC0);
	create_insn	(x=0X7100023DC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023DC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023DD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023DE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023DE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023DF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023E00);
	op_hex		(x,	1);
	create_insn	(x=0X7100023E0C);
	op_stkvar	(x,	1);
	create_insn	(0X7100023E1C);
	create_insn	(x=0X7100023E20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023E24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023E40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023E44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023E58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023E5C);
	op_stkvar	(x,	1);
	make_array	(0X7100023E68,	0X8);
	create_insn	(x=0X7100023E70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023E74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023E7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023E94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023E98);
	op_stkvar	(x,	1);
	create_insn	(0X7100023EA0);
	create_insn	(x=0X7100023EBC);
	op_hex		(x,	1);
	create_insn	(x=0X7100023ECC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023ED0);
	op_stkvar	(x,	1);
	create_insn	(0X7100023ED8);
	create_insn	(x=0X7100023EDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023EE0);
	op_stkvar	(x,	1);
	create_insn	(0X7100023EE8);
	set_name	(0X7100023EE8,	"_ZN2nn2os6detail38InternalConditionVariableImplByHorizonC2Ev");
	create_insn	(0X7100023EF0);
	set_name	(0X7100023EF0,	"_ZN2nn2os6detail38InternalConditionVariableImplByHorizon6SignalEv");
	create_insn	(0X7100023F00);
	create_insn	(0X7100023F04);
	set_name	(0X7100023F04,	"_ZN2nn2os6detail38InternalConditionVariableImplByHorizon9BroadcastEv");
	create_insn	(0X7100023F14);
	create_insn	(x=0X7100023F18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023F1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023F20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023F34);
	op_hex		(x,	1);
	create_insn	(x=0X7100023F60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023F68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023F6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023F70);
	op_stkvar	(x,	1);
	create_insn	(0X7100023F78);
	create_insn	(0X7100023F7C);
	create_insn	(0X7100023F84);
	set_name	(0X7100023F84,	"_ZN2nn2os6detail26TimeoutHelperImplByHorizon5SleepENS_8TimeSpanE");
	create_insn	(x=0X7100023F8C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X7100023F9C,	0X4);
	create_insn	(0X7100023FA0);
	create_insn	(x=0X7100023FA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023FA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023FAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023FB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023FB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100023FBC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100023FC0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100023FC4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100023FD0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100024004);
	op_plain_offset	(x,	1,	0X71001C9C00);
	op_plain_offset	(x,	129,	0X71001C9C00);
	create_insn	(x=0X7100024008);
	op_plain_offset	(x,	1,	0X71001C9C00);
	op_plain_offset	(x,	129,	0X71001C9C00);
	create_insn	(x=0X710002400C);
	op_plain_offset	(x,	1,	0X71001C9C00);
	op_plain_offset	(x,	129,	0X71001C9C00);
	create_insn	(x=0X7100024010);
	op_plain_offset	(x,	1,	0X71001C9C00);
	op_plain_offset	(x,	129,	0X71001C9C00);
	create_insn	(x=0X7100024014);
	op_plain_offset	(x,	1,	0X71001C9C00);
	op_plain_offset	(x,	129,	0X71001C9C00);
	create_insn	(x=0X710002402C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100024034);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100024038);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100024048);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002405C);
	op_hex		(x,	1);
	create_insn	(x=0X7100024078);
	op_hex		(x,	1);
	create_insn	(0X7100024090);
	create_insn	(0X7100024140);
	create_insn	(0X7100024174);
	create_insn	(0X7100024180);
	create_insn	(x=0X7100024198);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002419C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000241A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000241A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000241B0);
	op_stkvar	(x,	1);
	create_insn	(0X71000241BC);
	create_insn	(x=0X71000241C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000241CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000241D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000241D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000241DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000241E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000241E4);
	op_stkvar	(x,	1);
	create_insn	(0X71000241F0);
	create_insn	(x=0X71000241F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000241F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000241FC);
	op_stkvar	(x,	1);
	set_cmt	(0X710002420C,	"result",	0);
	set_cmt	(0X7100024210,	"a2",	0);
	set_cmt	(0X7100024214,	"int",	0);
	set_cmt	(0X7100024218,	"__int64",	0);
	create_insn	(x=0X7100024220);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100024228);
	op_stkvar	(x,	1);
	set_cmt	(0X710002422C,	"result",	0);
	set_cmt	(0X7100024230,	"a2",	0);
	set_cmt	(0X7100024234,	"int",	0);
	set_cmt	(0X7100024238,	"__int64",	0);
	create_insn	(x=0X7100024240);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100024248);
	op_stkvar	(x,	1);
	set_cmt	(0X710002424C,	"a2",	0);
	set_cmt	(0X7100024250,	"result",	0);
	set_cmt	(0X7100024254,	"int",	0);
	set_cmt	(0X7100024258,	"__int64",	0);
	create_insn	(x=0X7100024260);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100024268);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002428C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100024290);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100024298);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000242A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000242AC);
	op_stkvar	(x,	1);
	create_insn	(0X71000242B4);
	create_insn	(x=0X71000242B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000242BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000242C0);
	op_stkvar	(x,	1);
	set_cmt	(0X71000242CC,	"result",	0);
	set_cmt	(0X71000242D0,	"a2",	0);
	set_cmt	(0X71000242D4,	"int",	0);
	set_cmt	(0X71000242D8,	"__int64",	0);
	create_insn	(x=0X71000242E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000242E8);
	op_stkvar	(x,	1);
	set_cmt	(0X71000242EC,	"result",	0);
	set_cmt	(0X71000242F0,	"a2",	0);
	set_cmt	(0X71000242F4,	"int",	0);
	set_cmt	(0X71000242F8,	"__int64",	0);
	create_insn	(x=0X7100024300);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100024308);
	op_stkvar	(x,	1);
	set_cmt	(0X710002430C,	"result",	0);
	set_cmt	(0X7100024310,	"a2",	0);
	set_cmt	(0X7100024314,	"int",	0);
	set_cmt	(0X7100024318,	"__int64",	0);
	create_insn	(x=0X7100024320);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100024328);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002434C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100024350);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100024358);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100024360);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002436C);
	op_stkvar	(x,	1);
	create_insn	(0X7100024374);
	create_insn	(x=0X7100024378);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002437C);
	op_stkvar	(x,	1);
	set_cmt	(0X7100024388,	"result",	0);
	set_cmt	(0X710002438C,	"a2",	0);
	set_cmt	(0X7100024390,	"int",	0);
	set_cmt	(0X7100024394,	"__int64",	0);
	create_insn	(x=0X710002439C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000243A4);
	op_stkvar	(x,	1);
	set_cmt	(0X71000243A8,	"a2",	0);
	set_cmt	(0X71000243AC,	"result",	0);
	set_cmt	(0X71000243B0,	"int",	0);
	set_cmt	(0X71000243B4,	"__int64",	0);
	create_insn	(x=0X71000243C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000243C8);
	op_stkvar	(x,	1);
	set_cmt	(0X71000243CC,	"result",	0);
	set_cmt	(0X71000243D0,	"a2",	0);
	set_cmt	(0X71000243D4,	"int",	0);
	set_cmt	(0X71000243D8,	"__int64",	0);
	create_insn	(x=0X71000243E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000243EC);
	op_stkvar	(x,	1);
	set_cmt	(0X71000243F0,	"result",	0);
	set_cmt	(0X71000243F4,	"a2",	0);
	set_cmt	(0X71000243F8,	"int",	0);
	set_cmt	(0X71000243FC,	"__int64",	0);
	create_insn	(x=0X7100024408);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100024410);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100024418);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002441C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100024428);
	op_stkvar	(x,	1);
	create_insn	(0X7100024430);
	create_insn	(x=0X7100024434);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100024438);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100024448);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100024458);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100024460);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100024480);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100024484);
	op_stkvar	(x,	1);
	create_insn	(0X7100024490);
	create_insn	(x=0X7100024494);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100024498);
	op_stkvar	(x,	1);
	create_insn	(0X71000244A4);
	create_insn	(x=0X71000244A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000244AC);
	op_stkvar	(x,	1);
	set_cmt	(0X71000244C0,	"result",	0);
	set_cmt	(0X71000244C4,	"a2",	0);
	set_cmt	(0X71000244CC,	"int",	0);
	set_cmt	(0X71000244D0,	"__int64",	0);
	create_insn	(x=0X71000244D8);
	op_stkvar	(x,	1);
	set_cmt	(0X71000244E0,	"result",	0);
	create_insn	(x=0X71000244E0);
	op_stkvar	(x,	1);
	set_cmt	(0X71000244E4,	"a2",	0);
	set_cmt	(0X71000244E8,	"int",	0);
	set_cmt	(0X71000244EC,	"__int64",	0);
	create_insn	(x=0X71000244F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000244FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100024500);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100024508);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002450C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100024518);
	op_stkvar	(x,	1);
	create_insn	(0X7100024520);
	create_qword	(0X7100024528);
	create_insn	(0X7100024530);
	create_insn	(x=0X7100024534);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100024538);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100024548);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100024558);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100024564);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002456C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100024570);
	op_stkvar	(x,	1);
	make_array	(0X710002457C,	0X4);
	create_insn	(0X7100024580);
	create_insn	(x=0X7100024584);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000245B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000245C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000245E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000245E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000245E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000245EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100024610);
	op_stkvar	(x,	1);
	create_insn	(0X7100024618);
	create_insn	(0X710002461C);
	create_insn	(x=0X7100024620);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100024624);
	op_stkvar	(x,	1);
	set_cmt	(0X7100024630,	"a2",	0);
	set_cmt	(0X7100024634,	"result",	0);
	create_insn	(x=0X7100024634);
	op_stkvar	(x,	1);
	set_cmt	(0X7100024638,	"int",	0);
	set_cmt	(0X710002463C,	"__int64",	0);
	create_insn	(x=0X7100024644);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002464C);
	op_stkvar	(x,	1);
	set_cmt	(0X7100024650,	"a2",	0);
	set_cmt	(0X7100024654,	"result",	0);
	create_insn	(x=0X7100024654);
	op_stkvar	(x,	1);
	set_cmt	(0X7100024658,	"int",	0);
	set_cmt	(0X710002465C,	"__int64",	0);
	create_insn	(x=0X7100024664);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002466C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100024670);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100024674);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100024678);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002467C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100024684);
	op_plain_offset	(x,	1,	0X71001C9C00);
	op_plain_offset	(x,	129,	0X71001C9C00);
	create_insn	(x=0X7100024688);
	op_plain_offset	(x,	1,	0X71001C9C00);
	op_plain_offset	(x,	129,	0X71001C9C00);
	create_insn	(x=0X7100024694);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000246A0);
	op_plain_offset	(x,	1,	0X71001C9C00);
	op_plain_offset	(x,	129,	0X71001C9C00);
	create_insn	(x=0X71000246A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000246AC);
	op_plain_offset	(x,	1,	0X71001C9C00);
	op_plain_offset	(x,	129,	0X71001C9C00);
	create_insn	(x=0X71000246B4);
	op_plain_offset	(x,	1,	0X71001C9C00);
	op_plain_offset	(x,	129,	0X71001C9C00);
	create_insn	(x=0X71000246BC);
	op_plain_offset	(x,	1,	0X71001C9C00);
	op_plain_offset	(x,	129,	0X71001C9C00);
	create_insn	(x=0X71000246C4);
	op_stkvar	(x,	1);
	create_insn	(0X71000246D0);
	create_qword	(0X71000246D8);
	create_insn	(0X71000246E0);
	create_insn	(x=0X71000246E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X71000246F0);
	create_insn	(x=0X71000246F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000246F8);
	op_plain_offset	(x,	1,	0X71000AD1D0);
	op_plain_offset	(x,	129,	0X71000AD1D0);
	create_insn	(x=0X7100024700);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100024704);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100024718);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002471C);
	op_stkvar	(x,	1);
	create_insn	(0X7100024724);
	create_insn	(x=0X710002472C);
	op_stkvar	(x,	1);
	create_dword	(0X7100024734);
	make_array	(0X7100024738,	0X8);
	create_insn	(0X7100024740);
	create_insn	(x=0X7100024744);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100024748);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002474C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100024750);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100024764);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002476C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100024778);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002477C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100024784);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100024788);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100024790);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100024794);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X71000247A0);
	set_name	(0X71000247A0,	"_ZN2nn2os6detail36InternalCriticalSectionImplByHorizonC2Ev");
	create_insn	(0X71000247A8);
	set_name	(0X71000247A8,	"_ZN2nn2os6detail36InternalCriticalSectionImplByHorizon5EnterEv");
	create_insn	(x=0X71000247AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000247B0);
	op_stkvar	(x,	1);
	create_insn	(0X71000247E0);
	create_insn	(x=0X71000247E4);
	op_hex		(x,	1);
	set_cmt	(0X71000247F0,	"int",	0);
	create_insn	(x=0X71000247F0);
	op_hex		(x,	1);
	set_cmt	(0X71000247F4,	"address",	0);
	set_cmt	(0X71000247F8,	"tag",	0);
	create_insn	(x=0X7100024800);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002480C);
	op_hex		(x,	1);
	create_insn	(0X710002481C);
	create_insn	(0X7100024824);
	create_insn	(x=0X7100024828);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002482C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100024838);
	op_stkvar	(x,	1);
	create_insn	(0X7100024840);
	set_name	(0X7100024840,	"_ZN2nn2os6detail36InternalCriticalSectionImplByHorizon5LeaveEv");
	create_insn	(x=0X7100024844);
	op_stkvar	(x,	1);
	create_insn	(0X7100024878);
	create_insn	(x=0X7100024880);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100024888);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100024894);
	op_stkvar	(x,	1);
	create_insn	(0X710002489C);
	set_name	(0X710002489C,	"_ZNK2nn2os6detail36InternalCriticalSectionImplByHorizon23IsLockedByCurrentThreadEv");
	create_insn	(x=0X71000248A8);
	op_hex		(x,	1);
	make_array	(0X71000248BC,	0X4);
	create_insn	(0X71000248C0);
	create_insn	(x=0X71000248C4);
	op_stkvar	(x,	1);
	set_cmt	(0X71000248CC,	"a2",	0);
	set_cmt	(0X71000248D0,	"result",	0);
	create_insn	(x=0X71000248D0);
	op_stkvar	(x,	1);
	set_cmt	(0X71000248D4,	"int",	0);
	set_cmt	(0X71000248D8,	"__int64",	0);
	create_insn	(x=0X71000248E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000248E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000248F4);
	op_stkvar	(x,	1);
	create_insn	(0X7100024900);
	create_insn	(0X7100024908);
	create_insn	(x=0X710002490C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100024910);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100024914);
	op_stkvar	(x,	1);
	set_cmt	(0X7100024928,	"result",	0);
	set_cmt	(0X710002492C,	"int",	0);
	set_cmt	(0X7100024930,	"a2",	0);
	set_cmt	(0X7100024934,	"__int64",	0);
	set_cmt	(0X7100024940,	"result",	0);
	set_cmt	(0X7100024944,	"a2",	0);
	set_cmt	(0X7100024948,	"int",	0);
	set_cmt	(0X710002494C,	"__int64",	0);
	create_insn	(x=0X7100024964);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100024968);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002496C);
	op_stkvar	(x,	1);
	make_array	(0X7100024978,	0X8);
	create_insn	(0X7100024980);
	set_name	(0X7100024980,	"_ZN2nn2os6detail29ReaderWriterLockImplByHorizon15AcquireReadLockEPNS0_20ReaderWriterLockTypeE");
	create_insn	(x=0X7100024984);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100024988);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002498C);
	op_stkvar	(x,	1);
	create_insn	(0X71000249C0);
	create_insn	(x=0X71000249D4);
	op_hex		(x,	1);
	create_insn	(x=0X71000249D8);
	op_hex		(x,	1);
	create_insn	(x=0X71000249DC);
	op_hex		(x,	1);
	create_insn	(x=0X71000249E0);
	op_hex		(x,	1);
	create_insn	(x=0X7100024A00);
	op_hex		(x,	1);
	create_insn	(x=0X7100024A14);
	op_hex		(x,	1);
	create_insn	(x=0X7100024A20);
	op_hex		(x,	1);
	create_insn	(x=0X7100024A24);
	op_hex		(x,	1);
	create_insn	(0X7100024A64);
	create_insn	(x=0X7100024A70);
	op_hex		(x,	1);
	create_insn	(x=0X7100024A84);
	op_hex		(x,	1);
	set_cmt	(0X7100024A90,	"int",	0);
	create_insn	(x=0X7100024A90);
	op_hex		(x,	1);
	set_cmt	(0X7100024A94,	"address",	0);
	set_cmt	(0X7100024A98,	"tag",	0);
	create_insn	(x=0X7100024AA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100024AB4);
	op_hex		(x,	1);
	create_insn	(0X7100024ACC);
	create_insn	(0X7100024AD8);
	create_insn	(0X7100024AE0);
	create_insn	(x=0X7100024AFC);
	op_hex		(x,	1);
	create_insn	(0X7100024B34);
	create_insn	(0X7100024B50);
	create_insn	(x=0X7100024B70);
	op_hex		(x,	1);
	create_insn	(x=0X7100024BB4);
	op_hex		(x,	1);
	create_insn	(0X7100024BE4);
	create_insn	(0X7100024BF8);
	set_cmt	(0X7100024C08,	"address",	0);
	create_insn	(x=0X7100024C10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100024C18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100024C1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100024C20);
	op_stkvar	(x,	1);
	create_insn	(0X7100024C2C);
	create_insn	(x=0X7100024C34);
	op_stkvar	(x,	1);
	create_dword	(0X7100024C3C);
	create_insn	(0X7100024C40);
	create_insn	(x=0X7100024C44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100024C48);
	op_stkvar	(x,	1);
	create_insn	(0X7100024C5C);
	create_insn	(x=0X7100024C7C);
	op_hex		(x,	1);
	create_insn	(x=0X7100024CD4);
	op_hex		(x,	1);
	create_insn	(0X7100024CE8);
	create_insn	(0X7100024CFC);
	create_insn	(x=0X7100024D40);
	op_hex		(x,	1);
	create_insn	(0X7100024D64);
	set_cmt	(0X7100024D70,	"address",	0);
	create_insn	(x=0X7100024D78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100024D80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100024D84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100024D90);
	op_stkvar	(x,	1);
	create_qword	(0X7100024D98);
	create_insn	(0X7100024DA0);
	create_insn	(x=0X7100024DA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100024DA8);
	op_stkvar	(x,	1);
	create_insn	(0X7100024DD0);
	create_insn	(x=0X7100024DFC);
	op_hex		(x,	1);
	create_insn	(0X7100024E34);
	create_insn	(x=0X7100024E38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100024E3C);
	op_stkvar	(x,	1);
	create_insn	(0X7100024E48);
	create_insn	(x=0X7100024E54);
	op_hex		(x,	1);
	create_insn	(x=0X7100024E58);
	op_hex		(x,	1);
	create_insn	(0X7100024E90);
	set_cmt	(0X7100024EA4,	"int",	0);
	create_insn	(x=0X7100024EA4);
	op_hex		(x,	1);
	set_cmt	(0X7100024EA8,	"address",	0);
	set_cmt	(0X7100024EAC,	"tag",	0);
	create_insn	(x=0X7100024EB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100024EC4);
	op_hex		(x,	1);
	create_insn	(0X7100024ED4);
	create_insn	(x=0X7100024EF4);
	op_hex		(x,	1);
	create_insn	(0X7100024F2C);
	create_insn	(x=0X7100024F44);
	op_hex		(x,	1);
	set_cmt	(0X7100024F74,	"address",	0);
	create_insn	(x=0X7100024F7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100024F84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100024F88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100024F94);
	op_stkvar	(x,	1);
	create_insn	(0X7100024F9C);
	create_dword	(0X7100024FA4);
	make_array	(0X7100024FA8,	0X8);
	create_insn	(0X7100024FB0);
	create_insn	(x=0X7100024FB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100024FB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100024FBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100024FC0);
	op_stkvar	(x,	1);
	create_insn	(0X7100025000);
	create_insn	(x=0X7100025010);
	op_hex		(x,	1);
	create_insn	(x=0X7100025020);
	op_hex		(x,	1);
	create_insn	(x=0X7100025030);
	op_hex		(x,	1);
	create_insn	(x=0X7100025054);
	op_hex		(x,	1);
	create_insn	(x=0X7100025064);
	op_hex		(x,	1);
	create_insn	(x=0X710002506C);
	op_hex		(x,	1);
	set_cmt	(0X7100025094,	"int",	0);
	create_insn	(x=0X7100025094);
	op_hex		(x,	1);
	set_cmt	(0X7100025098,	"address",	0);
	set_cmt	(0X710002509C,	"tag",	0);
	create_insn	(x=0X71000250A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000250B8);
	op_hex		(x,	1);
	create_insn	(0X71000250C8);
	create_insn	(0X71000250E4);
	create_insn	(0X71000250EC);
	create_insn	(0X71000250F8);
	create_insn	(x=0X7100025110);
	op_hex		(x,	1);
	create_insn	(x=0X710002511C);
	op_hex		(x,	1);
	create_insn	(x=0X7100025128);
	op_hex		(x,	1);
	create_insn	(0X7100025154);
	create_insn	(x=0X7100025174);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025178);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002517C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025180);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002518C);
	op_stkvar	(x,	1);
	create_dword	(0X7100025194);
	make_array	(0X7100025198,	0X8);
	create_insn	(0X71000251A0);
	set_name	(0X71000251A0,	"_ZN2nn2os6detail29ReaderWriterLockImplByHorizon16ReleaseWriteLockEPNS0_20ReaderWriterLockTypeE");
	create_insn	(x=0X71000251A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000251A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000251E0);
	op_hex		(x,	1);
	create_insn	(0X71000251F4);
	create_insn	(0X7100025208);
	create_insn	(x=0X7100025250);
	op_hex		(x,	1);
	create_insn	(0X7100025274);
	set_cmt	(0X7100025280,	"address",	0);
	create_insn	(x=0X7100025288);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025290);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025294);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000252A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000252A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000252AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000252B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000252B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000252B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000252BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000252C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000252C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000252C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000252CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000252D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000252DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100025300);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100025308);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025314);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100025338);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000253C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000253CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000253D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000253DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000253E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000253EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000253F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000253FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025404);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002540C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025414);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002541C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025424);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002542C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025434);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002543C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025444);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002544C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025454);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002545C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025464);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000254F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000254F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000254F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000254FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025500);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025504);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025508);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002550C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025510);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025514);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025518);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002551C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025520);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025524);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025528);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002552C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025538);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025540);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100025550);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002555C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025560);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025564);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025568);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002556C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025570);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025574);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025578);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002557C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025580);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025584);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025588);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002558C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025590);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025594);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025598);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000255A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000255A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000255A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000255AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000255B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000255B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000255B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000255BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000255C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000255C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000255C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000255D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X71000255E0);
	create_insn	(x=0X71000255F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100025600);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002563C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(0X7100025654);
	create_insn	(0X7100025658);
	create_insn	(x=0X7100025674);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002569C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000256C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000256C4);
	op_stkvar	(x,	1);
	create_insn	(0X71000256CC);
	create_insn	(x=0X71000256D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000256D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000256FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025700);
	op_stkvar	(x,	1);
	create_insn	(0X7100025708);
	create_dword	(0X710002570C);
	create_insn	(x=0X7100025710);
	op_stkvar	(x,	1);
	set_name	(0X7100025710,	"_ZN2nn2os20InitializeTimerEventEPNS0_14TimerEventTypeENS0_14EventClearModeE");
	create_insn	(x=0X7100025714);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025754);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025758);
	op_stkvar	(x,	1);
	create_insn	(0X7100025760);
	set_name	(0X7100025760,	"_ZN2nn2os18FinalizeTimerEventEPNS0_14TimerEventTypeE");
	make_array	(0X7100025768,	0X8);
	create_insn	(x=0X7100025770);
	op_stkvar	(x,	1);
	set_name	(0X7100025770,	"_ZN2nn2os22StartOneShotTimerEventEPNS0_14TimerEventTypeENS_8TimeSpanE");
	create_insn	(x=0X7100025774);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025778);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000257EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000257F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000257F4);
	op_stkvar	(x,	1);
	make_array	(0X71000257FC,	0X4);
	create_insn	(x=0X7100025800);
	op_stkvar	(x,	1);
	set_name	(0X7100025800,	"_ZN2nn2os23StartPeriodicTimerEventEPNS0_14TimerEventTypeENS_8TimeSpanES3_");
	create_insn	(x=0X7100025804);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025808);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002587C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025880);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025884);
	op_stkvar	(x,	1);
	make_array	(0X710002588C,	0X4);
	create_insn	(x=0X7100025890);
	op_stkvar	(x,	1);
	set_name	(0X7100025890,	"_ZN2nn2os14StopTimerEventEPNS0_14TimerEventTypeE");
	create_insn	(x=0X7100025894);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025898);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000258EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000258F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000258F4);
	op_stkvar	(x,	1);
	make_array	(0X71000258FC,	0X4);
	create_insn	(x=0X7100025900);
	op_stkvar	(x,	1);
	set_name	(0X7100025900,	"_ZN2nn2os16SignalTimerEventEPNS0_14TimerEventTypeE");
	create_insn	(x=0X7100025904);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025908);
	op_stkvar	(x,	1);
	create_insn	(0X710002595C);
	create_insn	(0X7100025988);
	create_insn	(x=0X71000259AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000259B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000259B4);
	op_stkvar	(x,	1);
	make_array	(0X71000259BC,	0X4);
	create_insn	(x=0X71000259C0);
	op_stkvar	(x,	1);
	set_name	(0X71000259C0,	"_ZN2nn2os15ClearTimerEventEPNS0_14TimerEventTypeE");
	create_insn	(x=0X71000259C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000259C8);
	op_stkvar	(x,	1);
	create_insn	(0X7100025A18);
	create_insn	(0X7100025A44);
	create_insn	(x=0X7100025A64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025A68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025A6C);
	op_stkvar	(x,	1);
	make_array	(0X7100025A74,	0XC);
	create_insn	(0X7100025A80);
	set_name	(0X7100025A80,	"_ZN2nn2os25InitializeMultiWaitHolderEPNS0_19MultiWaitHolderTypeEPNS0_14TimerEventTypeE");
	create_insn	(x=0X7100025A88);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100025A90);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X7100025AA8,	0X8);
	create_insn	(0X7100025AB0);
	set_name	(0X7100025AB0,	"_ZN2nn2os6detail12SaturatedAddENS_8TimeSpanES2_");
	make_array	(0X7100025AC4,	0XC);
	create_insn	(0X7100025AD0);
	set_name	(0X7100025AD0,	"_ZN2nn2os6detail15StopTimerUnsafeEPNS0_14TimerEventTypeE");
	make_array	(0X7100025ADC,	0X4);
	create_insn	(x=0X7100025AE0);
	op_stkvar	(x,	1);
	set_name	(0X7100025AE0,	"_ZN2nn2os6detail48UpdateSignalStateAndRecalcNextTimeToWakeupUnsafeEPNS0_14TimerEventTypeENS_8TimeSpanE");
	create_insn	(x=0X7100025B1C);
	op_stkvar	(x,	1);
	create_insn	(0X7100025B24);
	create_insn	(x=0X7100025B80);
	op_stkvar	(x,	1);
	create_insn	(0X7100025B88);
	create_insn	(x=0X7100025B90);
	op_stkvar	(x,	1);
	create_insn	(0X7100025B98);
	create_insn	(x=0X7100025B9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025BA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025BDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025BE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025BE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025BEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025C50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025C54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025C5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025C60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025CAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025CB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025CB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025CBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025CF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025CF8);
	op_stkvar	(x,	1);
	create_insn	(0X7100025D00);
	create_insn	(x=0X7100025D10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025D14);
	op_stkvar	(x,	1);
	make_array	(0X7100025D1C,	0X4);
	create_insn	(x=0X7100025D20);
	op_stkvar	(x,	1);
	set_name	(0X7100025D20,	"Random_GenBytes");
	create_insn	(x=0X7100025D24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025D28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025D38);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100025D44);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100025D48);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100025D50);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100025D68);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100025D7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025D84);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100025D88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025D8C);
	op_stkvar	(x,	1);
	make_array	(0X7100025D94,	0XC);
	create_insn	(0X7100025DA0);
	set_name	(0X7100025DA0,	"GenerateRandomBytes");
	create_insn	(x=0X7100025DA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025DA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025DAC);
	op_stkvar	(x,	1);
	set_cmt	(0X7100025DBC,	"result",	0);
	set_cmt	(0X7100025DC0,	"a2",	0);
	set_cmt	(0X7100025DC4,	"int",	0);
	set_cmt	(0X7100025DC8,	"__int64",	0);
	set_cmt	(0X7100025DD4,	"result",	0);
	set_cmt	(0X7100025DD8,	"a2",	0);
	set_cmt	(0X7100025DDC,	"int",	0);
	set_cmt	(0X7100025DE0,	"__int64",	0);
	create_insn	(x=0X7100025DF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025DFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025E00);
	op_stkvar	(x,	1);
	make_array	(0X7100025E0C,	0X4);
	create_insn	(x=0X7100025E10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025E14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025E54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025E60);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100025E6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025E70);
	op_stkvar	(x,	1);
	make_array	(0X7100025E78,	0X8);
	create_insn	(0X7100025E80);
	create_insn	(x=0X7100025E84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025E88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025EC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025ECC);
	op_stkvar	(x,	1);
	create_insn	(0X7100025EE4);
	create_insn	(x=0X7100025F0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025F14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025F18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025F20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025F24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025F44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025F48);
	op_stkvar	(x,	1);
	create_insn	(0X7100025F54);
	create_dword	(0X7100025F64);
	make_array	(0X7100025F68,	0X8);
	create_insn	(x=0X7100025F70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025F88);
	op_stkvar	(x,	1);
	create_insn	(0X7100025F90);
	create_insn	(x=0X7100025F9C);
	op_stkvar	(x,	1);
	create_insn	(0X7100025FA4);
	create_insn	(0X7100025FB4);
	create_insn	(0X7100025FC0);
	create_insn	(x=0X7100025FD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100025FD4);
	op_stkvar	(x,	1);
	create_insn	(0X710002601C);
	create_insn	(x=0X7100026034);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100026038);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100026040);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100026048);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100026058);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100026060);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100026074);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100026080);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100026088);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100026090);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002609C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000260A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000260B8);
	op_stkvar	(x,	1);
	create_insn	(0X71000260C0);
	create_insn	(0X71000260C4);
	create_insn	(x=0X71000260CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000260D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000260D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000260D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000260DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000260E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000260E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000260E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000260EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000260F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000260F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100026108);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002610C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100026110);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100026114);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100026118);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002611C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100026120);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100026124);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100026128);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002612C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100026130);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002613C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100026150);
	op_stkvar	(x,	1);
	make_array	(0X7100026158,	0X8);
	create_insn	(0X7100026160);
	create_insn	(0X71000261A8);
	create_insn	(x=0X71000261C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000261C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000261C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000261EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000261F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000261F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000261FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100026220);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100026224);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100026228);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100026230);
	op_stkvar	(x,	1);
	set_name	(0X7100026230,	"_ZN2nn2os18AttachSharedMemoryEPNS0_16SharedMemoryTypeEmjb");
	create_insn	(x=0X7100026234);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100026260);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100026264);
	op_stkvar	(x,	1);
	make_array	(0X710002626C,	0X4);
	create_insn	(x=0X7100026270);
	op_stkvar	(x,	1);
	set_name	(0X7100026270,	"_ZN2nn2os19DestroySharedMemoryEPNS0_16SharedMemoryTypeE");
	create_insn	(x=0X7100026274);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000262F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000262F4);
	op_stkvar	(x,	1);
	make_array	(0X71000262FC,	0X4);
	create_insn	(x=0X7100026300);
	op_stkvar	(x,	1);
	set_name	(0X7100026300,	"_ZN2nn2os17UnmapSharedMemoryEPNS0_16SharedMemoryTypeE");
	create_insn	(x=0X7100026304);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100026350);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100026354);
	op_stkvar	(x,	1);
	make_array	(0X710002635C,	0X4);
	create_insn	(0X7100026360);
	set_name	(0X7100026360,	"_ZN2nn2os15MapSharedMemoryEPNS0_16SharedMemoryTypeENS0_16MemoryPermissionE");
	create_insn	(x=0X7100026364);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100026368);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002636C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000263A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000263BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000263E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000263EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000263F0);
	op_stkvar	(x,	1);
	make_array	(0X71000263FC,	0X4);
	create_insn	(0X7100026400);
	set_name	(0X7100026400,	"_ZN2nn2os21GetSharedMemoryHandleEPKNS0_16SharedMemoryTypeE");
	create_insn	(0X7100026408);
	create_insn	(x=0X710002640C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100026410);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100026418);
	op_hex		(x,	1);
	create_insn	(x=0X7100026424);
	op_hex		(x,	1);
	create_insn	(x=0X7100026438);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100026444);
	op_hex		(x,	1);
	create_insn	(x=0X7100026464);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100026468);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100026474);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002647C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100026480);
	op_stkvar	(x,	1);
	create_insn	(0X710002648C);
	create_insn	(x=0X7100026490);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100026494);
	op_stkvar	(x,	1);
	create_insn	(0X71000264A0);
	create_insn	(x=0X71000264A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000264A8);
	op_stkvar	(x,	1);
	create_insn	(0X71000264B0);
	set_name	(0X71000264B0,	"_ZN2nn2os6detail25SharedMemoryImplByHorizon5CloseEj");
	create_insn	(x=0X71000264B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000264C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000264CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000264D8);
	op_stkvar	(x,	1);
	create_insn	(0X71000264E0);
	set_name	(0X71000264E0,	"_ZN2nn2os6detail25SharedMemoryImplByHorizon3MapEPPvjmNS0_16MemoryPermissionE");
	create_insn	(x=0X71000264E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000264E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000264EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000264F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000264F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000264F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100026500);
	op_hex		(x,	1);
	create_insn	(x=0X7100026524);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100026528);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002652C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100026530);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100026598);
	op_hex		(x,	1);
	create_insn	(x=0X71000265B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000265B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000265B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000265BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100026608);
	op_hex		(x,	1);
	create_insn	(x=0X7100026628);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100026630);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100026658);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100026668);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002666C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100026670);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100026674);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100026678);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002667C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100026688);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002668C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100026694);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100026698);
	op_stkvar	(x,	1);
	create_insn	(0X71000266A0);
	create_insn	(x=0X71000266A4);
	op_stkvar	(x,	1);
	create_insn	(0X71000266AC);
	set_name	(0X71000266AC,	"_ZN2nn2os6detail25SharedMemoryImplByHorizon5UnmapEjPvm");
	create_insn	(x=0X71000266B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000266C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000266C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000266D4);
	op_stkvar	(x,	1);
	create_insn	(0X71000266DC);
	create_insn	(x=0X71000266E0);
	op_hex		(x,	1);
	create_insn	(x=0X7100026704);
	op_hex		(x,	1);
	create_insn	(x=0X710002670C);
	op_hex		(x,	1);
	create_insn	(x=0X7100026738);
	op_hex		(x,	1);
	create_insn	(x=0X710002674C);
	op_hex		(x,	1);
	create_insn	(x=0X7100026768);
	op_hex		(x,	1);
	create_insn	(x=0X710002677C);
	op_hex		(x,	1);
	create_insn	(x=0X7100026798);
	op_hex		(x,	1);
	create_insn	(x=0X71000267AC);
	op_hex		(x,	1);
	create_insn	(x=0X71000267C8);
	op_hex		(x,	1);
	create_insn	(x=0X71000267DC);
	op_hex		(x,	1);
	create_insn	(x=0X71000267F8);
	op_hex		(x,	1);
	create_insn	(x=0X710002680C);
	op_hex		(x,	1);
	create_insn	(x=0X7100026828);
	op_hex		(x,	1);
	create_insn	(x=0X710002683C);
	op_hex		(x,	1);
	create_insn	(x=0X7100026858);
	op_hex		(x,	1);
	create_insn	(x=0X7100026884);
	op_hex		(x,	1);
	create_insn	(0X71000268A0);
	make_array	(0X71000268B8,	0X8);
	create_insn	(0X71000268C0);
	create_insn	(0X7100026910);
	create_insn	(x=0X710002691C);
	op_hex		(x,	1);
	create_insn	(x=0X7100026920);
	op_hex		(x,	1);
	create_insn	(x=0X7100026924);
	op_hex		(x,	1);
	create_insn	(x=0X710002693C);
	op_hex		(x,	1);
	create_insn	(0X7100026998);
	create_insn	(x=0X71000269A4);
	op_hex		(x,	1);
	create_insn	(x=0X71000269A8);
	op_hex		(x,	1);
	create_insn	(x=0X71000269AC);
	op_hex		(x,	1);
	create_insn	(x=0X71000269C0);
	op_hex		(x,	1);
	create_insn	(0X7100026AB4);
	create_insn	(x=0X7100026ACC);
	op_hex		(x,	1);
	create_insn	(x=0X7100026AEC);
	op_hex		(x,	1);
	create_insn	(x=0X7100026B14);
	op_hex		(x,	1);
	make_array	(0X7100026B24,	0XC);
	create_insn	(x=0X7100026B30);
	op_stkvar	(x,	1);
	set_name	(0X7100026B30,	"PRNG_GetNext");
	create_insn	(x=0X7100026B34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100026B38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100026B3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100026B40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100026B54);
	op_hex		(x,	1);
	create_insn	(x=0X7100026B88);
	op_hex		(x,	1);
	create_insn	(x=0X7100026BA8);
	op_hex		(x,	1);
	create_insn	(x=0X7100026BC8);
	op_hex		(x,	1);
	create_insn	(x=0X7100026BD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100026BEC);
	op_hex		(x,	1);
	create_insn	(x=0X7100026C04);
	op_hex		(x,	1);
	create_insn	(x=0X7100026C28);
	op_hex		(x,	1);
	create_insn	(x=0X7100026C48);
	op_hex		(x,	1);
	create_insn	(x=0X7100026C6C);
	op_hex		(x,	1);
	create_insn	(x=0X7100026C78);
	op_hex		(x,	1);
	create_insn	(x=0X7100026C98);
	op_hex		(x,	1);
	create_insn	(x=0X7100026CB8);
	op_hex		(x,	1);
	create_insn	(x=0X7100026CC4);
	op_stkvar	(x,	1);
	create_insn	(0X7100026CCC);
	create_insn	(x=0X7100026CD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100026CDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100026CE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100026CE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100026CE8);
	op_stkvar	(x,	1);
	create_insn	(0X7100026CF0);
	create_insn	(x=0X7100026CF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100026CF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100026CFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100026D00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100026D04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100026D08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100026D20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100026D30);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100026D38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100026D3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100026D50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100026D58);
	op_stkvar	(x,	1);
	create_insn	(0X7100026D6C);
	set_cmt	(0X7100026D80,	"jumptable 0000007100026DAC case 48",	1);
	create_insn	(0X7100026D80);
	set_cmt	(0X7100026D84,	"jumptable 0000007100026DAC case 43",	1);
	set_cmt	(0X7100026D90,	"switch 17 cases",	0);
	create_insn	(x=0X7100026D9C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100026DAC,	"switch jump",	0);
	set_cmt	(0X7100026DB0,	"jumptable 0000007100026DAC case 32",	1);
	create_insn	(0X7100026DB0);
	set_cmt	(0X7100026DB8,	"jumptable 0000007100026DAC case 35",	1);
	create_insn	(0X7100026DB8);
	set_cmt	(0X7100026DC0,	"jumptable 0000007100026DAC case 45",	1);
	create_insn	(0X7100026DC0);
	create_insn	(0X7100026DC8);
	set_cmt	(0X7100026DD0,	"jumptable 0000007100026DAC case 42",	1);
	create_insn	(x=0X7100026DD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100026DE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100026DF4);
	op_stkvar	(x,	1);
	create_insn	(0X7100026E08);
	set_cmt	(0X7100026E10,	"jumptable 0000007100026DAC default case, cases 33,34,36-41,44,46,47",	1);
	set_name	(0X7100026E10,	"def_7100026DAC");
	create_insn	(x=0X7100026E58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100026E64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100026E78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100026E88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100026EAC);
	op_hex		(x,	1);
	create_insn	(0X7100026EDC);
	create_insn	(0X7100026F18);
	create_insn	(x=0X7100026F28);
	op_stkvar	(x,	1);
	set_cmt	(0X7100026F4C,	"switch 47 cases",	0);
	create_insn	(x=0X7100026F58);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100026F60);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100026F6C,	"switch jump",	0);
	set_cmt	(0X7100026F70,	"jumptable 0000007100026F6C cases 106,116,122",	1);
	create_insn	(0X7100026F70);
	set_cmt	(0X7100026F7C,	"jumptable 0000007100026F6C case 76",	1);
	create_insn	(x=0X7100026F7C);
	op_hex		(x,	1);
	set_cmt	(0X7100026F84,	"jumptable 0000007100026F6C default case, cases 77-103,105,107,109-115,117-121",	1);
	set_name	(0X7100026F84,	"def_7100026F6C");
	set_cmt	(0X7100026F88,	"switch 84 cases",	0);
	create_insn	(x=0X7100026F90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100026F98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100026F9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100026FA8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100026FB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100026FB4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100026FD0,	"switch jump",	0);
	set_cmt	(0X7100026FD4,	"jumptable 0000007100026FD0 cases 69-71,101-103",	1);
	create_insn	(0X7100026FD4);
	create_insn	(x=0X7100026FD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100026FE0);
	op_stkvar	(x,	1);
	set_cmt	(0X7100026FF0,	"jumptable 0000007100026F6C case 104",	1);
	create_insn	(0X7100026FF0);
	create_insn	(x=0X7100027004);
	op_hex		(x,	1);
	set_cmt	(0X710002700C,	"jumptable 0000007100026F6C case 108",	1);
	create_insn	(0X710002700C);
	create_insn	(x=0X7100027020);
	op_hex		(x,	1);
	create_insn	(0X7100027028);
	set_cmt	(0X710002703C,	"jumptable 0000007100026FD0 cases 67,99",	1);
	create_insn	(0X710002703C);
	create_insn	(x=0X7100027040);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002704C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027060);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002707C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027084);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027098);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000270A0);
	op_stkvar	(x,	1);
	set_cmt	(0X71000270B4,	"jumptable 0000007100026FD0 cases 79,111",	1);
	create_insn	(x=0X71000270B4);
	op_hex		(x,	1);
	create_insn	(x=0X71000270BC);
	op_stkvar	(x,	1);
	set_cmt	(0X71000270D4,	"jumptable 0000007100026FD0 cases 83,115",	1);
	create_insn	(x=0X71000270D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000270E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000270F8);
	op_stkvar	(x,	1);
	set_cmt	(0X7100027108,	"jumptable 0000007100026FD0 cases 85,117",	1);
	create_insn	(x=0X7100027108);
	op_hex		(x,	1);
	create_insn	(x=0X7100027110);
	op_stkvar	(x,	1);
	create_insn	(0X7100027128);
	create_insn	(x=0X710002712C);
	op_hex		(x,	1);
	create_insn	(0X7100027134);
	create_insn	(x=0X7100027138);
	op_hex		(x,	1);
	set_cmt	(0X7100027140,	"jumptable 0000007100026FD0 case 37",	1);
	create_insn	(0X7100027140);
	create_insn	(x=0X7100027150);
	op_stkvar	(x,	1);
	set_cmt	(0X7100027158,	"jumptable 0000007100026FD0 default case, cases 38-66,72,74-78,81,82,84,86,87,89-98,104,106-110,113,114,116,118,119",	1);
	create_insn	(0X7100027158);
	set_name	(0X7100027158,	"def_7100026FD0");
	create_insn	(x=0X7100027160);
	op_hex		(x,	1);
	create_insn	(x=0X7100027168);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027174);
	op_stkvar	(x,	1);
	set_cmt	(0X7100027188,	"jumptable 0000007100026FD0 case 80",	1);
	create_insn	(0X7100027188);
	set_cmt	(0X710002718C,	"jumptable 0000007100026FD0 case 112",	1);
	create_insn	(x=0X710002719C);
	op_stkvar	(x,	1);
	set_cmt	(0X71000271B0,	"jumptable 0000007100026FD0 cases 68,73,100,105",	1);
	create_insn	(x=0X71000271B4);
	op_hex		(x,	1);
	create_insn	(x=0X71000271B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000271D4);
	op_hex		(x,	1);
	create_insn	(x=0X71000271D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000271F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027200);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027214);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027224);
	op_stkvar	(x,	1);
	create_insn	(0X7100027234);
	create_insn	(x=0X7100027238);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027250);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027260);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027274);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027284);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027294);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000272A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000272B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000272C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000272D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000272E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000272F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002730C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027320);
	op_stkvar	(x,	1);
	create_insn	(0X7100027338);
	create_insn	(0X7100027344);
	create_insn	(x=0X7100027354);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027360);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027374);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027384);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027394);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000273A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000273B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000273C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000273D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000273E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000273F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027404);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027414);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027428);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027438);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002744C);
	op_stkvar	(x,	1);
	set_cmt	(0X710002745C,	"jumptable 0000007100026FD0 case 88",	1);
	create_insn	(0X710002745C);
	set_cmt	(0X7100027460,	"jumptable 0000007100026FD0 case 120",	1);
	create_insn	(x=0X7100027460);
	op_hex		(x,	1);
	create_insn	(x=0X7100027468);
	op_stkvar	(x,	1);
	create_insn	(0X710002747C);
	create_insn	(x=0X7100027480);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027494);
	op_stkvar	(x,	1);
	create_insn	(0X71000274A4);
	create_insn	(0X71000274D8);
	create_insn	(0X7100027518);
	create_insn	(0X7100027520);
	create_insn	(x=0X710002754C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002755C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027564);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000275A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000275AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000275B4);
	op_hex		(x,	1);
	create_insn	(x=0X71000275C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000275D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000275F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027600);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027614);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027624);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027630);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100027668);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027678);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002767C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002768C);
	op_hex		(x,	1);
	create_insn	(x=0X71000276A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000276AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000276BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000276C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000276D0);
	op_stkvar	(x,	1);
	create_insn	(0X71000276D8);
	create_insn	(x=0X71000276DC);
	op_stkvar	(x,	1);
	create_insn	(0X71000276F4);
	create_insn	(x=0X71000276F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002770C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002771C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002772C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027740);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027750);
	op_hex		(x,	1);
	create_insn	(x=0X7100027754);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027784);
	op_hex		(x,	1);
	create_insn	(0X71000277B8);
	create_insn	(x=0X7100027808);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027828);
	op_hex		(x,	1);
	create_insn	(x=0X7100027854);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002785C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027890);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002789C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000278C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000278CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000278FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027908);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002791C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027934);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002793C);
	op_stkvar	(x,	1);
	create_insn	(0X7100027950);
	create_insn	(0X710002795C);
	create_insn	(x=0X7100027970);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027978);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027994);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000279A0);
	op_stkvar	(x,	1);
	create_insn	(0X71000279B4);
	create_insn	(x=0X71000279D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000279D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000279E0);
	op_hex		(x,	1);
	create_insn	(x=0X71000279F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000279FC);
	op_stkvar	(x,	1);
	create_insn	(0X7100027A1C);
	create_insn	(x=0X7100027A38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027A40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027A50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027A64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027A74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027A88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027A98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027A9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027AA8);
	op_hex		(x,	1);
	create_insn	(0X7100027ABC);
	create_insn	(x=0X7100027AC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027AD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027AE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027AE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027AF4);
	op_hex		(x,	1);
	create_insn	(0X7100027B08);
	create_insn	(x=0X7100027B0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027B14);
	op_stkvar	(x,	1);
	create_insn	(0X7100027B20);
	create_insn	(x=0X7100027B24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027B2C);
	op_stkvar	(x,	1);
	create_insn	(0X7100027B44);
	create_insn	(x=0X7100027B5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027B64);
	op_stkvar	(x,	1);
	create_insn	(0X7100027B74);
	create_insn	(x=0X7100027B84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027B8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027BA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027BA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027BA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027BAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027BB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027BB4);
	op_stkvar	(x,	1);
	create_insn	(0X7100027BC0);
	create_insn	(x=0X7100027BC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027BC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027C1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027C20);
	op_stkvar	(x,	1);
	make_array	(0X7100027C28,	0X8);
	create_insn	(0X7100027C30);
	set_name	(0X7100027C30,	"fmt");
	create_insn	(x=0X7100027C34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027C38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027C48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027C50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027C54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027C68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027C6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027C70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027C78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027C7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027C80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027C84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027C88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027C8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027C90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027C94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027C98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027C9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027CAC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100027CB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027CB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027CBC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100027CC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027CC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027CC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027CD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027CD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027CDC);
	op_stkvar	(x,	1);
	make_array	(0X7100027CE8,	0X8);
	create_insn	(0X7100027CF0);
	create_insn	(x=0X7100027CF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027CF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027D08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027D10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027D14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027D28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027D2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027D30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027D38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027D3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027D40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027D44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027D48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027D4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027D50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027D54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027D58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027D5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027D6C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100027D70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027D74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027D7C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100027D80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027D84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027D88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027D94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027D98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027D9C);
	op_stkvar	(x,	1);
	make_array	(0X7100027DA8,	0X8);
	create_insn	(0X7100027DB0);
	create_insn	(x=0X7100027DB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027DB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027DBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027DC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027DC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027DC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027DCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027DFC);
	op_hex		(x,	1);
	create_insn	(0X7100027E48);
	create_insn	(0X7100027E68);
	create_insn	(0X7100027E8C);
	create_insn	(x=0X7100027E94);
	op_hex		(x,	1);
	create_insn	(0X7100027EDC);
	create_insn	(0X7100027EE4);
	create_insn	(x=0X7100027F1C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100027F20);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7100027F2C);
	create_insn	(x=0X7100027F38);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100027F40);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100027F4C);
	op_hex		(x,	1);
	create_insn	(x=0X7100027F54);
	op_hex		(x,	1);
	create_insn	(x=0X7100027F84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027F8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027FBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027FC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100027FE4);
	op_hex		(x,	1);
	create_insn	(x=0X7100028004);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002800C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100028020);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100028030);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002803C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100028048);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100028054);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100028060);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100028084);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002808C);
	op_stkvar	(x,	1);
	create_insn	(0X71000280A0);
	create_insn	(0X710002811C);
	create_insn	(x=0X7100028128);
	op_hex		(x,	1);
	create_insn	(0X7100028138);
	create_insn	(0X7100028140);
	create_insn	(0X71000281AC);
	create_insn	(x=0X71000281FC);
	op_hex		(x,	1);
	create_insn	(x=0X710002821C);
	op_hex		(x,	1);
	create_insn	(x=0X710002823C);
	op_hex		(x,	1);
	create_insn	(x=0X7100028264);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002826C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002829C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000282A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000282C4);
	op_hex		(x,	1);
	create_insn	(x=0X71000282E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000282EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100028300);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002830C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002832C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100028334);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002836C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100028374);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100028398);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000283A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000283B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000283C0);
	op_hex		(x,	1);
	create_insn	(x=0X71000283D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000283E8);
	op_stkvar	(x,	1);
	create_insn	(0X71000283F0);
	create_insn	(x=0X71000283F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100028400);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002844C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100028494);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100028498);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000284A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000284AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000284B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000284BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000284CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000284D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000284DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100028504);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002850C);
	op_stkvar	(x,	1);
	create_insn	(0X7100028520);
	create_insn	(x=0X7100028528);
	op_hex		(x,	1);
	create_insn	(0X7100028540);
	create_insn	(0X7100028548);
	create_insn	(x=0X7100028550);
	op_hex		(x,	1);
	create_insn	(0X7100028600);
	create_insn	(x=0X7100028624);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002862C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100028630);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100028634);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100028638);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002863C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100028640);
	op_stkvar	(x,	1);
	make_array	(0X710002864C,	0X4);
	create_insn	(0X7100028650);
	create_insn	(x=0X7100028654);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100028658);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002865C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100028660);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100028664);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002868C);
	op_hex		(x,	1);
	create_insn	(x=0X71000286AC);
	op_hex		(x,	1);
	create_insn	(x=0X71000286C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000286D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100028700);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100028708);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100028728);
	op_hex		(x,	1);
	create_insn	(x=0X7100028744);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002874C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002878C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100028794);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000287B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000287C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000287F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000287FC);
	op_stkvar	(x,	1);
	create_insn	(0X7100028810);
	create_insn	(x=0X7100028820);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100028828);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100028848);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100028850);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100028884);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002888C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000288D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000288E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002890C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002893C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002894C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100028950);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100028954);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100028958);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002895C);
	op_stkvar	(x,	1);
	create_insn	(0X7100028968);
	create_insn	(0X7100028994);
	create_insn	(x=0X71000289B0);
	op_hex		(x,	1);
	make_array	(0X71000289C4,	0XC);
	create_insn	(0X71000289D0);
	create_insn	(x=0X71000289D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000289E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000289F4);
	op_stkvar	(x,	1);
	make_array	(0X71000289FC,	0X4);
	create_insn	(0X7100028A00);
	create_insn	(x=0X7100028A10);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100028A1C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100028A24,	"jumptable 0000007100028A6C case 2",	1);
	create_insn	(0X7100028A24);
	create_insn	(x=0X7100028A28);
	op_hex		(x,	1);
	set_cmt	(0X7100028A34,	"jumptable 0000007100028A6C case 1",	1);
	set_cmt	(0X7100028A54,	"switch 4 cases",	0);
	create_insn	(x=0X7100028A60);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100028A6C,	"switch jump",	0);
	set_cmt	(0X7100028A70,	"jumptable 0000007100028A6C case 3",	1);
	create_insn	(0X7100028A70);
	create_insn	(0X7100028A8C);
	set_cmt	(0X7100028A90,	"jumptable 0000007100028A6C case 4",	1);
	create_insn	(x=0X7100028AA4);
	op_hex		(x,	1);
	create_insn	(0X7100028AB0);
	create_insn	(0X7100028ABC);
	create_insn	(x=0X7100028AC0);
	op_hex		(x,	1);
	create_insn	(x=0X7100028AD0);
	op_hex		(x,	1);
	create_insn	(0X7100028AE0);
	create_insn	(x=0X7100028AE4);
	op_hex		(x,	1);
	create_insn	(0X7100028AF0);
	create_insn	(x=0X7100028AF4);
	op_hex		(x,	1);
	create_insn	(x=0X7100028B04);
	op_hex		(x,	1);
	create_insn	(x=0X7100028B14);
	op_hex		(x,	1);
	set_cmt	(0X7100028B20,	"jumptable 0000007100028A6C default case",	1);
	set_name	(0X7100028B20,	"def_7100028A6C");
	create_insn	(0X7100028B28);
	create_insn	(0X7100028B30);
	create_insn	(0X7100028B38);
	create_insn	(0X7100028B48);
	create_insn	(0X7100028B50);
	create_insn	(0X7100028B60);
	create_insn	(0X7100028B68);
	create_insn	(0X7100028B70);
	create_insn	(0X7100028B78);
	create_insn	(0X7100028B80);
	create_insn	(0X7100028B88);
	create_insn	(0X7100028B90);
	create_insn	(0X7100028B98);
	create_insn	(0X7100028BA0);
	create_insn	(0X7100028BA8);
	create_insn	(0X7100028BB0);
	make_array	(0X7100028BB8,	0X8);
	create_insn	(x=0X7100028BC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100028BC4);
	op_stkvar	(x,	1);
	set_cmt	(0X7100028BDC,	"jumptable 0000007100028EEC default case, cases 193,204-211",	1);
	create_insn	(x=0X7100028BDC);
	op_stkvar	(x,	1);
	set_name	(0X7100028BDC,	"def_7100028EEC");
	create_insn	(x=0X7100028BE0);
	op_stkvar	(x,	1);
	create_insn	(0X7100028BE8);
	create_insn	(x=0X7100028C00);
	op_hex		(x,	1);
	create_insn	(x=0X7100028C0C);
	op_hex		(x,	1);
	create_insn	(0X7100028C70);
	create_insn	(x=0X7100028C74);
	op_hex		(x,	1);
	create_insn	(x=0X7100028C80);
	op_hex		(x,	1);
	create_insn	(x=0X7100028CA8);
	op_hex		(x,	1);
	create_insn	(x=0X7100028CC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100028CC8);
	op_stkvar	(x,	1);
	create_insn	(0X7100028CD0);
	create_insn	(x=0X7100028D1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100028D20);
	op_stkvar	(x,	1);
	create_insn	(0X7100028D28);
	create_insn	(0X7100028D6C);
	create_insn	(x=0X7100028DB4);
	op_hex		(x,	1);
	create_insn	(0X7100028DF0);
	create_insn	(x=0X7100028E08);
	op_hex		(x,	1);
	create_insn	(x=0X7100028E14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100028E18);
	op_stkvar	(x,	1);
	create_insn	(0X7100028E20);
	create_insn	(x=0X7100028E34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100028E38);
	op_stkvar	(x,	1);
	create_insn	(0X7100028E40);
	create_insn	(x=0X7100028E48);
	op_hex		(x,	1);
	set_cmt	(0X7100028E4C,	"switch 4 cases",	0);
	create_insn	(x=0X7100028E58);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100028E60);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100028E6C,	"switch jump",	0);
	set_cmt	(0X7100028E70,	"jumptable 0000007100028E6C case 208",	1);
	create_insn	(0X7100028E70);
	set_cmt	(0X7100028E8C,	"jumptable 0000007100028E6C default case",	1);
	set_name	(0X7100028E8C,	"def_7100028E6C");
	create_insn	(x=0X7100028E94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100028E98);
	op_stkvar	(x,	1);
	create_insn	(0X7100028EA0);
	create_insn	(x=0X7100028EB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100028EBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100028EC4);
	op_hex		(x,	1);
	set_cmt	(0X7100028ECC,	"switch 25 cases",	0);
	create_insn	(x=0X7100028EDC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100028EE0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100028EEC,	"switch jump",	0);
	set_cmt	(0X7100028EF0,	"jumptable 0000007100028EEC cases 199-201,212-216",	1);
	create_insn	(0X7100028EF0);
	create_insn	(x=0X7100028EF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100028EFC);
	op_stkvar	(x,	1);
	set_cmt	(0X7100028F04,	"jumptable 0000007100028E6C case 209",	1);
	create_insn	(0X7100028F04);
	set_cmt	(0X7100028F30,	"jumptable 0000007100028E6C case 210",	1);
	create_insn	(0X7100028F30);
	set_cmt	(0X7100028F58,	"jumptable 0000007100028E6C case 211",	1);
	create_insn	(0X7100028F58);
	create_insn	(x=0X7100028F7C);
	op_hex		(x,	1);
	create_insn	(x=0X7100028F80);
	op_hex		(x,	1);
	create_insn	(x=0X7100028FA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100028FA4);
	op_stkvar	(x,	1);
	set_cmt	(0X7100028FAC,	"jumptable 0000007100028EEC cases 196-198",	1);
	create_insn	(0X7100028FAC);
	create_insn	(x=0X7100028FB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100028FBC);
	op_stkvar	(x,	1);
	set_cmt	(0X7100028FC4,	"jumptable 0000007100028EEC case 192",	1);
	create_insn	(0X7100028FC4);
	create_insn	(x=0X7100028FCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100028FD0);
	op_stkvar	(x,	1);
	set_cmt	(0X7100028FD8,	"jumptable 0000007100028EEC case 194",	1);
	create_insn	(0X7100028FD8);
	create_insn	(x=0X7100028FE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100028FE8);
	op_stkvar	(x,	1);
	set_cmt	(0X7100028FF0,	"jumptable 0000007100028EEC case 195",	1);
	create_insn	(0X7100028FF0);
	create_insn	(x=0X7100028FFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100029000);
	op_stkvar	(x,	1);
	set_cmt	(0X7100029008,	"jumptable 0000007100028EEC case 202",	1);
	create_insn	(0X7100029008);
	create_insn	(x=0X7100029040);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100029044);
	op_stkvar	(x,	1);
	set_cmt	(0X710002904C,	"jumptable 0000007100028EEC case 203",	1);
	create_insn	(0X710002904C);
	make_array	(0X7100029068,	0X8);
	create_insn	(0X7100029070);
	create_insn	(x=0X7100029078);
	op_hex		(x,	1);
	set_cmt	(0X710002907C,	"switch 4 cases",	0);
	create_insn	(x=0X710002908C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100029090);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X710002909C,	"switch jump",	0);
	set_cmt	(0X71000290A0,	"jumptable 000000710002909C case 204",	1);
	create_insn	(0X71000290A0);
	set_cmt	(0X71000290B4,	"jumptable 000000710002909C case 206",	1);
	create_insn	(0X71000290B4);
	set_cmt	(0X71000290CC,	"jumptable 000000710002909C case 207",	1);
	create_insn	(0X71000290CC);
	set_cmt	(0X71000290DC,	"jumptable 000000710002909C default case",	1);
	set_name	(0X71000290DC,	"def_710002909C");
	set_cmt	(0X71000290E4,	"jumptable 000000710002909C case 205",	1);
	create_insn	(0X71000290E4);
	create_insn	(0X71000290FC);
	create_insn	(0X7100029118);
	create_insn	(0X710002913C);
	create_insn	(x=0X7100029150);
	op_hex		(x,	1);
	create_insn	(x=0X7100029154);
	op_hex		(x,	1);
	create_insn	(0X7100029178);
	create_insn	(0X71000291A0);
	create_insn	(x=0X71000291A8);
	op_hex		(x,	1);
	create_insn	(0X71000291D8);
	create_insn	(0X7100029204);
	create_insn	(0X7100029250);
	create_insn	(0X7100029290);
	create_insn	(x=0X710002929C);
	op_hex		(x,	1);
	set_cmt	(0X71000292A0,	"switch 18 cases",	0);
	create_insn	(x=0X71000292B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000292B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X71000292C0,	"switch jump",	0);
	set_cmt	(0X71000292C4,	"jumptable 00000071000292C0 case 199",	1);
	create_insn	(0X71000292C4);
	set_cmt	(0X71000292D8,	"jumptable 00000071000292C0 case 200",	1);
	create_insn	(0X71000292D8);
	set_cmt	(0X71000292F0,	"jumptable 00000071000292C0 case 201",	1);
	create_insn	(0X71000292F0);
	set_cmt	(0X7100029308,	"jumptable 00000071000292C0 case 214",	1);
	create_insn	(0X7100029308);
	set_cmt	(0X7100029310,	"jumptable 00000071000292C0 case 215",	1);
	create_insn	(0X7100029310);
	set_cmt	(0X7100029318,	"jumptable 00000071000292C0 case 216",	1);
	create_insn	(0X7100029318);
	set_cmt	(0X7100029320,	"jumptable 00000071000292C0 case 212",	1);
	create_insn	(0X7100029320);
	set_cmt	(0X7100029328,	"jumptable 00000071000292C0 case 213",	1);
	create_insn	(0X7100029328);
	create_insn	(0X7100029330);
	create_insn	(0X7100029360);
	create_insn	(0X71000293B8);
	set_cmt	(0X71000293CC,	"jumptable 00000071000292C0 default case, cases 202-211",	1);
	set_name	(0X71000293CC,	"def_71000292C0");
	create_insn	(0X71000293D4);
	make_array	(0X71000293FC,	0X4);
	create_insn	(0X7100029400);
	create_insn	(0X7100029450);
	create_insn	(x=0X71000294A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000294A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000294A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000294D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000294E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000294E4);
	op_stkvar	(x,	1);
	create_insn	(0X71000294EC);
	create_insn	(x=0X71000294FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100029500);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100029504);
	op_stkvar	(x,	1);
	create_insn	(0X710002950C);
	create_insn	(x=0X7100029524);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100029528);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002952C);
	op_stkvar	(x,	1);
	make_array	(0X7100029534,	0XC);
	create_insn	(x=0X7100029540);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100029544);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002958C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100029590);
	op_stkvar	(x,	1);
	create_insn	(0X7100029598);
	create_insn	(0X71000295E4);
	create_insn	(0X7100029638);
	create_insn	(x=0X7100029648);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002964C);
	op_stkvar	(x,	1);
	create_insn	(0X7100029654);
	create_insn	(x=0X71000296A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000296AC);
	op_stkvar	(x,	1);
	make_array	(0X71000296B4,	0XC);
	create_insn	(x=0X71000296C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000296C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000296F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000296F4);
	op_stkvar	(x,	1);
	create_insn	(0X71000296FC);
	create_insn	(x=0X710002971C);
	op_stkvar	(x,	1);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_4(void) {
        auto x;
#define id x

	create_insn	(x=0X7100029720);
	op_stkvar	(x,	1);
	create_insn	(0X7100029728);
	create_insn	(x=0X7100029758);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002975C);
	op_stkvar	(x,	1);
	create_insn	(0X7100029764);
	create_insn	(x=0X7100029778);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002977C);
	op_stkvar	(x,	1);
	create_insn	(0X7100029784);
	create_insn	(0X71000297B4);
	create_insn	(x=0X7100029810);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100029814);
	op_stkvar	(x,	1);
	make_array	(0X710002981C,	0X4);
	create_insn	(0X7100029820);
	create_insn	(0X7100029844);
	create_insn	(0X7100029868);
	create_insn	(0X71000298B0);
	create_insn	(0X71000298C8);
	create_insn	(0X7100029910);
	make_array	(0X7100029954,	0XC);
	create_insn	(x=0X7100029960);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100029964);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100029968);
	op_stkvar	(x,	1);
	set_cmt	(0X7100029974,	"switch 16 cases",	0);
	create_insn	(x=0X7100029990);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100029994);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X71000299A0,	"switch jump",	0);
	set_cmt	(0X71000299A4,	"jumptable 00000071000299A0 case 1",	1);
	create_insn	(0X71000299A4);
	set_cmt	(0X71000299C8,	"jumptable 00000071000299A0 case 2",	1);
	create_insn	(0X71000299C8);
	set_cmt	(0X71000299EC,	"jumptable 00000071000299A0 default case, cases 3,5-7,9-15",	1);
	create_insn	(0X71000299EC);
	set_name	(0X71000299EC,	"def_71000299A0");
	set_cmt	(0X7100029A04,	"jumptable 00000071000299A0 case 4",	1);
	create_insn	(0X7100029A04);
	set_cmt	(0X7100029A28,	"jumptable 00000071000299A0 case 8",	1);
	create_insn	(0X7100029A28);
	set_cmt	(0X7100029A4C,	"jumptable 00000071000299A0 case 16",	1);
	create_insn	(0X7100029A4C);
	create_insn	(x=0X7100029A60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100029A64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100029A68);
	op_stkvar	(x,	1);
	create_insn	(0X7100029A70);
	create_insn	(x=0X7100029AC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100029ACC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100029AD0);
	op_stkvar	(x,	1);
	make_array	(0X7100029AD8,	0X8);
	create_insn	(0X7100029AE0);
	create_insn	(x=0X7100029AF0);
	op_hex		(x,	1);
	make_array	(0X7100029B14,	0XC);
	create_insn	(0X7100029B20);
	create_insn	(0X7100029B40);
	create_insn	(0X7100029B8C);
	create_insn	(0X7100029BA4);
	create_insn	(0X7100029BFC);
	create_insn	(0X7100029C50);
	create_insn	(x=0X7100029C7C);
	op_hex		(x,	1);
	create_insn	(x=0X7100029C80);
	op_hex		(x,	1);
	make_array	(0X7100029CAC,	0X4);
	create_insn	(0X7100029CB0);
	create_insn	(x=0X7100029CE4);
	op_hex		(x,	1);
	create_insn	(x=0X7100029CE8);
	op_hex		(x,	1);
	make_array	(0X7100029D14,	0XC);
	create_insn	(0X7100029D20);
	create_insn	(0X7100029D3C);
	create_insn	(0X7100029D88);
	create_insn	(0X7100029DA0);
	create_insn	(0X7100029DF8);
	create_insn	(0X7100029E4C);
	create_insn	(x=0X7100029E78);
	op_hex		(x,	1);
	create_insn	(x=0X7100029E7C);
	op_hex		(x,	1);
	make_array	(0X7100029EA8,	0X8);
	create_insn	(0X7100029EB0);
	create_insn	(0X7100029EB8);
	make_array	(0X7100029EBC,	0X4);
	create_insn	(0X7100029EC0);
	create_insn	(x=0X7100029EF8);
	op_hex		(x,	1);
	create_insn	(x=0X7100029EFC);
	op_hex		(x,	1);
	make_array	(0X7100029F28,	0X8);
	create_insn	(x=0X7100029F30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100029F44);
	op_stkvar	(x,	1);
	make_array	(0X7100029F4C,	0X4);
	create_insn	(x=0X7100029F50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100029F54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100029F7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100029F80);
	op_stkvar	(x,	1);
	make_array	(0X7100029F88,	0X8);
	create_insn	(0X7100029F90);
	make_array	(0X7100029F9C,	0X4);
	create_insn	(x=0X7100029FA0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100029FA4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100029FAC);
	op_hex		(x,	1);
	create_insn	(0X7100029FB4);
	make_array	(0X7100029FB8,	0X8);
	create_insn	(x=0X7100029FC0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100029FC4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100029FCC);
	op_hex		(x,	1);
	create_insn	(0X7100029FD4);
	create_insn	(x=0X7100029FD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100029FDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100029FE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100029FE8);
	op_hex		(x,	1);
	create_insn	(x=0X710002A004);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A008);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A00C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A014);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A028);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A02C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A030);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A038);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A03C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A040);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A088);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A08C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A090);
	op_stkvar	(x,	1);
	make_array	(0X710002A098,	0X8);
	create_insn	(0X710002A0A0);
	create_insn	(0X710002A0B0);
	create_insn	(0X710002A0C0);
	create_insn	(x=0X710002A0C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A0C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A0D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A0DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A0E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A0EC);
	op_stkvar	(x,	1);
	set_cmt	(0X710002A0FC,	"result",	0);
	create_insn	(x=0X710002A0FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A108);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A10C);
	op_stkvar	(x,	1);
	create_insn	(0X710002A118);
	create_insn	(x=0X710002A11C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A128);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A12C);
	op_stkvar	(x,	1);
	create_insn	(0X710002A138);
	create_dword	(0X710002A13C);
	create_insn	(0X710002A140);
	create_insn	(x=0X710002A144);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A148);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A14C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A15C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A160);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A168);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002A178);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A18C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A194);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A19C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A1A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A1B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A1BC);
	op_stkvar	(x,	1);
	create_insn	(0X710002A1E8);
	create_insn	(x=0X710002A1F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A208);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A220);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A238);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A258);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A26C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A278);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A27C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A280);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A290);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A294);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A298);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A2A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A2A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A2AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A2BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A2CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A2E0);
	op_hex		(x,	1);
	create_insn	(x=0X710002A2EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A2F8);
	op_hex		(x,	1);
	create_insn	(x=0X710002A300);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A304);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A314);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A324);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A334);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A340);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A34C);
	op_hex		(x,	1);
	create_insn	(x=0X710002A36C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A370);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A374);
	op_stkvar	(x,	1);
	create_insn	(0X710002A380);
	create_insn	(x=0X710002A388);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A38C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A390);
	op_stkvar	(x,	1);
	create_insn	(0X710002A39C);
	create_insn	(x=0X710002A3A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A3A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A3A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A3AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A3B0);
	op_stkvar	(x,	1);
	create_insn	(0X710002A3E4);
	set_cmt	(0X710002A414,	"result",	0);
	create_insn	(0X710002A454);
	set_cmt	(0X710002A460,	"result",	0);
	create_insn	(x=0X710002A480);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A484);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A488);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A48C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A490);
	op_stkvar	(x,	1);
	create_insn	(0X710002A498);
	create_dword	(0X710002A49C);
	create_insn	(0X710002A4A0);
	create_insn	(x=0X710002A4A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A4A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A4AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A4BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A4C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A4C8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002A4D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A4EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A4F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A4FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A504);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A514);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A51C);
	op_stkvar	(x,	1);
	create_insn	(0X710002A548);
	create_insn	(x=0X710002A550);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A568);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A580);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A598);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A5B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A5CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A5D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A5DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A5E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A5F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A5F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A5F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A604);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A608);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A60C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A61C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A62C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A644);
	op_hex		(x,	1);
	create_insn	(x=0X710002A650);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A65C);
	op_hex		(x,	1);
	create_insn	(x=0X710002A664);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A668);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A678);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A688);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A698);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A6A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A6B0);
	op_hex		(x,	1);
	create_insn	(x=0X710002A6C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A6D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A6D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A6DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A6E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A6E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A6E8);
	op_stkvar	(x,	1);
	set_cmt	(0X710002A6EC,	"result",	0);
	create_insn	(x=0X710002A704);
	op_stkvar	(x,	1);
	set_cmt	(0X710002A70C,	"result",	0);
	create_insn	(x=0X710002A70C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A718);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A71C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A720);
	op_stkvar	(x,	1);
	create_insn	(0X710002A72C);
	create_insn	(x=0X710002A734);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A738);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A73C);
	op_stkvar	(x,	1);
	create_insn	(0X710002A748);
	create_dword	(0X710002A74C);
	create_insn	(0X710002A750);
	create_insn	(x=0X710002A754);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A758);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A75C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A76C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A770);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A778);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002A788);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A79C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A7A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A7AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A7B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A7C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A7CC);
	op_stkvar	(x,	1);
	create_insn	(0X710002A7F8);
	create_insn	(x=0X710002A800);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A818);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A830);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A848);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A868);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A87C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A888);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A88C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A890);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A8A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A8A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A8A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A8B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A8B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A8BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A8CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A8DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A8F4);
	op_hex		(x,	1);
	create_insn	(x=0X710002A900);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A90C);
	op_hex		(x,	1);
	create_insn	(x=0X710002A914);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A918);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A928);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A938);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A948);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A954);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A960);
	op_hex		(x,	1);
	create_insn	(x=0X710002A980);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A984);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A988);
	op_stkvar	(x,	1);
	create_insn	(0X710002A994);
	create_insn	(x=0X710002A99C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A9A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002A9A4);
	op_stkvar	(x,	1);
	create_insn	(0X710002A9B0);
	create_insn	(0X710002A9B4);
	create_insn	(0X710002AAD8);
	create_insn	(x=0X710002AAEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002AAF0);
	op_stkvar	(x,	1);
	set_cmt	(0X710002AB14,	"switch 4 cases",	0);
	create_insn	(x=0X710002AB20);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002AB24);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X710002AB30,	"switch jump",	0);
	set_cmt	(0X710002AB34,	"jumptable 000000710002AB30 case 0",	1);
	create_insn	(0X710002AB34);
	set_cmt	(0X710002AB40,	"jumptable 000000710002AB30 case 2",	1);
	create_insn	(0X710002AB40);
	set_cmt	(0X710002AB54,	"jumptable 000000710002AB30 case 1",	1);
	create_insn	(0X710002AB54);
	set_cmt	(0X710002AB64,	"jumptable 000000710002AB30 case 3",	1);
	create_insn	(0X710002AB64);
	create_insn	(x=0X710002AB94);
	op_hex		(x,	1);
	create_insn	(x=0X710002ABAC);
	op_hex		(x,	1);
	create_insn	(x=0X710002ABC4);
	op_hex		(x,	1);
	create_insn	(x=0X710002ABFC);
	op_hex		(x,	1);
	create_insn	(x=0X710002AC10);
	op_hex		(x,	1);
	create_insn	(x=0X710002AC28);
	op_hex		(x,	1);
	create_insn	(x=0X710002AC44);
	op_hex		(x,	1);
	create_insn	(x=0X710002AC5C);
	op_hex		(x,	1);
	create_insn	(x=0X710002AC74);
	op_hex		(x,	1);
	create_insn	(x=0X710002AC80);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002AC84);
	op_hex		(x,	1);
	create_insn	(x=0X710002AC88);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002AC90);
	op_hex		(x,	1);
	create_insn	(x=0X710002AC98);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002AC9C);
	op_hex		(x,	1);
	create_insn	(x=0X710002ACA0);
	op_stkvar	(x,	1);
	create_insn	(0X710002ACA8);
	set_cmt	(0X710002ACAC,	"jumptable 000000710002AB30 default case",	1);
	create_insn	(0X710002ACAC);
	set_name	(0X710002ACAC,	"def_710002AB30");
	create_insn	(0X710002ACB0);
	create_insn	(0X710002ACBC);
	create_insn	(x=0X710002ACD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002ACDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002ACE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002ACE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002ACEC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002ACF4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002AD04);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002AD0C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002ADB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002ADB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002ADBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002ADC0);
	op_stkvar	(x,	1);
	make_array	(0X710002ADC8,	0X8);
	create_insn	(x=0X710002ADD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002ADD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002ADD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002ADE0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002ADE8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X710002AE08);
	create_insn	(0X710002AE50);
	set_cmt	(0X710002AE94,	"result",	0);
	set_cmt	(0X710002AE9C,	"result",	0);
	set_cmt	(0X710002AEA4,	"result",	0);
	set_cmt	(0X710002AEAC,	"result",	0);
	create_insn	(x=0X710002AEB4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002AEBC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X710002AECC,	"result",	0);
	create_insn	(x=0X710002AED0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002AED4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002AED8);
	op_stkvar	(x,	1);
	create_insn	(0X710002AEE0);
	create_insn	(x=0X710002AEE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002AEE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002AEFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002AF08);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002AF20);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002AF24);
	op_stkvar	(x,	1);
	create_insn	(0X710002AF30);
	create_insn	(x=0X710002AF34);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002AF38);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002AF3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002AF40);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002AF60);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002AF68);
	op_stkvar	(x,	1);
	create_insn	(0X710002AF84);
	create_insn	(x=0X710002AFA8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002AFB0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002AFB8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002AFBC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X710002AFF8);
	create_insn	(x=0X710002AFFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B048);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B04C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B050);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B054);
	op_stkvar	(x,	1);
	create_insn	(0X710002B060);
	set_name	(0X710002B060,	"Unk4440::ClearEvent");
	create_insn	(0X710002B068);
	create_insn	(x=0X710002B070);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B074);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B078);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B07C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B080);
	op_stkvar	(x,	1);
	create_insn	(0X710002B128);
	create_insn	(x=0X710002B13C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B140);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B144);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B148);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B14C);
	op_stkvar	(x,	1);
	create_insn	(0X710002B154);
	create_insn	(x=0X710002B158);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B15C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B160);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B184);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002B188);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002B18C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002B194);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002B1AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B1D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B1DC);
	op_stkvar	(x,	1);
	create_insn	(0X710002B1F4);
	create_insn	(x=0X710002B23C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B240);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B244);
	op_stkvar	(x,	1);
	create_insn	(0X710002B250);
	create_insn	(x=0X710002B254);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B258);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B25C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B2A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B2A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B2A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B2B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B2B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B2B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B30C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B310);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B318);
	op_stkvar	(x,	1);
	create_insn	(0X710002B320);
	create_insn	(x=0X710002B328);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B32C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B330);
	op_stkvar	(x,	1);
	create_insn	(0X710002B338);
	create_insn	(x=0X710002B354);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B358);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B35C);
	op_stkvar	(x,	1);
	create_insn	(0X710002B364);
	create_insn	(0X710002B370);
	create_dword	(0X710002B374);
	make_array	(0X710002B378,	0X8);
	create_insn	(x=0X710002B380);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B384);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B3A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B3C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B3C4);
	op_stkvar	(x,	1);
	create_insn	(0X710002B3CC);
	create_insn	(0X710002B3D4);
	create_insn	(0X710002B3E0);
	set_name	(0X710002B3E0,	"nullsub_34");
	create_insn	(0X710002B3E4);
	set_name	(0X710002B3E4,	"nullsub_35");
	create_insn	(0X710002B3E8);
	set_name	(0X710002B3E8,	"nullsub_36");
	make_array	(0X710002B3EC,	0X4);
	create_insn	(x=0X710002B3F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B3F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B3F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B45C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B464);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B468);
	op_stkvar	(x,	1);
	create_insn	(0X710002B470);
	create_insn	(x=0X710002B474);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B47C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B480);
	op_stkvar	(x,	1);
	make_array	(0X710002B488,	0X8);
	create_insn	(x=0X710002B490);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B494);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B498);
	op_stkvar	(x,	1);
	create_insn	(0X710002B4BC);
	set_cmt	(0X710002B4F0,	"result",	0);
	create_insn	(0X710002B4F0);
	create_insn	(x=0X710002B4F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B4F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B4FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B504);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002B50C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002B530);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B534);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B538);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B53C);
	op_stkvar	(x,	1);
	create_insn	(0X710002B55C);
	create_insn	(x=0X710002B5EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B5F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B5F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B5F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B600);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B604);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B608);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B60C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B610);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B68C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B690);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B694);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B698);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B69C);
	op_stkvar	(x,	1);
	create_insn	(0X710002B6A4);
	create_insn	(x=0X710002B6B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B6B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B6BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B6C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B6C4);
	op_stkvar	(x,	1);
	make_array	(0X710002B6CC,	0X4);
	create_insn	(x=0X710002B6D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B6D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B6D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B6DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B6E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B75C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B760);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B764);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B768);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B76C);
	op_stkvar	(x,	1);
	create_insn	(0X710002B774);
	create_insn	(x=0X710002B784);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B788);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B78C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B790);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B794);
	op_stkvar	(x,	1);
	make_array	(0X710002B79C,	0X4);
	create_insn	(x=0X710002B7A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B7A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B7A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B7AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B7B0);
	op_stkvar	(x,	1);
	create_insn	(0X710002B7D4);
	create_insn	(x=0X710002B82C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B830);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B834);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B838);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B83C);
	op_stkvar	(x,	1);
	make_array	(0X710002B844,	0XC);
	create_insn	(x=0X710002B850);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B854);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B858);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B85C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B860);
	op_stkvar	(x,	1);
	create_insn	(0X710002B884);
	create_insn	(x=0X710002B8DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B8E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B8E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B8E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B8EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B8F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B8F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B8FC);
	op_stkvar	(x,	1);
	create_insn	(0X710002B934);
	create_insn	(x=0X710002B984);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B988);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B990);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B998);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B99C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B9A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B9A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B9AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B9B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002B9B4);
	op_stkvar	(x,	1);
	create_insn	(0X710002B9F0);
	create_insn	(x=0X710002BA40);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BA44);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BA48);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BA50);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BA58);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BA5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BA60);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BA64);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BA6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BA70);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BA74);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BA78);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BA7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BAB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BAB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BAB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BABC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BAC0);
	op_stkvar	(x,	1);
	create_insn	(0X710002BAC8);
	create_insn	(x=0X710002BAF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BAF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BAF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BAFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BB00);
	op_stkvar	(x,	1);
	create_insn	(0X710002BB08);
	create_insn	(x=0X710002BB70);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BB74);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BB78);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BB7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BB80);
	op_stkvar	(x,	1);
	create_insn	(0X710002BB88);
	create_insn	(x=0X710002BB8C);
	op_hex		(x,	1);
	create_insn	(x=0X710002BB94);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BB98);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BB9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BBA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BBD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BBD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BBDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BBE0);
	op_stkvar	(x,	1);
	create_insn	(0X710002BBE8);
	create_insn	(x=0X710002BC10);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BC14);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BC18);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BC1C);
	op_stkvar	(x,	1);
	create_insn	(0X710002BC24);
	create_insn	(x=0X710002BC4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BC50);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BC54);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BC58);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BC60);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BC64);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BC68);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BC6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BC9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BCA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BCA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BCA8);
	op_stkvar	(x,	1);
	create_insn	(0X710002BCB0);
	create_insn	(x=0X710002BCDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BCE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BCE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BCE8);
	op_stkvar	(x,	1);
	create_insn	(0X710002BCF0);
	create_insn	(x=0X710002BD18);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BD1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BD20);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BD24);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BD2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BD30);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BD34);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BD3C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002BD44);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002BD70);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BD78);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BD7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BD84);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BD88);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BDB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BDBC);
	op_stkvar	(x,	1);
	create_insn	(0X710002BDC4);
	create_insn	(x=0X710002BDCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BDD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BE00);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BE08);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BE10);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BE14);
	op_stkvar	(x,	1);
	create_insn	(0X710002BE1C);
	create_insn	(0X710002BE24);
	create_insn	(x=0X710002BE28);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BE2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BE30);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BE34);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BE54);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BE5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BE70);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BE74);
	op_stkvar	(x,	1);
	create_insn	(0X710002BE94);
	create_insn	(x=0X710002BE9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BEA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BEAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BEB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BED4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BED8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BEDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BEE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BEEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BEF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BEF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BEFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BF00);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BF0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BF10);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BF14);
	op_stkvar	(x,	1);
	create_insn	(0X710002BF44);
	create_insn	(0X710002BF7C);
	create_insn	(x=0X710002BF9C);
	op_hex		(x,	1);
	create_insn	(x=0X710002BFB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BFBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BFC0);
	op_stkvar	(x,	1);
	create_insn	(0X710002BFC8);
	create_insn	(x=0X710002BFE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BFE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BFE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BFF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BFF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002BFF8);
	op_stkvar	(x,	1);
	set_cmt	(0X710002C020,	"int",	0);
	create_insn	(x=0X710002C020);
	op_hex		(x,	1);
	create_insn	(x=0X710002C04C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C050);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C054);
	op_stkvar	(x,	1);
	create_insn	(0X710002C05C);
	create_insn	(x=0X710002C060);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C064);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C068);
	op_stkvar	(x,	1);
	create_insn	(0X710002C070);
	create_insn	(x=0X710002C074);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C078);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C07C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C094);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002C0B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C0B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C0D4);
	op_hex		(x,	1);
	create_insn	(x=0X710002C0D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C104);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C108);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C10C);
	op_stkvar	(x,	1);
	create_insn	(0X710002C118);
	create_insn	(x=0X710002C120);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C124);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C128);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C134);
	op_stkvar	(x,	1);
	set_cmt	(0X710002C138,	"result",	0);
	set_cmt	(0X710002C13C,	"int",	0);
	create_insn	(x=0X710002C168);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C16C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C170);
	op_stkvar	(x,	1);
	make_array	(0X710002C17C,	0X4);
	create_insn	(x=0X710002C180);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C184);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C188);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C18C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C190);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C1A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C1BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C1C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C1DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002C1E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C1E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002C1EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002C1F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C1FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C200);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002C204);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C20C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C210);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C214);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C21C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002C228);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002C230);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002C250);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C254);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C25C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C264);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C278);
	op_hex		(x,	1);
	create_insn	(x=0X710002C27C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C2A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002C2B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002C2B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002C2D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C2E4);
	op_stkvar	(x,	1);
	set_cmt	(0X710002C2F0,	"result",	0);
	create_insn	(x=0X710002C2F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C310);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C314);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C318);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C31C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C320);
	op_stkvar	(x,	1);
	create_insn	(0X710002C328);
	create_insn	(0X710002C330);
	create_insn	(x=0X710002C334);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C338);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C33C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C340);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C344);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C368);
	op_hex		(x,	1);
	create_insn	(x=0X710002C36C);
	op_hex		(x,	1);
	create_insn	(0X710002C390);
	set_cmt	(0X710002C398,	"switch 4 cases",	0);
	create_insn	(x=0X710002C3AC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002C3B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X710002C3BC,	"switch jump",	0);
	set_cmt	(0X710002C3C0,	"jumptable 000000710002C3BC cases 4,6",	1);
	create_insn	(0X710002C3C0);
	create_insn	(x=0X710002C3C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C3F0);
	op_stkvar	(x,	1);
	set_cmt	(0X710002C41C,	"jumptable 000000710002C3BC cases 5,7",	1);
	create_insn	(0X710002C41C);
	create_insn	(0X710002C444);
	create_insn	(x=0X710002C448);
	op_hex		(x,	1);
	create_insn	(x=0X710002C490);
	op_hex		(x,	1);
	create_insn	(x=0X710002C498);
	op_hex		(x,	1);
	create_insn	(x=0X710002C4B4);
	op_hex		(x,	1);
	set_cmt	(0X710002C4D8,	"jumptable 000000710002C3BC default case",	1);
	set_name	(0X710002C4D8,	"def_710002C3BC");
	create_insn	(0X710002C4E4);
	create_insn	(x=0X710002C4F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C51C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C520);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C524);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C528);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C52C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C538);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C53C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C540);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C5C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C5CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C5D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C5D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C5DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C648);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C650);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C658);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C65C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C660);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C668);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002C674);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002C684);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002C688);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X710002C694);
	create_insn	(x=0X710002C698);
	op_stkvar	(x,	1);
	set_cmt	(0X710002C6B8,	"int",	0);
	create_insn	(x=0X710002C6B8);
	op_hex		(x,	1);
	create_insn	(x=0X710002C6E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C6E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C6EC);
	op_stkvar	(x,	1);
	create_insn	(0X710002C6F4);
	create_insn	(x=0X710002C6F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C6FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C700);
	op_stkvar	(x,	1);
	make_array	(0X710002C708,	0X8);
	create_insn	(x=0X710002C710);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C714);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C728);
	op_hex		(x,	1);
	create_insn	(0X710002C764);
	create_insn	(0X710002C7C8);
	create_insn	(x=0X710002C81C);
	op_hex		(x,	1);
	create_insn	(0X710002C848);
	create_insn	(0X710002C878);
	create_insn	(0X710002C8A4);
	create_insn	(0X710002C8AC);
	create_insn	(x=0X710002C8CC);
	op_hex		(x,	1);
	create_insn	(0X710002C8F8);
	create_insn	(0X710002C918);
	create_insn	(0X710002C930);
	create_insn	(x=0X710002C9C0);
	op_hex		(x,	1);
	create_insn	(x=0X710002C9E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002C9E4);
	op_stkvar	(x,	1);
	create_insn	(0X710002C9EC);
	make_array	(0X710002CA0C,	0X4);
	create_insn	(x=0X710002CA10);
	op_stkvar	(x,	1);
	create_insn	(0X710002CA58);
	create_insn	(x=0X710002CAEC);
	op_hex		(x,	1);
	create_insn	(x=0X710002CAF0);
	op_hex		(x,	1);
	create_insn	(x=0X710002CB1C);
	op_hex		(x,	1);
	create_insn	(x=0X710002CB2C);
	op_hex		(x,	1);
	create_insn	(x=0X710002CB34);
	op_hex		(x,	1);
	create_insn	(x=0X710002CB40);
	op_hex		(x,	1);
	create_insn	(0X710002CB54);
	create_insn	(0X710002CB74);
	create_insn	(x=0X710002CB7C);
	op_hex		(x,	1);
	create_insn	(x=0X710002CB9C);
	op_hex		(x,	1);
	create_insn	(x=0X710002CBB8);
	op_hex		(x,	1);
	create_insn	(x=0X710002CBC0);
	op_hex		(x,	1);
	create_insn	(x=0X710002CBCC);
	op_hex		(x,	1);
	create_insn	(0X710002CBE8);
	create_insn	(x=0X710002CBF4);
	op_hex		(x,	1);
	create_insn	(0X710002CC04);
	create_insn	(x=0X710002CC18);
	op_stkvar	(x,	1);
	create_insn	(0X710002CC20);
	create_insn	(x=0X710002CC28);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002CC30);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002CC34);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002CC38);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002CC3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002CC40);
	op_stkvar	(x,	1);
	create_insn	(0X710002CC74);
	set_cmt	(0X710002CC9C,	"result",	0);
	create_insn	(0X710002CCE0);
	set_cmt	(0X710002CCE4,	"result",	0);
	create_insn	(x=0X710002CD10);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002CD18);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002CD1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002CD20);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002CD24);
	op_stkvar	(x,	1);
	create_insn	(0X710002CD2C);
	create_insn	(0X710002CD30);
	make_array	(0X710002CD38,	0X8);
	create_insn	(0X710002CD40);
	create_insn	(x=0X710002CD44);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002CD48);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002CD4C);
	op_stkvar	(x,	1);
	create_insn	(0X710002CD78);
	create_insn	(0X710002CDB0);
	create_insn	(x=0X710002CDB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002CDC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002CDC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002CDCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002CDDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002CDE0);
	op_hex		(x,	1);
	create_insn	(x=0X710002CDE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002CDE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002CDEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002CDF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002CDFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002CE04);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002CE0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002CE2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002CE3C);
	op_hex		(x,	1);
	create_insn	(x=0X710002CE5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002CE60);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002CE68);
	op_hex		(x,	1);
	create_insn	(x=0X710002CE78);
	op_stkvar	(x,	1);
	create_insn	(0X710002CE84);
	create_qword	(0X710002CE88);
	create_insn	(0X710002CE90);
	create_insn	(0X710002CEC0);
	create_insn	(x=0X710002CED8);
	op_hex		(x,	1);
	create_insn	(x=0X710002CF34);
	op_hex		(x,	1);
	create_insn	(x=0X710002CF38);
	op_hex		(x,	1);
	create_insn	(0X710002CF50);
	create_insn	(x=0X710002CF68);
	op_hex		(x,	1);
	create_insn	(x=0X710002CF6C);
	op_hex		(x,	1);
	create_insn	(0X710002CF80);
	make_array	(0X710002CF84,	0XC);
	create_insn	(x=0X710002CF90);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002CF94);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002CF98);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002CFE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002CFE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002CFEC);
	op_stkvar	(x,	1);
	make_array	(0X710002CFF4,	0XC);
	create_insn	(x=0X710002D000);
	op_stkvar	(x,	1);
	create_insn	(0X710002D034);
	create_insn	(0X710002D0B0);
	create_insn	(x=0X710002D0D0);
	op_stkvar	(x,	1);
	create_insn	(0X710002D0D8);
	create_insn	(0X710002D0DC);
	create_insn	(x=0X710002D0E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D0E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D0E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D0F4);
	op_hex		(x,	1);
	create_insn	(x=0X710002D108);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D10C);
	op_hex		(x,	1);
	create_insn	(x=0X710002D110);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D114);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D118);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D11C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D124);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D12C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D134);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D13C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D15C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D16C);
	op_hex		(x,	1);
	create_insn	(x=0X710002D190);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D194);
	op_hex		(x,	1);
	create_insn	(x=0X710002D198);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D1A0);
	op_stkvar	(x,	1);
	create_insn	(0X710002D1AC);
	create_insn	(0X710002D1B0);
	set_name	(0X710002D1B0,	"nullsub_37");
	make_array	(0X710002D1B4,	0XC);
	create_insn	(x=0X710002D1C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D1C4);
	op_stkvar	(x,	1);
	set_cmt	(0X710002D1D0,	"switch 4 cases",	0);
	create_insn	(x=0X710002D1E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002D1EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X710002D1F8,	"switch jump",	0);
	set_cmt	(0X710002D1FC,	"jumptable 000000710002D1F8 case 1",	1);
	create_insn	(0X710002D1FC);
	create_insn	(x=0X710002D204);
	op_hex		(x,	1);
	set_cmt	(0X710002D210,	"jumptable 000000710002D1F8 case 2",	1);
	create_insn	(0X710002D210);
	set_cmt	(0X710002D214,	"jumptable 000000710002D1F8 case 0",	1);
	create_insn	(x=0X710002D218);
	op_hex		(x,	1);
	set_cmt	(0X710002D220,	"jumptable 000000710002D1F8 default case",	1);
	create_insn	(x=0X710002D220);
	op_stkvar	(x,	1);
	set_name	(0X710002D220,	"def_710002D1F8");
	create_insn	(x=0X710002D224);
	op_stkvar	(x,	1);
	set_cmt	(0X710002D22C,	"jumptable 000000710002D1F8 case 3",	1);
	create_insn	(0X710002D22C);
	create_insn	(x=0X710002D23C);
	op_hex		(x,	1);
	create_insn	(x=0X710002D248);
	op_hex		(x,	1);
	create_insn	(0X710002D280);
	create_insn	(x=0X710002D368);
	op_hex		(x,	1);
	create_insn	(x=0X710002D36C);
	op_hex		(x,	1);
	create_insn	(x=0X710002D37C);
	op_hex		(x,	1);
	create_insn	(x=0X710002D384);
	op_hex		(x,	1);
	create_insn	(x=0X710002D3A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D3A4);
	op_stkvar	(x,	1);
	create_insn	(0X710002D3AC);
	create_insn	(x=0X710002D3B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D3BC);
	op_stkvar	(x,	1);
	create_insn	(0X710002D3C4);
	create_insn	(x=0X710002D3C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D3CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D3D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D3D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002D3E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002D408);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D40C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D410);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D418);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D420);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D430);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D440);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D450);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D458);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D45C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D460);
	op_stkvar	(x,	1);
	create_insn	(0X710002D46C);
	create_insn	(x=0X710002D478);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D47C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D480);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D48C);
	op_stkvar	(x,	1);
	create_insn	(0X710002D494);
	create_insn	(x=0X710002D498);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D49C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D4A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002D4AC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002D4B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D4C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D4C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D4D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D4DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002D4E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D4EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D504);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D508);
	op_stkvar	(x,	1);
	create_insn	(0X710002D514);
	set_name	(0X710002D514,	"nullsub_38");
	create_insn	(0X710002D518);
	set_name	(0X710002D518,	"nullsub_39");
	create_insn	(x=0X710002D51C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D520);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D524);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D528);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D584);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D588);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D58C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D590);
	op_stkvar	(x,	1);
	create_insn	(0X710002D598);
	create_insn	(x=0X710002D5A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D5A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D5AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D5B0);
	op_stkvar	(x,	1);
	create_insn	(0X710002D5B8);
	create_insn	(x=0X710002D5C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D5DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002D5F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D608);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D60C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D610);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D614);
	op_stkvar	(x,	1);
	create_insn	(0X710002D61C);
	create_insn	(x=0X710002D620);
	op_hex		(x,	1);
	create_insn	(0X710002D628);
	create_insn	(0X710002D630);
	create_insn	(x=0X710002D644);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D648);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D67C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D680);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D688);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D690);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D698);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D69C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D6C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D6C8);
	op_stkvar	(x,	1);
	create_insn	(0X710002D6D0);
	create_insn	(x=0X710002D6D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D6D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D6DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D6E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D6E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D6E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D740);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D748);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D74C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002D750);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002D754);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002D75C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X710002D788);
	create_insn	(0X710002D790);
	create_insn	(x=0X710002D79C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D7A4);
	op_stkvar	(x,	1);
	create_insn	(0X710002D7C0);
	create_insn	(0X710002D7CC);
	create_insn	(x=0X710002D7D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D7E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D7E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D7EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002D7F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D7F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002D7F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D7FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D800);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D80C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D810);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D81C);
	op_stkvar	(x,	1);
	create_insn	(0X710002D828);
	create_insn	(x=0X710002D844);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D848);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D84C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D850);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D854);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D858);
	op_stkvar	(x,	1);
	create_insn	(0X710002D864);
	create_insn	(x=0X710002D868);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D86C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D870);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D874);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D8BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D8C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D8DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D8F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D8F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D8F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D8FC);
	op_stkvar	(x,	1);
	create_insn	(0X710002D908);
	create_insn	(x=0X710002D90C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D910);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D914);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D918);
	op_stkvar	(x,	1);
	create_insn	(0X710002D924);
	create_insn	(x=0X710002D950);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D954);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D958);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D95C);
	op_stkvar	(x,	1);
	create_insn	(0X710002D968);
	create_insn	(0X710002D978);
	create_insn	(0X710002D988);
	make_array	(0X710002D998,	0X8);
	create_insn	(0X710002D9A0);
	create_insn	(x=0X710002D9A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D9A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002D9AC);
	op_stkvar	(x,	1);
	create_insn	(0X710002D9D0);
	create_insn	(x=0X710002D9FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DA00);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DA1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DA34);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DA3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DA40);
	op_stkvar	(x,	1);
	create_insn	(0X710002DA4C);
	create_insn	(x=0X710002DA50);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DA54);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DA78);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DA90);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DAAC);
	op_stkvar	(x,	1);
	create_insn	(0X710002DAB8);
	make_array	(0X710002DAC8,	0X8);
	create_insn	(x=0X710002DAD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DAD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DAD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DADC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DAF4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002DAFC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X710002DB10);
	create_insn	(x=0X710002DB8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DB90);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DB94);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DB98);
	op_stkvar	(x,	1);
	create_insn	(0X710002DBA0);
	create_insn	(0X710002DBB0);
	create_insn	(x=0X710002DBB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DBB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DBBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DBDC);
	op_hex		(x,	1);
	create_insn	(x=0X710002DBEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DC14);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DC18);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DC1C);
	op_stkvar	(x,	1);
	create_insn	(0X710002DC28);
	create_insn	(0X710002DC38);
	create_insn	(x=0X710002DC3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DC40);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DC44);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DC50);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002DC58);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002DC7C);
	op_hex		(x,	1);
	create_insn	(x=0X710002DC84);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DC90);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002DC94);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DCC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DCC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DCCC);
	op_stkvar	(x,	1);
	create_insn	(0X710002DCD8);
	create_insn	(x=0X710002DCDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DCE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DCE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DCEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DCF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DCFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DD08);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DD10);
	op_stkvar	(x,	1);
	set_cmt	(0X710002DD18,	"result",	0);
	create_insn	(x=0X710002DD30);
	op_stkvar	(x,	1);
	create_insn	(0X710002DD40);
	create_insn	(0X710002DD48);
	create_insn	(x=0X710002DD4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DD50);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DD54);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DD58);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DD74);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DD8C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002DD94);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X710002DD9C);
	create_insn	(x=0X710002DDA8);
	op_hex		(x,	1);
	create_insn	(x=0X710002DDBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DDE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DDEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DDF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DDF4);
	op_stkvar	(x,	1);
	create_insn	(0X710002DE00);
	create_insn	(x=0X710002DE04);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DE08);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DE0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DE14);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DE20);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DE28);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DE34);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DE3C);
	op_stkvar	(x,	1);
	set_cmt	(0X710002DE44,	"result",	0);
	create_insn	(x=0X710002DE5C);
	op_stkvar	(x,	1);
	create_insn	(0X710002DE6C);
	create_insn	(0X710002DE74);
	create_insn	(x=0X710002DE78);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DE7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DE80);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DE84);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DE98);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DEA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DEAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DECC);
	op_stkvar	(x,	1);
	set_cmt	(0X710002DED0,	"switch 5 cases",	0);
	create_insn	(x=0X710002DEDC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002DEE0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X710002DEF0,	"switch jump",	0);
	set_cmt	(0X710002DEF4,	"jumptable 000000710002DEF0 case 0",	1);
	create_insn	(0X710002DEF4);
	create_insn	(x=0X710002DEFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DF00);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DF04);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DF0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DF10);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DF18);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DF1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DF20);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DF24);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DF28);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DF2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DF30);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DF4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DF50);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DF64);
	op_hex		(x,	1);
	create_insn	(x=0X710002DF8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DF9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DFA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DFAC);
	op_hex		(x,	1);
	create_insn	(x=0X710002DFB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DFBC);
	op_stkvar	(x,	1);
	create_insn	(0X710002DFCC);
	set_cmt	(0X710002DFD8,	"jumptable 000000710002DEF0 default case",	1);
	create_insn	(0X710002DFD8);
	set_name	(0X710002DFD8,	"def_710002DEF0");
	create_insn	(x=0X710002DFE0);
	op_hex		(x,	1);
	set_cmt	(0X710002DFF0,	"jumptable 000000710002DEF0 case 1",	1);
	create_insn	(x=0X710002DFF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002DFF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E008);
	op_hex		(x,	1);
	set_cmt	(0X710002E018,	"jumptable 000000710002DEF0 case 2",	1);
	create_insn	(x=0X710002E018);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E01C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E030);
	op_hex		(x,	1);
	set_cmt	(0X710002E040,	"jumptable 000000710002DEF0 case 3",	1);
	create_insn	(0X710002E040);
	create_insn	(x=0X710002E048);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E04C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E050);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E058);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E05C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E064);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E068);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E06C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E070);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E074);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E078);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E07C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E098);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E09C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E0B0);
	op_hex		(x,	1);
	create_insn	(x=0X710002E0DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E0F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E0FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E104);
	op_stkvar	(x,	1);
	set_cmt	(0X710002E10C,	"jumptable 000000710002DEF0 case 4",	1);
	create_insn	(x=0X710002E10C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E110);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E124);
	op_hex		(x,	1);
	create_insn	(0X710002E134);
	create_insn	(x=0X710002E138);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E148);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E154);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E158);
	op_hex		(x,	1);
	create_insn	(x=0X710002E160);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E174);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E188);
	op_hex		(x,	1);
	create_insn	(x=0X710002E1A4);
	op_stkvar	(x,	1);
	create_insn	(0X710002E1DC);
	create_insn	(x=0X710002E1E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E1E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E1EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E1F0);
	op_stkvar	(x,	1);
	create_insn	(0X710002E1FC);
	create_insn	(0X710002E200);
	create_insn	(x=0X710002E204);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E208);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E20C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E210);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E220);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E224);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E230);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E238);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E248);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E250);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E254);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E258);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E260);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E264);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E268);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E26C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E270);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E274);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E2B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E2B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E2C0);
	op_hex		(x,	1);
	create_insn	(x=0X710002E300);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E30C);
	op_stkvar	(x,	1);
	create_insn	(0X710002E318);
	create_insn	(0X710002E324);
	create_insn	(x=0X710002E338);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E344);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E358);
	op_stkvar	(x,	1);
	create_insn	(0X710002E370);
	create_insn	(x=0X710002E378);
	op_stkvar	(x,	1);
	set_cmt	(0X710002E380,	"result",	0);
	create_insn	(x=0X710002E380);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E38C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E390);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E394);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E398);
	op_stkvar	(x,	1);
	create_insn	(0X710002E3A4);
	create_insn	(x=0X710002E3A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E3AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E3B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E3B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E3C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E3CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E3D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E3E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E3E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E3F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E3F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E3F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E400);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E404);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E408);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E40C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E410);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E414);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E434);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E438);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E450);
	op_hex		(x,	1);
	create_insn	(x=0X710002E490);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E49C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E4A4);
	op_stkvar	(x,	1);
	create_insn	(0X710002E4B0);
	create_insn	(x=0X710002E4C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E4D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E4E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E4F8);
	op_stkvar	(x,	1);
	create_insn	(0X710002E504);
	create_insn	(x=0X710002E50C);
	op_stkvar	(x,	1);
	set_cmt	(0X710002E514,	"result",	0);
	create_insn	(x=0X710002E514);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E520);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E524);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E528);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E52C);
	op_stkvar	(x,	1);
	create_insn	(0X710002E538);
	create_insn	(x=0X710002E540);
	op_stkvar	(x,	1);
	create_insn	(0X710002E54C);
	create_insn	(x=0X710002E550);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E554);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E558);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E55C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E56C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E570);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E57C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E584);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E594);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E59C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E5A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E5A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E5AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E5B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E5B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E5B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E5BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E5C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E5FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E600);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E60C);
	op_hex		(x,	1);
	create_insn	(x=0X710002E64C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E658);
	op_stkvar	(x,	1);
	create_insn	(0X710002E664);
	create_insn	(0X710002E670);
	create_insn	(x=0X710002E684);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E690);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E6A4);
	op_stkvar	(x,	1);
	create_insn	(0X710002E6BC);
	create_insn	(x=0X710002E6C4);
	op_stkvar	(x,	1);
	set_cmt	(0X710002E6CC,	"result",	0);
	create_insn	(x=0X710002E6CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E6D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E6DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E6E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E6E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E6F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E718);
	op_stkvar	(x,	1);
	create_insn	(0X710002E720);
	create_dword	(0X710002E724);
	make_array	(0X710002E728,	0X8);
	create_insn	(x=0X710002E730);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E75C);
	op_stkvar	(x,	1);
	create_insn	(0X710002E764);
	create_qword	(0X710002E768);
	create_insn	(0X710002E770);
	create_insn	(x=0X710002E774);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E77C);
	op_hex		(x,	1);
	create_insn	(x=0X710002E784);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E78C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E798);
	op_stkvar	(x,	1);
	create_insn	(0X710002E7A0);
	make_array	(0X710002E7A8,	0X8);
	create_insn	(x=0X710002E7B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E7BC);
	op_hex		(x,	1);
	create_insn	(0X710002E7DC);
	create_insn	(x=0X710002E7E4);
	op_hex		(x,	1);
	create_insn	(x=0X710002E804);
	op_stkvar	(x,	1);
	make_array	(0X710002E80C,	0X4);
	create_insn	(x=0X710002E810);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E814);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E81C);
	op_hex		(x,	1);
	create_insn	(x=0X710002E834);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E83C);
	op_stkvar	(x,	1);
	create_insn	(0X710002E844);
	create_insn	(x=0X710002E84C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E854);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E858);
	op_stkvar	(x,	1);
	create_insn	(0X710002E860);
	create_qword	(0X710002E868);
	create_insn	(0X710002E870);
	set_name	(0X710002E870,	"j__ZN2nn2os25InitializeMultiWaitHolderEPNS0_19MultiWaitHolderTypeEj");
	make_array	(0X710002E874,	0XC);
	create_insn	(x=0X710002E880);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E884);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E88C);
	op_hex		(x,	1);
	create_insn	(x=0X710002E8AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E8B4);
	op_stkvar	(x,	1);
	create_insn	(0X710002E8BC);
	create_insn	(x=0X710002E8C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E8C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E8D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E8E4);
	op_hex		(x,	1);
	create_insn	(x=0X710002E904);
	op_stkvar	(x,	1);
	make_array	(0X710002E90C,	0X4);
	create_insn	(0X710002E910);
	create_insn	(x=0X710002E914);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E91C);
	op_hex		(x,	1);
	create_insn	(x=0X710002E924);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E92C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E938);
	op_stkvar	(x,	1);
	create_insn	(0X710002E940);
	set_name	(0X710002E940,	"j__ZN2nn2os25InitializeMultiWaitHolderEPNS0_19MultiWaitHolderTypeEj_0");
	make_array	(0X710002E944,	0XC);
	create_insn	(0X710002E950);
	create_insn	(x=0X710002E954);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E958);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E960);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E978);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002E99C);
	op_hex		(x,	1);
	create_insn	(0X710002E9D0);
	create_insn	(0X710002E9F4);
	create_insn	(x=0X710002EA00);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002EA04);
	op_stkvar	(x,	1);
	create_insn	(0X710002EA10);
	create_insn	(x=0X710002EA14);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002EA1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002EA2C);
	op_hex		(x,	1);
	create_insn	(x=0X710002EA34);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002EA54);
	op_hex		(x,	1);
	create_insn	(x=0X710002EA70);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002EA7C);
	op_hex		(x,	1);
	create_insn	(x=0X710002EA80);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002EA84);
	op_stkvar	(x,	1);
	create_dword	(0X710002EA9C);
	create_insn	(x=0X710002EAA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002EAA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002EAAC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002EAB4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002EABC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002EAC4);
	op_hex		(x,	1);
	create_insn	(x=0X710002EAC8);
	op_plain_offset	(x,	1,	0X71001CA0F8);
	op_plain_offset	(x,	129,	0X71001CA0F8);
	create_insn	(x=0X710002EAD8);
	op_hex		(x,	1);
	create_insn	(x=0X710002EAE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002EAE4);
	op_stkvar	(x,	1);
	make_array	(0X710002EAEC,	0X4);
	create_insn	(x=0X710002EAF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002EAF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002EAFC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002EB04);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002EB0C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002EB14);
	op_plain_offset	(x,	1,	0X71001CA0F8);
	op_plain_offset	(x,	129,	0X71001CA0F8);
	create_insn	(x=0X710002EB24);
	op_hex		(x,	1);
	create_insn	(x=0X710002EB2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002EB30);
	op_stkvar	(x,	1);
	create_insn	(0X710002EB38);
	set_name	(0X710002EB38,	"j_delete_1");
	create_insn	(0X710002EB3C);
	create_insn	(0X710002EB44);
	create_insn	(0X710002EB4C);
	make_array	(0X710002EB58,	0X8);
	create_insn	(0X710002EB60);
	set_name	(0X710002EB60,	"GetService_SM_");
	create_insn	(x=0X710002EB64);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002EB70);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002EB78);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002EB84);
	op_stkvar	(x,	1);
	create_dword	(0X710002EB8C);
	create_insn	(0X710002EB90);
	create_insn	(x=0X710002EB94);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002EBA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002EBA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002EBB4);
	op_stkvar	(x,	1);
	create_dword	(0X710002EBBC);
	create_insn	(x=0X710002EBC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002EBC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002EBC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002EBF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002EBFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002EC04);
	op_stkvar	(x,	1);
	create_insn	(0X710002EC0C);
	create_insn	(x=0X710002EC1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002EC2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002EC30);
	op_stkvar	(x,	1);
	make_array	(0X710002EC38,	0X8);
	create_insn	(x=0X710002EC40);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002EC44);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002EC60);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002EC68);
	op_stkvar	(x,	1);
	create_insn	(0X710002EC70);
	create_insn	(x=0X710002EC84);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002EC8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002EC90);
	op_stkvar	(x,	1);
	create_insn	(0X710002EC98);
	create_insn	(x=0X710002ECA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002ECA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002ECCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002ECD4);
	op_stkvar	(x,	1);
	create_insn	(0X710002ECDC);
	create_insn	(x=0X710002ECF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002ECF4);
	op_stkvar	(x,	1);
	make_array	(0X710002ECFC,	0X4);
	create_insn	(x=0X710002ED00);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002ED04);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002ED08);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002ED0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002ED14);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002ED30);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002ED40);
	op_plain_offset	(x,	1,	0X71000AD898);
	op_plain_offset	(x,	129,	0X71000AD898);
	create_insn	(x=0X710002ED48);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002ED58);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002ED68);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002ED74);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002EDB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002EDBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002EDC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002EDC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002EDCC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002EDD4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X710002EDE4);
	create_dword	(0X710002EDEC);
	create_insn	(0X710002EDF0);
	create_insn	(0X710002EE18);
	create_insn	(x=0X710002EE1C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X710002EE20,	"result",	0);
	create_insn	(x=0X710002EE24);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X710002EE30);
	set_name	(0X710002EE30,	"j_delete_2");
	create_insn	(x=0X710002EE34);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002EE3C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002EE48);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X710002EE4C,	"result",	0);
	create_insn	(x=0X710002EE50);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X710002EE5C);
	make_array	(0X710002EE68,	0X8);
	create_insn	(x=0X710002EE70);
	op_stkvar	(x,	1);
	set_name	(0X710002EE70,	"GetService_SM");
	create_insn	(x=0X710002EE74);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002EE78);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002EE7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002EE88);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002EE90);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002EE94);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X710002EEAC);
	create_insn	(x=0X710002EEB0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002EEB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002EED8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002EEE0);
	op_hex		(x,	1);
	create_insn	(x=0X710002EF08);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002EF10);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002EF38);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002EF3C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002EF64);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002EF6C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002EF78);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002EF7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002EF80);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002EF84);
	op_stkvar	(x,	1);
	create_insn	(0X710002EF8C);
	create_insn	(x=0X710002EF90);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002EFA0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002EFA8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002EFB4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002EFB8);
	op_plain_offset	(x,	1,	0X71001CA1D4);
	op_plain_offset	(x,	129,	0X71001CA1D4);
	create_insn	(x=0X710002EFBC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X710002EFD0);
	make_array	(0X710002EFD8,	0X8);
	create_insn	(x=0X710002EFE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002EFE4);
	op_stkvar	(x,	1);
	create_insn	(0X710002F010);
	create_insn	(x=0X710002F060);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002F064);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002F074);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002F078);
	op_stkvar	(x,	1);
	create_insn	(0X710002F080);
	create_insn	(x=0X710002F0A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002F0A4);
	op_stkvar	(x,	1);
	create_insn	(0X710002F0AC);
	create_insn	(0X710002F0D8);
	create_insn	(0X710002F0E8);
	create_insn	(0X710002F110);
	create_insn	(0X710002F11C);
	create_insn	(0X710002F148);
	create_insn	(x=0X710002F150);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002F154);
	op_stkvar	(x,	1);
	create_insn	(0X710002F180);
	create_insn	(x=0X710002F1D4);
	op_hex		(x,	1);
	create_insn	(x=0X710002F1DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002F1E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002F1F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002F1F4);
	op_stkvar	(x,	1);
	create_insn	(0X710002F1FC);
	create_insn	(x=0X710002F21C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002F220);
	op_stkvar	(x,	1);
	create_insn	(0X710002F228);
	create_insn	(0X710002F254);
	create_insn	(0X710002F264);
	create_insn	(0X710002F28C);
	create_insn	(0X710002F298);
	create_insn	(0X710002F2C4);
	make_array	(0X710002F2CC,	0X4);
	create_insn	(x=0X710002F2D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002F2D4);
	op_stkvar	(x,	1);
	create_insn	(0X710002F2FC);
	create_insn	(x=0X710002F34C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002F350);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002F35C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002F360);
	op_stkvar	(x,	1);
	create_insn	(0X710002F368);
	create_insn	(x=0X710002F378);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002F37C);
	op_stkvar	(x,	1);
	create_insn	(0X710002F384);
	create_insn	(0X710002F3B0);
	create_insn	(0X710002F3C0);
	create_insn	(0X710002F3E8);
	create_insn	(0X710002F3F4);
	create_insn	(0X710002F420);
	create_insn	(x=0X710002F428);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002F42C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002F450);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002F454);
	op_stkvar	(x,	1);
	create_insn	(0X710002F45C);
	create_insn	(0X710002F464);
	create_insn	(x=0X710002F46C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002F474);
	op_stkvar	(x,	1);
	create_insn	(0X710002F484);
	create_insn	(x=0X710002F48C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002F494);
	op_stkvar	(x,	1);
	create_insn	(0X710002F4A4);
	create_insn	(0X710002F4AC);
	create_insn	(0X710002F4B4);
	set_name	(0X710002F4B4,	"SleepThread");
	create_insn	(x=0X710002F4BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002F4C4);
	op_stkvar	(x,	1);
	create_insn	(0X710002F4D4);
	create_insn	(0X710002F4DC);
	create_insn	(0X710002F4E4);
	create_insn	(0X710002F4EC);
	create_insn	(0X710002F4F4);
	create_insn	(0X710002F4FC);
	create_insn	(x=0X710002F504);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002F50C);
	op_stkvar	(x,	1);
	create_insn	(0X710002F51C);
	set_name	(0X710002F51C,	"CancelSynchronization");
	create_insn	(0X710002F524);
	set_name	(0X710002F524,	"ArbitrateLock");
	create_insn	(0X710002F52C);
	set_name	(0X710002F52C,	"ArbitrateUnlock");
	create_insn	(0X710002F534);
	create_insn	(0X710002F53C);
	set_name	(0X710002F53C,	"SignalProcessWideKey");
	create_insn	(x=0X710002F544);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002F54C);
	op_stkvar	(x,	1);
	create_insn	(0X710002F55C);
	create_insn	(0X710002F564);
	create_insn	(x=0X710002F56C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002F574);
	op_stkvar	(x,	1);
	create_insn	(0X710002F584);
	create_insn	(0X710002F58C);
	create_insn	(0X710002F594);
	create_insn	(x=0X710002F59C);
	op_stkvar	(x,	1);
	set_name	(0X710002F59C,	"GetInfo");
	create_insn	(x=0X710002F5A4);
	op_stkvar	(x,	1);
	create_insn	(0X710002F5B4);
	create_insn	(x=0X710002F5BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002F5C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002F5CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002F5DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002F5E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002F5F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002F5FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002F60C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002F614);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002F624);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002F62C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002F634);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002F644);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002F64C);
	op_stkvar	(x,	1);
	make_array	(0X710002F65C,	0X4);
	create_insn	(0X710002F660);
	set_name	(0X710002F660,	"SetupService_arp");
	create_insn	(x=0X710002F664);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002F668);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002F66C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002F674);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002F6AC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002F6B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002F6D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002F6D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002F6DC);
	op_hex		(x,	1);
	create_insn	(0X710002F6EC);
	create_insn	(x=0X710002F6F4);
	op_hex		(x,	1);
	create_insn	(x=0X710002F700);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002F704);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002F70C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002F714);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002F71C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002F72C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002F768);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002F770);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002F790);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002F794);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002F798);
	op_hex		(x,	1);
	create_insn	(x=0X710002F7A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002F7A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002F7B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002F7B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002F7C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002F7D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002F7E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002F7F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002F7F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002F810);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002F81C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X710002F820,	"result",	0);
	set_cmt	(0X710002F828,	"this",	0);
	create_insn	(x=0X710002F828);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710002F83C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002F840);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002F844);
	op_stkvar	(x,	1);
	create_insn	(0X710002F850);
	create_insn	(x=0X710002F858);
	op_hex		(x,	1);
	create_insn	(x=0X710002F868);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002F874);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002F878);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002F87C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002F934);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002F938);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002F958);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002F960);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002F964);
	op_stkvar	(x,	1);
	create_insn	(0X710002FA44);
	create_insn	(0X710002FA50);
	create_insn	(0X710002FA5C);
	create_insn	(0X710002FA68);
	create_insn	(0X710002FA74);
	create_insn	(0X710002FA80);
	create_insn	(0X710002FA8C);
	create_insn	(0X710002FA98);
	create_insn	(0X710002FAA4);
	create_insn	(0X710002FAB0);
	create_insn	(0X710002FABC);
	create_insn	(0X710002FAC8);
	create_insn	(0X710002FAD4);
	create_insn	(0X710002FAE0);
	create_insn	(0X710002FAEC);
	create_insn	(0X710002FAF8);
	create_insn	(0X710002FB04);
	create_insn	(0X710002FB10);
	create_insn	(0X710002FB1C);
	create_insn	(0X710002FB28);
	create_insn	(0X710002FB34);
	create_insn	(0X710002FB40);
	create_insn	(0X710002FB4C);
	create_insn	(0X710002FB58);
	create_insn	(x=0X710002FB80);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002FB84);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002FB8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002FB90);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002FB94);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002FBC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002FBD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002FBD8);
	op_stkvar	(x,	1);
	create_insn	(0X710002FBE0);
	create_insn	(0X710002FC0C);
	set_name	(0X710002FC0C,	"nullsub_40");
	create_insn	(x=0X710002FC10);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002FC2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002FC34);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002FC40);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002FC44);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002FC7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002FC80);
	op_stkvar	(x,	1);
	create_insn	(0X710002FC88);
	create_insn	(0X710002FC94);
	create_insn	(x=0X710002FCBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002FCC0);
	op_stkvar	(x,	1);
	create_insn	(0X710002FCC8);
	create_insn	(0X710002FCD0);
	set_name	(0X710002FCD0,	"nullsub_41");
	create_insn	(x=0X710002FCD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002FCD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002FCDC);
	op_stkvar	(x,	1);
	create_insn	(0X710002FDC4);
	create_insn	(0X710002FDCC);
	create_insn	(0X710002FDD4);
	create_insn	(0X710002FDDC);
	create_insn	(0X710002FDE4);
	create_insn	(0X710002FDEC);
	create_insn	(0X710002FDF4);
	create_insn	(0X710002FDFC);
	create_insn	(0X710002FE04);
	create_insn	(0X710002FE0C);
	create_insn	(0X710002FE14);
	create_insn	(0X710002FE1C);
	create_insn	(0X710002FE24);
	create_insn	(0X710002FE2C);
	create_insn	(0X710002FE34);
	create_insn	(0X710002FE3C);
	create_insn	(0X710002FE44);
	create_insn	(0X710002FE4C);
	create_insn	(0X710002FE54);
	create_insn	(0X710002FE5C);
	create_insn	(0X710002FE64);
	create_insn	(0X710002FE6C);
	create_insn	(0X710002FE74);
	create_insn	(0X710002FE7C);
	create_insn	(x=0X710002FEA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002FEA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002FEAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002FEB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002FEB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002FEBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002FEE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002FEFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002FF0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002FF14);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002FF18);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002FF2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002FF30);
	op_stkvar	(x,	1);
	create_insn	(0X710002FF38);
	create_insn	(0X710002FF44);
	set_name	(0X710002FF44,	"nullsub_42");
	create_insn	(0X710002FF48);
	create_insn	(x=0X710002FF50);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002FF54);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002FF58);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002FF84);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002FF9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002FFA4);
	op_stkvar	(x,	1);
	create_insn	(0X710002FFAC);
	create_insn	(x=0X710002FFB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002FFBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710002FFC4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X71000301E4,	"result",	0);
	set_cmt	(0X71000301EC,	"a1",	0);
	create_insn	(x=0X71000301F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000301F4);
	op_stkvar	(x,	1);
	make_array	(0X71000301FC,	0X4);
	create_insn	(x=0X7100030200);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X710003020C);
	create_insn	(x=0X7100030210);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030214);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030220);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003022C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030234);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030260);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003026C);
	op_hex		(x,	1);
	create_insn	(x=0X7100030288);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003028C);
	op_stkvar	(x,	1);
	create_insn	(0X7100030298);
	create_insn	(x=0X71000302A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000302A4);
	op_stkvar	(x,	1);
	create_insn	(0X71000302B0);
	create_insn	(x=0X71000302B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000302BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000302C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000302FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030300);
	op_stkvar	(x,	1);
	create_insn	(0X710003030C);
	create_insn	(0X7100030314);
	create_insn	(x=0X7100030318);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003031C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030320);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030324);
	op_stkvar	(x,	1);
	set_cmt	(0X710003032C,	"switch 4 cases",	0);
	create_insn	(x=0X710003033C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100030340);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X710003035C,	"switch jump",	0);
	set_cmt	(0X7100030360,	"jumptable 000000710003035C case 0",	1);
	create_insn	(0X7100030360);
	create_insn	(x=0X7100030368);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030374);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030378);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003037C);
	op_stkvar	(x,	1);
	set_cmt	(0X7100030388,	"jumptable 000000710003035C default case",	1);
	create_insn	(0X7100030388);
	set_name	(0X7100030388,	"def_710003035C");
	set_cmt	(0X7100030394,	"jumptable 000000710003035C case 1",	1);
	create_insn	(0X7100030394);
	create_insn	(x=0X710003039C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000303A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000303A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000303AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000303B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000303B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000303BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000303C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000303C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000303C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000303CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000303D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000303E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000303EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000303F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000303F4);
	op_stkvar	(x,	1);
	set_cmt	(0X7100030400,	"jumptable 000000710003035C case 2",	1);
	create_insn	(0X7100030400);
	create_insn	(x=0X7100030408);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030414);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030418);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003041C);
	op_stkvar	(x,	1);
	set_cmt	(0X7100030428,	"jumptable 000000710003035C case 3",	1);
	create_insn	(0X7100030428);
	create_insn	(x=0X7100030430);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003043C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030440);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030444);
	op_stkvar	(x,	1);
	create_insn	(0X7100030450);
	create_insn	(x=0X710003047C);
	op_hex		(x,	1);
	create_insn	(x=0X71000304BC);
	op_stkvar	(x,	1);
	create_insn	(0X71000304CC);
	create_insn	(0X71000304D4);
	create_insn	(x=0X71000304E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000304F8);
	op_stkvar	(x,	1);
	create_insn	(0X7100030504);
	create_insn	(0X710003050C);
	create_insn	(x=0X7100030510);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030514);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030518);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003051C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030528);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030534);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030538);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003054C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030550);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030558);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003055C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030560);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030564);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030568);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003056C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030570);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030574);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003058C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030594);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003059C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000305A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000305B8);
	op_hex		(x,	1);
	create_insn	(x=0X71000305E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000305F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030604);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003060C);
	op_stkvar	(x,	1);
	create_insn	(0X7100030618);
	create_insn	(x=0X710003061C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003062C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030638);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003063C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003064C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030650);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030654);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003065C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100030660);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030674);
	op_stkvar	(x,	1);
	create_insn	(0X7100030680);
	create_insn	(x=0X7100030688);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003069C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000306B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000306B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000306BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000306C0);
	op_stkvar	(x,	1);
	create_insn	(0X71000306CC);
	create_insn	(x=0X71000306D4);
	op_stkvar	(x,	1);
	create_insn	(0X71000306E0);
	create_insn	(x=0X71000306E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000306E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000306EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000306F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030700);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030704);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030710);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030718);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030728);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003072C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030730);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030738);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003073C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030740);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030744);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030748);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003074C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030770);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030788);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030790);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030794);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000307A0);
	op_hex		(x,	1);
	create_insn	(x=0X71000307CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000307E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000307EC);
	op_stkvar	(x,	1);
	create_insn	(0X71000307F8);
	create_insn	(0X7100030804);
	create_insn	(x=0X7100030808);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030818);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030824);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030828);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030838);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003083C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030840);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030848);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003084C);
	op_stkvar	(x,	1);
	create_insn	(0X7100030864);
	create_insn	(x=0X710003086C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030880);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030898);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003089C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000308A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000308A4);
	op_stkvar	(x,	1);
	create_insn	(0X71000308B0);
	create_insn	(x=0X71000308B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000308B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000308BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000308C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000308D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000308D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000308E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000308E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000308F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000308FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030900);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030908);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003090C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030910);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030914);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030918);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003091C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030940);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030958);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030960);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030964);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030970);
	op_hex		(x,	1);
	create_insn	(x=0X710003099C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000309B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000309BC);
	op_stkvar	(x,	1);
	create_insn	(0X71000309C8);
	create_insn	(0X71000309D4);
	create_insn	(x=0X71000309D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000309E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000309F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000309F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030A08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030A0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030A10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030A18);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100030A1C);
	op_stkvar	(x,	1);
	create_insn	(0X7100030A34);
	create_insn	(x=0X7100030A3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030A50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030A68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030A6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030A70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030A74);
	op_stkvar	(x,	1);
	create_insn	(0X7100030A80);
	create_insn	(x=0X7100030A84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030A88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030A8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030A90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030A94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030A98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030AB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030AB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030AC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030AE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030B04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030B08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030B0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030B14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030B18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030B20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030B24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030B28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030B2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030B30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030B34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030B38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030B50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030B54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030B58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030B6C);
	op_hex		(x,	1);
	create_insn	(x=0X7100030B98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030BAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030BB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030BC0);
	op_stkvar	(x,	1);
	create_insn	(0X7100030BC8);
	create_insn	(0X7100030BD4);
	create_insn	(0X7100030BF0);
	create_insn	(x=0X7100030BF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030BFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030C00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030C08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030C0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030C14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030C18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030C1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030C20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030C24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030C28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030C2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030C50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030C54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030C60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030C70);
	op_hex		(x,	1);
	create_insn	(x=0X7100030C9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030CB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030CBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030CC4);
	op_stkvar	(x,	1);
	create_insn	(0X7100030CCC);
	create_insn	(x=0X7100030CD4);
	op_hex		(x,	1);
	create_insn	(x=0X7100030CF0);
	op_stkvar	(x,	1);
	create_insn	(0X7100030D28);
	create_insn	(x=0X7100030D34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030D38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030D3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030D40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030D44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030D48);
	op_stkvar	(x,	1);
	create_insn	(0X7100030D54);
	create_insn	(0X7100030D5C);
	create_insn	(x=0X7100030D60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030D70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030D7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030D80);
	op_hex		(x,	1);
	create_insn	(x=0X7100030D88);
	op_stkvar	(x,	1);
	create_insn	(0X7100030DA0);
	create_insn	(x=0X7100030DA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030DB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030DC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030DC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030DD0);
	op_stkvar	(x,	1);
	create_insn	(0X7100030DE4);
	create_insn	(0X7100030DE8);
	create_insn	(x=0X7100030DEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030DF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030DF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030DF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030E04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030E10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030E14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030E28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030E2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030E34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030E38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030E40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030E48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030E4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030E50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030E54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030E58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030E5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030E74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030EA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030EAC);
	op_hex		(x,	1);
	create_insn	(x=0X7100030EEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030EF8);
	op_stkvar	(x,	1);
	create_insn	(0X7100030F04);
	create_insn	(x=0X7100030F18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030F24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030F28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030F38);
	op_stkvar	(x,	1);
	create_insn	(0X7100030F50);
	create_insn	(x=0X7100030F5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030F60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030F64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030F68);
	op_stkvar	(x,	1);
	create_insn	(0X7100030F74);
	create_insn	(x=0X7100030F78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030F7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030F88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030F94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030F9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030FC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030FD4);
	op_hex		(x,	1);
	create_insn	(x=0X7100030FF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100030FF4);
	op_stkvar	(x,	1);
	create_insn	(0X7100031000);
	create_insn	(x=0X7100031008);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003100C);
	op_stkvar	(x,	1);
	create_insn	(0X7100031018);
	create_insn	(x=0X7100031020);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031024);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031030);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031064);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031068);
	op_stkvar	(x,	1);
	create_insn	(0X7100031074);
	create_insn	(0X710003107C);
	create_insn	(x=0X7100031080);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031084);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031088);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003108C);
	op_stkvar	(x,	1);
	set_cmt	(0X7100031094,	"switch 4 cases",	0);
	create_insn	(x=0X71000310A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000310A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X71000310C4,	"switch jump",	0);
	set_cmt	(0X71000310C8,	"jumptable 00000071000310C4 case 0",	1);
	create_insn	(0X71000310C8);
	create_insn	(x=0X71000310CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000310D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000310D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000310DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000310E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000310E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000310EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000310F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000310F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000310F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000310FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031100);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031130);
	op_hex		(x,	1);
	create_insn	(x=0X7100031170);
	op_stkvar	(x,	1);
	set_cmt	(0X7100031180,	"jumptable 00000071000310C4 default case",	1);
	create_insn	(0X7100031180);
	set_name	(0X7100031180,	"def_71000310C4");
	set_cmt	(0X710003118C,	"jumptable 00000071000310C4 case 1",	1);
	create_insn	(0X710003118C);
	create_insn	(x=0X710003119C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000311A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000311A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000311A8);
	op_stkvar	(x,	1);
	set_cmt	(0X71000311B4,	"jumptable 00000071000310C4 case 2",	1);
	create_insn	(0X71000311B4);
	create_insn	(x=0X71000311B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000311BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000311C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000311C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000311CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000311D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000311D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000311DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000311E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000311E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000311E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000311EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003121C);
	op_hex		(x,	1);
	create_insn	(x=0X7100031264);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031270);
	op_stkvar	(x,	1);
	set_cmt	(0X710003127C,	"jumptable 00000071000310C4 case 3",	1);
	create_insn	(0X710003127C);
	create_insn	(x=0X710003128C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031290);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031294);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031298);
	op_stkvar	(x,	1);
	create_insn	(0X71000312A4);
	create_insn	(x=0X71000312B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000312C4);
	op_stkvar	(x,	1);
	create_insn	(0X71000312D8);
	create_insn	(x=0X71000312EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000312FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031308);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003130C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031310);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031314);
	op_stkvar	(x,	1);
	create_insn	(0X7100031320);
	create_insn	(0X7100031328);
	create_insn	(x=0X710003132C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031330);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031334);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031338);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031348);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003134C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031358);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031360);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031370);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031374);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031378);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003137C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031380);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031384);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031388);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003138C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000313D0);
	op_hex		(x,	1);
	create_insn	(x=0X7100031410);
	op_stkvar	(x,	1);
	create_insn	(0X7100031420);
	create_insn	(x=0X710003142C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031430);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031434);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031438);
	op_stkvar	(x,	1);
	create_insn	(0X7100031444);
	create_insn	(x=0X7100031458);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031468);
	op_stkvar	(x,	1);
	create_insn	(0X7100031474);
	create_insn	(0X710003147C);
	create_insn	(x=0X7100031480);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031484);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031488);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003148C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031498);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000314A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000314A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000314BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000314C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000314C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000314CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000314D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000314DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000314E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000314E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000314E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000314EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000314F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031508);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031534);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031540);
	op_hex		(x,	1);
	create_insn	(x=0X7100031580);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003158C);
	op_stkvar	(x,	1);
	create_insn	(0X7100031598);
	create_insn	(x=0X71000315AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000315B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000315BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000315CC);
	op_stkvar	(x,	1);
	create_insn	(0X71000315E4);
	create_insn	(x=0X71000315F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000315F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000315F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000315FC);
	op_stkvar	(x,	1);
	create_insn	(0X7100031608);
	create_insn	(x=0X7100031610);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031614);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031618);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031650);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031654);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031658);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031660);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031664);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031668);
	op_stkvar	(x,	1);
	create_insn	(0X7100031670);
	create_insn	(x=0X7100031674);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031684);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031688);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031690);
	op_stkvar	(x,	1);
	create_insn	(0X710003169C);
	create_insn	(x=0X71000316A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000316AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000316B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000316B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000316C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000316C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000316CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000316D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031724);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003173C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003177C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031780);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031784);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031788);
	op_stkvar	(x,	1);
	create_insn	(0X7100031790);
	create_insn	(x=0X7100031798);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003179C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000317A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000317A4);
	op_stkvar	(x,	1);
	create_insn	(0X71000317AC);
	create_insn	(x=0X71000317B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000317B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000317BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000317C0);
	op_stkvar	(x,	1);
	create_insn	(0X71000317C8);
	create_insn	(x=0X71000317D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000317D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000317D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000317DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000317E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000317E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000317EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000317F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031854);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003185C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000318A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000318A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000318A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000318AC);
	op_stkvar	(x,	1);
	create_insn	(0X71000318B4);
	create_insn	(x=0X71000318BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000318C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000318C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000318C8);
	op_stkvar	(x,	1);
	create_insn	(0X71000318D0);
	create_insn	(x=0X71000318D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000318DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000318E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000318E4);
	op_stkvar	(x,	1);
	create_insn	(0X71000318EC);
	create_insn	(x=0X71000318F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000318F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000318FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031900);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031908);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003190C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031910);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031914);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031954);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100031960);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X71000319A4);
	create_insn	(x=0X71000319A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000319AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000319B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000319B4);
	op_stkvar	(x,	1);
	create_insn	(0X71000319BC);
	create_insn	(x=0X71000319FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031A00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031A04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031A08);
	op_stkvar	(x,	1);
	create_insn	(0X7100031A10);
	create_insn	(x=0X7100031A18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031A1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031A38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031A3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031A44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031A48);
	op_stkvar	(x,	1);
	create_insn	(0X7100031A50);
	create_insn	(0X7100031A58);
	create_insn	(0X7100031A70);
	create_insn	(x=0X7100031A78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031A98);
	op_stkvar	(x,	1);
	create_insn	(0X7100031AA0);
	create_insn	(x=0X7100031AA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031AAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031AB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031AB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031B44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031B48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031B4C);
	op_stkvar	(x,	1);
	create_insn	(0X7100031B54);
	create_insn	(x=0X7100031B58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031B5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031B60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031B64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031C08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031C0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031C10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031C14);
	op_stkvar	(x,	1);
	create_insn	(0X7100031C1C);
	create_insn	(x=0X7100031C20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031C24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031C28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031C2C);
	op_stkvar	(x,	1);
	create_insn	(0X7100031C34);
	create_insn	(x=0X7100031C40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031C44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031C48);
	op_stkvar	(x,	1);
	create_insn	(0X7100031CA4);
	create_insn	(x=0X7100031CA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031CAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031CB0);
	op_stkvar	(x,	1);
	create_insn	(0X7100031CB8);
	create_insn	(0X7100031CDC);
	create_insn	(x=0X7100031D1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031D20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031D24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031D2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031D30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031D4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031D50);
	op_stkvar	(x,	1);
	create_insn	(0X7100031D58);
	create_insn	(x=0X7100031D5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031D60);
	op_stkvar	(x,	1);
	create_insn	(0X7100031D68);
	create_insn	(0X7100031DD0);
	create_insn	(0X7100031DF4);
	create_insn	(x=0X7100031E18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031E1C);
	op_stkvar	(x,	1);
	create_insn	(0X7100031E24);
	create_insn	(x=0X7100031E30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031E34);
	op_stkvar	(x,	1);
	create_insn	(0X7100031E3C);
	create_insn	(x=0X7100031E44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031E48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031E64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031E68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031E70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031E74);
	op_stkvar	(x,	1);
	create_insn	(0X7100031E7C);
	create_insn	(0X7100031E84);
	create_insn	(0X7100031EAC);
	create_insn	(0X7100031EB4);
	create_insn	(0X7100031EBC);
	create_insn	(0X7100031ED8);
	create_insn	(0X7100031EE0);
	create_insn	(x=0X7100031EE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031EEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031EF0);
	op_stkvar	(x,	1);
	create_insn	(0X7100031F2C);
	create_insn	(x=0X7100031F84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031F88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031F8C);
	op_stkvar	(x,	1);
	create_insn	(0X7100031F94);
	create_insn	(x=0X7100031F98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031F9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031FBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100031FC0);
	op_stkvar	(x,	1);
	create_insn	(0X7100031FC8);
	create_insn	(0X7100031FF8);
	create_insn	(x=0X7100032010);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032014);
	op_stkvar	(x,	1);
	create_insn	(0X710003201C);
	create_insn	(x=0X7100032054);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032058);
	op_stkvar	(x,	1);
	create_insn	(0X7100032060);
	create_insn	(x=0X7100032064);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032068);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003206C);
	op_stkvar	(x,	1);
	create_insn	(0X71000320CC);
	create_insn	(x=0X7100032148);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003214C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032150);
	op_stkvar	(x,	1);
	create_insn	(0X7100032158);
	create_insn	(x=0X710003215C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032160);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032164);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032180);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032184);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032188);
	op_stkvar	(x,	1);
	create_insn	(0X7100032190);
	create_insn	(x=0X7100032194);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032198);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003219C);
	op_stkvar	(x,	1);
	create_insn	(0X71000321A4);
	create_insn	(0X7100032214);
	create_insn	(0X7100032238);
	create_insn	(x=0X710003225C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032260);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032264);
	op_stkvar	(x,	1);
	create_insn	(0X710003226C);
	create_insn	(x=0X7100032278);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003227C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032280);
	op_stkvar	(x,	1);
	create_insn	(0X7100032288);
	create_insn	(x=0X7100032290);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032294);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000322B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000322B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000322BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000322C0);
	op_stkvar	(x,	1);
	create_insn	(0X71000322C8);
	create_insn	(0X71000322D0);
	create_insn	(0X71000322D8);
	create_insn	(x=0X71000322E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000322E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000322E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032334);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032338);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003233C);
	op_stkvar	(x,	1);
	create_insn	(0X7100032344);
	create_insn	(x=0X7100032348);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003234C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032350);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032358);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003235C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032360);
	op_stkvar	(x,	1);
	create_insn	(0X710003239C);
	create_insn	(x=0X71000323F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000323F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000323FC);
	op_stkvar	(x,	1);
	create_insn	(0X7100032404);
	create_insn	(x=0X7100032408);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003240C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032410);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032414);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032434);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032438);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003243C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032440);
	op_stkvar	(x,	1);
	create_insn	(0X7100032448);
	create_insn	(0X7100032478);
	create_insn	(0X71000324B4);
	create_insn	(0X71000324E0);
	create_insn	(x=0X7100032540);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032544);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032548);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003254C);
	op_stkvar	(x,	1);
	create_insn	(0X7100032554);
	create_insn	(0X7100032558);
	set_name	(0X7100032558,	"nullsub_43");
	create_insn	(0X710003255C);
	create_insn	(x=0X7100032560);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032564);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032570);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003257C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032584);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000325B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000325BC);
	op_hex		(x,	1);
	create_insn	(x=0X71000325D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000325DC);
	op_stkvar	(x,	1);
	create_insn	(0X71000325E8);
	create_insn	(x=0X71000325F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000325F4);
	op_stkvar	(x,	1);
	create_insn	(0X7100032600);
	create_insn	(x=0X7100032608);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003260C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032618);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003264C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032650);
	op_stkvar	(x,	1);
	create_insn	(0X710003265C);
	set_cmt	(0X7100032664,	"switch 8 cases",	0);
	create_insn	(0X7100032664);
	create_insn	(x=0X7100032674);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100032678);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100032684,	"switch jump",	0);
	set_cmt	(0X7100032688,	"jumptable 0000007100032684 case 0",	1);
	create_insn	(0X7100032688);
	set_cmt	(0X710003268C,	"jumptable 0000007100032684 default case",	1);
	create_insn	(0X710003268C);
	set_name	(0X710003268C,	"def_7100032684");
	set_cmt	(0X7100032698,	"jumptable 0000007100032684 case 1",	1);
	create_insn	(0X7100032698);
	set_cmt	(0X710003269C,	"jumptable 0000007100032684 case 2",	1);
	create_insn	(0X710003269C);
	set_cmt	(0X71000326A0,	"jumptable 0000007100032684 case 3",	1);
	create_insn	(0X71000326A0);
	set_cmt	(0X71000326A4,	"jumptable 0000007100032684 case 4",	1);
	create_insn	(0X71000326A4);
	set_cmt	(0X71000326A8,	"jumptable 0000007100032684 case 5",	1);
	create_insn	(0X71000326A8);
	set_cmt	(0X71000326AC,	"jumptable 0000007100032684 case 6",	1);
	create_insn	(0X71000326AC);
	set_cmt	(0X71000326B0,	"jumptable 0000007100032684 case 7",	1);
	create_insn	(0X71000326B0);
	create_insn	(0X71000326B4);
	create_insn	(x=0X71000326B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000326BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000326C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000326C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000326D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000326D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000326E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000326EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000326FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032700);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032704);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032708);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003270C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032710);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032714);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032718);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032748);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032764);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003276C);
	op_hex		(x,	1);
	create_insn	(x=0X71000327AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000327B8);
	op_stkvar	(x,	1);
	create_insn	(0X71000327C4);
	create_insn	(x=0X71000327D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000327E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000327E8);
	op_hex		(x,	1);
	create_insn	(0X7100032800);
	create_insn	(x=0X710003280C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032810);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032814);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032818);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032824);
	op_stkvar	(x,	1);
	create_insn	(0X7100032834);
	create_insn	(x=0X7100032838);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003283C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032840);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032844);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032854);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032858);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032864);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003286C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003287C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032880);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032888);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032890);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032898);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003289C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000328A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000328A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000328A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000328AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000328D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032904);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032910);
	op_hex		(x,	1);
	create_insn	(x=0X7100032950);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003295C);
	op_stkvar	(x,	1);
	create_insn	(0X7100032968);
	create_insn	(x=0X7100032974);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032978);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003297C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032980);
	op_stkvar	(x,	1);
	create_insn	(0X710003298C);
	create_insn	(x=0X71000329A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000329AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000329B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000329C0);
	op_stkvar	(x,	1);
	create_insn	(0X71000329D8);
	create_insn	(0X71000329E0);
	create_insn	(x=0X71000329E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000329E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000329EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000329F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032A00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032A04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032A10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032A18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032A28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032A2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032A30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032A34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032A38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032A3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032A40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032A44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032A74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032A7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032A98);
	op_hex		(x,	1);
	create_insn	(x=0X7100032AC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032AD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032AE4);
	op_stkvar	(x,	1);
	create_insn	(0X7100032AF0);
	create_insn	(x=0X7100032AF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032B04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032B10);
	op_stkvar	(x,	1);
	create_insn	(0X7100032B28);
	create_insn	(x=0X7100032B34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032B38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032B3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032B40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032B4C);
	op_stkvar	(x,	1);
	create_insn	(0X7100032B5C);
	create_insn	(x=0X7100032B60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032B64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032B68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032B6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032B78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032B84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032B88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032B9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032BA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032BA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032BA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032BAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032BB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032BB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032BB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032BBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032BEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032C04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032C10);
	op_hex		(x,	1);
	create_insn	(x=0X7100032C3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032C50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032C5C);
	op_stkvar	(x,	1);
	create_insn	(0X7100032C68);
	create_insn	(x=0X7100032C6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032C7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032C88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032C8C);
	op_hex		(x,	1);
	create_insn	(0X7100032CA4);
	create_insn	(x=0X7100032CB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032CB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032CB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032CBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032CC8);
	op_stkvar	(x,	1);
	create_insn	(0X7100032CD8);
	create_insn	(x=0X7100032CDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032CE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032CE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032CE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032CF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032D00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032D04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032D18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032D1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032D24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032D28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032D2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032D30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032D34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032D38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032D3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032D40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032D58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032D60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032D68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032D74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032D84);
	op_hex		(x,	1);
	create_insn	(x=0X7100032DB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032DC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032DD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032DD8);
	op_stkvar	(x,	1);
	create_insn	(0X7100032DE4);
	create_insn	(x=0X7100032DE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032DF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032E04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032E08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032E18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032E1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032E20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032E28);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100032E2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032E40);
	op_stkvar	(x,	1);
	create_insn	(0X7100032E4C);
	create_insn	(x=0X7100032E54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032E68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032E80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032E84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032E88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032E8C);
	op_stkvar	(x,	1);
	create_insn	(0X7100032E98);
	create_insn	(x=0X7100032EA0);
	op_stkvar	(x,	1);
	create_insn	(0X7100032EAC);
	create_insn	(x=0X7100032EB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032EB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032EB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032EBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032ECC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032ED0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032EDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032EE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032EF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032EFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032F00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032F08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032F0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032F10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032F14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032F18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032F1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032F20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032F38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032F40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032F60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032F74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032F84);
	op_hex		(x,	1);
	create_insn	(x=0X7100032FC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032FD0);
	op_stkvar	(x,	1);
	create_insn	(0X7100032FDC);
	create_insn	(x=0X7100032FF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100032FFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033000);
	op_hex		(x,	1);
	create_insn	(0X710003301C);
	create_insn	(x=0X7100033028);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003302C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033030);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033034);
	op_stkvar	(x,	1);
	create_insn	(0X7100033040);
	create_insn	(x=0X7100033048);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003304C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033060);
	op_stkvar	(x,	1);
	create_insn	(0X7100033070);
	create_insn	(x=0X7100033074);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033078);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003307C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033080);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003308C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033098);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003309C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000330B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000330B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000330B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000330BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000330C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000330C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000330C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000330CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000330D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033100);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033118);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033124);
	op_hex		(x,	1);
	create_insn	(x=0X7100033150);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033164);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033170);
	op_stkvar	(x,	1);
	create_insn	(0X710003317C);
	create_insn	(x=0X7100033180);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033190);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003319C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000331A0);
	op_hex		(x,	1);
	create_insn	(0X71000331B8);
	create_insn	(x=0X71000331C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000331C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000331CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000331D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000331DC);
	op_stkvar	(x,	1);
	create_insn	(0X71000331EC);
	create_insn	(x=0X71000331F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000331F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000331F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000331FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003320C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033210);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003321C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033224);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033234);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033238);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033240);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033248);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033250);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033254);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033258);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003325C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033260);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033264);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033288);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000332BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000332C8);
	op_hex		(x,	1);
	create_insn	(x=0X7100033308);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033314);
	op_stkvar	(x,	1);
	create_insn	(0X7100033320);
	create_insn	(x=0X710003332C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033330);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033334);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033338);
	op_stkvar	(x,	1);
	create_insn	(0X7100033344);
	create_insn	(x=0X7100033358);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033364);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033368);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033378);
	op_stkvar	(x,	1);
	create_insn	(0X7100033390);
	create_insn	(0X7100033398);
	create_insn	(x=0X710003339C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000333A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000333AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000333B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000333C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000333E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000333F0);
	op_hex		(x,	1);
	create_insn	(0X7100033400);
	create_insn	(x=0X7100033408);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003340C);
	op_stkvar	(x,	1);
	create_insn	(0X7100033418);
	create_insn	(x=0X7100033420);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033424);
	op_stkvar	(x,	1);
	create_insn	(0X7100033430);
	create_insn	(x=0X7100033444);
	op_hex		(x,	1);
	create_insn	(x=0X7100033460);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033494);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033498);
	op_stkvar	(x,	1);
	create_insn	(0X71000334A4);
	create_insn	(0X71000334AC);
	create_insn	(x=0X71000334B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000334B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000334B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000334BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000334C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000334D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000334D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000334EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000334F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000334F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000334F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033500);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033504);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033508);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003350C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033510);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033514);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033518);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033538);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003353C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033554);
	op_hex		(x,	1);
	create_insn	(x=0X7100033594);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000335A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000335A8);
	op_stkvar	(x,	1);
	create_insn	(0X71000335B4);
	create_insn	(x=0X71000335C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000335D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000335E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000335FC);
	op_stkvar	(x,	1);
	create_insn	(0X7100033608);
	create_insn	(x=0X7100033610);
	op_stkvar	(x,	1);
	set_cmt	(0X7100033618,	"result",	0);
	create_insn	(x=0X7100033618);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033624);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033628);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003362C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033630);
	op_stkvar	(x,	1);
	create_insn	(0X710003363C);
	create_insn	(x=0X7100033644);
	op_stkvar	(x,	1);
	create_insn	(0X7100033650);
	create_insn	(x=0X7100033658);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003365C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033660);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033698);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003369C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000336A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000336A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000336AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000336B0);
	op_stkvar	(x,	1);
	create_insn	(0X71000336B8);
	create_insn	(x=0X71000336BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000336C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000336C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003372C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033730);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033734);
	op_stkvar	(x,	1);
	create_insn	(0X7100033740);
	create_insn	(x=0X7100033744);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033748);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003374C);
	op_stkvar	(x,	1);
	create_insn	(0X7100033758);
	create_insn	(x=0X7100033760);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033768);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033774);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033778);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003377C);
	op_stkvar	(x,	1);
	create_insn	(0X7100033788);
	create_insn	(x=0X710003378C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033790);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033794);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000337A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000337A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000337A8);
	op_stkvar	(x,	1);
	create_insn	(0X710003380C);
	create_insn	(x=0X7100033814);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033818);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003381C);
	op_stkvar	(x,	1);
	create_insn	(0X7100033824);
	create_insn	(x=0X7100033844);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033848);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003384C);
	op_stkvar	(x,	1);
	create_insn	(0X7100033854);
	create_insn	(x=0X710003385C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033860);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033864);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003386C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033870);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033874);
	op_stkvar	(x,	1);
	create_insn	(0X7100033904);
	create_insn	(x=0X710003390C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033910);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033914);
	op_stkvar	(x,	1);
	create_insn	(0X710003391C);
	create_insn	(x=0X7100033924);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033928);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003392C);
	op_stkvar	(x,	1);
	create_insn	(0X7100033934);
	create_insn	(x=0X7100033944);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033948);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003394C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033954);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033958);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003395C);
	op_stkvar	(x,	1);
	create_insn	(0X71000339F0);
	create_insn	(x=0X71000339F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000339FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033A00);
	op_stkvar	(x,	1);
	create_insn	(0X7100033A08);
	create_insn	(x=0X7100033A10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033A14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033A18);
	op_stkvar	(x,	1);
	create_insn	(0X7100033A20);
	create_insn	(x=0X7100033A38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033A3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033A40);
	op_stkvar	(x,	1);
	create_insn	(0X7100033A48);
	create_insn	(x=0X7100033A4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033A5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033A60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033A68);
	op_stkvar	(x,	1);
	create_insn	(0X7100033A74);
	create_insn	(x=0X7100033A78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033A7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033A80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033A84);
	op_stkvar	(x,	1);
	create_insn	(0X7100033AF4);
	create_insn	(0X7100033AFC);
	create_insn	(x=0X7100033B04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033B08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033B10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033B14);
	op_stkvar	(x,	1);
	create_insn	(0X7100033B1C);
	create_insn	(x=0X7100033B34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033B38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033B3C);
	op_stkvar	(x,	1);
	create_insn	(0X7100033BDC);
	create_insn	(x=0X7100033BE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033BE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033BEC);
	op_stkvar	(x,	1);
	create_insn	(0X7100033BF4);
	create_insn	(x=0X7100033BFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033C00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033C04);
	op_stkvar	(x,	1);
	create_insn	(0X7100033C0C);
	create_insn	(x=0X7100033C1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033C20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033C24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033C2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033C30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033C34);
	op_stkvar	(x,	1);
	create_insn	(0X7100033CC8);
	create_insn	(x=0X7100033CD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033CD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033CD8);
	op_stkvar	(x,	1);
	create_insn	(0X7100033CE0);
	create_insn	(x=0X7100033CE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033CEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033CF0);
	op_stkvar	(x,	1);
	create_insn	(0X7100033CF8);
	create_insn	(x=0X7100033D08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033D0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033D10);
	op_stkvar	(x,	1);
	create_insn	(0X7100033D18);
	create_insn	(x=0X7100033D1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033D20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033D24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033D28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033D6C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100033D78);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100033DBC,	"clearMode",	0);
	set_cmt	(0X7100033DC8,	"event",	0);
	set_cmt	(0X7100033DCC,	"type",	0);
	create_insn	(x=0X7100033DE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033E14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033E18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033E1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033E20);
	op_stkvar	(x,	1);
	create_insn	(0X7100033E2C);
	create_insn	(x=0X7100033E30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033E34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033E38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033E3C);
	op_stkvar	(x,	1);
	create_insn	(0X7100033E48);
	create_insn	(x=0X7100033E4C);
	op_stkvar	(x,	1);
	create_insn	(0X7100033E54);
	create_insn	(x=0X7100033E5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033E60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033E7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033E80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033E88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033E8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033E94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033E98);
	op_stkvar	(x,	1);
	set_cmt	(0X7100033EB0,	"result",	0);
	create_insn	(x=0X7100033EC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033ED0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033ED8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033EDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033EE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033EE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033F68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033F6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033F70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033F74);
	op_stkvar	(x,	1);
	create_insn	(0X7100033F7C);
	create_insn	(0X7100033F80);
	set_name	(0X7100033F80,	"nullsub_44");
	make_array	(0X7100033F84,	0XC);
	create_insn	(x=0X7100033F90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033F94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033F98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100033FA0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100033FA8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100033FBC);
	op_plain_offset	(x,	1,	0X71001CA1E0);
	op_plain_offset	(x,	129,	0X71001CA1E0);
	create_insn	(x=0X7100033FE0);
	op_plain_offset	(x,	1,	0X71001CA1E0);
	op_plain_offset	(x,	129,	0X71001CA1E0);
	create_insn	(x=0X7100033FF0);
	op_plain_offset	(x,	1,	0X71001CA1E0);
	op_plain_offset	(x,	129,	0X71001CA1E0);
	create_insn	(x=0X7100033FF4);
	op_hex		(x,	1);
	create_insn	(x=0X7100033FF8);
	op_plain_offset	(x,	1,	0X71001CA1E0);
	op_plain_offset	(x,	129,	0X71001CA1E0);
	create_insn	(x=0X7100034008);
	op_plain_offset	(x,	1,	0X71001CA1E0);
	op_plain_offset	(x,	129,	0X71001CA1E0);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_5(void) {
        auto x;
#define id x

	create_insn	(x=0X7100034010);
	op_plain_offset	(x,	1,	0X71001CA1E0);
	op_plain_offset	(x,	129,	0X71001CA1E0);
	create_insn	(x=0X7100034018);
	op_hex		(x,	1);
	create_insn	(x=0X710003401C);
	op_plain_offset	(x,	1,	0X71001CA1E0);
	op_plain_offset	(x,	129,	0X71001CA1E0);
	create_insn	(x=0X7100034020);
	op_plain_offset	(x,	1,	0X71001CA1E0);
	op_plain_offset	(x,	129,	0X71001CA1E0);
	create_insn	(x=0X7100034028);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100034040);
	op_plain_offset	(x,	1,	0X71001CA1E0);
	op_plain_offset	(x,	129,	0X71001CA1E0);
	create_insn	(x=0X710003404C);
	op_plain_offset	(x,	1,	0X71001CA1E0);
	op_plain_offset	(x,	129,	0X71001CA1E0);
	create_insn	(x=0X7100034054);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034058);
	op_plain_offset	(x,	1,	0X71001CA1E0);
	op_plain_offset	(x,	129,	0X71001CA1E0);
	create_insn	(x=0X7100034060);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100034064);
	op_plain_offset	(x,	1,	0X71001CA1E0);
	op_plain_offset	(x,	129,	0X71001CA1E0);
	create_insn	(x=0X7100034070);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100034184);
	op_plain_offset	(x,	1,	0X71001CA1E0);
	op_plain_offset	(x,	129,	0X71001CA1E0);
	create_insn	(x=0X7100034188);
	op_plain_offset	(x,	1,	0X71001CA1E0);
	op_plain_offset	(x,	129,	0X71001CA1E0);
	create_insn	(x=0X710003418C);
	op_plain_offset	(x,	1,	0X71001CA1E0);
	op_plain_offset	(x,	129,	0X71001CA1E0);
	create_insn	(x=0X7100034190);
	op_plain_offset	(x,	1,	0X71001CA1E0);
	op_plain_offset	(x,	129,	0X71001CA1E0);
	create_insn	(x=0X7100034194);
	op_plain_offset	(x,	1,	0X71001CA1E0);
	op_plain_offset	(x,	129,	0X71001CA1E0);
	create_insn	(x=0X7100034198);
	op_plain_offset	(x,	1,	0X71001CA1E0);
	op_plain_offset	(x,	129,	0X71001CA1E0);
	create_insn	(x=0X710003419C);
	op_plain_offset	(x,	1,	0X71001CA1E0);
	op_plain_offset	(x,	129,	0X71001CA1E0);
	create_insn	(x=0X71000341A0);
	op_plain_offset	(x,	1,	0X71001CA1E0);
	op_plain_offset	(x,	129,	0X71001CA1E0);
	create_insn	(x=0X71000341A4);
	op_plain_offset	(x,	1,	0X71001CA1E0);
	op_plain_offset	(x,	129,	0X71001CA1E0);
	create_insn	(x=0X71000341A8);
	op_plain_offset	(x,	1,	0X71001CA1E0);
	op_plain_offset	(x,	129,	0X71001CA1E0);
	create_insn	(x=0X71000341AC);
	op_plain_offset	(x,	1,	0X71001CA1E0);
	op_plain_offset	(x,	129,	0X71001CA1E0);
	create_insn	(x=0X71000341B0);
	op_plain_offset	(x,	1,	0X71001CA1E0);
	op_plain_offset	(x,	129,	0X71001CA1E0);
	create_insn	(x=0X71000341B4);
	op_plain_offset	(x,	1,	0X71001CA1E0);
	op_plain_offset	(x,	129,	0X71001CA1E0);
	create_insn	(x=0X71000341B8);
	op_plain_offset	(x,	1,	0X71001CA1E0);
	op_plain_offset	(x,	129,	0X71001CA1E0);
	create_insn	(x=0X71000341BC);
	op_plain_offset	(x,	1,	0X71001CA1E0);
	op_plain_offset	(x,	129,	0X71001CA1E0);
	create_insn	(x=0X71000341C0);
	op_plain_offset	(x,	1,	0X71001CA1E0);
	op_plain_offset	(x,	129,	0X71001CA1E0);
	create_insn	(x=0X71000341C4);
	op_plain_offset	(x,	1,	0X71001CA1E0);
	op_plain_offset	(x,	129,	0X71001CA1E0);
	create_insn	(x=0X71000341C8);
	op_plain_offset	(x,	1,	0X71001CA1E0);
	op_plain_offset	(x,	129,	0X71001CA1E0);
	create_insn	(x=0X71000341CC);
	op_plain_offset	(x,	1,	0X71001CA1E0);
	op_plain_offset	(x,	129,	0X71001CA1E0);
	create_insn	(x=0X71000341D0);
	op_plain_offset	(x,	1,	0X71001CA1E0);
	op_plain_offset	(x,	129,	0X71001CA1E0);
	create_insn	(x=0X71000341D4);
	op_plain_offset	(x,	1,	0X71001CA1E0);
	op_plain_offset	(x,	129,	0X71001CA1E0);
	create_insn	(x=0X71000341D8);
	op_plain_offset	(x,	1,	0X71001CA1E0);
	op_plain_offset	(x,	129,	0X71001CA1E0);
	create_insn	(x=0X71000341DC);
	op_plain_offset	(x,	1,	0X71001CA1E0);
	op_plain_offset	(x,	129,	0X71001CA1E0);
	create_insn	(x=0X71000341E0);
	op_plain_offset	(x,	1,	0X71001CA1E0);
	op_plain_offset	(x,	129,	0X71001CA1E0);
	create_insn	(x=0X71000341F4);
	op_plain_offset	(x,	1,	0X71001CA1E0);
	op_plain_offset	(x,	129,	0X71001CA1E0);
	create_insn	(x=0X71000341F8);
	op_plain_offset	(x,	1,	0X71001CA1E0);
	op_plain_offset	(x,	129,	0X71001CA1E0);
	create_insn	(x=0X71000341FC);
	op_plain_offset	(x,	1,	0X71001CA1E0);
	op_plain_offset	(x,	129,	0X71001CA1E0);
	create_insn	(x=0X7100034200);
	op_plain_offset	(x,	1,	0X71001CA1E0);
	op_plain_offset	(x,	129,	0X71001CA1E0);
	create_insn	(x=0X7100034204);
	op_plain_offset	(x,	1,	0X71001CA1E0);
	op_plain_offset	(x,	129,	0X71001CA1E0);
	create_insn	(x=0X7100034208);
	op_plain_offset	(x,	1,	0X71001CA1E0);
	op_plain_offset	(x,	129,	0X71001CA1E0);
	create_insn	(x=0X710003420C);
	op_plain_offset	(x,	1,	0X71001CA1E0);
	op_plain_offset	(x,	129,	0X71001CA1E0);
	create_insn	(x=0X7100034214);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003421C);
	op_stkvar	(x,	1);
	make_array	(0X7100034224,	0XC);
	create_insn	(0X7100034230);
	set_name	(0X7100034230,	"nullsub_45");
	make_array	(0X7100034234,	0XC);
	create_insn	(0X7100034240);
	set_name	(0X7100034240,	"nullsub_46");
	make_array	(0X7100034244,	0XC);
	create_insn	(0X7100034250);
	set_name	(0X7100034250,	"nullsub_47");
	make_array	(0X7100034254,	0XC);
	create_insn	(0X7100034260);
	set_name	(0X7100034260,	"nullsub_48");
	make_array	(0X7100034264,	0XC);
	create_insn	(0X7100034270);
	make_array	(0X710003427C,	0X4);
	create_insn	(0X7100034280);
	make_array	(0X7100034298,	0X8);
	create_insn	(0X71000342A0);
	create_insn	(x=0X71000342A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X71000342AC,	0X4);
	create_insn	(0X71000342B0);
	create_insn	(x=0X71000342B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000342C8);
	op_plain_offset	(x,	1,	0X71000ADC98);
	op_plain_offset	(x,	129,	0X71000ADC98);
	create_insn	(x=0X71000342D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000342E0);
	op_plain_offset	(x,	1,	0X71000ADC99);
	op_plain_offset	(x,	129,	0X71000ADC99);
	create_insn	(x=0X71000342EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000342F8);
	op_plain_offset	(x,	1,	0X71000ADC9A);
	op_plain_offset	(x,	129,	0X71000ADC9A);
	create_insn	(x=0X7100034304);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100034310);
	op_plain_offset	(x,	1,	0X71000ADC9B);
	op_plain_offset	(x,	129,	0X71000ADC9B);
	create_insn	(x=0X710003431C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100034328);
	op_plain_offset	(x,	1,	0X71000ADC9C);
	op_plain_offset	(x,	129,	0X71000ADC9C);
	create_insn	(x=0X7100034334);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100034340);
	op_plain_offset	(x,	1,	0X71000ADC9D);
	op_plain_offset	(x,	129,	0X71000ADC9D);
	create_insn	(x=0X710003434C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100034358);
	op_plain_offset	(x,	1,	0X71000ADC9E);
	op_plain_offset	(x,	129,	0X71000ADC9E);
	create_insn	(x=0X7100034364);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100034370);
	op_plain_offset	(x,	1,	0X71000ADC9F);
	op_plain_offset	(x,	129,	0X71000ADC9F);
	create_insn	(x=0X710003437C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100034388);
	op_plain_offset	(x,	1,	0X71000ADCA0);
	op_plain_offset	(x,	129,	0X71000ADCA0);
	create_insn	(x=0X7100034394);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000343A0);
	op_plain_offset	(x,	1,	0X71000ADCA1);
	op_plain_offset	(x,	129,	0X71000ADCA1);
	create_insn	(x=0X71000343AC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000343B8);
	op_plain_offset	(x,	1,	0X71000ADCA2);
	op_plain_offset	(x,	129,	0X71000ADCA2);
	create_insn	(x=0X71000343C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000343D0);
	op_plain_offset	(x,	1,	0X71000ADCA3);
	op_plain_offset	(x,	129,	0X71000ADCA3);
	create_insn	(x=0X71000343DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000343E8);
	op_plain_offset	(x,	1,	0X71000ADCA4);
	op_plain_offset	(x,	129,	0X71000ADCA4);
	create_insn	(x=0X71000343F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100034400);
	op_plain_offset	(x,	1,	0X71000ADCA5);
	op_plain_offset	(x,	129,	0X71000ADCA5);
	create_insn	(x=0X7100034408);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100034414);
	op_plain_offset	(x,	1,	0X71000ADCA6);
	op_plain_offset	(x,	129,	0X71000ADCA6);
	create_insn	(0X710003441C);
	create_insn	(0X7100034424);
	create_insn	(x=0X710003443C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034440);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034448);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100034450);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003446C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034470);
	op_stkvar	(x,	1);
	create_insn	(0X7100034478);
	create_insn	(x=0X710003447C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_dword	(0X710003448C);
	create_insn	(x=0X7100034490);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034494);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034498);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000344C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000344C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000344CC);
	op_stkvar	(x,	1);
	create_insn	(0X71000344D4);
	create_insn	(x=0X71000344EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000344F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000344F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000344FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034500);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034504);
	op_stkvar	(x,	1);
	set_cmt	(0X7100034514,	"__int64",	0);
	set_cmt	(0X7100034518,	"int",	0);
	set_cmt	(0X710003451C,	"_BYTE *",	0);
	create_insn	(x=0X7100034528);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003452C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034530);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034538);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034558);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034574);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034580);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034594);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034598);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003459C);
	op_stkvar	(x,	1);
	create_insn	(0X71000345A4);
	create_insn	(x=0X71000345AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000345B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000345B4);
	op_stkvar	(x,	1);
	create_insn	(0X71000345BC);
	set_name	(0X71000345BC,	"nullsub_49");
	create_insn	(0X71000345C0);
	create_insn	(0X71000345C8);
	create_insn	(0X71000345D4);
	create_insn	(x=0X71000345E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000345EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000345F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034620);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034630);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034634);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003463C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034640);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034644);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034688);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003468C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034690);
	op_stkvar	(x,	1);
	make_array	(0X7100034698,	0X8);
	create_insn	(x=0X71000346A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000346A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000346A8);
	op_stkvar	(x,	1);
	set_cmt	(0X71000346D0,	"a1",	0);
	create_insn	(x=0X71000346E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000346EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000346F0);
	op_stkvar	(x,	1);
	make_array	(0X71000346F8,	0X8);
	create_insn	(x=0X7100034700);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034704);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034708);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034748);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003474C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034750);
	op_stkvar	(x,	1);
	create_insn	(0X7100034758);
	set_name	(0X7100034758,	"j__ZN2nn2os13FinalizeMutexEPNS0_9MutexTypeE");
	create_insn	(0X710003475C);
	create_insn	(0X7100034768);
	create_insn	(0X710003476C);
	set_name	(0X710003476C,	"nullsub_50");
	create_insn	(0X7100034770);
	create_insn	(0X7100034784);
	make_array	(0X7100034788,	0X8);
	create_insn	(x=0X7100034790);
	op_stkvar	(x,	1);
	set_name	(0X7100034790,	"GetService_bgtc_");
	create_insn	(x=0X7100034794);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034798);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000347A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000347CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000347D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000347D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000347E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000347E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000347EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000347F0);
	op_stkvar	(x,	1);
	make_array	(0X71000347F8,	0X8);
	create_insn	(x=0X7100034800);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X710003480C,	0X4);
	create_insn	(x=0X7100034810);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034814);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034818);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034820);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003483C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100034844);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100034848);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100034858);
	op_plain_offset	(x,	1,	0X71001F4000);
	op_plain_offset	(x,	129,	0X71001F4000);
	create_insn	(x=0X710003485C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100034864);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100034878);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003487C);
	op_plain_offset	(x,	1,	0X71001F4000);
	op_plain_offset	(x,	129,	0X71001F4000);
	create_insn	(x=0X7100034880);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100034898);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000348A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000348A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000348AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000348B0);
	op_stkvar	(x,	1);
	create_insn	(0X71000348B8);
	set_name	(0X71000348B8,	"j_getService_bgtc");
	create_insn	(0X71000348BC);
	create_insn	(0X71000348C0);
	create_insn	(0X71000348C4);
	create_insn	(0X71000348C8);
	create_insn	(0X71000348CC);
	create_insn	(0X71000348D0);
	create_insn	(x=0X71000348F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000348FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034904);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003490C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000349BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000349C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000349C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000349CC);
	op_stkvar	(x,	1);
	create_insn	(0X71000349D4);
	set_name	(0X71000349D4,	"GetService_bgtc");
	create_insn	(x=0X71000349D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000349DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000349E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000349E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000349FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100034A00);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100034A0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034A10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034A14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034A20);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100034A24);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100034A44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034A58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034A78);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100034AD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034AE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034AE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034AEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034AF8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100034B0C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100034B14);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100034B24);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100034B2C);
	op_plain_offset	(x,	1,	0X71001F40E0);
	op_plain_offset	(x,	129,	0X71001F40E0);
	create_insn	(0X7100034B3C);
	create_insn	(0X7100034B44);
	create_insn	(0X7100034B48);
	create_insn	(0X7100034B58);
	create_insn	(x=0X7100034B5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034B74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034B7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034B88);
	op_stkvar	(x,	1);
	create_insn	(0X7100034B90);
	create_insn	(x=0X7100034B94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034BA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034BB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034BB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034BBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034BC8);
	op_stkvar	(x,	1);
	create_insn	(0X7100034BD0);
	create_insn	(x=0X7100034BD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034BEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034BF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034C00);
	op_stkvar	(x,	1);
	create_insn	(0X7100034C08);
	create_insn	(0X7100034C18);
	create_insn	(x=0X7100034C1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034C20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034C48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034C4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034C50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034C6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034C78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034C90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034C94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034CA0);
	op_stkvar	(x,	1);
	set_cmt	(0X7100034CAC,	"result",	0);
	create_insn	(x=0X7100034CAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034CB8);
	op_stkvar	(x,	1);
	create_insn	(0X7100034CC0);
	create_insn	(0X7100034CC4);
	create_insn	(x=0X7100034CC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034CCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034CD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034CE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034CE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034D08);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100034D28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034D2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034D30);
	op_stkvar	(x,	1);
	create_insn	(0X7100034D3C);
	create_insn	(x=0X7100034D40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034D44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034D54);
	op_stkvar	(x,	1);
	create_insn	(0X7100034D6C);
	create_insn	(x=0X7100034D70);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100034D78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034D7C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7100034D8C);
	create_insn	(x=0X7100034D90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034D94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034D98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034D9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034DA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034DA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034DF0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100034DF8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100034F54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034F5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034F64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034F7C);
	op_stkvar	(x,	1);
	create_insn	(0X7100034F88);
	create_insn	(x=0X7100034FAC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100034FD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100034FFC);
	op_stkvar	(x,	1);
	set_cmt	(0X7100035038,	"result",	0);
	set_cmt	(0X7100035048,	"result",	0);
	create_insn	(x=0X7100035084);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035088);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003508C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035090);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035094);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035098);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000350A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000350A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000350CC);
	op_stkvar	(x,	1);
	create_insn	(0X71000350D8);
	create_insn	(0X71000350E0);
	create_insn	(x=0X71000350E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000350E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000350EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000350F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035100);
	op_hex		(x,	1);
	create_insn	(x=0X7100035104);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035128);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035140);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100035148);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000351D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000351D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000351D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000351DC);
	op_stkvar	(x,	1);
	create_insn	(0X71000351E8);
	create_insn	(x=0X71000351F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000351F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035224);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035234);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003523C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035240);
	op_stkvar	(x,	1);
	create_insn	(0X7100035248);
	create_insn	(0X7100035250);
	create_insn	(x=0X7100035254);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035258);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003526C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035270);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035274);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003527C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035284);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035298);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003529C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000352A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000352AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000352C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000352C8);
	op_stkvar	(x,	1);
	create_insn	(0X71000352D4);
	create_insn	(x=0X71000352D8);
	op_stkvar	(x,	1);
	create_insn	(0X71000352E4);
	create_insn	(0X71000352EC);
	create_insn	(x=0X71000352F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000352F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000352FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035348);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100035378);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003537C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035384);
	op_stkvar	(x,	1);
	create_insn	(0X710003538C);
	create_insn	(x=0X7100035390);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035394);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035398);
	op_stkvar	(x,	1);
	create_insn	(0X71000353A0);
	create_insn	(x=0X71000353A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000353AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000353DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000353EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000353F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000353F8);
	op_stkvar	(x,	1);
	create_insn	(0X7100035400);
	create_insn	(0X7100035408);
	create_insn	(0X7100035414);
	create_insn	(0X7100035420);
	create_insn	(0X710003542C);
	create_insn	(0X7100035438);
	create_insn	(0X710003544C);
	create_insn	(0X7100035458);
	create_insn	(0X7100035468);
	create_insn	(0X7100035474);
	create_insn	(0X7100035480);
	create_insn	(0X710003548C);
	create_insn	(0X71000354A0);
	create_insn	(0X71000354B0);
	create_insn	(0X71000354BC);
	create_insn	(0X71000354C8);
	create_insn	(0X71000354D4);
	create_insn	(x=0X71000354D8);
	op_hex		(x,	1);
	create_insn	(0X71000354E4);
	create_insn	(0X71000354EC);
	create_insn	(0X71000354F4);
	create_insn	(x=0X71000354F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000354FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035500);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035504);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035508);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035544);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035550);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035554);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003555C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035564);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003556C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035570);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035578);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035580);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035584);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003558C);
	op_hex		(x,	1);
	create_insn	(x=0X7100035590);
	op_hex		(x,	1);
	create_insn	(x=0X7100035598);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000355A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000355B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000355BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000355C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000355C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000355C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000355D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000355F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035604);
	op_hex		(x,	1);
	create_insn	(0X7100035650);
	create_insn	(x=0X710003565C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035668);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035674);
	op_hex		(x,	1);
	create_insn	(0X7100035698);
	create_insn	(x=0X71000356B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000356BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000356C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000356C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000356C8);
	op_stkvar	(x,	1);
	create_insn	(0X71000356D4);
	create_insn	(x=0X71000356D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000356DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000356E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000356E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000356E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003573C);
	op_hex		(x,	1);
	create_insn	(x=0X7100035780);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003578C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035798);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000357A4);
	op_hex		(x,	1);
	create_insn	(0X71000357C8);
	create_insn	(x=0X71000357E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000357EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000357F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000357F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000357F8);
	op_stkvar	(x,	1);
	create_insn	(0X7100035804);
	create_insn	(x=0X710003580C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035810);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035814);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003581C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100035824);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100035854,	"result",	0);
	set_cmt	(0X7100035864,	"result",	0);
	create_insn	(x=0X710003588C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035890);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035894);
	op_stkvar	(x,	1);
	create_insn	(0X710003589C);
	create_insn	(x=0X71000358B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000358B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000358B8);
	op_stkvar	(x,	1);
	create_insn	(0X71000358C0);
	set_name	(0X71000358C0,	"nullsub_51");
	create_insn	(0X71000358C4);
	set_name	(0X71000358C4,	"nullsub_52");
	create_insn	(x=0X71000358C8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000358D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000358DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X71000358EC,	0X4);
	create_insn	(0X71000358F0);
	create_insn	(x=0X71000358F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035900);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035908);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003590C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100035914);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003591C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100035920);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035924);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100035930);
	op_stkvar	(x,	1);
	create_insn	(0X7100035938);
	create_insn	(x=0X7100035940);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035944);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003594C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100035974);
	op_plain_offset	(x,	1,	0X710021B008);
	op_plain_offset	(x,	129,	0X710021B008);
	create_insn	(x=0X7100035984);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035988);
	op_stkvar	(x,	1);
	create_insn	(0X7100035990);
	set_name	(0X7100035990,	"j_delete_3");
	create_insn	(x=0X7100035994);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100035998);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000359A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000359A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000359A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000359B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000359C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000359D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000359D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000359DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000359EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000359FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100035A04);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100035A18);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100035A24);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100035A2C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100035A34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035A38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035A3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035A44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035A48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035A4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035A50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035A68);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100035A70);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100035A98);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100035B00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035B08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035B0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035B10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035B18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035B1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035B24);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100035B2C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100035B68,	"result",	0);
	create_insn	(x=0X7100035B7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035B80);
	op_stkvar	(x,	1);
	create_insn	(0X7100035B88);
	create_insn	(x=0X7100035B90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035B94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035BA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035BAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035BB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035BB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035BD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035BD4);
	op_stkvar	(x,	1);
	create_insn	(0X7100035BDC);
	create_insn	(x=0X7100035BE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035BE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035BE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035BF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035C0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035C24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035C28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035C2C);
	op_stkvar	(x,	1);
	create_insn	(0X7100035C38);
	create_insn	(x=0X7100035C3C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100035C58);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100035C7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035C80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035C84);
	op_stkvar	(x,	1);
	set_cmt	(0X7100035C90,	"a2",	0);
	create_insn	(0X7100035C90);
	set_cmt	(0X7100035C94,	"result",	0);
	create_insn	(x=0X7100035CB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035CB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035CBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035CC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035CCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035D0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035D10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035D18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035D1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035D60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035D64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035D6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035D70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035D74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035D78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035D80);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100035D88);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100035DC8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100035DD0,	"__int64",	0);
	create_insn	(x=0X7100035DD0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100035DD4,	"__int64",	0);
	create_insn	(0X7100035E4C);
	create_insn	(0X7100035E58);
	create_insn	(x=0X7100035EA0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100035EA8,	"__int64",	0);
	create_insn	(x=0X7100035EA8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100035EB0,	"__int64",	0);
	create_insn	(0X7100035F04);
	create_insn	(0X7100035F18);
	create_insn	(x=0X7100035F34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035F38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035F3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035F40);
	op_stkvar	(x,	1);
	create_insn	(0X7100035F48);
	create_insn	(x=0X7100035F4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035F50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035F54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035F58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035F5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035F60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035F7C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100035FE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035FEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035FF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035FF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035FF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100035FFC);
	op_stkvar	(x,	1);
	create_insn	(0X7100036008);
	create_insn	(x=0X7100036014);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003601C);
	op_stkvar	(x,	1);
	create_insn	(0X7100036044);
	create_insn	(x=0X71000360A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000360A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000360AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000360B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000360B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000360B8);
	op_stkvar	(x,	1);
	create_insn	(0X71000360C4);
	create_insn	(0X7100036110);
	create_insn	(x=0X7100036114);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036118);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036120);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036124);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036128);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003612C);
	op_stkvar	(x,	1);
	create_insn	(0X7100036138);
	create_insn	(x=0X710003614C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100036158,	"__int64",	0);
	create_insn	(x=0X7100036158);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100036160,	"__int64",	0);
	create_insn	(x=0X7100036188);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003618C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000361B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000361C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000361CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000361D4);
	op_stkvar	(x,	1);
	create_insn	(0X71000361F4);
	create_insn	(0X7100036208);
	create_insn	(x=0X710003620C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036214);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036258);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036260);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036264);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003626C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036270);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036278);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003627C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036280);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036284);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003628C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036290);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036298);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003629C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000362A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000362AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000362B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000362C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000362C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000362CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000362F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000362FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036300);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036304);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036308);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003630C);
	op_stkvar	(x,	1);
	make_array	(0X7100036318,	0X8);
	create_insn	(0X7100036320);
	create_insn	(x=0X7100036324);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036328);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003632C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036330);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036334);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036338);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036394);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000363A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000363A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000363C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000363D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000363E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X71000363E8,	"jumptable 00000071000364EC case 4",	1);
	create_insn	(0X71000363E8);
	create_insn	(x=0X7100036400);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036414);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003641C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036420);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100036424);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036428);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003642C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036434);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036440);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036444);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003644C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036458);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003645C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036464);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036468);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003646C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036470);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036474);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036484);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036490);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036498);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000364A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000364A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000364B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000364BC);
	op_stkvar	(x,	1);
	set_cmt	(0X71000364D4,	"switch 5 cases",	0);
	create_insn	(x=0X71000364DC);
	op_hex		(x,	1);
	create_insn	(x=0X71000364E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X71000364EC,	"switch jump",	0);
	set_cmt	(0X71000364F0,	"jumptable 00000071000364EC case 0",	1);
	create_insn	(0X71000364F0);
	set_cmt	(0X7100036504,	"jumptable 00000071000364EC case 1",	1);
	create_insn	(0X7100036504);
	create_insn	(x=0X710003650C);
	op_stkvar	(x,	1);
	set_cmt	(0X710003651C,	"jumptable 00000071000364EC case 2",	1);
	create_insn	(0X710003651C);
	create_insn	(x=0X710003653C);
	op_stkvar	(x,	1);
	set_cmt	(0X7100036548,	"jumptable 00000071000364EC case 3",	1);
	create_insn	(0X7100036548);
	create_insn	(x=0X710003656C);
	op_stkvar	(x,	1);
	create_insn	(0X710003657C);
	create_insn	(x=0X7100036590);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036594);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036598);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003659C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000365A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000365A4);
	op_stkvar	(x,	1);
	set_cmt	(0X71000365B0,	"jumptable 00000071000364EC default case",	1);
	create_insn	(0X71000365B0);
	set_name	(0X71000365B0,	"def_71000364EC");
	create_insn	(0X71000365B4);
	create_insn	(x=0X71000365BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000365C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000365E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000365EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000365F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000365F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036620);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036624);
	op_stkvar	(x,	1);
	create_insn	(0X710003662C);
	create_insn	(0X7100036638);
	create_insn	(0X7100036644);
	create_insn	(0X7100036670);
	create_insn	(0X7100036680);
	create_insn	(0X7100036688);
	create_insn	(0X71000366A8);
	create_insn	(0X71000366B8);
	create_insn	(0X71000366C4);
	create_insn	(0X71000366D4);
	create_insn	(x=0X71000366D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000366E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000366F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000366F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000366FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036708);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003670C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036710);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036714);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036718);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003671C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036720);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036724);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036728);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003672C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036730);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036738);
	op_stkvar	(x,	1);
	create_insn	(0X7100036744);
	set_cmt	(0X7100036748,	"__int64",	0);
	create_insn	(x=0X7100036748);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7100036750);
	make_array	(0X710003675C,	0X4);
	create_insn	(0X7100036760);
	create_insn	(x=0X7100036764);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036768);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003676C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036770);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036774);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036778);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000367B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000367BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000367C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000367D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000367DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000367E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036808);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036814);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036820);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036830);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036860);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036864);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036868);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003686C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036870);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036874);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036880);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036884);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036888);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000368D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000368DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100036900);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036914);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036918);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003691C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036924);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036928);
	op_stkvar	(x,	1);
	set_cmt	(0X7100036934,	"result",	0);
	set_cmt	(0X710003693C,	"result",	0);
	create_insn	(x=0X7100036958);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003695C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036964);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036968);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003696C);
	op_stkvar	(x,	1);
	set_cmt	(0X71000369B4,	"jumptable 00000071000369E8 default case, case 1",	1);
	set_name	(0X71000369B4,	"def_71000369E8");
	create_insn	(x=0X71000369B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000369BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000369C0);
	op_stkvar	(x,	1);
	set_cmt	(0X71000369C8,	"switch 7 cases",	0);
	create_insn	(0X71000369C8);
	create_insn	(x=0X71000369D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000369DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X71000369E8,	"switch jump",	0);
	set_cmt	(0X71000369EC,	"jumptable 00000071000369E8 case 3",	1);
	create_insn	(0X71000369EC);
	create_insn	(x=0X71000369F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100036A04,	"jumptable 00000071000369E8 case 0",	1);
	create_insn	(x=0X7100036A14);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100036A1C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100036A2C,	"__int64",	0);
	create_insn	(x=0X7100036A2C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100036A44,	"__int64",	0);
	create_insn	(0X7100036A64);
	set_cmt	(0X7100036A7C,	"jumptable 00000071000369E8 cases 2,5",	1);
	create_insn	(x=0X7100036A80);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100036AA0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100036AA8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100036AB8,	"__int64",	0);
	create_insn	(x=0X7100036AB8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100036AD0,	"__int64",	0);
	create_insn	(0X7100036AF0);
	create_insn	(0X7100036B00);
	create_insn	(x=0X7100036B04);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100036B34,	"__int64",	0);
	create_insn	(x=0X7100036B34);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100036B38,	"__int64",	0);
	create_insn	(x=0X7100036B68);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100036B70);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100036B80,	"__int64",	0);
	create_insn	(x=0X7100036B80);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100036B98,	"__int64",	0);
	create_insn	(x=0X7100036BC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036BC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036BCC);
	op_stkvar	(x,	1);
	set_cmt	(0X7100036BD4,	"jumptable 00000071000369E8 case 4",	1);
	create_insn	(0X7100036BD4);
	create_insn	(x=0X7100036C00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036C04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036C08);
	op_stkvar	(x,	1);
	set_cmt	(0X7100036C10,	"jumptable 00000071000369E8 case 6",	1);
	create_insn	(0X7100036C10);
	create_insn	(x=0X7100036C2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036C30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036C34);
	op_stkvar	(x,	1);
	create_insn	(0X7100036C3C);
	create_insn	(0X7100036C40);
	create_insn	(0X7100036C48);
	create_insn	(0X7100036C50);
	create_insn	(x=0X7100036C58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036C5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036C78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036C80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036C88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036C8C);
	op_stkvar	(x,	1);
	create_insn	(0X7100036C94);
	create_insn	(0X7100036C9C);
	create_insn	(0X7100036CA4);
	create_insn	(x=0X7100036CAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036CB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036CB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036CEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036CF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036CF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036D00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036D04);
	op_stkvar	(x,	1);
	set_cmt	(0X7100036D18,	"result",	0);
	create_insn	(x=0X7100036D1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036D20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036D28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036D2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036D30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036D60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036D70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036D74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036D7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036D80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036D84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036DC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036DCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036DD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036DD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036DDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036DE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036DE4);
	op_stkvar	(x,	1);
	set_cmt	(0X7100036E04,	"a1",	0);
	create_insn	(x=0X7100036E40);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100036E60,	"__int64",	0);
	create_insn	(x=0X7100036E60);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100036E84,	"__int64",	0);
	create_insn	(x=0X7100036EA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036EAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036EB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100036EB4);
	op_stkvar	(x,	1);
	create_insn	(0X7100036EBC);
	create_insn	(x=0X7100036EDC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7100036EE4);
	create_insn	(x=0X7100036F64);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7100036F6C);
	create_insn	(x=0X7100036F70);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7100036F78);
	create_insn	(x=0X7100036F7C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7100036F84);
	create_insn	(x=0X7100036F88);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7100036F90);
	create_insn	(x=0X7100036F94);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7100036F9C);
	create_insn	(x=0X7100037000);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7100037008);
	create_insn	(x=0X710003700C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7100037014);
	create_insn	(x=0X7100037018);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7100037020);
	create_insn	(x=0X7100037058);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7100037060);
	create_insn	(x=0X7100037064);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X710003706C);
	create_insn	(x=0X7100037118);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7100037120);
	create_insn	(x=0X7100037124);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X710003712C);
	create_insn	(x=0X7100037130);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7100037138);
	create_insn	(x=0X710003713C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7100037144);
	create_insn	(x=0X7100037148);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7100037150);
	create_insn	(x=0X7100037154);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X710003715C);
	create_insn	(x=0X7100037170);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003717C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100037190);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037194);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037198);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003719C);
	op_stkvar	(x,	1);
	set_cmt	(0X71000371BC,	"a1",	0);
	create_insn	(x=0X71000371F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100037218,	"__int64",	0);
	create_insn	(x=0X7100037218);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X710003723C,	"__int64",	0);
	create_insn	(x=0X7100037260);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037264);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037268);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003726C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037274);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037278);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003727C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037280);
	op_stkvar	(x,	1);
	set_cmt	(0X71000372A4,	"a1",	0);
	create_insn	(x=0X71000372E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100037300,	"__int64",	0);
	create_insn	(x=0X7100037300);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100037324,	"__int64",	0);
	create_insn	(x=0X710003734C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037350);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037354);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037358);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037360);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037364);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037368);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003736C);
	op_stkvar	(x,	1);
	set_cmt	(0X7100037388,	"a1",	0);
	create_insn	(x=0X71000373C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X71000373CC,	"__int64",	0);
	create_insn	(x=0X71000373CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X71000373E4,	"__int64",	0);
	create_insn	(x=0X7100037408);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003740C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037410);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037414);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003741C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037420);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037424);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037460);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100037468);
	op_hex		(x,	1);
	set_cmt	(0X7100037474,	"__int64",	0);
	create_insn	(x=0X7100037474);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X71000374A0,	"__int64",	0);
	create_insn	(x=0X71000374B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000374B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000374B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000374C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000374C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000374D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000374E4);
	op_stkvar	(x,	1);
	create_insn	(0X71000374EC);
	create_insn	(x=0X71000374FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037500);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037504);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003754C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037550);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037554);
	op_stkvar	(x,	1);
	make_array	(0X710003755C,	0X4);
	create_insn	(x=0X7100037560);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037564);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037568);
	op_stkvar	(x,	1);
	create_insn	(0X710003759C);
	create_insn	(0X71000375E4);
	create_insn	(0X7100037604);
	create_insn	(0X7100037610);
	create_insn	(0X7100037620);
	create_insn	(x=0X7100037638);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003763C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037640);
	op_stkvar	(x,	1);
	make_array	(0X7100037648,	0X8);
	create_insn	(x=0X7100037650);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037654);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037698);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003769C);
	op_stkvar	(x,	1);
	make_array	(0X71000376A4,	0XC);
	create_insn	(x=0X71000376B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000376B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000376F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000376F8);
	op_stkvar	(x,	1);
	create_insn	(0X7100037700);
	create_insn	(x=0X7100037704);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037708);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003770C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037710);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037764);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100037770,	"__int64",	0);
	create_insn	(x=0X7100037770);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X710003777C,	"__int64",	0);
	create_insn	(0X71000377D8);
	create_insn	(0X7100037830);
	create_insn	(x=0X7100037834);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037848);
	op_stkvar	(x,	1);
	create_insn	(0X7100037864);
	create_insn	(0X7100037870);
	create_insn	(0X7100037888);
	create_insn	(x=0X71000378BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000378C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000378C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000378C8);
	op_stkvar	(x,	1);
	make_array	(0X71000378D4,	0XC);
	create_insn	(0X71000378E0);
	create_insn	(x=0X71000378E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000378E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000378EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000378F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000378F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000378F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037928);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003792C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100037938);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X710003796C);
	set_cmt	(0X71000379A8,	"__int64",	0);
	set_cmt	(0X71000379B4,	"__int64",	0);
	create_insn	(0X7100037A08);
	create_insn	(x=0X7100037A18);
	op_stkvar	(x,	1);
	create_insn	(0X7100037A28);
	create_insn	(0X7100037A44);
	create_insn	(x=0X7100037A50);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100037A5C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7100037A8C);
	set_cmt	(0X7100037ABC,	"__int64",	0);
	set_cmt	(0X7100037AD4,	"__int64",	0);
	create_insn	(0X7100037B1C);
	create_insn	(0X7100037B30);
	create_insn	(x=0X7100037B40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037B44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037B48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037B4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037B50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037B54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037B60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037B64);
	op_stkvar	(x,	1);
	set_cmt	(0X7100037B88,	"__int64",	0);
	create_insn	(x=0X7100037BB0);
	op_hex		(x,	1);
	set_cmt	(0X7100037BB8,	"__int64",	0);
	create_insn	(x=0X7100037BB8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100037BC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037BCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037BD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037BD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037BFC);
	op_hex		(x,	1);
	create_insn	(x=0X7100037C04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037C08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037C10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037C14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037C18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037C1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037C20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037C24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037C5C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100037C68);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100037CB4,	"__int64",	0);
	set_cmt	(0X7100037CC0,	"__int64",	0);
	create_insn	(x=0X7100037CFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037D00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037D04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037D08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037D0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037D10);
	op_stkvar	(x,	1);
	create_insn	(0X7100037D18);
	create_insn	(x=0X7100037D30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037D34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037D38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037D8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037D90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037D98);
	op_stkvar	(x,	1);
	create_insn	(0X7100037DA0);
	create_insn	(x=0X7100037DA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037DB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037DB8);
	op_hex		(x,	1);
	create_insn	(x=0X7100037DC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037DD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037DDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037DE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037DEC);
	op_stkvar	(x,	1);
	create_insn	(0X7100037DF4);
	create_insn	(x=0X7100037DF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037E04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037E0C);
	op_hex		(x,	1);
	create_insn	(x=0X7100037E1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037E28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037E30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037E34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037E40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037E48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037E4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037E50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037E54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037E58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037E84);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100037E90);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100037EA8);
	op_stkvar	(x,	1);
	create_insn	(0X7100037F18);
	create_insn	(0X7100037F34);
	create_insn	(0X7100037F40);
	create_insn	(x=0X7100037F48);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100037F54,	"__int64",	0);
	create_insn	(x=0X7100037F54);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100037F5C,	"__int64",	0);
	create_insn	(x=0X7100037F94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037F9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037FA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037FA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037FA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037FB0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100037FB8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100037FDC);
	op_stkvar	(x,	1);
	create_insn	(0X7100037FE4);
	create_insn	(x=0X7100037FE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100037FEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100038000);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100038004);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003800C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100038010);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100038024);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100038028);
	op_stkvar	(x,	1);
	create_insn	(0X7100038030);
	create_insn	(x=0X7100038034);
	op_hex		(x,	1);
	create_insn	(0X7100038050);
	create_insn	(x=0X7100038058);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100038078);
	op_stkvar	(x,	1);
	create_insn	(0X7100038080);
	create_insn	(x=0X7100038084);
	op_stkvar	(x,	1);
	create_insn	(0X710003808C);
	create_insn	(x=0X7100038090);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100038094);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000380A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000380AC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000380C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000380D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000380E0);
	op_hex		(x,	1);
	create_insn	(x=0X71000380EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000380F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100038124);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100038128);
	op_stkvar	(x,	1);
	create_insn	(0X7100038134);
	create_insn	(x=0X7100038150);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100038154);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100038160);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003816C);
	op_hex		(x,	1);
	create_insn	(x=0X7100038180);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100038188);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003818C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100038194);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003819C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000381B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000381BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000381C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000381CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000381E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000381F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X71000381FC,	"__int64",	0);
	create_insn	(x=0X71000381FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100038204,	"__int64",	0);
	create_insn	(x=0X7100038214);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100038218);
	op_stkvar	(x,	1);
	create_insn	(0X7100038224);
	create_insn	(x=0X7100038228);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100038234,	"__int64",	0);
	create_insn	(x=0X7100038234);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X710003823C,	"__int64",	0);
	create_insn	(x=0X710003824C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100038250);
	op_stkvar	(x,	1);
	create_insn	(0X710003825C);
	create_insn	(x=0X7100038260);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X710003826C,	"__int64",	0);
	create_insn	(x=0X710003826C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100038274,	"__int64",	0);
	create_insn	(x=0X7100038284);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100038288);
	op_stkvar	(x,	1);
	create_insn	(0X7100038294);
	create_insn	(x=0X7100038298);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003829C);
	op_stkvar	(x,	1);
	create_insn	(0X71000382A4);
	create_insn	(0X71000382AC);
	create_insn	(x=0X71000382B4);
	op_stkvar	(x,	1);
	create_insn	(0X71000382BC);
	create_insn	(0X71000382C4);
	create_insn	(x=0X71000382C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000382CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000382DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000382E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000382EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100038300);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003830C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100038310);
	op_stkvar	(x,	1);
	create_insn	(0X710003831C);
	create_insn	(x=0X7100038328);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003832C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100038338);
	op_hex		(x,	1);
	create_insn	(x=0X7100038344);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100038348);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100038354);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100038358);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003836C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100038390);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100038394);
	op_stkvar	(x,	1);
	make_array	(0X710003839C,	0X4);
	create_insn	(x=0X71000383A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000383A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000383AC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000383B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X71000383D0);
	create_insn	(0X71000383F4);
	set_cmt	(0X710003841C,	"result",	0);
	set_cmt	(0X7100038424,	"a1",	0);
	create_insn	(x=0X7100038428);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003842C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100038434);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100038438);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003844C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100038450);
	op_stkvar	(x,	1);
	create_insn	(0X7100038458);
	create_insn	(x=0X710003845C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100038460);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100038468);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100038484);
	op_plain_offset	(x,	1,	0X710021B0A0);
	op_plain_offset	(x,	129,	0X710021B0A0);
	create_insn	(x=0X710003849C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000384B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000384B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000384D0);
	op_stkvar	(x,	1);
	set_cmt	(0X71000384D8,	"this",	0);
	create_insn	(x=0X71000384DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000384E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000384EC);
	op_stkvar	(x,	1);
	create_insn	(0X71000384F4);
	create_insn	(0X71000384F8);
	create_insn	(x=0X71000384FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100038500);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100038504);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100038520);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100038560);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100038570);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100038578);
	op_hex		(x,	1);
	create_insn	(x=0X7100038590);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000385C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000385C8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000385F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100038600);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100038608);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100038610);
	op_hex		(x,	1);
	create_insn	(0X7100038628);
	create_insn	(x=0X7100038634);
	op_hex		(x,	1);
	create_insn	(0X7100038658);
	create_insn	(x=0X710003866C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100038674);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X710003867C);
	create_insn	(x=0X7100038688);
	op_hex		(x,	1);
	create_insn	(0X71000386A8);
	create_insn	(x=0X71000386BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000386C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000386D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000386DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100038708);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003870C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100038710);
	op_stkvar	(x,	1);
	create_insn	(0X710003871C);
	create_insn	(x=0X7100038720);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100038724);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100038784);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100038788);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100038790);
	op_hex		(x,	1);
	create_insn	(x=0X71000387B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000387B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000387C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000387C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000387C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000387F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100038808);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100038810);
	op_stkvar	(x,	1);
	create_insn	(0X7100038818);
	create_insn	(0X7100038844);
	set_name	(0X7100038844,	"nullsub_53");
	create_insn	(x=0X7100038848);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100038864);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003886C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100038870);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000388A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000388AC);
	op_stkvar	(x,	1);
	create_insn	(0X71000388B4);
	create_insn	(0X71000388C0);
	create_insn	(x=0X71000388E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000388EC);
	op_stkvar	(x,	1);
	create_insn	(0X71000388F4);
	create_insn	(0X7100038918);
	set_name	(0X7100038918,	"nullsub_54");
	create_insn	(x=0X710003891C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100038920);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100038924);
	op_stkvar	(x,	1);
	create_insn	(0X7100038A8C);
	create_insn	(0X7100038A94);
	create_insn	(0X7100038A9C);
	create_insn	(0X7100038AA4);
	create_insn	(0X7100038AAC);
	create_insn	(0X7100038AB4);
	create_insn	(0X7100038ABC);
	create_insn	(0X7100038AC4);
	create_insn	(0X7100038ACC);
	create_insn	(0X7100038AD4);
	create_insn	(0X7100038ADC);
	create_insn	(0X7100038AE4);
	create_insn	(0X7100038AEC);
	create_insn	(0X7100038AF4);
	create_insn	(0X7100038AFC);
	create_insn	(0X7100038B04);
	create_insn	(0X7100038B0C);
	create_insn	(0X7100038B14);
	create_insn	(0X7100038B1C);
	create_insn	(0X7100038B24);
	create_insn	(0X7100038B2C);
	create_insn	(0X7100038B34);
	create_insn	(0X7100038B3C);
	create_insn	(0X7100038B44);
	create_insn	(0X7100038B4C);
	create_insn	(0X7100038B54);
	create_insn	(0X7100038B5C);
	create_insn	(0X7100038B64);
	create_insn	(0X7100038B6C);
	create_insn	(0X7100038B74);
	create_insn	(0X7100038B7C);
	create_insn	(0X7100038B84);
	create_insn	(0X7100038B8C);
	create_insn	(0X7100038B94);
	create_insn	(0X7100038B9C);
	create_insn	(0X7100038BA4);
	create_insn	(0X7100038BAC);
	create_insn	(0X7100038BB4);
	create_insn	(0X7100038BBC);
	create_insn	(0X7100038BC4);
	create_insn	(x=0X7100038BEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100038BF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100038BF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100038BFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100038C00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100038C04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100038C30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100038C44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100038C50);
	op_stkvar	(x,	1);
	create_insn	(0X7100038C58);
	create_insn	(0X7100038C64);
	set_name	(0X7100038C64,	"nullsub_55");
	create_insn	(0X7100038C68);
	create_insn	(x=0X7100038C70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100038C74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100038C78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100038CA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100038CB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100038CC4);
	op_stkvar	(x,	1);
	create_insn	(0X7100038CCC);
	create_insn	(x=0X7100038CD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100038CDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100038CE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100038CE8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100038CF0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100038D48);
	op_hex		(x,	1);
	create_insn	(x=0X7100038D58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039394);
	op_hex		(x,	1);
	create_insn	(x=0X710003939C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000393A0);
	op_stkvar	(x,	1);
	create_insn	(0X71000393A8);
	create_insn	(x=0X71000393B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000393B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000393B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000393D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000393F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000393F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000393FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039404);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039408);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003940C);
	op_stkvar	(x,	1);
	create_insn	(0X7100039414);
	create_insn	(x=0X7100039418);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039428);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003942C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039434);
	op_stkvar	(x,	1);
	create_insn	(0X7100039440);
	set_name	(0X7100039440,	"nullsub_56");
	create_insn	(0X7100039444);
	create_insn	(x=0X7100039448);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003944C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039458);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039464);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003946C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003948C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000394AC);
	op_hex		(x,	1);
	create_insn	(0X71000394BC);
	create_insn	(x=0X71000394C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000394C8);
	op_stkvar	(x,	1);
	create_insn	(0X71000394D4);
	create_insn	(x=0X71000394DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000394E0);
	op_stkvar	(x,	1);
	create_insn	(0X71000394EC);
	create_insn	(x=0X71000394F4);
	op_hex		(x,	1);
	create_insn	(x=0X7100039510);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039544);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039548);
	op_stkvar	(x,	1);
	create_insn	(0X7100039554);
	create_insn	(0X710003955C);
	create_insn	(x=0X7100039560);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039564);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039568);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003956C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039578);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039584);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039588);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003959C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000395A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000395A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000395AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000395B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000395B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000395B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000395BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000395C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000395C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000395DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000395E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000395EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000395F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039608);
	op_hex		(x,	1);
	create_insn	(x=0X7100039634);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039648);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039654);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003965C);
	op_stkvar	(x,	1);
	create_insn	(0X7100039668);
	create_insn	(x=0X710003966C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003967C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039688);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003968C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003969C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000396A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000396A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000396AC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000396B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000396C4);
	op_stkvar	(x,	1);
	create_insn	(0X71000396D0);
	create_insn	(x=0X71000396D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000396EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039704);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039708);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003970C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039710);
	op_stkvar	(x,	1);
	create_insn	(0X710003971C);
	create_insn	(x=0X7100039724);
	op_stkvar	(x,	1);
	create_insn	(0X7100039730);
	create_insn	(x=0X7100039734);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039738);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039744);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039750);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039758);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039784);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039790);
	op_hex		(x,	1);
	create_insn	(x=0X71000397AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000397B0);
	op_stkvar	(x,	1);
	create_insn	(0X71000397BC);
	create_insn	(x=0X71000397C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000397C8);
	op_stkvar	(x,	1);
	create_insn	(0X71000397D4);
	create_insn	(x=0X71000397DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000397E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000397EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039820);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039824);
	op_stkvar	(x,	1);
	create_insn	(0X7100039830);
	create_insn	(0X7100039838);
	create_insn	(x=0X710003983C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039840);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039844);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039848);
	op_stkvar	(x,	1);
	set_cmt	(0X7100039850,	"switch 103 cases",	0);
	create_insn	(x=0X7100039878);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003987C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100039888,	"switch jump",	0);
	set_cmt	(0X710003988C,	"jumptable 0000007100039888 case 1",	1);
	create_insn	(0X710003988C);
	create_insn	(x=0X7100039890);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039894);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003989C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000398A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000398A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000398AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000398B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000398B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000398B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000398BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000398C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000398C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000398F4);
	op_hex		(x,	1);
	create_insn	(x=0X7100039934);
	op_stkvar	(x,	1);
	set_cmt	(0X7100039944,	"jumptable 0000007100039888 default case",	1);
	create_insn	(0X7100039944);
	set_name	(0X7100039944,	"def_7100039888");
	create_insn	(x=0X7100039954);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039960);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039964);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039968);
	op_stkvar	(x,	1);
	set_cmt	(0X7100039974,	"jumptable 0000007100039888 case 2",	1);
	create_insn	(0X7100039974);
	create_insn	(x=0X7100039978);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003997C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039984);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039988);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003998C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039994);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039998);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003999C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000399A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000399A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000399A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000399AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000399DC);
	op_hex		(x,	1);
	set_cmt	(0X71000399F0,	"jumptable 0000007100039888 case 3",	1);
	create_insn	(0X71000399F0);
	create_insn	(x=0X71000399F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039A04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039A08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039A0C);
	op_stkvar	(x,	1);
	set_cmt	(0X7100039A18,	"jumptable 0000007100039888 case 4",	1);
	create_insn	(0X7100039A18);
	create_insn	(x=0X7100039A20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039A2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039A30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039A34);
	op_stkvar	(x,	1);
	set_cmt	(0X7100039A40,	"jumptable 0000007100039888 case 5",	1);
	create_insn	(0X7100039A40);
	create_insn	(x=0X7100039A48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039A54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039A58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039A5C);
	op_stkvar	(x,	1);
	set_cmt	(0X7100039A68,	"jumptable 0000007100039888 case 6",	1);
	create_insn	(0X7100039A68);
	create_insn	(x=0X7100039A70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039A7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039A80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039A84);
	op_stkvar	(x,	1);
	set_cmt	(0X7100039A90,	"jumptable 0000007100039888 case 11",	1);
	create_insn	(0X7100039A90);
	create_insn	(x=0X7100039A98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039A9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039AA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039AA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039AAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039AB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039AB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039ABC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039AC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039AC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039AC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039ACC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039B0C);
	op_hex		(x,	1);
	set_cmt	(0X7100039B20,	"jumptable 0000007100039888 case 12",	1);
	create_insn	(0X7100039B20);
	create_insn	(x=0X7100039B28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039B34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039B38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039B3C);
	op_stkvar	(x,	1);
	set_cmt	(0X7100039B48,	"jumptable 0000007100039888 case 13",	1);
	create_insn	(0X7100039B48);
	create_insn	(x=0X7100039B4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039B50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039B58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039B5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039B60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039B68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039B6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039B70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039B74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039B78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039B7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039B80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039BB0);
	op_hex		(x,	1);
	set_cmt	(0X7100039BC4,	"jumptable 0000007100039888 case 14",	1);
	create_insn	(0X7100039BC4);
	create_insn	(x=0X7100039BCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039BD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039BDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039BE0);
	op_stkvar	(x,	1);
	set_cmt	(0X7100039BEC,	"jumptable 0000007100039888 case 15",	1);
	create_insn	(0X7100039BEC);
	create_insn	(x=0X7100039BF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039C00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039C04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039C08);
	op_stkvar	(x,	1);
	set_cmt	(0X7100039C14,	"jumptable 0000007100039888 case 16",	1);
	create_insn	(0X7100039C14);
	create_insn	(x=0X7100039C1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039C20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039C24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039C2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039C30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039C38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039C3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039C40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039C44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039C48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039C4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039C50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039C90);
	op_hex		(x,	1);
	create_insn	(x=0X7100039CD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039CE4);
	op_stkvar	(x,	1);
	set_cmt	(0X7100039CF0,	"jumptable 0000007100039888 case 101",	1);
	create_insn	(0X7100039CF0);
	create_insn	(x=0X7100039CF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039D04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039D08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039D0C);
	op_stkvar	(x,	1);
	set_cmt	(0X7100039D18,	"jumptable 0000007100039888 case 102",	1);
	create_insn	(0X7100039D18);
	create_insn	(x=0X7100039D20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039D2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039D30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039D34);
	op_stkvar	(x,	1);
	set_cmt	(0X7100039D40,	"jumptable 0000007100039888 case 103",	1);
	create_insn	(0X7100039D40);
	create_insn	(x=0X7100039D48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039D54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039D58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039D5C);
	op_stkvar	(x,	1);
	create_insn	(0X7100039D68);
	create_insn	(0X7100039D74);
	create_insn	(x=0X7100039D88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039D94);
	op_stkvar	(x,	1);
	create_insn	(0X7100039DA8);
	create_insn	(x=0X7100039DBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039DCC);
	op_stkvar	(x,	1);
	set_cmt	(0X7100039DD4,	"jumptable 0000007100039888 cases 7-10,17-100",	1);
	create_insn	(x=0X7100039DD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039DDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039DE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039DE4);
	op_stkvar	(x,	1);
	create_insn	(0X7100039DF0);
	create_insn	(0X7100039DF8);
	create_insn	(x=0X7100039DFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039E00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039E04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039E08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039E14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039E20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039E24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039E38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039E3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039E40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039E44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039E4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039E50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039E54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039E58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039E5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039E60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039E64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039E84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039E88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039EA0);
	op_hex		(x,	1);
	create_insn	(x=0X7100039EE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039EEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039EF4);
	op_stkvar	(x,	1);
	create_insn	(0X7100039F00);
	create_insn	(x=0X7100039F14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039F20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039F34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039F48);
	op_stkvar	(x,	1);
	create_insn	(0X7100039F54);
	create_insn	(x=0X7100039F5C);
	op_stkvar	(x,	1);
	set_cmt	(0X7100039F64,	"result",	0);
	create_insn	(x=0X7100039F64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039F70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039F74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039F78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039F7C);
	op_stkvar	(x,	1);
	create_insn	(0X7100039F88);
	create_insn	(x=0X7100039F90);
	op_stkvar	(x,	1);
	create_insn	(0X7100039F9C);
	create_insn	(x=0X7100039FA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039FA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039FA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039FAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039FBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039FC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039FCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039FD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039FE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039FE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039FEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039FF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039FF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039FF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100039FFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A000);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A020);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A038);
	op_hex		(x,	1);
	create_insn	(x=0X710003A078);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A084);
	op_stkvar	(x,	1);
	create_insn	(0X710003A090);
	create_insn	(x=0X710003A0A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A0B0);
	op_stkvar	(x,	1);
	create_insn	(0X710003A0CC);
	create_insn	(x=0X710003A0D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A0DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A0E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A0E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A0F0);
	op_stkvar	(x,	1);
	create_insn	(0X710003A100);
	create_insn	(x=0X710003A104);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A108);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A10C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A110);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A11C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A128);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A12C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A140);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A144);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A14C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A150);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A158);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A15C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A160);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A164);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A168);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A16C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A170);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A188);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A1AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A1B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A1C8);
	op_hex		(x,	1);
	create_insn	(x=0X710003A208);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A214);
	op_stkvar	(x,	1);
	create_insn	(0X710003A220);
	create_insn	(x=0X710003A234);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A240);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A244);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A254);
	op_stkvar	(x,	1);
	create_insn	(0X710003A26C);
	create_insn	(x=0X710003A278);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A27C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A280);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A284);
	op_stkvar	(x,	1);
	create_insn	(0X710003A290);
	create_insn	(x=0X710003A294);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A298);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A29C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A2A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A2B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A2B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A2C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A2C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A2D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A2DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A2E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A2E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A2E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A2EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A2F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A2F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A314);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A32C);
	op_hex		(x,	1);
	create_insn	(x=0X710003A36C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A378);
	op_stkvar	(x,	1);
	create_insn	(0X710003A384);
	create_insn	(x=0X710003A398);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A3A4);
	op_stkvar	(x,	1);
	create_insn	(0X710003A3C0);
	create_insn	(x=0X710003A3CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A3D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A3D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A3D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A3E4);
	op_stkvar	(x,	1);
	create_insn	(0X710003A3F4);
	create_insn	(x=0X710003A3F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A3FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A400);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A404);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A414);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A418);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A424);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A42C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A43C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A440);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A444);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A448);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A44C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A450);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A454);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A458);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A478);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A490);
	op_hex		(x,	1);
	create_insn	(x=0X710003A4D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A4DC);
	op_stkvar	(x,	1);
	create_insn	(0X710003A4E8);
	create_insn	(x=0X710003A4FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A508);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A50C);
	op_hex		(x,	1);
	create_insn	(0X710003A528);
	create_insn	(x=0X710003A534);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A538);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A53C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A540);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A54C);
	op_stkvar	(x,	1);
	create_insn	(0X710003A55C);
	create_insn	(x=0X710003A560);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A564);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A568);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A56C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A578);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A584);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A588);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A59C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A5A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A5A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A5A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A5B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A5B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A5B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A5BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A5C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A5C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A5C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A5E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A5EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A604);
	op_hex		(x,	1);
	create_insn	(x=0X710003A644);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A650);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A658);
	op_stkvar	(x,	1);
	create_insn	(0X710003A664);
	create_insn	(x=0X710003A678);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A684);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A698);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A6AC);
	op_stkvar	(x,	1);
	create_insn	(0X710003A6B8);
	create_insn	(x=0X710003A6C0);
	op_stkvar	(x,	1);
	set_cmt	(0X710003A6C8,	"result",	0);
	create_insn	(x=0X710003A6C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A6D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A6D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A6DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A6E0);
	op_stkvar	(x,	1);
	create_insn	(0X710003A6EC);
	create_insn	(x=0X710003A6F4);
	op_stkvar	(x,	1);
	create_insn	(0X710003A700);
	create_insn	(x=0X710003A704);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A708);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A70C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A710);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A720);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A724);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A730);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A738);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A748);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A74C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A750);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A754);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A758);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A75C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A760);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A764);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A7A4);
	op_hex		(x,	1);
	create_insn	(x=0X710003A7E4);
	op_stkvar	(x,	1);
	create_insn	(0X710003A7F4);
	create_insn	(x=0X710003A800);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A804);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A808);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A80C);
	op_stkvar	(x,	1);
	create_insn	(0X710003A818);
	create_insn	(x=0X710003A82C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A83C);
	op_stkvar	(x,	1);
	create_insn	(0X710003A848);
	create_insn	(0X710003A850);
	create_insn	(x=0X710003A854);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A858);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A85C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A860);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A870);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A874);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A880);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A888);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A898);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A89C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A8A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A8A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A8A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A8AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A8B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A8B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A8D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A8EC);
	op_hex		(x,	1);
	create_insn	(x=0X710003A92C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A938);
	op_stkvar	(x,	1);
	create_insn	(0X710003A944);
	create_insn	(x=0X710003A958);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A964);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A968);
	op_hex		(x,	1);
	create_insn	(0X710003A984);
	create_insn	(x=0X710003A990);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A994);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A998);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A99C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A9A8);
	op_stkvar	(x,	1);
	create_insn	(0X710003A9B8);
	create_insn	(x=0X710003A9BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A9C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A9C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A9C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A9D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A9DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A9E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003A9F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003AA00);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003AA04);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003AA08);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003AA0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003AA10);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003AA14);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003AA18);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003AA1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003AA3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003AA54);
	op_hex		(x,	1);
	create_insn	(x=0X710003AA94);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003AAA0);
	op_stkvar	(x,	1);
	create_insn	(0X710003AAAC);
	create_insn	(x=0X710003AAC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003AACC);
	op_stkvar	(x,	1);
	create_insn	(0X710003AAE8);
	create_insn	(x=0X710003AAF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003AAF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003AAFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003AB00);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003AB0C);
	op_stkvar	(x,	1);
	create_insn	(0X710003AB1C);
	create_insn	(x=0X710003AB20);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003AB24);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003AB28);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003AB2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003AB3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003AB40);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003AB4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003AB54);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003AB64);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003AB68);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003AB6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003AB70);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003AB74);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003AB78);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003AB7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003AB80);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003ABA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003ABB8);
	op_hex		(x,	1);
	create_insn	(x=0X710003ABF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003AC04);
	op_stkvar	(x,	1);
	create_insn	(0X710003AC10);
	create_insn	(x=0X710003AC24);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003AC30);
	op_stkvar	(x,	1);
	create_insn	(0X710003AC4C);
	create_insn	(x=0X710003AC58);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003AC5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003AC60);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003AC64);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003AC70);
	op_stkvar	(x,	1);
	create_insn	(0X710003AC80);
	create_insn	(x=0X710003AC84);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003AC88);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003AC8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003AC90);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003ACA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003ACA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003ACB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003ACB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003ACC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003ACCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003ACD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003ACD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003ACD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003ACDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003ACE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003ACE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003AD18);
	op_hex		(x,	1);
	create_insn	(x=0X710003AD28);
	op_hex		(x,	1);
	create_insn	(x=0X710003AD68);
	op_stkvar	(x,	1);
	create_insn	(0X710003AD78);
	create_insn	(0X710003AD80);
	create_insn	(x=0X710003AD94);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003ADA4);
	op_stkvar	(x,	1);
	create_insn	(0X710003ADB0);
	create_insn	(x=0X710003ADBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003ADC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003ADC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003ADC8);
	op_stkvar	(x,	1);
	create_insn	(0X710003ADD4);
	create_insn	(x=0X710003ADDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003ADE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003ADE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003AE04);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003AE28);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003AE2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003AE30);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003AE38);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003AE3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003AE40);
	op_stkvar	(x,	1);
	create_insn	(0X710003AE48);
	create_insn	(0X710003AE50);
	create_insn	(0X710003AE58);
	create_insn	(0X710003AE60);
	create_insn	(0X710003AE68);
	create_insn	(0X710003AE70);
	set_name	(0X710003AE70,	"nullsub_57");
	create_insn	(0X710003AE74);
	create_insn	(x=0X710003AE78);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003AE7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003AE88);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003AE94);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003AE9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003AEC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003AED4);
	op_hex		(x,	1);
	create_insn	(x=0X710003AEF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003AEF4);
	op_stkvar	(x,	1);
	create_insn	(0X710003AF00);
	create_insn	(x=0X710003AF08);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003AF0C);
	op_stkvar	(x,	1);
	create_insn	(0X710003AF18);
	create_insn	(x=0X710003AF20);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003AF24);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003AF30);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003AF64);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003AF68);
	op_stkvar	(x,	1);
	create_insn	(0X710003AF74);
	create_insn	(0X710003AF7C);
	create_insn	(x=0X710003AF80);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003AF84);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003AF88);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003AF8C);
	op_stkvar	(x,	1);
	set_cmt	(0X710003AF94,	"switch 5 cases",	0);
	create_insn	(x=0X710003AFA4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003AFA8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X710003AFC4,	"switch jump",	0);
	set_cmt	(0X710003AFC8,	"jumptable 000000710003AFC4 case 1",	1);
	create_insn	(0X710003AFC8);
	create_insn	(x=0X710003AFD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003AFDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003AFE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003AFE4);
	op_stkvar	(x,	1);
	set_cmt	(0X710003AFF0,	"jumptable 000000710003AFC4 default case",	1);
	create_insn	(0X710003AFF0);
	set_name	(0X710003AFF0,	"def_710003AFC4");
	set_cmt	(0X710003AFFC,	"jumptable 000000710003AFC4 case 2",	1);
	create_insn	(0X710003AFFC);
	create_insn	(x=0X710003B004);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B010);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B014);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B018);
	op_stkvar	(x,	1);
	set_cmt	(0X710003B024,	"jumptable 000000710003AFC4 case 3",	1);
	create_insn	(0X710003B024);
	create_insn	(x=0X710003B02C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B038);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B03C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B040);
	op_stkvar	(x,	1);
	set_cmt	(0X710003B04C,	"jumptable 000000710003AFC4 case 4",	1);
	create_insn	(0X710003B04C);
	create_insn	(x=0X710003B050);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B054);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B05C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B060);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B064);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B06C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B070);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B074);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B078);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B07C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B080);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B084);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B0B4);
	op_hex		(x,	1);
	create_insn	(x=0X710003B0FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B108);
	op_stkvar	(x,	1);
	set_cmt	(0X710003B114,	"jumptable 000000710003AFC4 case 5",	1);
	create_insn	(0X710003B114);
	create_insn	(x=0X710003B11C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B128);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B12C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B130);
	op_stkvar	(x,	1);
	create_insn	(0X710003B13C);
	create_insn	(x=0X710003B150);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B15C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B170);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B174);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B178);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B17C);
	op_stkvar	(x,	1);
	create_insn	(0X710003B188);
	create_insn	(x=0X710003B18C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B190);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B194);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B198);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B1A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B1AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B1B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B1C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B1D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B1D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B1D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B1DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B1E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B1E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B1E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B1EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B20C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B224);
	op_hex		(x,	1);
	create_insn	(x=0X710003B264);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B270);
	op_stkvar	(x,	1);
	create_insn	(0X710003B27C);
	create_insn	(x=0X710003B290);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B29C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B2A0);
	op_hex		(x,	1);
	create_insn	(0X710003B2BC);
	create_insn	(x=0X710003B2C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B2CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B2D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B2D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B2E0);
	op_stkvar	(x,	1);
	create_insn	(0X710003B2F0);
	create_insn	(x=0X710003B2F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B2F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B2FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B300);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B30C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B318);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B31C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B330);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B334);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B338);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B33C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B344);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B348);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B34C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B350);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B354);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B358);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B35C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B37C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B380);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B398);
	op_hex		(x,	1);
	create_insn	(x=0X710003B3D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B3E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B3EC);
	op_stkvar	(x,	1);
	create_insn	(0X710003B3F8);
	create_insn	(x=0X710003B40C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B418);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B42C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B440);
	op_stkvar	(x,	1);
	create_insn	(0X710003B44C);
	create_insn	(x=0X710003B454);
	op_stkvar	(x,	1);
	set_cmt	(0X710003B45C,	"result",	0);
	create_insn	(x=0X710003B45C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B468);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B46C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B470);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B474);
	op_stkvar	(x,	1);
	create_insn	(0X710003B480);
	create_insn	(x=0X710003B488);
	op_stkvar	(x,	1);
	create_insn	(0X710003B494);
	create_insn	(x=0X710003B498);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B49C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B4A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B4A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B4B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B4B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B4C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B4CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B4DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B4E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B4E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B4E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B4EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B4F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B4F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B4F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B52C);
	op_hex		(x,	1);
	create_insn	(x=0X710003B53C);
	op_hex		(x,	1);
	create_insn	(x=0X710003B57C);
	op_stkvar	(x,	1);
	create_insn	(0X710003B58C);
	create_insn	(0X710003B594);
	create_insn	(x=0X710003B5A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B5B8);
	op_stkvar	(x,	1);
	create_insn	(0X710003B5C4);
	create_insn	(x=0X710003B5D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B5D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B5D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B5DC);
	op_stkvar	(x,	1);
	create_insn	(0X710003B5E8);
	create_insn	(x=0X710003B5EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B5F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B5F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B5F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B608);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B60C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B618);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B620);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B630);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B634);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B638);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B63C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B640);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B644);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B648);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B64C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B680);
	op_hex		(x,	1);
	create_insn	(x=0X710003B690);
	op_hex		(x,	1);
	create_insn	(x=0X710003B6D0);
	op_stkvar	(x,	1);
	create_insn	(0X710003B6E0);
	create_insn	(0X710003B6E8);
	create_insn	(x=0X710003B6FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B70C);
	op_stkvar	(x,	1);
	create_insn	(0X710003B718);
	create_insn	(x=0X710003B724);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B728);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B72C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B730);
	op_stkvar	(x,	1);
	make_array	(0X710003B73C,	0X4);
	create_insn	(0X710003B740);
	create_insn	(x=0X710003B744);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B74C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B754);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B760);
	op_stkvar	(x,	1);
	create_insn	(0X710003B76C);
	set_name	(0X710003B76C,	"j_j_TimeAL::CreateAlarm");
	create_insn	(0X710003B770);
	create_insn	(x=0X710003B774);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B778);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B794);
	op_hex		(x,	1);
	create_insn	(x=0X710003B7A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B7A8);
	op_stkvar	(x,	1);
	create_insn	(0X710003B7B0);
	create_insn	(0X710003B7B8);
	create_insn	(0X710003B7C4);
	create_insn	(x=0X710003B7C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B7F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B7F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B800);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B80C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B814);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B818);
	op_stkvar	(x,	1);
	set_cmt	(0X710003B828,	"event",	0);
	set_cmt	(0X710003B82C,	"clearMode",	0);
	set_cmt	(0X710003B830,	"type",	0);
	create_insn	(x=0X710003B838);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B840);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003B848);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003B84C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B854);
	op_plain_offset	(x,	1,	0X710021B000);
	op_plain_offset	(x,	129,	0X710021B000);
	create_insn	(x=0X710003B85C);
	op_stkvar	(x,	1);
	create_insn	(0X710003B864);
	create_insn	(x=0X710003B86C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B870);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B878);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003B880);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003B88C);
	op_plain_offset	(x,	1,	0X710021B000);
	op_plain_offset	(x,	129,	0X710021B000);
	create_insn	(x=0X710003B8A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B8A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B8B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B8B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B8BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003B8C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003B8CC);
	op_plain_offset	(x,	1,	0X710021B000);
	op_plain_offset	(x,	129,	0X710021B000);
	create_insn	(x=0X710003B8DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B8E0);
	op_stkvar	(x,	1);
	set_cmt	(0X710003B8F8,	"result",	0);
	create_insn	(x=0X710003B910);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B918);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B920);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B924);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B930);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003B93C);
	op_plain_offset	(x,	1,	0X710021B000);
	op_plain_offset	(x,	129,	0X710021B000);
	create_insn	(x=0X710003B944);
	op_plain_offset	(x,	1,	0X710021B000);
	op_plain_offset	(x,	129,	0X710021B000);
	create_insn	(x=0X710003B950);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B958);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B960);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B968);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003B970);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003B978);
	op_plain_offset	(x,	1,	0X710021B000);
	op_plain_offset	(x,	129,	0X710021B000);
	create_insn	(x=0X710003B984);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B98C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B998);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003B9A0);
	op_plain_offset	(x,	1,	0X710021B000);
	op_plain_offset	(x,	129,	0X710021B000);
	create_insn	(x=0X710003B9B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B9B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B9BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003B9E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003B9E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003BA38);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003BA60);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003BA68);
	op_stkvar	(x,	1);
	create_insn	(0X710003BA70);
	create_insn	(x=0X710003BA78);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003BA7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003BAA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003BAB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003BAB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003BABC);
	op_stkvar	(x,	1);
	create_insn	(0X710003BAC4);
	create_insn	(0X710003BACC);
	create_insn	(0X710003BAD4);
	create_insn	(0X710003BADC);
	create_insn	(0X710003BAE4);
	create_insn	(0X710003BAEC);
	create_insn	(0X710003BAF4);
	create_insn	(0X710003BAFC);
	create_insn	(0X710003BB04);
	create_insn	(0X710003BB0C);
	create_insn	(0X710003BB14);
	create_insn	(0X710003BB1C);
	create_insn	(0X710003BB24);
	create_insn	(0X710003BB2C);
	create_insn	(0X710003BB34);
	create_insn	(0X710003BB3C);
	create_insn	(x=0X710003BB44);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003BB48);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003BB68);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003BB8C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003BB94);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003BB9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003BBA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003BBA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003BBB0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003BBBC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003BBC8);
	op_plain_offset	(x,	1,	0X710021B000);
	op_plain_offset	(x,	129,	0X710021B000);
	create_insn	(x=0X710003BC0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003BC10);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003BC18);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003BC1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003BC24);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003BC28);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003BC2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003BC34);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003BC3C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003BC44);
	op_plain_offset	(x,	1,	0X710021B000);
	op_plain_offset	(x,	129,	0X710021B000);
	create_insn	(x=0X710003BC58);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003BC5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003BC60);
	op_stkvar	(x,	1);
	create_insn	(0X710003BC68);
	create_insn	(x=0X710003BC78);
	op_plain_offset	(x,	1,	0X710021B000);
	op_plain_offset	(x,	129,	0X710021B000);
	create_insn	(x=0X710003BC88);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003BC8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003BC90);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003BC98);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003BC9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003BCA4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003BCAC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003BCB4);
	op_plain_offset	(x,	1,	0X710021B000);
	op_plain_offset	(x,	129,	0X710021B000);
	create_insn	(x=0X710003BCC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003BCC8);
	op_stkvar	(x,	1);
	create_insn	(0X710003BCD0);
	create_insn	(x=0X710003BCE0);
	op_plain_offset	(x,	1,	0X710021B000);
	op_plain_offset	(x,	129,	0X710021B000);
	create_insn	(x=0X710003BCEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003BCF4);
	op_stkvar	(x,	1);
	create_insn	(0X710003BCFC);
	create_insn	(x=0X710003BD00);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003BD04);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003BD08);
	op_stkvar	(x,	1);
	set_cmt	(0X710003BD28,	"event",	0);
	set_cmt	(0X710003BD30,	"clearMode",	0);
	set_cmt	(0X710003BD34,	"type",	0);
	create_insn	(x=0X710003BD44);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003BD4C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003BD54);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003BD60);
	op_plain_offset	(x,	1,	0X710021B000);
	op_plain_offset	(x,	129,	0X710021B000);
	set_cmt	(0X710003BD74,	"result",	0);
	create_insn	(x=0X710003BD94);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003BD9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003BDA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003BDAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003BDB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003BDB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003BDC0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003BDC8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003BDD0);
	op_plain_offset	(x,	1,	0X710021B000);
	op_plain_offset	(x,	129,	0X710021B000);
	create_insn	(x=0X710003BDD8);
	op_hex		(x,	1);
	create_insn	(x=0X710003BDE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003BDE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003BDF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003BDF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003BDFC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003BE04);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003BE0C);
	op_plain_offset	(x,	1,	0X710021B000);
	op_plain_offset	(x,	129,	0X710021B000);
	create_insn	(x=0X710003BE14);
	op_hex		(x,	1);
	create_insn	(x=0X710003BE20);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003BE24);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003BE2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003BE30);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003BE38);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003BE40);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003BE58);
	op_plain_offset	(x,	1,	0X710021B000);
	op_plain_offset	(x,	129,	0X710021B000);
	create_insn	(x=0X710003BE5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003BE70);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003BE78);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003BE7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003BE84);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003BE8C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003BEA0);
	op_plain_offset	(x,	1,	0X710021B000);
	op_plain_offset	(x,	129,	0X710021B000);
	create_insn	(x=0X710003BEA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003BEB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003BEC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003BEC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003BECC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003BED4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003BEF0);
	op_plain_offset	(x,	1,	0X710021B000);
	op_plain_offset	(x,	129,	0X710021B000);
	create_insn	(x=0X710003BEF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003BF08);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003BF10);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003BF14);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003BF18);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003BF20);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003BF28);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003BF5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003BF60);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003BF64);
	op_stkvar	(x,	1);
	create_insn	(0X710003BF6C);
	create_insn	(x=0X710003BF70);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003BF74);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003BF78);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003BF80);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003BF88);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003BF90);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003BFA8);
	op_stkvar	(x,	1);
	create_insn	(0X710003BFB0);
	create_insn	(x=0X710003BFB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003BFB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003BFBC);
	op_stkvar	(x,	1);
	set_cmt	(0X710003BFDC,	"clearMode",	0);
	set_cmt	(0X710003BFE4,	"event",	0);
	set_cmt	(0X710003BFE8,	"type",	0);
	create_insn	(x=0X710003BFF4);
	op_stkvar	(x,	1);
	set_cmt	(0X710003C010,	"result",	0);
	create_insn	(x=0X710003C030);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C038);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C03C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C048);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C050);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C054);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C05C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003C064);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003C078);
	op_plain_offset	(x,	1,	0X710021B000);
	op_plain_offset	(x,	129,	0X710021B000);
	create_insn	(x=0X710003C07C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C090);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C098);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C09C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C0A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003C0AC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003C0B4);
	op_plain_offset	(x,	1,	0X710021B000);
	op_plain_offset	(x,	129,	0X710021B000);
	create_insn	(x=0X710003C0C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C0C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C0D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C0D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C0DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003C0E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003C0EC);
	op_plain_offset	(x,	1,	0X710021B000);
	op_plain_offset	(x,	129,	0X710021B000);
	create_insn	(x=0X710003C0F8);
	op_hex		(x,	1);
	create_insn	(x=0X710003C104);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C108);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C110);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C114);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C11C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003C124);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003C12C);
	op_plain_offset	(x,	1,	0X710021B000);
	op_plain_offset	(x,	129,	0X710021B000);
	create_insn	(x=0X710003C138);
	op_hex		(x,	1);
	create_insn	(x=0X710003C144);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C148);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C150);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C158);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003C160);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003C168);
	op_plain_offset	(x,	1,	0X710021B000);
	op_plain_offset	(x,	129,	0X710021B000);
	create_insn	(x=0X710003C178);
	op_stkvar	(x,	1);
	create_insn	(0X710003C180);
	create_insn	(x=0X710003C184);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C188);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C1B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C1E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C1EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C1F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C1FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C200);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C20C);
	op_hex		(x,	1);
	create_insn	(x=0X710003C224);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C22C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C234);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C238);
	op_hex		(x,	1);
	create_insn	(x=0X710003C240);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C244);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C250);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C25C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C268);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C26C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003C274);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C280);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C284);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C28C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C290);
	op_stkvar	(x,	1);
	create_insn	(0X710003C29C);
	create_insn	(x=0X710003C2A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C2A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C2A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C2AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C2B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C2BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003C2C8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003C2E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C2E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003C2EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003C308);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C314);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003C31C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003C324);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C338);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C33C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003C344);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003C34C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C360);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C364);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003C36C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003C374);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C38C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C390);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003C398);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C3A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C3B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003C3B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C3C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C3D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003C3DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C3E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C3EC);
	op_hex		(x,	1);
	create_insn	(x=0X710003C3F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003C3F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C400);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C408);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003C410);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C41C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C424);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003C42C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C438);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C440);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003C448);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C454);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C45C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C464);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C46C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C470);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C474);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C478);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C47C);
	op_stkvar	(x,	1);
	create_insn	(0X710003C488);
	create_insn	(x=0X710003C48C);
	op_stkvar	(x,	1);
	create_insn	(0X710003C498);
	create_insn	(x=0X710003C49C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C4A0);
	op_stkvar	(x,	1);
	create_insn	(0X710003C4A8);
	create_insn	(x=0X710003C4AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C4B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C4C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C4CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C4D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C4F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003C504);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C51C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003C540);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C548);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C54C);
	op_stkvar	(x,	1);
	create_insn	(0X710003C558);
	create_insn	(0X710003C560);
	create_insn	(x=0X710003C56C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X710003C590);
	create_insn	(x=0X710003C594);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C598);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C59C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C5A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C5B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003C5B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C5CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C5D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003C5E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C5EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C5F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003C600);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C608);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C61C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003C620);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003C62C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C634);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C640);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003C648);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C650);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C65C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003C664);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C66C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C678);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003C680);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C688);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C724);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003C72C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C734);
	op_stkvar	(x,	1);
	create_insn	(0X710003C740);
	create_insn	(x=0X710003C750);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003C758);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C760);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C768);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003C770);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C77C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C784);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003C78C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C798);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C7A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003C7A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C7B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C7BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003C7C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C7D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C7D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C7E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C7E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C7EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C7F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C7F4);
	op_stkvar	(x,	1);
	create_insn	(0X710003C800);
	create_insn	(0X710003C808);
	create_insn	(0X710003C80C);
	create_insn	(x=0X710003C818);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003C82C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C830);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C834);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C888);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C88C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C890);
	op_stkvar	(x,	1);
	create_insn	(0X710003C898);
	create_insn	(x=0X710003C8C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C8C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C8C8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003C8D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C8D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C8DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C8E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C924);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C928);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C92C);
	op_stkvar	(x,	1);
	create_insn	(0X710003C934);
	create_insn	(x=0X710003C95C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C960);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C964);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003C96C);
	op_stkvar	(x,	1);
	create_insn	(0X710003C974);
	create_insn	(x=0X710003C978);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C97C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C980);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C984);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C988);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C9F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003C9F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CA04);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CA0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CA10);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CA14);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CA18);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CA1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CA20);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CA30);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CA38);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CA40);
	op_hex		(x,	1);
	create_insn	(x=0X710003CA44);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CA48);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CA50);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CA5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CA68);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CA6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CA74);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CA78);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CA7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CA80);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CA84);
	op_stkvar	(x,	1);
	create_insn	(0X710003CA90);
	create_insn	(x=0X710003CAA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CAA4);
	op_stkvar	(x,	1);
	create_insn	(0X710003CAB0);
	create_insn	(x=0X710003CAB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CAB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CABC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CAC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CAC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CAD4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003CADC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CAFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CB0C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003CB14);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CB1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CB30);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003CB34);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003CB40);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CB48);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CB5C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003CB60);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003CB6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CB78);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CB84);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003CB8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CB94);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CB9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CBAC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003CBB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CBC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CBD4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003CBDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CBE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CBF0);
	op_hex		(x,	1);
	create_insn	(x=0X710003CBF4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003CBFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CC04);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CC0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CC10);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003CC18);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CC24);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CC2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CC30);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003CC38);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CC44);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CC4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CC50);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003CC58);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CC6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CC74);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003CC7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CC88);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CC90);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CC94);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003CC9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CCA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CCAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CCB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CCBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CCC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CCC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CCC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CCCC);
	op_stkvar	(x,	1);
	create_insn	(0X710003CCD8);
	create_insn	(0X710003CCE0);
	create_insn	(x=0X710003CCE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CCE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CD4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CD50);
	op_stkvar	(x,	1);
	create_insn	(0X710003CD58);
	make_array	(0X710003CD68,	0X8);
	create_insn	(0X710003CD70);
	set_name	(0X710003CD70,	"GenerateRandomClockSourceId");
	create_insn	(x=0X710003CD74);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CD84);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CD8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CD90);
	op_hex		(x,	1);
	create_insn	(x=0X710003CD94);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CD98);
	op_hex		(x,	1);
	create_insn	(x=0X710003CD9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CDC0);
	op_hex		(x,	1);
	create_insn	(x=0X710003CDC4);
	op_hex		(x,	1);
	create_insn	(x=0X710003CDD0);
	op_hex		(x,	1);
	make_array	(0X710003CDDC,	0X4);
	create_insn	(x=0X710003CDE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CDE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CDEC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003CDF8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003CE08);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CE0C);
	op_stkvar	(x,	1);
	make_array	(0X710003CE14,	0XC);
	create_insn	(0X710003CE20);
	create_insn	(0X710003CE30);
	make_array	(0X710003CE48,	0X8);
	create_insn	(x=0X710003CE50);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CE58);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003CE68);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003CE70);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CE78);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003CE88);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003CE8C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003CE94);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003CE9C);
	op_plain_offset	(x,	1,	0X710021D0E8);
	op_plain_offset	(x,	129,	0X710021D0E8);
	create_insn	(x=0X710003CEA4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003CEAC);
	op_stkvar	(x,	1);
	create_insn	(0X710003CEB4);
	create_insn	(0X710003CEBC);
	create_insn	(0X710003CEC4);
	create_insn	(0X710003CED0);
	create_insn	(0X710003CED8);
	create_insn	(x=0X710003CEDC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003CEF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CEF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CF08);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CF0C);
	op_stkvar	(x,	1);
	create_insn	(0X710003CF14);
	set_name	(0X710003CF14,	"j_delete_4");
	create_insn	(0X710003CF18);
	create_insn	(0X710003CF20);
	set_name	(0X710003CF20,	"nullsub_58");
	create_insn	(0X710003CF24);
	create_insn	(0X710003CF30);
	create_insn	(0X710003CF64);
	create_insn	(x=0X710003CF68);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CF6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CF78);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CF7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CF8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CF98);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CF9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CFA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CFB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CFB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CFC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CFCC);
	op_stkvar	(x,	1);
	create_insn	(0X710003CFD8);
	create_insn	(0X710003CFE0);
	create_insn	(0X710003CFE8);
	create_insn	(x=0X710003CFF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003CFF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D020);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D024);
	op_stkvar	(x,	1);
	make_array	(0X710003D02C,	0X4);
	create_insn	(x=0X710003D030);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D034);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D074);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D078);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D080);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D084);
	op_stkvar	(x,	1);
	create_insn	(0X710003D0A8);
	create_insn	(x=0X710003D0C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D0CC);
	op_stkvar	(x,	1);
	create_insn	(0X710003D0D4);
	create_insn	(0X710003D0DC);
	make_array	(0X710003D0E4,	0XC);
	create_insn	(0X710003D0F0);
	create_insn	(x=0X710003D0F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D0F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D0FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D100);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D104);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D108);
	op_stkvar	(x,	1);
	create_insn	(0X710003D13C);
	create_insn	(x=0X710003D180);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D188);
	op_stkvar	(x,	1);
	create_insn	(0X710003D19C);
	create_insn	(x=0X710003D1DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D1E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D1E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D1E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D1EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D1F0);
	op_stkvar	(x,	1);
	create_insn	(0X710003D1FC);
	create_insn	(0X710003D238);
	create_insn	(x=0X710003D23C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D240);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D258);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D264);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D268);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D270);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D280);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D284);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D28C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D294);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D2A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D2AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D2B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D2BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D2E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D2EC);
	op_stkvar	(x,	1);
	create_insn	(0X710003D2F4);
	create_insn	(0X710003D2FC);
	create_insn	(0X710003D304);
	create_insn	(0X710003D30C);
	create_insn	(x=0X710003D310);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D314);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D360);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D364);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D374);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D378);
	op_stkvar	(x,	1);
	create_insn	(0X710003D384);
	create_insn	(x=0X710003D388);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D38C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D390);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D3E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D3E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D3F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D3FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D400);
	op_stkvar	(x,	1);
	create_insn	(0X710003D40C);
	create_insn	(0X710003D42C);
	create_insn	(0X710003D434);
	create_insn	(0X710003D444);
	create_insn	(0X710003D454);
	create_insn	(0X710003D474);
	create_insn	(0X710003D4A4);
	create_insn	(x=0X710003D4A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D4AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D4C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D4D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D4D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D4DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D4E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D4E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D4F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D4FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D504);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D518);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D51C);
	op_stkvar	(x,	1);
	create_insn	(0X710003D528);
	create_insn	(x=0X710003D530);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D548);
	op_stkvar	(x,	1);
	create_insn	(0X710003D550);
	create_insn	(x=0X710003D554);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D558);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D598);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D59C);
	op_stkvar	(x,	1);
	create_insn	(0X710003D5A4);
	create_insn	(0X710003D5A8);
	create_insn	(x=0X710003D5AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D5B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D5B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D5B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D5DC);
	op_hex		(x,	1);
	create_insn	(x=0X710003D5FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D600);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D610);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D614);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D61C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D620);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D630);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D634);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D638);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D63C);
	op_stkvar	(x,	1);
	create_insn	(0X710003D648);
	create_insn	(0X710003D64C);
	create_insn	(0X710003D678);
	create_insn	(x=0X710003D680);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D684);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D688);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D6B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D6C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D6C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D6CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D6D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D6D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D710);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003D718);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003D730);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003D738);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X710003D740);
	create_insn	(x=0X710003D748);
	op_hex		(x,	1);
	create_insn	(x=0X710003D7B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D7BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D7C0);
	op_stkvar	(x,	1);
	create_insn	(0X710003D7C8);
	create_insn	(x=0X710003D7E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D7E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D7E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D7EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D7F4);
	op_hex		(x,	1);
	create_insn	(x=0X710003D808);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D80C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D810);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D814);
	op_stkvar	(x,	1);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_6(void) {
        auto x;
#define id x

	create_insn	(x=0X710003D81C);
	op_hex		(x,	1);
	create_insn	(x=0X710003D838);
	op_hex		(x,	1);
	create_insn	(x=0X710003D878);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D87C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D880);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D884);
	op_stkvar	(x,	1);
	create_insn	(0X710003D88C);
	create_insn	(x=0X710003D890);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D894);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D898);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D89C);
	op_stkvar	(x,	1);
	create_insn	(0X710003D8A4);
	create_insn	(x=0X710003D8AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D8B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D8B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D8B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D8C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D8C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D8C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D8D0);
	op_hex		(x,	1);
	create_insn	(x=0X710003D8E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D8E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D8EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D8F4);
	op_hex		(x,	1);
	create_insn	(x=0X710003D92C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D930);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D934);
	op_stkvar	(x,	1);
	create_insn	(0X710003D93C);
	create_insn	(x=0X710003D940);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D944);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D948);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D950);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D954);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D958);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003D994);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003D99C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003D9B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003D9BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X710003D9C4);
	create_insn	(x=0X710003D9CC);
	op_hex		(x,	1);
	create_insn	(x=0X710003DA3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DA40);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DA44);
	op_stkvar	(x,	1);
	create_insn	(0X710003DA4C);
	create_insn	(x=0X710003DA64);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DA68);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DA6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DA70);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DA78);
	op_hex		(x,	1);
	create_insn	(x=0X710003DA8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DA90);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DA94);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DA98);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DAA0);
	op_hex		(x,	1);
	create_insn	(x=0X710003DABC);
	op_hex		(x,	1);
	create_insn	(x=0X710003DAFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DB00);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DB04);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DB08);
	op_stkvar	(x,	1);
	create_insn	(0X710003DB10);
	create_insn	(x=0X710003DB14);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DB18);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DB1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DB20);
	op_stkvar	(x,	1);
	create_insn	(0X710003DB28);
	create_insn	(x=0X710003DB30);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DB34);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DB38);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DB3C);
	op_stkvar	(x,	1);
	create_insn	(0X710003DB44);
	create_insn	(x=0X710003DB48);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DB4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DB50);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DB54);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DB58);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DB78);
	op_hex		(x,	1);
	create_insn	(x=0X710003DB90);
	op_hex		(x,	1);
	create_insn	(x=0X710003DBB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DBB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DBD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DBE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DBE8);
	op_stkvar	(x,	1);
	create_insn	(0X710003DBFC);
	create_insn	(x=0X710003DC04);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DC08);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DC0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DC10);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DC14);
	op_stkvar	(x,	1);
	create_insn	(0X710003DC20);
	create_insn	(x=0X710003DC24);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DC28);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DC2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DC30);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DC34);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DC68);
	op_hex		(x,	1);
	create_insn	(0X710003DC80);
	create_insn	(x=0X710003DC88);
	op_hex		(x,	1);
	create_insn	(x=0X710003DCAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DCB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DCB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DCC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DCD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DCD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DCE0);
	op_stkvar	(x,	1);
	create_insn	(0X710003DCF4);
	create_insn	(x=0X710003DCFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DD00);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DD04);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DD08);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DD0C);
	op_stkvar	(x,	1);
	create_insn	(0X710003DD18);
	create_insn	(x=0X710003DD1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DD20);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DD24);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DD28);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DD68);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DD6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DD84);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DD8C);
	op_stkvar	(x,	1);
	create_insn	(0X710003DDA0);
	create_insn	(x=0X710003DDA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DDAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DDB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DDB4);
	op_stkvar	(x,	1);
	create_insn	(0X710003DDC0);
	create_insn	(x=0X710003DDC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DDCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DE08);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DE18);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DE20);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DE24);
	op_stkvar	(x,	1);
	create_insn	(0X710003DE2C);
	create_insn	(x=0X710003DE30);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DE34);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DE38);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DE3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DE5C);
	op_hex		(x,	1);
	create_insn	(x=0X710003DE80);
	op_stkvar	(x,	1);
	create_insn	(0X710003DEAC);
	create_insn	(0X710003DEB4);
	create_insn	(x=0X710003DEBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DED0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DED4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DED8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DEDC);
	op_stkvar	(x,	1);
	create_insn	(0X710003DEE8);
	set_name	(0X710003DEE8,	"nullsub_59");
	create_insn	(0X710003DEEC);
	create_insn	(x=0X710003DEF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DEF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DF34);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DF44);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DF4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DF50);
	op_stkvar	(x,	1);
	create_insn	(0X710003DF58);
	create_insn	(x=0X710003DF5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DF60);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DF64);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DF68);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DF88);
	op_hex		(x,	1);
	create_insn	(x=0X710003DFAC);
	op_stkvar	(x,	1);
	create_insn	(0X710003DFD8);
	create_insn	(0X710003DFE0);
	create_insn	(x=0X710003DFE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003DFFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E000);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E004);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E008);
	op_stkvar	(x,	1);
	create_insn	(0X710003E014);
	create_insn	(x=0X710003E030);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E034);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E038);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E03C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E040);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E044);
	op_stkvar	(x,	1);
	create_insn	(0X710003E0A0);
	create_insn	(x=0X710003E0D4);
	op_hex		(x,	1);
	create_insn	(x=0X710003E11C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E120);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E124);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E128);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E12C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E130);
	op_stkvar	(x,	1);
	create_insn	(0X710003E138);
	create_insn	(0X710003E14C);
	create_insn	(0X710003E190);
	create_insn	(x=0X710003E194);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E198);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E19C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E1AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E1B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E1B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E1BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E1C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E1C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E1CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E1D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E1D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E1E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E1E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E1FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E200);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E208);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E218);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E21C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E220);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E22C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E23C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E240);
	op_stkvar	(x,	1);
	create_insn	(0X710003E24C);
	create_insn	(x=0X710003E254);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E258);
	op_stkvar	(x,	1);
	make_array	(0X710003E264,	0XC);
	create_insn	(x=0X710003E270);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E274);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E278);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E27C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E280);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E288);
	op_hex		(x,	1);
	create_insn	(x=0X710003E2A4);
	op_hex		(x,	1);
	create_insn	(x=0X710003E304);
	op_hex		(x,	1);
	create_insn	(0X710003E314);
	create_insn	(0X710003E324);
	create_insn	(x=0X710003E364);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E368);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E36C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E370);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E374);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E37C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E380);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E384);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E388);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E38C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E3A8);
	op_hex		(x,	1);
	create_insn	(x=0X710003E3C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E3C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E3CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E3D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E3D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E3DC);
	op_hex		(x,	1);
	create_insn	(x=0X710003E41C);
	op_hex		(x,	1);
	create_insn	(x=0X710003E438);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E43C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E440);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E444);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E448);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E450);
	op_hex		(x,	1);
	create_insn	(x=0X710003E490);
	op_hex		(x,	1);
	create_insn	(x=0X710003E49C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E4A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E4A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E4A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E4AC);
	op_stkvar	(x,	1);
	create_insn	(0X710003E4B4);
	create_insn	(x=0X710003E4B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E4BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E4C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E4C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E4C8);
	op_stkvar	(x,	1);
	create_insn	(0X710003E4D0);
	create_insn	(x=0X710003E4D4);
	op_hex		(x,	1);
	create_insn	(x=0X710003E4E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E4F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E4F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E4F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E4FC);
	op_stkvar	(x,	1);
	make_array	(0X710003E504,	0XC);
	create_insn	(0X710003E510);
	create_insn	(x=0X710003E514);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E518);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E51C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E520);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E528);
	op_stkvar	(x,	1);
	create_insn	(0X710003E548);
	create_insn	(x=0X710003E550);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E564);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E570);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E578);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E58C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E598);
	op_hex		(x,	1);
	create_insn	(x=0X710003E5A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E5AC);
	op_hex		(x,	1);
	create_insn	(x=0X710003E5B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E5C4);
	op_hex		(x,	1);
	create_insn	(x=0X710003E5D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E5DC);
	op_hex		(x,	1);
	create_insn	(x=0X710003E5E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E5F0);
	op_hex		(x,	1);
	create_insn	(x=0X710003E5FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E608);
	op_hex		(x,	1);
	create_insn	(x=0X710003E610);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E61C);
	op_hex		(x,	1);
	create_insn	(0X710003E630);
	create_insn	(x=0X710003E634);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E638);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E640);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E650);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E654);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E658);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E65C);
	op_stkvar	(x,	1);
	make_array	(0X710003E668,	0X8);
	create_insn	(0X710003E670);
	create_insn	(x=0X710003E674);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E678);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E67C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E680);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E688);
	op_stkvar	(x,	1);
	create_insn	(0X710003E6A8);
	create_insn	(x=0X710003E6B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E6C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E6D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E6D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E6EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E6F8);
	op_hex		(x,	1);
	create_insn	(x=0X710003E700);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E70C);
	op_hex		(x,	1);
	create_insn	(x=0X710003E718);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E724);
	op_hex		(x,	1);
	create_insn	(x=0X710003E730);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E73C);
	op_hex		(x,	1);
	create_insn	(x=0X710003E748);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E754);
	op_hex		(x,	1);
	create_insn	(x=0X710003E760);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E76C);
	op_hex		(x,	1);
	create_insn	(x=0X710003E778);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E784);
	op_hex		(x,	1);
	create_insn	(0X710003E798);
	create_insn	(x=0X710003E79C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E7A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E7A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E7B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E7BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E7C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E7C4);
	op_stkvar	(x,	1);
	create_insn	(0X710003E7D0);
	create_insn	(x=0X710003E7D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E7D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E7DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E7E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E7E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E87C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E880);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E888);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E88C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E890);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E894);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E898);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E89C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E8A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E8A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E8B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E8B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E8DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E8E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E8E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E8F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E8FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E924);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E928);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E930);
	op_stkvar	(x,	1);
	create_insn	(0X710003E944);
	create_insn	(x=0X710003E948);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E94C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E950);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E954);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E958);
	op_stkvar	(x,	1);
	create_insn	(0X710003E964);
	create_dword	(0X710003E96C);
	create_insn	(0X710003E970);
	create_insn	(0X710003E990);
	create_insn	(0X710003E9D8);
	create_insn	(0X710003E9F0);
	create_insn	(x=0X710003E9F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E9F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003E9FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003EA00);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003EA04);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003EA08);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003EA10);
	op_hex		(x,	1);
	create_insn	(x=0X710003EA50);
	op_hex		(x,	1);
	create_insn	(0X710003EA60);
	create_insn	(x=0X710003EA64);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003EA68);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003EA6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003EA70);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003EA74);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003EA78);
	op_stkvar	(x,	1);
	create_insn	(0X710003EA84);
	create_insn	(x=0X710003EAB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003EAC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003EACC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003EAD4);
	op_stkvar	(x,	1);
	create_insn	(0X710003EADC);
	create_insn	(0X710003EB20);
	create_insn	(x=0X710003EB44);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003EB50);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003EB5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003EB60);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003EB68);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003EB70);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003EB84);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003EB90);
	op_hex		(x,	1);
	create_insn	(x=0X710003EB9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003EBA8);
	op_hex		(x,	1);
	create_insn	(x=0X710003EBB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003EBC0);
	op_hex		(x,	1);
	create_insn	(x=0X710003EBC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003EBD4);
	op_hex		(x,	1);
	create_insn	(x=0X710003EBE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003EBEC);
	op_hex		(x,	1);
	create_insn	(x=0X710003EBF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003EC00);
	op_hex		(x,	1);
	create_insn	(x=0X710003EC10);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003EC24);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003EC30);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003EC34);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003EC3C);
	op_stkvar	(x,	1);
	create_insn	(0X710003EC48);
	create_insn	(x=0X710003EC50);
	op_stkvar	(x,	1);
	make_array	(0X710003EC6C,	0X4);
	create_insn	(0X710003EC70);
	create_insn	(x=0X710003EC74);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003EC78);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003EC7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003EC80);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003EC84);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003EC88);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003EC90);
	op_hex		(x,	1);
	create_insn	(x=0X710003ECD0);
	op_hex		(x,	1);
	create_insn	(0X710003ECE0);
	create_insn	(x=0X710003ECE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003ECE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003ECEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003ECF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003ECF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003ECF8);
	op_stkvar	(x,	1);
	create_insn	(0X710003ED04);
	create_insn	(x=0X710003ED2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003ED38);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003ED3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003ED44);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003ED48);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003ED50);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003ED58);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003ED64);
	op_stkvar	(x,	1);
	create_insn	(0X710003ED74);
	create_insn	(x=0X710003ED98);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003EDA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003EDB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003EDB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003EDBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003EDC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003EDD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003EDE4);
	op_hex		(x,	1);
	create_insn	(x=0X710003EDF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003EDFC);
	op_hex		(x,	1);
	create_insn	(x=0X710003EE08);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003EE14);
	op_hex		(x,	1);
	create_insn	(x=0X710003EE1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003EE28);
	op_hex		(x,	1);
	create_insn	(x=0X710003EE34);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003EE40);
	op_hex		(x,	1);
	create_insn	(x=0X710003EE48);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003EE54);
	op_hex		(x,	1);
	create_insn	(x=0X710003EE60);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003EE78);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003EE90);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003EEA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003EEB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003EEB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003EEBC);
	op_stkvar	(x,	1);
	create_insn	(0X710003EEC8);
	create_insn	(x=0X710003EEE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003EF5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003EF70);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003EF7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003EF80);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003EF88);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003EF90);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003EFA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003EFBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003EFD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003EFE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003EFE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003EFEC);
	op_stkvar	(x,	1);
	create_insn	(0X710003EFF8);
	create_insn	(x=0X710003F004);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F010);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F018);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F024);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F02C);
	op_hex		(x,	1);
	create_insn	(x=0X710003F06C);
	op_hex		(x,	1);
	create_insn	(x=0X710003F078);
	op_stkvar	(x,	1);
	create_insn	(0X710003F080);
	create_insn	(x=0X710003F084);
	op_stkvar	(x,	1);
	create_insn	(0X710003F08C);
	create_insn	(x=0X710003F09C);
	op_stkvar	(x,	1);
	make_array	(0X710003F0A4,	0XC);
	create_insn	(x=0X710003F0B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F0B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F0B8);
	op_stkvar	(x,	1);
	create_insn	(0X710003F0D4);
	create_insn	(x=0X710003F0FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F100);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F104);
	op_stkvar	(x,	1);
	make_array	(0X710003F10C,	0X4);
	create_insn	(0X710003F110);
	create_insn	(x=0X710003F114);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F118);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F11C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F124);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003F12C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F13C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003F140);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F154);
	op_plain_offset	(x,	1,	0X71000AF050);
	op_plain_offset	(x,	129,	0X71000AF050);
	create_insn	(x=0X710003F15C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003F160);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003F168);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003F16C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003F174);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003F184);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003F188);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003F18C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003F19C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003F1B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003F1B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003F1D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003F208);
	op_plain_offset	(x,	1,	0X71000AF050);
	op_plain_offset	(x,	129,	0X71000AF050);
	create_insn	(x=0X710003F210);
	op_plain_offset	(x,	1,	0X71000AF050);
	op_plain_offset	(x,	129,	0X71000AF050);
	create_insn	(x=0X710003F218);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003F230);
	op_plain_offset	(x,	1,	0X71000AF048);
	op_plain_offset	(x,	129,	0X71000AF048);
	create_insn	(x=0X710003F23C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003F240);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003F248);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X710003F258);
	create_insn	(x=0X710003F25C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F260);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F26C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F280);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003F28C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F290);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F294);
	op_stkvar	(x,	1);
	create_insn	(0X710003F2A0);
	create_insn	(x=0X710003F2A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003F2A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003F2B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003F2C0);
	op_plain_offset	(x,	1,	0X71000AF048);
	op_plain_offset	(x,	129,	0X71000AF048);
	create_insn	(x=0X710003F2C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F2D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003F2D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X710003F2E0);
	create_insn	(x=0X710003F2E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F2F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F2F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F2FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003F300);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003F308);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F314);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F318);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F31C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F320);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F370);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F3C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F3C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F3CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F3D0);
	op_stkvar	(x,	1);
	create_insn	(0X710003F3D8);
	create_insn	(x=0X710003F3FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X710003F428);
	create_insn	(x=0X710003F434);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F460);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003F4B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F4B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F4B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F4BC);
	op_stkvar	(x,	1);
	create_insn	(0X710003F4C4);
	create_insn	(0X710003F4CC);
	create_insn	(x=0X710003F4D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F4D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F4D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F50C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F514);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F51C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F520);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F568);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F56C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F570);
	op_stkvar	(x,	1);
	create_insn	(0X710003F57C);
	create_insn	(0X710003F584);
	create_insn	(x=0X710003F588);
	op_hex		(x,	1);
	create_insn	(0X710003F594);
	create_insn	(x=0X710003F598);
	op_hex		(x,	1);
	create_insn	(0X710003F5A8);
	create_insn	(x=0X710003F5AC);
	op_hex		(x,	1);
	create_insn	(0X710003F5C0);
	create_insn	(0X710003F5C8);
	create_insn	(0X710003F5D0);
	create_insn	(x=0X710003F5D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F5D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F5DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F5E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F628);
	op_hex		(x,	1);
	create_insn	(x=0X710003F65C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F668);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F674);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F680);
	op_hex		(x,	1);
	create_insn	(0X710003F6A4);
	create_insn	(x=0X710003F6B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F6B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F6B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F6BC);
	op_stkvar	(x,	1);
	create_insn	(0X710003F6C8);
	create_insn	(x=0X710003F6CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F6D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F6D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F6D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F724);
	op_hex		(x,	1);
	create_insn	(x=0X710003F758);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F764);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F770);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F77C);
	op_hex		(x,	1);
	create_insn	(0X710003F7A0);
	create_insn	(x=0X710003F7AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F7B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F7B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F7B8);
	op_stkvar	(x,	1);
	create_insn	(0X710003F7C4);
	create_insn	(x=0X710003F7C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F7CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F7D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F7D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F7D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F804);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003F814);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F818);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F830);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F834);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F844);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F854);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F85C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F86C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F878);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F87C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F880);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F884);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F890);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F8A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F8C8);
	op_hex		(x,	1);
	create_insn	(x=0X710003F904);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F910);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F91C);
	op_hex		(x,	1);
	create_insn	(0X710003F940);
	create_insn	(x=0X710003F94C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F950);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F954);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F958);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F95C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F968);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F96C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F998);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F99C);
	op_stkvar	(x,	1);
	create_insn	(0X710003F9A4);
	create_insn	(x=0X710003F9B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F9BC);
	op_stkvar	(x,	1);
	create_insn	(0X710003F9C4);
	create_insn	(x=0X710003F9C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F9CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F9D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003F9D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003FA00);
	op_hex		(x,	1);
	create_insn	(x=0X710003FA38);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003FA44);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003FA50);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003FA5C);
	op_hex		(x,	1);
	create_insn	(0X710003FA80);
	create_insn	(x=0X710003FA8C);
	op_stkvar	(x,	1);
	set_cmt	(0X710003FA90,	"result",	0);
	create_insn	(x=0X710003FAB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003FABC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003FAC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003FAC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003FAD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003FAD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003FB04);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003FB0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003FB10);
	op_stkvar	(x,	1);
	make_array	(0X710003FB18,	0X8);
	create_insn	(x=0X710003FB20);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003FB24);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003FDC8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710003FDD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003FDD4);
	op_stkvar	(x,	1);
	create_insn	(0X710003FDDC);
	create_insn	(x=0X710003FDF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003FDF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003FE2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003FE30);
	op_stkvar	(x,	1);
	create_insn	(0X710003FE38);
	create_insn	(0X710003FE40);
	create_insn	(x=0X710003FE48);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003FE4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003FE68);
	op_hex		(x,	1);
	create_insn	(x=0X710003FE6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003FE70);
	op_stkvar	(x,	1);
	create_insn	(0X710003FE78);
	create_insn	(x=0X710003FE90);
	op_hex		(x,	1);
	create_insn	(x=0X710003FE94);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003FE98);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003FEA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003FEA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003FEC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003FEC8);
	op_stkvar	(x,	1);
	create_insn	(0X710003FED0);
	create_insn	(x=0X710003FF18);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003FF1C);
	op_stkvar	(x,	1);
	make_array	(0X710003FF24,	0XC);
	create_insn	(x=0X710003FF30);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003FF34);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003FF88);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003FF8C);
	op_stkvar	(x,	1);
	make_array	(0X710003FF94,	0XC);
	create_insn	(x=0X710003FFA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003FFA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003FFF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710003FFFC);
	op_stkvar	(x,	1);
	make_array	(0X7100040004,	0XC);
	create_insn	(0X7100040010);
	create_insn	(x=0X7100040014);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040018);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004001C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040028);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040048);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040050);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040064);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040080);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040088);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004008C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040090);
	op_stkvar	(x,	1);
	create_insn	(0X710004009C);
	create_dword	(0X71000400A4);
	make_array	(0X71000400A8,	0X8);
	create_insn	(x=0X71000400B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000400B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000400D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000400D8);
	op_stkvar	(x,	1);
	create_insn	(0X71000400E0);
	create_insn	(x=0X71000400E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000400F0);
	op_hex		(x,	1);
	create_insn	(x=0X7100040100);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040108);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040114);
	op_stkvar	(x,	1);
	create_dword	(0X710004011C);
	create_insn	(0X7100040120);
	create_insn	(x=0X7100040124);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040128);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040138);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004013C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040140);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040154);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004015C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040168);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040170);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040174);
	op_stkvar	(x,	1);
	create_insn	(0X7100040180);
	create_qword	(0X7100040188);
	create_insn	(0X7100040190);
	create_insn	(x=0X7100040194);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040198);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000401A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000401B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000401C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000401CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000401D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000401DC);
	op_plain_offset	(x,	1,	0X71000AF508);
	op_plain_offset	(x,	129,	0X71000AF508);
	create_insn	(x=0X71000401E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000401E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000401F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000401F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000401FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710004020C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100040210);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100040218);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040220);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040230);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100040238);
	op_plain_offset	(x,	1,	0X71000AF500);
	op_plain_offset	(x,	129,	0X71000AF500);
	create_insn	(x=0X710004023C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040248);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710004024C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100040254);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100040260);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100040268);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710004026C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100040278);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040280);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100040284);
	op_stkvar	(x,	1);
	create_insn	(0X7100040290);
	create_insn	(x=0X7100040294);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000402A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000402B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000402B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000402C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000402C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000402C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000402CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004031C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040370);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040374);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040378);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004037C);
	op_stkvar	(x,	1);
	create_insn	(0X7100040384);
	create_insn	(x=0X71000403A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X71000403D4);
	create_insn	(x=0X71000403E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004040C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710004045C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040460);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040464);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040468);
	op_stkvar	(x,	1);
	create_insn	(0X7100040470);
	create_insn	(0X7100040478);
	create_insn	(x=0X710004047C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040480);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040484);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000404B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000404C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000404C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000404CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040514);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040518);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004051C);
	op_stkvar	(x,	1);
	create_insn	(0X7100040528);
	create_insn	(0X7100040530);
	create_insn	(0X710004053C);
	create_insn	(0X7100040548);
	create_insn	(x=0X710004054C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040550);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040564);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040568);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004056C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040574);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004057C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004058C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040590);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040598);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000405A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000405BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000405C0);
	op_stkvar	(x,	1);
	create_insn	(0X71000405CC);
	create_insn	(x=0X71000405D0);
	op_stkvar	(x,	1);
	create_insn	(0X71000405DC);
	create_insn	(0X71000405E8);
	create_insn	(0X71000405F4);
	create_insn	(x=0X71000405F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000405FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040610);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040614);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040618);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040620);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040628);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004063C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040640);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040644);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040650);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040668);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004066C);
	op_stkvar	(x,	1);
	create_insn	(0X7100040678);
	create_insn	(x=0X710004067C);
	op_stkvar	(x,	1);
	create_insn	(0X7100040688);
	create_insn	(0X7100040694);
	create_insn	(x=0X7100040698);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004069C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000406A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000406BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000406C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000406D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000406EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000406FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040714);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040718);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004071C);
	op_stkvar	(x,	1);
	create_insn	(0X7100040728);
	create_insn	(x=0X710004072C);
	op_stkvar	(x,	1);
	create_insn	(0X7100040738);
	create_insn	(0X7100040748);
	create_insn	(0X7100040750);
	create_insn	(0X7100040758);
	create_insn	(x=0X710004075C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040760);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040764);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040768);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040794);
	op_hex		(x,	1);
	create_insn	(x=0X71000407CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000407D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000407E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000407F0);
	op_hex		(x,	1);
	create_insn	(0X7100040814);
	create_insn	(0X7100040820);
	create_insn	(x=0X710004082C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040830);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040834);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040838);
	op_stkvar	(x,	1);
	create_insn	(0X7100040844);
	create_insn	(x=0X7100040848);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004084C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040850);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040854);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040884);
	op_hex		(x,	1);
	create_insn	(x=0X71000408BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000408C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000408D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000408E0);
	op_hex		(x,	1);
	create_insn	(0X7100040904);
	create_insn	(0X7100040910);
	create_insn	(x=0X710004092C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040930);
	op_stkvar	(x,	1);
	create_insn	(0X7100040954);
	create_insn	(x=0X7100040998);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004099C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000409A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000409A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000409B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000409B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000409B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040A00);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100040A30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040A34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040A3C);
	op_stkvar	(x,	1);
	create_insn	(0X7100040A44);
	create_insn	(x=0X7100040A48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040A4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040A50);
	op_stkvar	(x,	1);
	create_insn	(0X7100040A58);
	create_insn	(0X7100040A60);
	create_insn	(x=0X7100040A64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040A68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040A6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040AA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040AA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040AB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040AB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040AFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040B00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040B04);
	op_stkvar	(x,	1);
	create_insn	(0X7100040B10);
	create_insn	(0X7100040B18);
	create_insn	(0X7100040B24);
	create_insn	(x=0X7100040B28);
	op_hex		(x,	1);
	create_insn	(0X7100040B34);
	create_insn	(0X7100040B3C);
	create_insn	(0X7100040B44);
	create_insn	(x=0X7100040B48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040B4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040B50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040B54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040B80);
	op_hex		(x,	1);
	create_insn	(x=0X7100040BBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040BC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040BD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040BE0);
	op_hex		(x,	1);
	create_insn	(0X7100040C04);
	create_insn	(x=0X7100040C10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040C14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040C18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040C1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040C28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040C2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040C30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040C78);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100040CA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040CAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040CB4);
	op_stkvar	(x,	1);
	create_insn	(0X7100040CBC);
	create_insn	(x=0X7100040CC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040CC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040CC8);
	op_stkvar	(x,	1);
	create_insn	(0X7100040CD0);
	create_insn	(0X7100040CD8);
	create_insn	(x=0X7100040CDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040CE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040CE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040D18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040D20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040D28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040D2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040D74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040D78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040D7C);
	op_stkvar	(x,	1);
	create_insn	(0X7100040D88);
	create_insn	(0X7100040D90);
	create_insn	(0X7100040D9C);
	create_insn	(x=0X7100040DA0);
	op_hex		(x,	1);
	create_insn	(0X7100040DAC);
	create_insn	(0X7100040DB4);
	create_insn	(0X7100040DBC);
	create_insn	(x=0X7100040DC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040DC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040DC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040DCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040DD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040E04);
	op_hex		(x,	1);
	create_insn	(x=0X7100040E40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040E4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040E58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040E64);
	op_hex		(x,	1);
	create_insn	(0X7100040E88);
	create_insn	(0X7100040E94);
	create_insn	(x=0X7100040EB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040EB4);
	op_stkvar	(x,	1);
	create_insn	(0X7100040ED8);
	create_insn	(x=0X7100040F1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040F20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040F24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040F28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040F2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040F38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040F3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040F40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040F88);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100040FB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040FBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040FC4);
	op_stkvar	(x,	1);
	create_insn	(0X7100040FCC);
	create_insn	(x=0X7100040FD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040FD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040FD8);
	op_stkvar	(x,	1);
	create_insn	(0X7100040FE0);
	create_insn	(0X7100040FE8);
	create_insn	(x=0X7100040FEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040FF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100040FF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041028);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041030);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041038);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004103C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041084);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041088);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004108C);
	op_stkvar	(x,	1);
	create_insn	(0X7100041098);
	create_insn	(0X71000410A0);
	create_insn	(0X71000410AC);
	create_insn	(0X71000410B4);
	create_insn	(0X71000410BC);
	create_insn	(x=0X71000410C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000410C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000410C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000410CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000410FC);
	op_hex		(x,	1);
	create_insn	(x=0X7100041138);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041144);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041150);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004115C);
	op_hex		(x,	1);
	create_insn	(0X7100041180);
	create_insn	(0X710004118C);
	create_insn	(x=0X7100041198);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004119C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000411A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000411A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000411B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000411B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000411E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000411E4);
	op_stkvar	(x,	1);
	create_insn	(0X71000411EC);
	create_insn	(x=0X7100041200);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041204);
	op_stkvar	(x,	1);
	create_insn	(0X710004120C);
	create_insn	(0X7100041214);
	create_insn	(0X710004121C);
	create_insn	(x=0X7100041220);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041224);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004123C);
	op_stkvar	(x,	1);
	set_cmt	(0X7100041244,	"time",	0);
	create_insn	(x=0X7100041254);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041258);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041264);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041268);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041290);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041294);
	op_stkvar	(x,	1);
	create_insn	(0X71000412A0);
	create_insn	(0X71000412A8);
	create_insn	(x=0X71000412B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000412BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000412C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000412C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041330);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100041348);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710004135C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041360);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041364);
	op_stkvar	(x,	1);
	create_insn	(0X710004136C);
	create_insn	(0X710004137C);
	create_insn	(x=0X7100041380);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000413A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000413A4);
	op_stkvar	(x,	1);
	create_insn	(0X71000413B0);
	create_insn	(0X71000413C0);
	create_insn	(x=0X71000413C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000413CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000413F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041400);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041408);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004140C);
	op_stkvar	(x,	1);
	create_insn	(0X7100041414);
	create_insn	(0X710004141C);
	create_insn	(0X7100041424);
	create_insn	(0X710004142C);
	create_insn	(x=0X7100041430);
	op_hex		(x,	1);
	create_insn	(0X7100041438);
	create_insn	(x=0X710004143C);
	op_hex		(x,	1);
	create_insn	(0X7100041444);
	create_insn	(0X710004144C);
	create_insn	(x=0X7100041450);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041454);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041460);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041464);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041474);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041478);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041484);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041488);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041494);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004149C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000414A0);
	op_stkvar	(x,	1);
	create_insn	(0X71000414AC);
	create_insn	(x=0X71000414B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000414C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000414CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000414D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000414E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000414E8);
	op_stkvar	(x,	1);
	create_insn	(0X71000414F4);
	create_insn	(x=0X71000414F8);
	op_stkvar	(x,	1);
	create_insn	(0X7100041504);
	create_insn	(x=0X7100041508);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004150C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041510);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041514);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041548);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041570);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041578);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041580);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041588);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004158C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041590);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041598);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004159C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000415AC);
	op_stkvar	(x,	1);
	create_insn	(0X71000415B8);
	set_cmt	(0X71000415C0,	"nn::os::detail::InternalCriticalSectionImplByHorizon *",	0);
	create_insn	(x=0X71000415CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000415D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000415D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000415D8);
	op_stkvar	(x,	1);
	create_insn	(0X71000415E4);
	create_insn	(x=0X71000415E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000415EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000415F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041608);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041614);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004161C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041628);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041648);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004164C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041650);
	op_stkvar	(x,	1);
	create_insn	(0X710004165C);
	create_insn	(x=0X7100041664);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041668);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004166C);
	op_stkvar	(x,	1);
	create_insn	(0X7100041678);
	create_insn	(x=0X7100041680);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041698);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004169C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000416A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000416AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000416B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000416DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000416E0);
	op_stkvar	(x,	1);
	create_insn	(0X71000416E8);
	create_insn	(x=0X71000416EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000416F0);
	op_stkvar	(x,	1);
	create_insn	(0X71000416F8);
	create_insn	(x=0X71000416FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041700);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041704);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041708);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004173C);
	op_hex		(x,	1);
	create_insn	(x=0X7100041754);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004176C);
	op_stkvar	(x,	1);
	create_insn	(0X7100041778);
	create_insn	(0X7100041780);
	set_cmt	(0X7100041784,	"nn::os::detail::InternalCriticalSectionImplByHorizon *",	0);
	create_insn	(x=0X7100041790);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041794);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041798);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004179C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000417A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000417AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000417C0);
	op_hex		(x,	1);
	create_insn	(x=0X71000417D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000417DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000417E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000417EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000417F0);
	op_stkvar	(x,	1);
	create_insn	(0X71000417F8);
	create_insn	(x=0X71000417FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041800);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041804);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041830);
	op_hex		(x,	1);
	create_insn	(x=0X7100041858);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004185C);
	op_stkvar	(x,	1);
	create_insn	(0X7100041870);
	create_insn	(x=0X7100041878);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004187C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041880);
	op_stkvar	(x,	1);
	create_insn	(0X710004188C);
	set_cmt	(0X7100041890,	"nn::os::detail::InternalCriticalSectionImplByHorizon *",	0);
	create_insn	(x=0X710004189C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000418A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000418A4);
	op_stkvar	(x,	1);
	create_insn	(0X71000418B0);
	create_insn	(0X71000418C0);
	create_insn	(x=0X71000418C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000418D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000418D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000418E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000418EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000418F4);
	op_stkvar	(x,	1);
	create_insn	(0X7100041900);
	create_insn	(x=0X7100041904);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041908);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004190C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004191C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041928);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041930);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041948);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004195C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041960);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041964);
	op_stkvar	(x,	1);
	create_insn	(0X7100041970);
	create_insn	(x=0X7100041978);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041990);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041994);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041998);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000419A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000419A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000419C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000419CC);
	op_stkvar	(x,	1);
	create_insn	(0X71000419D4);
	create_insn	(x=0X71000419D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000419DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000419E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041A00);
	op_hex		(x,	1);
	create_insn	(x=0X7100041A04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041A18);
	op_hex		(x,	1);
	create_insn	(0X7100041A28);
	create_insn	(x=0X7100041A2C);
	op_stkvar	(x,	1);
	create_insn	(0X7100041A40);
	create_insn	(x=0X7100041A54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041A58);
	op_stkvar	(x,	1);
	set_cmt	(0X7100041A68,	"nn::os::detail::InternalCriticalSectionImplByHorizon *",	0);
	create_insn	(x=0X7100041A74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041A78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041A7C);
	op_stkvar	(x,	1);
	create_insn	(0X7100041A88);
	create_insn	(x=0X7100041A8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041A90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041AA0);
	op_hex		(x,	1);
	create_insn	(x=0X7100041AB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041AB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041AC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041AC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041AD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041AD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041AE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041AE4);
	op_stkvar	(x,	1);
	create_insn	(0X7100041AF0);
	create_insn	(x=0X7100041AF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041AF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041AFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041B00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041B04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041B30);
	op_hex		(x,	1);
	create_insn	(x=0X7100041B34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041B4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041B6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041B70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041B7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041B80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041B88);
	op_stkvar	(x,	1);
	set_cmt	(0X7100041B94,	"nn::os::detail::InternalCriticalSectionImplByHorizon *",	0);
	create_insn	(x=0X7100041BA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041BA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041BA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041BAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041BB0);
	op_stkvar	(x,	1);
	create_insn	(0X7100041BBC);
	create_insn	(x=0X7100041BC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041BC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041BD0);
	op_hex		(x,	1);
	create_insn	(x=0X7100041BE4);
	op_hex		(x,	1);
	create_insn	(x=0X7100041BF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041BF4);
	op_stkvar	(x,	1);
	create_insn	(0X7100041C00);
	create_insn	(x=0X7100041C08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041C0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041C1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041C20);
	op_stkvar	(x,	1);
	create_insn	(0X7100041C2C);
	create_insn	(x=0X7100041C30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041C34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041C38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041C3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041C60);
	op_hex		(x,	1);
	create_insn	(x=0X7100041C74);
	op_hex		(x,	1);
	create_insn	(0X7100041C8C);
	create_insn	(x=0X7100041C90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041C9C);
	op_hex		(x,	1);
	set_cmt	(0X7100041CA8,	"nn::os::detail::InternalCriticalSectionImplByHorizon *",	0);
	create_insn	(x=0X7100041CB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041CB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041CBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041CC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041CCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041CD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041CE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041CF0);
	op_stkvar	(x,	1);
	create_insn	(0X7100041CF8);
	create_insn	(x=0X7100041CFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041D00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041D30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041D34);
	op_stkvar	(x,	1);
	create_insn	(0X7100041D3C);
	create_insn	(0X7100041D44);
	create_insn	(x=0X7100041D48);
	op_stkvar	(x,	1);
	set_cmt	(0X7100041D50,	"time",	0);
	create_insn	(x=0X7100041D58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041D60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041D6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041D74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041D88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041D90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041DA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041DAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041DB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041DB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041DF4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100041DFC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100041E10);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100041E3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041E44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041E48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041E50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041E54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041E78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041E7C);
	op_stkvar	(x,	1);
	create_insn	(0X7100041E84);
	create_insn	(0X7100041E88);
	create_insn	(x=0X7100041E94);
	op_hex		(x,	1);
	create_insn	(x=0X7100041EA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041EA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041ECC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041ED4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041EDC);
	op_hex		(x,	1);
	create_insn	(x=0X7100041EEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041EF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041F14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041F18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041F20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041F34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041F3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041F50);
	op_stkvar	(x,	1);
	create_insn	(0X7100041F58);
	create_insn	(x=0X7100041F5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041F60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041F70);
	op_hex		(x,	1);
	create_insn	(x=0X7100041F80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041F90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041F98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041FA0);
	op_stkvar	(x,	1);
	create_insn	(0X7100041FAC);
	create_insn	(x=0X7100041FB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041FB8);
	op_stkvar	(x,	1);
	create_insn	(0X7100041FC4);
	create_insn	(x=0X7100041FCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100041FD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042000);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042010);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042018);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004201C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042024);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042028);
	op_stkvar	(x,	1);
	set_cmt	(0X7100042040,	"result",	0);
	create_insn	(x=0X7100042058);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042060);
	op_stkvar	(x,	1);
	create_insn	(0X7100042068);
	create_insn	(x=0X7100042080);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042084);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042088);
	op_stkvar	(x,	1);
	create_insn	(0X71000420D4);
	create_insn	(x=0X71000420F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000420FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042100);
	op_stkvar	(x,	1);
	create_insn	(0X7100042108);
	create_insn	(0X710004212C);
	create_insn	(x=0X7100042150);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042154);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042158);
	op_stkvar	(x,	1);
	create_insn	(0X7100042160);
	create_insn	(x=0X7100042164);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042168);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000421C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000421C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000421D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000421D4);
	op_stkvar	(x,	1);
	create_insn	(0X7100042204);
	create_insn	(0X7100042218);
	create_insn	(0X710004222C);
	create_insn	(x=0X7100042250);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042254);
	op_stkvar	(x,	1);
	create_insn	(0X710004225C);
	create_insn	(x=0X7100042260);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042264);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042268);
	op_stkvar	(x,	1);
	set_cmt	(0X7100042284,	"__int64",	0);
	create_insn	(x=0X710004228C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100042290);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100042298,	"_BYTE *",	0);
	create_insn	(x=0X7100042298);
	op_stkvar	(x,	1);
	set_cmt	(0X710004229C,	"__int64",	0);
	create_insn	(x=0X71000422A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000422B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000422BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000422C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000422C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000422D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000422F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000422FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042300);
	op_stkvar	(x,	1);
	create_insn	(0X710004230C);
	create_insn	(0X7100042310);
	create_insn	(x=0X7100042314);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042318);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004231C);
	op_stkvar	(x,	1);
	set_cmt	(0X7100042328,	"time",	0);
	create_insn	(x=0X7100042328);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042334);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042338);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004233C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042348);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004234C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042350);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042358);
	op_stkvar	(x,	1);
	create_insn	(0X7100042378);
	create_insn	(x=0X710004239C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000423A4);
	op_stkvar	(x,	1);
	set_cmt	(0X71000423B4,	"nn::os::detail::InternalCriticalSectionImplByHorizon *",	0);
	create_insn	(0X71000423B4);
	create_insn	(x=0X71000423BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000423C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000423C4);
	op_stkvar	(x,	1);
	create_insn	(0X71000423D0);
	create_insn	(0X71000423D8);
	create_insn	(x=0X71000423DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000423E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000423E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042420);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042438);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004243C);
	op_stkvar	(x,	1);
	set_cmt	(0X710004244C,	"__int64",	0);
	create_insn	(x=0X7100042454);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100042458);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100042460,	"_BYTE *",	0);
	create_insn	(x=0X7100042460);
	op_stkvar	(x,	1);
	set_cmt	(0X7100042464,	"__int64",	0);
	create_insn	(x=0X710004246C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042470);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004247C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042480);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042484);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004249C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000424A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000424AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000424BC);
	op_hex		(x,	1);
	create_insn	(x=0X71000424E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000424EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000424F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000424F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000424FC);
	op_stkvar	(x,	1);
	create_insn	(0X7100042508);
	create_insn	(0X710004250C);
	create_insn	(x=0X7100042510);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042514);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042518);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042520);
	op_hex		(x,	1);
	create_insn	(0X7100042548);
	create_insn	(0X7100042590);
	create_insn	(x=0X7100042598);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004259C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000425A0);
	op_stkvar	(x,	1);
	create_insn	(0X71000425A8);
	set_cmt	(0X71000425AC,	"nn::os::detail::InternalCriticalSectionImplByHorizon *",	0);
	create_insn	(x=0X71000425B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000425BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000425C0);
	op_stkvar	(x,	1);
	make_array	(0X71000425C8,	0X8);
	create_insn	(x=0X71000425D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000425D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000425D8);
	op_stkvar	(x,	1);
	create_insn	(0X7100042608);
	create_insn	(0X7100042618);
	create_insn	(x=0X710004263C);
	op_hex		(x,	1);
	create_insn	(0X7100042648);
	set_cmt	(0X710004265C,	"nn::os::detail::InternalCriticalSectionImplByHorizon *",	0);
	create_insn	(x=0X7100042668);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004266C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042670);
	op_stkvar	(x,	1);
	make_array	(0X7100042678,	0X8);
	create_insn	(x=0X7100042680);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042684);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042688);
	op_stkvar	(x,	1);
	create_insn	(0X71000426B8);
	create_insn	(0X71000426C8);
	create_insn	(x=0X71000426EC);
	op_hex		(x,	1);
	create_insn	(0X71000426F8);
	set_cmt	(0X710004270C,	"nn::os::detail::InternalCriticalSectionImplByHorizon *",	0);
	create_insn	(x=0X7100042718);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004271C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042720);
	op_stkvar	(x,	1);
	make_array	(0X7100042728,	0X8);
	create_insn	(0X7100042730);
	create_insn	(x=0X7100042734);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042738);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004273C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042740);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042744);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042748);
	op_stkvar	(x,	1);
	create_insn	(0X71000427DC);
	create_insn	(0X71000427E4);
	create_insn	(0X71000427EC);
	create_insn	(0X71000427F4);
	create_insn	(x=0X7100042800);
	op_hex		(x,	1);
	create_insn	(0X7100042818);
	create_insn	(0X7100042888);
	create_insn	(x=0X7100042890);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042898);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004289C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000428A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000428A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000428B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000428C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000428D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000428DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000428E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000428FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042908);
	op_stkvar	(x,	1);
	set_cmt	(0X710004292C,	"__int64",	0);
	create_insn	(x=0X7100042930);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100042938);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100042940);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100042948,	"_BYTE *",	0);
	create_insn	(x=0X7100042948);
	op_stkvar	(x,	1);
	set_cmt	(0X710004294C,	"__int64",	0);
	create_insn	(x=0X7100042958);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004295C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004296C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042970);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004298C);
	op_stkvar	(x,	1);
	set_cmt	(0X71000429A4,	"time",	0);
	create_insn	(x=0X71000429B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000429BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000429C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000429D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000429DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000429E0);
	op_stkvar	(x,	1);
	set_cmt	(0X7100042A08,	"nn::os::detail::InternalCriticalSectionImplByHorizon *",	0);
	create_insn	(x=0X7100042A14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042A18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042A1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042A20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042A24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042A28);
	op_stkvar	(x,	1);
	create_insn	(0X7100042A34);
	create_insn	(x=0X7100042A38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042A40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042A44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042A58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042A5C);
	op_stkvar	(x,	1);
	create_insn	(0X7100042A64);
	create_insn	(x=0X7100042B34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042B38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042B40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042B44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042B48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042B4C);
	op_stkvar	(x,	1);
	create_insn	(0X7100042B80);
	set_cmt	(0X7100042BC4,	"nn::os::detail::InternalCriticalSectionImplByHorizon *",	0);
	create_insn	(x=0X7100042BD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042BD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042BD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042BDC);
	op_stkvar	(x,	1);
	create_insn	(0X7100042BE4);
	create_insn	(x=0X7100042BEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042BF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042BF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042BF8);
	op_stkvar	(x,	1);
	create_insn	(0X7100042C00);
	create_insn	(x=0X7100042C04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042C08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042C0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042C10);
	op_stkvar	(x,	1);
	create_insn	(0X7100042C48);
	set_cmt	(0X7100042CA0,	"nn::os::detail::InternalCriticalSectionImplByHorizon *",	0);
	create_insn	(0X7100042CAC);
	create_insn	(x=0X7100042CB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042CB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042CBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042CC0);
	op_stkvar	(x,	1);
	make_array	(0X7100042CCC,	0X4);
	create_insn	(x=0X7100042CD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042CD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042CD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042CE0);
	op_hex		(x,	1);
	create_insn	(0X7100042D0C);
	set_cmt	(0X7100042D64,	"nn::os::detail::InternalCriticalSectionImplByHorizon *",	0);
	create_insn	(x=0X7100042D70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042D74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042D78);
	op_stkvar	(x,	1);
	create_insn	(0X7100042D80);
	create_insn	(x=0X7100042D88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042D8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042D90);
	op_stkvar	(x,	1);
	make_array	(0X7100042D98,	0X8);
	create_insn	(0X7100042DA0);
	create_insn	(x=0X7100042DA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042DA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042DAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042DB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042DB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042DC0);
	op_hex		(x,	1);
	create_insn	(0X7100042DF8);
	create_insn	(x=0X7100042E30);
	op_hex		(x,	1);
	set_cmt	(0X7100042E38,	"__int64",	0);
	create_insn	(x=0X7100042E3C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100042E44);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100042E4C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100042E54,	"_BYTE *",	0);
	create_insn	(x=0X7100042E54);
	op_stkvar	(x,	1);
	set_cmt	(0X7100042E58,	"__int64",	0);
	create_insn	(x=0X7100042E68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042E70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042E74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042E7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042E80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042E8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042E90);
	op_stkvar	(x,	1);
	create_insn	(0X7100042EA8);
	create_insn	(0X7100042EB0);
	create_insn	(x=0X7100042EB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042EC0);
	op_stkvar	(x,	1);
	set_cmt	(0X7100042ECC,	"nn::os::detail::InternalCriticalSectionImplByHorizon *",	0);
	create_insn	(x=0X7100042ED8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042EDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042EE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042EE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042EE8);
	op_stkvar	(x,	1);
	make_array	(0X7100042EF4,	0XC);
	create_insn	(0X7100042F00);
	create_insn	(x=0X7100042F04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042F08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042F0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042F10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042F18);
	op_hex		(x,	1);
	create_insn	(x=0X7100042F28);
	op_hex		(x,	1);
	create_insn	(0X7100042F48);
	create_insn	(x=0X7100042F9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042FAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042FB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042FB8);
	op_stkvar	(x,	1);
	set_cmt	(0X7100042FC8,	"time",	0);
	create_insn	(x=0X7100042FC8);
	op_stkvar	(x,	1);
	create_insn	(0X7100042FDC);
	create_insn	(x=0X7100042FE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042FE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042FEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042FF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100042FFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043004);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043028);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043034);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004303C);
	op_stkvar	(x,	1);
	set_cmt	(0X7100043048,	"nn::os::detail::InternalCriticalSectionImplByHorizon *",	0);
	create_insn	(x=0X7100043054);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043058);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004305C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043060);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004306C);
	op_stkvar	(x,	1);
	create_dword	(0X7100043074);
	make_array	(0X7100043078,	0X8);
	create_insn	(0X7100043080);
	create_insn	(x=0X7100043084);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043088);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004308C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043090);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043094);
	op_stkvar	(x,	1);
	create_insn	(0X71000430F0);
	create_insn	(x=0X7100043140);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043148);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004314C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043150);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043158);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043164);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043174);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043184);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004318C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043194);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000431A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000431B4);
	op_stkvar	(x,	1);
	set_cmt	(0X71000431D8,	"__int64",	0);
	create_insn	(x=0X71000431DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000431E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000431EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X71000431F4,	"_BYTE *",	0);
	create_insn	(x=0X71000431F4);
	op_stkvar	(x,	1);
	set_cmt	(0X71000431F8,	"__int64",	0);
	create_insn	(x=0X7100043204);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043208);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043218);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004321C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043238);
	op_stkvar	(x,	1);
	set_cmt	(0X7100043250,	"time",	0);
	create_insn	(0X7100043264);
	create_insn	(0X710004326C);
	create_insn	(0X7100043274);
	create_insn	(x=0X710004327C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043280);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004328C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043294);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000432A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000432A4);
	op_stkvar	(x,	1);
	set_cmt	(0X71000432C8,	"nn::os::detail::InternalCriticalSectionImplByHorizon *",	0);
	create_insn	(x=0X71000432D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000432D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000432DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000432E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000432E4);
	op_stkvar	(x,	1);
	create_insn	(0X71000432F0);
	create_insn	(x=0X71000432F4);
	op_stkvar	(x,	1);
	create_dword	(0X71000432FC);
	create_insn	(0X7100043300);
	create_insn	(x=0X7100043304);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043308);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004330C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043310);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004331C);
	op_hex		(x,	1);
	create_insn	(0X7100043344);
	create_insn	(x=0X71000433C4);
	op_hex		(x,	1);
	set_cmt	(0X71000433CC,	"__int64",	0);
	create_insn	(x=0X71000433D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000433D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000433E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X71000433E8,	"_BYTE *",	0);
	create_insn	(x=0X71000433E8);
	op_stkvar	(x,	1);
	set_cmt	(0X71000433EC,	"__int64",	0);
	create_insn	(x=0X71000433FC);
	op_stkvar	(x,	1);
	set_cmt	(0X710004343C,	"nn::os::detail::InternalCriticalSectionImplByHorizon *",	0);
	create_insn	(x=0X7100043444);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043448);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004344C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043450);
	op_stkvar	(x,	1);
	create_insn	(0X710004345C);
	make_array	(0X7100043464,	0XC);
	create_insn	(x=0X7100043470);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043474);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043478);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043484);
	op_hex		(x,	1);
	create_insn	(0X71000434AC);
	set_cmt	(0X7100043504,	"nn::os::detail::InternalCriticalSectionImplByHorizon *",	0);
	create_insn	(x=0X7100043508);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004350C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043510);
	op_stkvar	(x,	1);
	create_insn	(0X7100043518);
	create_insn	(x=0X710004351C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043520);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043524);
	op_stkvar	(x,	1);
	create_insn	(0X710004352C);
	set_cmt	(0X7100043538,	"nn::os::detail::InternalCriticalSectionImplByHorizon *",	0);
	create_insn	(x=0X710004353C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043540);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043544);
	op_stkvar	(x,	1);
	make_array	(0X710004354C,	0X4);
	create_insn	(0X7100043550);
	create_insn	(x=0X7100043554);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043558);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004355C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043560);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043564);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043568);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043578);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004362C);
	op_stkvar	(x,	1);
	create_insn	(0X7100043634);
	create_insn	(x=0X7100043694);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043698);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000436A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000436A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000436A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000436AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000436B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000436B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000436BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000436C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000436CC);
	op_stkvar	(x,	1);
	create_insn	(0X71000436FC);
	create_insn	(x=0X7100043700);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043704);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043708);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004370C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043710);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043714);
	op_stkvar	(x,	1);
	create_insn	(0X7100043720);
	create_insn	(0X7100043724);
	create_insn	(x=0X710004372C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043730);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043734);
	op_stkvar	(x,	1);
	create_insn	(0X7100043770);
	set_cmt	(0X71000437A8,	"nn::os::detail::InternalCriticalSectionImplByHorizon *",	0);
	create_insn	(0X71000437A8);
	create_insn	(x=0X71000437AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000437B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000437B4);
	op_stkvar	(x,	1);
	make_array	(0X71000437BC,	0X4);
	create_insn	(0X71000437C0);
	create_insn	(x=0X71000437C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000437C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000437CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000437D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000437D4);
	op_stkvar	(x,	1);
	set_cmt	(0X71000437E0,	"time",	0);
	create_insn	(x=0X71000437E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000437FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043800);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043804);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004380C);
	op_stkvar	(x,	1);
	create_insn	(0X710004382C);
	create_insn	(x=0X7100043830);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043834);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004383C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004385C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043864);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004386C);
	op_hex		(x,	1);
	create_insn	(x=0X7100043870);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043878);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043880);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043888);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000438A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000438AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000438B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000438B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000438BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000438C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000438C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000438CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000438D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000438D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000438DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000438E4);
	op_stkvar	(x,	1);
	set_cmt	(0X71000438F0,	"nn::os::detail::InternalCriticalSectionImplByHorizon *",	0);
	create_insn	(0X71000438F0);
	create_insn	(x=0X71000438FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043900);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043904);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043908);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004390C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043918);
	op_stkvar	(x,	1);
	create_insn	(0X7100043920);
	create_insn	(x=0X710004392C);
	op_hex		(x,	1);
	create_insn	(0X7100043944);
	create_insn	(x=0X7100043950);
	op_hex		(x,	1);
	create_insn	(0X710004395C);
	make_array	(0X7100043964,	0XC);
	create_insn	(x=0X7100043970);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043974);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043978);
	op_stkvar	(x,	1);
	create_insn	(0X71000439BC);
	create_insn	(0X7100043A00);
	create_insn	(x=0X7100043AF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043AF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043AF8);
	op_stkvar	(x,	1);
	create_insn	(0X7100043B00);
	create_insn	(x=0X7100043B04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043B08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043B2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043B30);
	op_stkvar	(x,	1);
	make_array	(0X7100043B38,	0X8);
	create_insn	(0X7100043B40);
	create_insn	(x=0X7100043B44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043B48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043B4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043B88);
	op_hex		(x,	1);
	create_insn	(0X7100043BA0);
	create_insn	(x=0X7100043BA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043BAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043BB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043BBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043C2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043C30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043C38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043C40);
	op_stkvar	(x,	1);
	create_insn	(0X7100043C48);
	create_insn	(0X7100043CE0);
	create_insn	(x=0X7100043CE8);
	op_hex		(x,	1);
	create_insn	(x=0X7100043CF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043CF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043D00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043D04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043D24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043D2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043D34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043D40);
	op_stkvar	(x,	1);
	create_insn	(0X7100043D50);
	create_insn	(0X7100043DBC);
	create_insn	(x=0X7100043DEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043DF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043DF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043E04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043E44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043E4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043E50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043E58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043EAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043EB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043EB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043EC4);
	op_stkvar	(x,	1);
	create_insn	(0X7100043ED0);
	create_insn	(x=0X7100043F38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043F3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043F40);
	op_stkvar	(x,	1);
	make_array	(0X7100043F4C,	0X4);
	create_insn	(0X7100043F50);
	create_insn	(x=0X7100043F54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043F58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043F5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043F78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043F94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043FB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043FBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100043FC0);
	op_stkvar	(x,	1);
	create_insn	(0X7100043FCC);
	create_insn	(x=0X7100043FFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044000);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044004);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044010);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044014);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044030);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044034);
	op_stkvar	(x,	1);
	create_insn	(0X710004403C);
	create_insn	(x=0X7100044040);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044044);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044048);
	op_stkvar	(x,	1);
	create_insn	(0X71000440C4);
	set_cmt	(0X71000440CC,	"clearMode",	0);
	set_cmt	(0X71000440D0,	"type",	0);
	set_cmt	(0X71000440D8,	"event",	0);
	create_insn	(x=0X71000440E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000440FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044100);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044104);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044110);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044118);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004411C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044120);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044124);
	op_stkvar	(x,	1);
	create_insn	(0X71000441F8);
	create_insn	(x=0X7100044214);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044218);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004421C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044220);
	op_stkvar	(x,	1);
	create_insn	(0X7100044228);
	create_insn	(0X7100044264);
	create_insn	(x=0X7100044268);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004426C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044270);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044280);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044290);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044294);
	op_stkvar	(x,	1);
	set_cmt	(0X71000442A4,	"__int64",	0);
	create_insn	(x=0X71000442AC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000442B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X71000442B8,	"_BYTE *",	0);
	create_insn	(x=0X71000442B8);
	op_stkvar	(x,	1);
	set_cmt	(0X71000442BC,	"__int64",	0);
	create_insn	(x=0X71000442C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000442CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000442D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000442DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000442E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000442E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000442E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000442EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044304);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044310);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044328);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044330);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044338);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044340);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044344);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044348);
	op_stkvar	(x,	1);
	create_insn	(0X7100044354);
	create_insn	(0X7100044358);
	create_insn	(x=0X710004435C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044360);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044364);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044374);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044388);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004438C);
	op_stkvar	(x,	1);
	set_cmt	(0X710004439C,	"__int64",	0);
	create_insn	(x=0X71000443A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000443A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X71000443B0,	"_BYTE *",	0);
	create_insn	(x=0X71000443B0);
	op_stkvar	(x,	1);
	set_cmt	(0X71000443B4,	"__int64",	0);
	create_insn	(x=0X71000443BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000443C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000443CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000443D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000443D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000443DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000443E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000443E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000443EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000443FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044404);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004440C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044410);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044430);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044438);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044440);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044444);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044448);
	op_stkvar	(x,	1);
	create_insn	(0X7100044454);
	create_insn	(0X7100044458);
	create_dword	(0X710004445C);
	create_insn	(x=0X7100044460);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044464);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044468);
	op_stkvar	(x,	1);
	create_insn	(0X71000444C0);
	create_insn	(0X71000444D4);
	create_insn	(x=0X71000444EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000444F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000444F4);
	op_stkvar	(x,	1);
	make_array	(0X71000444FC,	0X4);
	create_insn	(0X7100044500);
	create_insn	(x=0X7100044504);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044508);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004451C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044520);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044524);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004452C);
	op_stkvar	(x,	1);
	create_insn	(0X7100044570);
	create_insn	(0X710004459C);
	create_insn	(x=0X71000445A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000445C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000445C4);
	op_stkvar	(x,	1);
	create_insn	(0X71000445D0);
	create_dword	(0X71000445D4);
	make_array	(0X71000445D8,	0X8);
	create_insn	(0X71000445E0);
	create_insn	(x=0X71000445E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000445E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000445EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000445F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000445FC);
	op_hex		(x,	1);
	create_insn	(x=0X7100044610);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100044614);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044620);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100044624);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044630);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044640);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100044648);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100044650);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044668);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100044670);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100044678);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044690);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100044698);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000446A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000446B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000446C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000446CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000446D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000446E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000446EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000446F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044704);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710004470C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100044714);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004471C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044724);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100044730);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044734);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044738);
	op_stkvar	(x,	1);
	create_insn	(0X7100044744);
	create_qword	(0X7100044748);
	create_insn	(0X7100044750);
	create_insn	(x=0X710004475C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X7100044768,	0X8);
	create_insn	(0X7100044770);
	create_insn	(x=0X7100044774);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044778);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004477C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044780);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044788);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000447A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000447B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000447BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000447C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000447D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000447E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000447EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000447F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044800);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100044808);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044810);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004481C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100044824);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044830);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100044838);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044850);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100044858);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044860);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044868);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100044870);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044884);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710004488C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100044894);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000448BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000448C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000448E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X71000448F8);
	create_insn	(x=0X7100044900);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044904);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710004490C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004493C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7100044954);
	create_insn	(x=0X710004495C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044960);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100044968);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044998);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X71000449B0);
	create_insn	(x=0X71000449B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000449BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000449C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000449F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7100044A0C);
	create_insn	(x=0X7100044A14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044A18);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100044A20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044A50);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7100044A68);
	create_insn	(x=0X7100044A70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044A74);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100044A7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044AAC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7100044AC4);
	create_insn	(x=0X7100044ACC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044AD0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100044AD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044B08);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7100044B20);
	create_insn	(x=0X7100044B28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044B2C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100044B34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044B40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044B48);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100044B54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044B58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044B5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044B60);
	op_stkvar	(x,	1);
	create_insn	(0X7100044B6C);
	create_insn	(0X7100044B70);
	create_insn	(x=0X7100044B7C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X7100044B88,	0X8);
	create_insn	(0X7100044B90);
	create_insn	(x=0X7100044B94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044B98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044B9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044BA4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100044BBC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100044BC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044BD0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100044BD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044BE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044BF0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100044BF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044C04);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100044C0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044C14);
	op_hex		(x,	1);
	create_insn	(x=0X7100044C18);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100044C20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044C24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044C30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044C40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044C44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044C48);
	op_stkvar	(x,	1);
	make_array	(0X7100044C54,	0XC);
	create_insn	(0X7100044C60);
	create_insn	(x=0X7100044C64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044C68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044C6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044C74);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100044C8C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100044C94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044CA0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100044CA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044CB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044CC0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100044CC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044CD4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100044CDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044CE4);
	op_hex		(x,	1);
	create_insn	(x=0X7100044CE8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100044CF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044CF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044D00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044D10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044D14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044D18);
	op_stkvar	(x,	1);
	create_insn	(0X7100044D24);
	create_insn	(x=0X7100044D30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044D34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044D54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044D58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044D60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044D64);
	op_stkvar	(x,	1);
	create_insn	(0X7100044D6C);
	create_insn	(0X7100044D70);
	create_insn	(0X7100044D7C);
	create_insn	(x=0X7100044D80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044D94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044D9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044DA8);
	op_stkvar	(x,	1);
	create_insn	(0X7100044DB0);
	create_insn	(0X7100044DB8);
	create_insn	(0X7100044DC4);
	create_insn	(x=0X7100044DC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044DCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044DD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044DF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044DF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044E04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044E10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044E2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044E34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044E3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044E40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044E44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044E48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044E54);
	op_stkvar	(x,	1);
	create_insn	(0X7100044E60);
	create_insn	(x=0X7100044E64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044E68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044E78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044E84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044E88);
	op_stkvar	(x,	1);
	create_insn	(0X7100044E90);
	create_insn	(0X7100044E98);
	create_insn	(x=0X7100044E9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044EA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044EA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044EA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044ED0);
	op_hex		(x,	1);
	create_insn	(x=0X7100044F18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044F1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044F28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044F34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044F48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044F58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044F64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044F68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044F6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044F70);
	op_stkvar	(x,	1);
	create_insn	(0X7100044F7C);
	create_insn	(0X7100044F80);
	create_insn	(x=0X7100044F84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044F98);
	op_hex		(x,	1);
	create_insn	(x=0X7100044FA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044FB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044FBC);
	op_stkvar	(x,	1);
	create_insn	(0X7100044FC4);
	create_insn	(x=0X7100044FC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044FD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044FD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044FDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100044FE8);
	op_stkvar	(x,	1);
	make_array	(0X7100044FF8,	0X8);
	create_insn	(0X7100045000);
	create_insn	(x=0X7100045004);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045008);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004500C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045010);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045058);
	op_stkvar	(x,	1);
	create_insn	(0X7100045148);
	create_insn	(0X7100045150);
	create_insn	(0X7100045158);
	create_insn	(0X7100045160);
	create_insn	(0X7100045168);
	create_insn	(0X7100045170);
	create_insn	(0X7100045178);
	create_insn	(0X7100045180);
	create_insn	(0X7100045188);
	create_insn	(0X7100045190);
	create_insn	(0X7100045198);
	create_insn	(0X71000451A0);
	create_insn	(0X71000451A8);
	create_insn	(0X71000451B0);
	create_insn	(x=0X71000451C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000451CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000451D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000451D4);
	op_stkvar	(x,	1);
	create_insn	(0X71000451E0);
	create_insn	(x=0X71000451E4);
	op_stkvar	(x,	1);
	create_insn	(0X71000451EC);
	create_insn	(x=0X71000451F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000451F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000451F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000451FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045204);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045220);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045230);
	op_hex		(x,	1);
	create_insn	(x=0X7100045264);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045294);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000452A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000452A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000452A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000452AC);
	op_stkvar	(x,	1);
	create_insn	(0X71000452B8);
	make_array	(0X71000452C8,	0X8);
	create_insn	(x=0X71000452D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045308);
	op_stkvar	(x,	1);
	create_insn	(0X7100045310);
	create_dword	(0X7100045314);
	make_array	(0X7100045318,	0X8);
	create_insn	(x=0X7100045320);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045354);
	op_stkvar	(x,	1);
	create_insn	(0X710004535C);
	create_insn	(0X7100045360);
	create_insn	(0X710004536C);
	make_array	(0X7100045374,	0XC);
	create_insn	(x=0X7100045380);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045384);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045398);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000453A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000453A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000453B4);
	op_stkvar	(x,	1);
	make_array	(0X71000453BC,	0X4);
	create_insn	(0X71000453C0);
	create_insn	(x=0X71000453C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000453C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000453D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000453D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000453E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000453EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000453F4);
	op_plain_offset	(x,	1,	0X71000AFCD0);
	op_plain_offset	(x,	129,	0X71000AFCD0);
	create_insn	(x=0X71000453FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100045400);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100045408);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710004540C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100045414);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100045424);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100045428);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100045430);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045438);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045444);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100045450);
	op_plain_offset	(x,	1,	0X71000AFCC8);
	op_plain_offset	(x,	129,	0X71000AFCC8);
	create_insn	(x=0X7100045454);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045460);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100045464);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710004546C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100045478);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004547C);
	op_stkvar	(x,	1);
	create_insn	(0X7100045488);
	create_insn	(x=0X710004548C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000454A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000454AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000454B0);
	op_stkvar	(x,	1);
	create_qword	(0X71000454B8);
	create_insn	(x=0X71000454C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000454C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000454D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000454E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000454E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000454F4);
	op_stkvar	(x,	1);
	create_insn	(0X71000454FC);
	create_insn	(x=0X7100045500);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045504);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045508);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004550C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045510);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004555C);
	op_hex		(x,	1);
	create_insn	(x=0X71000455AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000455B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000455C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000455D0);
	op_hex		(x,	1);
	create_insn	(0X71000455F4);
	create_insn	(x=0X7100045614);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045618);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004561C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045620);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045624);
	op_stkvar	(x,	1);
	create_insn	(0X7100045630);
	create_insn	(x=0X7100045634);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045638);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004563C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045640);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045644);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045648);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045694);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710004569C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000457F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045800);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045808);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045820);
	op_stkvar	(x,	1);
	create_insn	(0X710004582C);
	create_insn	(x=0X7100045850);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710004587C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000458A0);
	op_stkvar	(x,	1);
	set_cmt	(0X71000458DC,	"result",	0);
	set_cmt	(0X71000458EC,	"result",	0);
	create_insn	(x=0X7100045928);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004592C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045930);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045934);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045938);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004593C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045948);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004594C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045970);
	op_stkvar	(x,	1);
	create_insn	(0X710004597C);
	create_insn	(0X7100045984);
	create_insn	(x=0X7100045988);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004598C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045990);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045994);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000459A4);
	op_hex		(x,	1);
	create_insn	(x=0X71000459A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000459CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000459E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000459EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100045A74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045A78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045A7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045A80);
	op_stkvar	(x,	1);
	create_insn	(0X7100045A8C);
	create_insn	(x=0X7100045A94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045A98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045AC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045AD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045AE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045AE4);
	op_stkvar	(x,	1);
	create_insn	(0X7100045AEC);
	create_insn	(0X7100045AF4);
	create_insn	(0X7100045B00);
	create_insn	(0X7100045B14);
	create_insn	(0X7100045B20);
	create_insn	(0X7100045B2C);
	create_insn	(x=0X7100045B30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045B34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045B48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045B4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045B50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045B58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045B60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045B70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045B74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045B7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045B88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045BA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045BA4);
	op_stkvar	(x,	1);
	create_insn	(0X7100045BB0);
	create_insn	(x=0X7100045BB4);
	op_stkvar	(x,	1);
	create_insn	(0X7100045BC0);
	create_insn	(0X7100045BD8);
	create_insn	(0X7100045BE4);
	create_insn	(0X7100045BF8);
	create_insn	(0X7100045C00);
	create_insn	(0X7100045C08);
	create_insn	(x=0X7100045C0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045C10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045C14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045C18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045C1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045C68);
	op_hex		(x,	1);
	create_insn	(x=0X7100045CB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045CBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045CC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045CD4);
	op_hex		(x,	1);
	create_insn	(0X7100045CF8);
	create_insn	(0X7100045D04);
	create_insn	(x=0X7100045D24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045D28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045D2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045D30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045D34);
	op_stkvar	(x,	1);
	create_insn	(0X7100045D40);
	create_insn	(x=0X7100045D44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045D48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045D4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045D50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045D54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045D58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045D98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045DA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045DAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045DB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045DC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045DC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045DC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045DCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045DD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045DD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045DDC);
	op_hex		(x,	1);
	create_insn	(x=0X7100045DE0);
	op_hex		(x,	1);
	create_insn	(x=0X7100045DE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045DEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045DF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045E04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045E10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045E14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045E18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045E28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045E44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045E58);
	op_hex		(x,	1);
	create_insn	(x=0X7100045EA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045EB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045EBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045EC8);
	op_hex		(x,	1);
	create_insn	(0X7100045EEC);
	create_insn	(x=0X7100045F0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045F10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045F14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045F18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045F1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045F20);
	op_stkvar	(x,	1);
	create_insn	(0X7100045F2C);
	create_insn	(x=0X7100045F30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045F34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045F38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045F3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045F40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045F8C);
	op_hex		(x,	1);
	create_insn	(x=0X7100045FD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045FE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045FEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100045FF8);
	op_hex		(x,	1);
	create_insn	(0X710004601C);
	create_insn	(0X7100046028);
	create_insn	(x=0X7100046048);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004604C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046050);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046054);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046058);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046064);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046068);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004606C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000460B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000460E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000460EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000460F4);
	op_stkvar	(x,	1);
	create_insn	(0X71000460FC);
	create_insn	(x=0X7100046100);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046104);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046108);
	op_stkvar	(x,	1);
	create_insn	(0X7100046110);
	create_insn	(x=0X7100046118);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004611C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004614C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004615C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046164);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046168);
	op_stkvar	(x,	1);
	create_insn	(0X7100046170);
	create_insn	(0X7100046178);
	create_insn	(0X7100046184);
	create_insn	(0X710004618C);
	create_insn	(0X7100046194);
	create_insn	(x=0X7100046198);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004619C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000461A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000461A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000461A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000461AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000461EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000461F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046200);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046208);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046214);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046218);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004621C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046220);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046224);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046228);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046230);
	op_hex		(x,	1);
	create_insn	(x=0X7100046234);
	op_hex		(x,	1);
	create_insn	(x=0X7100046238);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046240);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046248);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046258);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046264);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046268);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004626C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004627C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046298);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000462AC);
	op_hex		(x,	1);
	create_insn	(x=0X71000462F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046304);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046310);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004631C);
	op_hex		(x,	1);
	create_insn	(0X7100046340);
	create_insn	(0X710004634C);
	create_insn	(x=0X710004636C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046370);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046374);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046378);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004637C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046380);
	op_stkvar	(x,	1);
	create_insn	(0X710004638C);
	create_insn	(x=0X7100046390);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046394);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046398);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004639C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000463A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000463A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000463E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000463F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000463F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046400);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004640C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046410);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046414);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046418);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004641C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046420);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046428);
	op_hex		(x,	1);
	create_insn	(x=0X710004642C);
	op_hex		(x,	1);
	create_insn	(x=0X7100046430);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046438);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046440);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046450);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004645C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046460);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046464);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046474);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046490);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000464A4);
	op_hex		(x,	1);
	create_insn	(x=0X71000464F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000464FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046508);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046514);
	op_hex		(x,	1);
	create_insn	(0X7100046538);
	create_insn	(x=0X7100046558);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004655C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046560);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046564);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046568);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004656C);
	op_stkvar	(x,	1);
	create_insn	(0X7100046578);
	create_insn	(x=0X7100046580);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046584);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046588);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046590);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100046598);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X71000465C8,	"result",	0);
	set_cmt	(0X71000465D8,	"result",	0);
	create_insn	(x=0X7100046600);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046604);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046608);
	op_stkvar	(x,	1);
	create_insn	(0X7100046610);
	create_insn	(x=0X7100046624);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046628);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004662C);
	op_stkvar	(x,	1);
	make_array	(0X7100046634,	0XC);
	create_insn	(x=0X7100046640);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046650);
	op_stkvar	(x,	1);
	create_insn	(0X7100046658);
	create_insn	(0X7100046660);
	create_insn	(x=0X7100046664);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046668);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004666C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046670);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046678);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100046688);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100046690);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000466AC);
	op_plain_offset	(x,	1,	0X710021D760);
	op_plain_offset	(x,	129,	0X710021D760);
	create_insn	(x=0X71000466B0);
	op_plain_offset	(x,	1,	0X710021D760);
	op_plain_offset	(x,	129,	0X710021D760);
	create_insn	(x=0X71000466C0);
	op_plain_offset	(x,	1,	0X710021D760);
	op_plain_offset	(x,	129,	0X710021D760);
	create_insn	(x=0X71000466C8);
	op_plain_offset	(x,	1,	0X710021D760);
	op_plain_offset	(x,	129,	0X710021D760);
	create_insn	(x=0X71000466D4);
	op_plain_offset	(x,	1,	0X710021D760);
	op_plain_offset	(x,	129,	0X710021D760);
	create_insn	(x=0X71000466DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000466E0);
	op_plain_offset	(x,	1,	0X710021D760);
	op_plain_offset	(x,	129,	0X710021D760);
	create_insn	(x=0X71000466E8);
	op_plain_offset	(x,	1,	0X710021D760);
	op_plain_offset	(x,	129,	0X710021D760);
	create_insn	(x=0X7100046704);
	op_plain_offset	(x,	1,	0X710021D760);
	op_plain_offset	(x,	129,	0X710021D760);
	create_insn	(x=0X7100046708);
	op_plain_offset	(x,	1,	0X710021D760);
	op_plain_offset	(x,	129,	0X710021D760);
	create_insn	(x=0X710004670C);
	op_plain_offset	(x,	1,	0X710021D760);
	op_plain_offset	(x,	129,	0X710021D760);
	create_insn	(x=0X7100046710);
	op_plain_offset	(x,	1,	0X710021D760);
	op_plain_offset	(x,	129,	0X710021D760);
	create_insn	(x=0X7100046714);
	op_plain_offset	(x,	1,	0X710021D760);
	op_plain_offset	(x,	129,	0X710021D760);
	create_insn	(x=0X7100046718);
	op_plain_offset	(x,	1,	0X710021D760);
	op_plain_offset	(x,	129,	0X710021D760);
	create_insn	(x=0X710004671C);
	op_plain_offset	(x,	1,	0X710021D760);
	op_plain_offset	(x,	129,	0X710021D760);
	create_insn	(x=0X7100046720);
	op_plain_offset	(x,	1,	0X710021D760);
	op_plain_offset	(x,	129,	0X710021D760);
	create_insn	(x=0X7100046724);
	op_plain_offset	(x,	1,	0X710021D760);
	op_plain_offset	(x,	129,	0X710021D760);
	create_insn	(x=0X7100046728);
	op_plain_offset	(x,	1,	0X710021D760);
	op_plain_offset	(x,	129,	0X710021D760);
	create_insn	(x=0X710004674C);
	op_hex		(x,	1);
	create_insn	(x=0X7100046750);
	op_plain_offset	(x,	1,	0X710021D760);
	op_plain_offset	(x,	129,	0X710021D760);
	create_insn	(x=0X7100046758);
	op_hex		(x,	1);
	create_insn	(x=0X710004675C);
	op_plain_offset	(x,	1,	0X710021D760);
	op_plain_offset	(x,	129,	0X710021D760);
	create_insn	(x=0X7100046760);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710004676C);
	op_plain_offset	(x,	1,	0X710021D760);
	op_plain_offset	(x,	129,	0X710021D760);
	create_insn	(x=0X7100046774);
	op_plain_offset	(x,	1,	0X710021D760);
	op_plain_offset	(x,	129,	0X710021D760);
	create_insn	(x=0X7100046778);
	op_plain_offset	(x,	1,	0X710021D760);
	op_plain_offset	(x,	129,	0X710021D760);
	create_insn	(x=0X7100046780);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100046788);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046794);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000467A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000467B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000467B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000467B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000467BC);
	op_stkvar	(x,	1);
	create_insn	(0X71000467C8);
	create_insn	(x=0X71000467D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X71000467D4,	"this",	0);
	create_insn	(x=0X71000467D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X71000467DC,	0X4);
	create_insn	(x=0X71000467E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000467E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X71000467EC);
	set_name	(0X71000467EC,	"nullsub_60");
	create_insn	(0X71000467F0);
	set_name	(0X71000467F0,	"nullsub_61");
	create_insn	(0X71000467F4);
	create_insn	(0X71000467FC);
	create_insn	(0X7100046804);
	create_insn	(0X710004680C);
	create_insn	(0X7100046814);
	create_insn	(0X710004681C);
	create_insn	(0X7100046824);
	create_insn	(x=0X710004682C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046830);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046880);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046884);
	op_stkvar	(x,	1);
	create_insn	(0X710004688C);
	create_insn	(0X7100046898);
	create_insn	(0X71000468A4);
	create_insn	(0X71000468B0);
	create_insn	(0X71000468BC);
	create_insn	(x=0X71000468E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000468E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000468F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000468F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000468F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046924);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046938);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004693C);
	op_stkvar	(x,	1);
	create_insn	(0X7100046944);
	create_insn	(0X7100046950);
	set_name	(0X7100046950,	"nullsub_62");
	create_insn	(x=0X7100046954);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046970);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046978);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046984);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046988);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000469B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000469BC);
	op_stkvar	(x,	1);
	create_insn	(0X71000469C4);
	create_insn	(x=0X71000469DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000469E0);
	op_stkvar	(x,	1);
	create_insn	(0X71000469E8);
	create_insn	(0X71000469F0);
	set_name	(0X71000469F0,	"nullsub_63");
	create_insn	(x=0X71000469F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000469F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046A14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046A1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046A24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046A34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046A38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046A40);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100046A48);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100046AD4,	"result",	0);
	set_cmt	(0X7100046ADC,	"a1",	0);
	create_insn	(x=0X7100046AE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046AE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046AEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046AF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046AF8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100046B00);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100046B8C,	"result",	0);
	set_cmt	(0X7100046B94,	"a1",	0);
	create_insn	(x=0X7100046BA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046BA4);
	op_stkvar	(x,	1);
	create_insn	(0X7100046BAC);
	create_insn	(0X7100046BB4);
	set_name	(0X7100046BB4,	"nullsub_64");
	create_insn	(x=0X7100046BB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046BBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046BD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046BE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046BE8);
	op_stkvar	(x,	1);
	create_insn	(0X7100046BF8);
	create_insn	(0X7100046C00);
	create_insn	(x=0X7100046C04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046C08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046C14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046C20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046C28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046C54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046C60);
	op_hex		(x,	1);
	create_insn	(x=0X7100046C7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046C80);
	op_stkvar	(x,	1);
	create_insn	(0X7100046C8C);
	create_insn	(x=0X7100046C94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046C98);
	op_stkvar	(x,	1);
	create_insn	(0X7100046CA4);
	create_insn	(x=0X7100046CAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046CB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046CBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046CF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046CF4);
	op_stkvar	(x,	1);
	create_insn	(0X7100046D00);
	set_cmt	(0X7100046D08,	"switch 7 cases",	0);
	create_insn	(0X7100046D08);
	create_insn	(x=0X7100046D18);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100046D1C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100046D28,	"switch jump",	0);
	set_cmt	(0X7100046D2C,	"jumptable 0000007100046D28 case 0",	1);
	create_insn	(0X7100046D2C);
	set_cmt	(0X7100046D30,	"jumptable 0000007100046D28 default case",	1);
	create_insn	(0X7100046D30);
	set_name	(0X7100046D30,	"def_7100046D28");
	set_cmt	(0X7100046D3C,	"jumptable 0000007100046D28 case 1",	1);
	create_insn	(0X7100046D3C);
	set_cmt	(0X7100046D40,	"jumptable 0000007100046D28 case 2",	1);
	create_insn	(0X7100046D40);
	set_cmt	(0X7100046D44,	"jumptable 0000007100046D28 case 3",	1);
	create_insn	(0X7100046D44);
	set_cmt	(0X7100046D48,	"jumptable 0000007100046D28 case 4",	1);
	create_insn	(0X7100046D48);
	set_cmt	(0X7100046D4C,	"jumptable 0000007100046D28 case 5",	1);
	create_insn	(0X7100046D4C);
	set_cmt	(0X7100046D50,	"jumptable 0000007100046D28 case 6",	1);
	create_insn	(0X7100046D50);
	create_insn	(0X7100046D54);
	create_insn	(x=0X7100046D58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046D5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046D60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046D64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046D74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046D78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046D84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046D8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046D9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046DA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046DA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046DA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046DAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046DB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046DB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046DB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046E04);
	op_hex		(x,	1);
	create_insn	(0X7100046E14);
	create_insn	(0X7100046E20);
	create_insn	(x=0X7100046E24);
	op_hex		(x,	1);
	create_insn	(x=0X7100046E60);
	op_stkvar	(x,	1);
	create_insn	(0X7100046E70);
	create_insn	(x=0X7100046E84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046E94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046EA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046EA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046EA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046EAC);
	op_stkvar	(x,	1);
	create_insn	(0X7100046EB8);
	create_insn	(0X7100046EC0);
	create_insn	(x=0X7100046EC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046EC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046ECC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046ED0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046EDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046EE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046EEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046F00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046F04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046F08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046F0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046F10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046F14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046F18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046F1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046F20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046F5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046F6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046F80);
	op_hex		(x,	1);
	create_insn	(0X7100046F90);
	create_insn	(x=0X7100046F94);
	op_hex		(x,	1);
	create_insn	(x=0X7100046FBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046FD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046FDC);
	op_stkvar	(x,	1);
	create_insn	(0X7100046FE8);
	create_insn	(x=0X7100046FEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100046FFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047008);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004700C);
	op_hex		(x,	1);
	create_insn	(0X7100047024);
	create_insn	(x=0X7100047030);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047034);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047038);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004703C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047048);
	op_stkvar	(x,	1);
	create_insn	(0X7100047058);
	create_insn	(x=0X710004705C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047060);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047064);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047068);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047074);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047080);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047084);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047098);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004709C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000470A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000470A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000470A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000470AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000470B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000470B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000470B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000470F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047104);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047118);
	op_hex		(x,	1);
	create_insn	(0X7100047128);
	create_insn	(x=0X710004712C);
	op_hex		(x,	1);
	create_insn	(x=0X7100047154);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047168);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047174);
	op_stkvar	(x,	1);
	create_insn	(0X7100047180);
	create_insn	(x=0X7100047184);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047194);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000471A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000471A4);
	op_hex		(x,	1);
	create_insn	(0X71000471BC);
	create_insn	(x=0X71000471C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000471CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000471D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000471D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000471E0);
	op_stkvar	(x,	1);
	create_insn	(0X71000471F0);
	create_insn	(x=0X71000471F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000471F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000471FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047200);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004720C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047218);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004721C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047230);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047234);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047238);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004723C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047240);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047244);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047248);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004724C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047250);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004728C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004729C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000472B0);
	op_hex		(x,	1);
	create_insn	(0X71000472C0);
	create_insn	(x=0X71000472C4);
	op_hex		(x,	1);
	create_insn	(x=0X71000472EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047300);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004730C);
	op_stkvar	(x,	1);
	create_insn	(0X7100047318);
	create_insn	(x=0X710004731C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004732C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047338);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004733C);
	op_hex		(x,	1);
	create_insn	(0X7100047354);
	create_insn	(x=0X7100047360);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047364);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047368);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004736C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047378);
	op_stkvar	(x,	1);
	create_insn	(0X7100047388);
	create_insn	(x=0X710004738C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047390);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047394);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047398);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000473A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000473B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000473B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000473C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000473CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000473D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000473D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000473DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000473E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000473E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000473E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000473EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000473F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000473F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047414);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047418);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047430);
	op_hex		(x,	1);
	create_insn	(x=0X7100047470);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004747C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047484);
	op_stkvar	(x,	1);
	create_insn	(0X7100047490);
	create_insn	(x=0X71000474A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000474B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000474C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000474D8);
	op_stkvar	(x,	1);
	create_insn	(0X71000474E4);
	create_insn	(x=0X71000474EC);
	op_stkvar	(x,	1);
	set_cmt	(0X71000474F4,	"result",	0);
	create_insn	(x=0X71000474F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047500);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047504);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047508);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004750C);
	op_stkvar	(x,	1);
	create_insn	(0X7100047518);
	create_insn	(x=0X7100047520);
	op_stkvar	(x,	1);
	create_insn	(0X710004752C);
	create_insn	(x=0X7100047530);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047534);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047538);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004753C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047540);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004754C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047558);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004755C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004756C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047570);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047574);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047578);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047580);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047588);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004758C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047598);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000475A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000475A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000475A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000475AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000475B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000475E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000475F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004760C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047614);
	op_hex		(x,	1);
	create_insn	(x=0X710004761C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047620);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047634);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047638);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047640);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047644);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004764C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004765C);
	op_hex		(x,	1);
	create_insn	(x=0X7100047688);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004769C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000476A8);
	op_stkvar	(x,	1);
	create_insn	(0X71000476B4);
	create_insn	(x=0X71000476B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000476C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000476D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000476D8);
	op_hex		(x,	1);
	create_insn	(0X71000476F0);
	create_insn	(x=0X71000476FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047700);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047704);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047708);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004770C);
	op_stkvar	(x,	1);
	create_insn	(0X7100047718);
	create_insn	(x=0X7100047720);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047724);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047738);
	op_stkvar	(x,	1);
	create_insn	(0X7100047748);
	create_insn	(x=0X710004774C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047750);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047754);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047758);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004775C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047768);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047774);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047778);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047788);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004778C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047790);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047794);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004779C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000477A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000477A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000477B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000477BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000477C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000477C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000477C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000477CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000477FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047814);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047828);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047830);
	op_hex		(x,	1);
	create_insn	(x=0X7100047838);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004783C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047850);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047854);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004785C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047860);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047868);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047878);
	op_hex		(x,	1);
	create_insn	(x=0X71000478A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000478B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000478C4);
	op_stkvar	(x,	1);
	create_insn	(0X71000478D0);
	create_insn	(x=0X71000478D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000478E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000478F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000478F4);
	op_hex		(x,	1);
	create_insn	(0X710004790C);
	create_insn	(x=0X7100047918);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004791C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047920);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047924);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047928);
	op_stkvar	(x,	1);
	create_insn	(0X7100047934);
	create_insn	(x=0X710004793C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047940);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047954);
	op_stkvar	(x,	1);
	make_array	(0X7100047964,	0XC);
	create_insn	(x=0X7100047970);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047974);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004797C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100047980);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100047988);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000479B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000479B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000479B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000479BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000479C8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000479D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000479D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000479E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000479E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000479E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000479EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000479F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000479F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047A08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047A10);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100047A20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047A3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047A44);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100047A4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047ACC);
	op_stkvar	(x,	1);
	create_insn	(0X7100047AE0);
	create_insn	(0X7100047AEC);
	create_insn	(x=0X7100047AF4);
	op_stkvar	(x,	1);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_7(void) {
        auto x;
#define id x

	create_insn	(0X7100047B08);
	create_insn	(x=0X7100047B0C);
	op_stkvar	(x,	1);
	create_insn	(0X7100047B20);
	create_insn	(x=0X7100047B24);
	op_stkvar	(x,	1);
	create_insn	(0X7100047B38);
	create_insn	(x=0X7100047B3C);
	op_stkvar	(x,	1);
	create_insn	(0X7100047B50);
	create_insn	(x=0X7100047B54);
	op_stkvar	(x,	1);
	create_insn	(0X7100047B68);
	create_insn	(x=0X7100047B6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047B8C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100047B90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047BA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047BA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047BAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047BB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047BC4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100047BC8,	"_BYTE *",	0);
	create_insn	(x=0X7100047BC8);
	op_stkvar	(x,	1);
	set_cmt	(0X7100047BD0,	"__int64",	0);
	create_insn	(x=0X7100047BD0);
	op_stkvar	(x,	1);
	set_cmt	(0X7100047BD4,	"__int64",	0);
	create_insn	(x=0X7100047BD8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100047BE0,	"__int64",	0);
	create_insn	(x=0X7100047BE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047BEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047BF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047C00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047C04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047C08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047C10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047C20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047C30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047C34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047C48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047C50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047C60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047C68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047C88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047C94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047CAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047CBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047CC4);
	op_stkvar	(x,	1);
	create_insn	(0X7100047CE0);
	create_insn	(0X7100047CFC);
	create_insn	(x=0X7100047D00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047D04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047D08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047D0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047D10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047D14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047D1C);
	op_stkvar	(x,	1);
	create_insn	(0X7100047D24);
	create_insn	(x=0X7100047D28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047D30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047D38);
	op_stkvar	(x,	1);
	create_insn	(0X7100047D40);
	create_insn	(x=0X7100047D78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047D7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047D8C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100047DCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047DD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047DD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047DDC);
	op_stkvar	(x,	1);
	create_insn	(0X7100047DE4);
	create_insn	(x=0X7100047DE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047DEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047DFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047E00);
	op_stkvar	(x,	1);
	create_insn	(0X7100047E0C);
	create_insn	(x=0X7100047E28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047E70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047E94);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100047E98);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100047EA0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100047EA4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100047EBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047EC4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100047ECC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100047ED4,	"result",	0);
	create_insn	(x=0X7100047EEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047EF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047EFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047F04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047F0C);
	op_stkvar	(x,	1);
	create_dword	(0X7100047F14);
	make_array	(0X7100047F18,	0X8);
	create_insn	(x=0X7100047F20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047F24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047F28);
	op_stkvar	(x,	1);
	create_insn	(0X7100047F98);
	create_insn	(x=0X7100047FAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047FB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100047FB8);
	op_stkvar	(x,	1);
	create_insn	(0X7100047FC0);
	create_insn	(0X7100047FD4);
	create_insn	(x=0X7100047FE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100048008);
	op_stkvar	(x,	1);
	create_insn	(0X7100048010);
	create_insn	(x=0X7100048014);
	op_stkvar	(x,	1);
	set_cmt	(0X7100048028,	"result",	0);
	create_insn	(x=0X7100048044);
	op_stkvar	(x,	1);
	create_insn	(0X710004804C);
	create_insn	(0X7100048050);
	create_insn	(x=0X71000480D0);
	op_hex		(x,	1);
	create_insn	(0X7100048174);
	create_insn	(0X7100048184);
	create_insn	(0X71000481A8);
	create_insn	(0X71000481F8);
	create_insn	(x=0X7100048210);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100048218);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004821C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100048240);
	op_hex		(x,	1);
	create_insn	(x=0X7100048244);
	op_hex		(x,	1);
	create_insn	(x=0X7100048248);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100048268);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000482B8);
	op_hex		(x,	1);
	create_insn	(x=0X71000482CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000482D4);
	op_hex		(x,	1);
	create_insn	(x=0X7100048328);
	op_stkvar	(x,	1);
	create_insn	(0X7100048350);
	create_insn	(x=0X71000483D0);
	op_hex		(x,	1);
	create_insn	(0X7100048474);
	create_insn	(0X7100048484);
	create_insn	(0X71000484A8);
	create_insn	(0X71000484F8);
	create_insn	(x=0X7100048510);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100048514);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100048518);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004853C);
	op_hex		(x,	1);
	create_insn	(x=0X7100048540);
	op_hex		(x,	1);
	create_insn	(x=0X7100048544);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100048568);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000485B8);
	op_hex		(x,	1);
	create_insn	(x=0X71000485CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000485D4);
	op_hex		(x,	1);
	create_insn	(x=0X7100048628);
	op_stkvar	(x,	1);
	create_insn	(0X7100048650);
	create_insn	(0X7100048660);
	create_insn	(0X7100048680);
	create_insn	(0X7100048734);
	set_name	(0X7100048734,	"IPmModule::Initialise");
	create_insn	(x=0X7100048738);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004873C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100048740);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100048744);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100048754);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004875C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100048760);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100048764);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100048770);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004877C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100048798);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000487A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000487B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000487B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000487B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000487D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000487D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000487F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000487F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004882C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100048838);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004884C);
	op_stkvar	(x,	1);
	set_cmt	(0X7100048854,	"result",	0);
	create_insn	(x=0X7100048854);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100048860);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100048864);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100048868);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004886C);
	op_stkvar	(x,	1);
	create_insn	(0X7100048878);
	create_insn	(x=0X7100048880);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004888C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004889C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000488A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000488AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000488B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000488D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000488D4);
	op_plain_offset	(x,	1,	0X7100222000);
	op_plain_offset	(x,	129,	0X7100222000);
	create_insn	(x=0X71000488F4);
	op_plain_offset	(x,	1,	0X7100222000);
	op_plain_offset	(x,	129,	0X7100222000);
	create_insn	(x=0X71000488FC);
	op_plain_offset	(x,	1,	0X7100222000);
	op_plain_offset	(x,	129,	0X7100222000);
	create_insn	(x=0X7100048900);
	op_plain_offset	(x,	1,	0X7100222000);
	op_plain_offset	(x,	129,	0X7100222000);
	create_insn	(x=0X7100048918);
	op_plain_offset	(x,	1,	0X7100222000);
	op_plain_offset	(x,	129,	0X7100222000);
	create_insn	(x=0X7100048924);
	op_plain_offset	(x,	1,	0X7100222000);
	op_plain_offset	(x,	129,	0X7100222000);
	create_insn	(x=0X7100048938);
	op_plain_offset	(x,	1,	0X7100222000);
	op_plain_offset	(x,	129,	0X7100222000);
	create_insn	(x=0X7100048948);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100048960);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100048964);
	op_plain_offset	(x,	1,	0X7100222000);
	op_plain_offset	(x,	129,	0X7100222000);
	create_insn	(x=0X7100048984);
	op_plain_offset	(x,	1,	0X7100222000);
	op_plain_offset	(x,	129,	0X7100222000);
	create_insn	(x=0X710004898C);
	op_plain_offset	(x,	1,	0X7100222000);
	op_plain_offset	(x,	129,	0X7100222000);
	create_insn	(x=0X7100048990);
	op_plain_offset	(x,	1,	0X7100222000);
	op_plain_offset	(x,	129,	0X7100222000);
	create_insn	(x=0X71000489A8);
	op_plain_offset	(x,	1,	0X7100222000);
	op_plain_offset	(x,	129,	0X7100222000);
	create_insn	(x=0X71000489B4);
	op_plain_offset	(x,	1,	0X7100222000);
	op_plain_offset	(x,	129,	0X7100222000);
	create_insn	(x=0X71000489C8);
	op_plain_offset	(x,	1,	0X7100222000);
	op_plain_offset	(x,	129,	0X7100222000);
	create_insn	(0X71000489D8);
	create_insn	(0X71000489DC);
	create_insn	(x=0X71000489E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000489E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000489E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000489EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100048A58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100048A5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100048A60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100048A64);
	op_stkvar	(x,	1);
	create_insn	(0X7100048A70);
	create_insn	(x=0X7100048A80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100048A84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100048AA0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7100048AD0);
	create_insn	(x=0X7100048AD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100048AD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100048AE8);
	op_stkvar	(x,	1);
	create_insn	(0X7100048B08);
	create_insn	(x=0X7100048B0C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100048B14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100048B18);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100048B28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100048B2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100048B30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100048BBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100048BC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100048BC4);
	op_stkvar	(x,	1);
	create_insn	(0X7100048BCC);
	create_insn	(x=0X7100048BD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100048BD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100048BFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100048C00);
	op_stkvar	(x,	1);
	create_insn	(0X7100048C08);
	create_insn	(x=0X7100048C0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100048C10);
	op_stkvar	(x,	1);
	create_insn	(0X7100048C18);
	create_insn	(x=0X7100048C3C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100048C4C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100048C5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100048C60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100048C68);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100048C80);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100048C84);
	op_plain_offset	(x,	1,	0X7100222000);
	op_plain_offset	(x,	129,	0X7100222000);
	create_insn	(x=0X7100048CA4);
	op_plain_offset	(x,	1,	0X7100222000);
	op_plain_offset	(x,	129,	0X7100222000);
	create_insn	(x=0X7100048CAC);
	op_plain_offset	(x,	1,	0X7100222000);
	op_plain_offset	(x,	129,	0X7100222000);
	create_insn	(x=0X7100048CB0);
	op_plain_offset	(x,	1,	0X7100222000);
	op_plain_offset	(x,	129,	0X7100222000);
	create_insn	(x=0X7100048CC8);
	op_plain_offset	(x,	1,	0X7100222000);
	op_plain_offset	(x,	129,	0X7100222000);
	create_insn	(x=0X7100048CD4);
	op_plain_offset	(x,	1,	0X7100222000);
	op_plain_offset	(x,	129,	0X7100222000);
	create_insn	(x=0X7100048CE8);
	op_plain_offset	(x,	1,	0X7100222000);
	op_plain_offset	(x,	129,	0X7100222000);
	create_insn	(0X7100048CF8);
	set_name	(0X7100048CF8,	"GetIpmModuleRequest");
	create_insn	(0X7100048D10);
	create_insn	(0X7100048D18);
	set_name	(0X7100048D18,	"IpmModule::Acknowledge");
	create_insn	(x=0X7100048D1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100048D24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100048D38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100048D4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100048D5C);
	op_stkvar	(x,	1);
	create_insn	(0X7100048D64);
	set_name	(0X7100048D64,	"gIPmModuleService::GetEvent");
	create_insn	(0X7100048D6C);
	set_name	(0X7100048D6C,	"nn::psc::sf::IPmModule::IPmModule");
	create_insn	(x=0X7100048D80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100048D84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100048D88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100048DBC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100048DCC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100048DF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100048DF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100048E00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100048E08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100048E0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100048E10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100048E18);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100048E30);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100048E34);
	op_plain_offset	(x,	1,	0X7100222000);
	op_plain_offset	(x,	129,	0X7100222000);
	create_insn	(x=0X7100048E54);
	op_plain_offset	(x,	1,	0X7100222000);
	op_plain_offset	(x,	129,	0X7100222000);
	create_insn	(x=0X7100048E5C);
	op_plain_offset	(x,	1,	0X7100222000);
	op_plain_offset	(x,	129,	0X7100222000);
	create_insn	(x=0X7100048E60);
	op_plain_offset	(x,	1,	0X7100222000);
	op_plain_offset	(x,	129,	0X7100222000);
	create_insn	(x=0X7100048E78);
	op_plain_offset	(x,	1,	0X7100222000);
	op_plain_offset	(x,	129,	0X7100222000);
	create_insn	(x=0X7100048E84);
	op_plain_offset	(x,	1,	0X7100222000);
	op_plain_offset	(x,	129,	0X7100222000);
	create_insn	(x=0X7100048E98);
	op_plain_offset	(x,	1,	0X7100222000);
	op_plain_offset	(x,	129,	0X7100222000);
	create_insn	(0X7100048EA8);
	create_insn	(x=0X7100048EAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100048EB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100048EB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100048EB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100048EBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100048EC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100048F0C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100048F14);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100049070);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049078);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049080);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049098);
	op_stkvar	(x,	1);
	create_insn	(0X71000490A4);
	create_insn	(x=0X71000490C8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000490F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049118);
	op_stkvar	(x,	1);
	set_cmt	(0X7100049154,	"result",	0);
	set_cmt	(0X7100049164,	"result",	0);
	create_insn	(x=0X71000491A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000491A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000491A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000491AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000491B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000491B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000491C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000491C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000491E8);
	op_stkvar	(x,	1);
	create_insn	(0X71000491F4);
	create_insn	(0X71000491FC);
	create_insn	(x=0X7100049200);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049204);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049208);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004920C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004921C);
	op_hex		(x,	1);
	create_insn	(x=0X7100049220);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049244);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004925C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100049264);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000492EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000492F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000492F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000492F8);
	op_stkvar	(x,	1);
	create_insn	(0X7100049304);
	create_insn	(x=0X710004930C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049310);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049340);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049350);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049358);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004935C);
	op_stkvar	(x,	1);
	create_insn	(0X7100049364);
	create_insn	(0X710004936C);
	create_insn	(x=0X7100049370);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049374);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049388);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004938C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049390);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049398);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000493A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000493B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000493B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000493BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000493C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000493E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000493E4);
	op_stkvar	(x,	1);
	create_insn	(0X71000493F0);
	create_insn	(x=0X71000493F4);
	op_stkvar	(x,	1);
	create_insn	(0X7100049400);
	create_insn	(0X7100049408);
	create_insn	(x=0X7100049410);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049414);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049418);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049464);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100049494);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049498);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000494A0);
	op_stkvar	(x,	1);
	create_insn	(0X71000494A8);
	create_insn	(x=0X71000494AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000494B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000494B4);
	op_stkvar	(x,	1);
	create_insn	(0X71000494BC);
	create_insn	(x=0X71000494C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000494C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000494F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049508);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049510);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049514);
	op_stkvar	(x,	1);
	create_insn	(0X710004951C);
	create_insn	(0X7100049524);
	create_insn	(0X710004953C);
	create_insn	(0X7100049548);
	create_insn	(0X7100049554);
	create_insn	(0X7100049560);
	create_insn	(0X7100049570);
	create_insn	(0X7100049578);
	create_insn	(0X7100049580);
	create_insn	(x=0X7100049584);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049588);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004958C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049590);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049594);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049598);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000495DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000495E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000495F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000495F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049604);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049608);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049610);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049614);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049618);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049620);
	op_hex		(x,	1);
	create_insn	(x=0X7100049624);
	op_hex		(x,	1);
	create_insn	(x=0X7100049628);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049630);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049638);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049648);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049654);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049658);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004965C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049660);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004966C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049684);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049698);
	op_hex		(x,	1);
	create_insn	(0X71000496E8);
	create_insn	(x=0X71000496F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049700);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004970C);
	op_hex		(x,	1);
	create_insn	(0X7100049730);
	create_insn	(x=0X710004973C);
	op_stkvar	(x,	1);
	set_cmt	(0X7100049740,	"result",	0);
	create_insn	(x=0X710004977C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049780);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049784);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049788);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004978C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049790);
	op_stkvar	(x,	1);
	create_insn	(0X710004979C);
	create_insn	(x=0X71000497A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000497A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000497AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000497B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000497BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X71000497EC,	"result",	0);
	set_cmt	(0X71000497FC,	"result",	0);
	create_insn	(x=0X7100049824);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049828);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004982C);
	op_stkvar	(x,	1);
	create_insn	(0X7100049834);
	create_insn	(x=0X7100049848);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004984C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049850);
	op_stkvar	(x,	1);
	make_array	(0X7100049858,	0X8);
	create_insn	(0X7100049860);
	set_name	(0X7100049860,	"SetSys_GetSettingsItemValue");
	create_insn	(x=0X7100049864);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049874);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049880);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049888);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049890);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049894);
	op_stkvar	(x,	1);
	create_insn	(0X71000498A0);
	create_qword	(0X71000498A8);
	create_insn	(0X71000498B0);
	create_insn	(x=0X71000498B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000498B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000498BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000498C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000498E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000498EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049908);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049918);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049920);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004992C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049930);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049934);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049938);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049940);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049944);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049948);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049960);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049968);
	op_stkvar	(x,	1);
	create_insn	(0X7100049980);
	create_insn	(0X7100049988);
	create_insn	(x=0X7100049990);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049994);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049998);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004999C);
	op_stkvar	(x,	1);
	make_array	(0X71000499A8,	0X8);
	create_insn	(0X71000499B0);
	set_name	(0X71000499B0,	"SetSys::GetQuestFlag_");
	create_insn	(x=0X71000499B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000499BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000499C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000499C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000499D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000499D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000499E0);
	op_stkvar	(x,	1);
	create_insn	(0X71000499E8);
	create_insn	(x=0X71000499EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000499F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000499F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000499F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049A24);
	op_hex		(x,	1);
	create_insn	(x=0X7100049A5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049A68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049A74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049A80);
	op_hex		(x,	1);
	create_insn	(0X7100049AA4);
	create_insn	(0X7100049AB0);
	create_insn	(x=0X7100049ABC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049AC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049AC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049AC8);
	op_stkvar	(x,	1);
	create_insn	(0X7100049AD4);
	create_insn	(x=0X7100049AD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049ADC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049AE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049AE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049B08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049B14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049B1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049B24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049B30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049B34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049B3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049B40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049B44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049B4C);
	op_hex		(x,	1);
	create_insn	(x=0X7100049B50);
	op_hex		(x,	1);
	create_insn	(x=0X7100049B54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049B5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049B64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049B74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049B80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049B84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049B88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049B8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049B98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049BB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049BCC);
	op_hex		(x,	1);
	create_insn	(x=0X7100049C04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049C10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049C1C);
	op_hex		(x,	1);
	create_insn	(0X7100049C40);
	create_insn	(0X7100049C4C);
	create_insn	(x=0X7100049C58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049C5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049C60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049C64);
	op_stkvar	(x,	1);
	create_insn	(0X7100049C70);
	create_insn	(x=0X7100049C74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049C78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049C7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049C80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049CAC);
	op_hex		(x,	1);
	create_insn	(x=0X7100049CE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049CF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049D00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049D0C);
	op_hex		(x,	1);
	create_insn	(0X7100049D30);
	create_insn	(x=0X7100049D3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049D40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049D44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049D48);
	op_stkvar	(x,	1);
	create_insn	(0X7100049D54);
	create_insn	(x=0X7100049D58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049D5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049D60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049D64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049D84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049D90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049D98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049DA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049DAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049DB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049DB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049DB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049DBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049DC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049DC8);
	op_hex		(x,	1);
	create_insn	(x=0X7100049DCC);
	op_hex		(x,	1);
	create_insn	(x=0X7100049DD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049DD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049DE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049DF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049DF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049DFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049E00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049E14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049E28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049E44);
	op_hex		(x,	1);
	create_insn	(x=0X7100049E70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049E7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049E88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049E94);
	op_hex		(x,	1);
	create_insn	(0X7100049EB8);
	create_insn	(x=0X7100049EC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049EC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049ECC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049ED0);
	op_stkvar	(x,	1);
	make_array	(0X7100049EDC,	0X4);
	create_insn	(0X7100049EE0);
	set_name	(0X7100049EE0,	"SetSys_GetQuestFlag");
	create_insn	(x=0X7100049EE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049EE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049EF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049EF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049F08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049F20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049F24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049F30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049F48);
	op_stkvar	(x,	1);
	create_insn	(0X7100049F54);
	create_insn	(x=0X7100049F58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049F5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049F60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049F64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049F88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049F94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049F9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049FA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049FB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049FB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049FBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049FC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049FC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049FCC);
	op_hex		(x,	1);
	create_insn	(x=0X7100049FD0);
	op_hex		(x,	1);
	create_insn	(x=0X7100049FD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049FDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049FE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100049FF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A000);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A004);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A008);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A00C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A018);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A030);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A04C);
	op_hex		(x,	1);
	create_insn	(x=0X710004A084);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A090);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A09C);
	op_hex		(x,	1);
	create_insn	(0X710004A0C0);
	create_insn	(0X710004A0CC);
	create_insn	(x=0X710004A0D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A0DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A0E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A0E4);
	op_stkvar	(x,	1);
	create_insn	(0X710004A0F0);
	create_insn	(x=0X710004A0F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A0F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A0FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A100);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A12C);
	op_hex		(x,	1);
	create_insn	(x=0X710004A164);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A170);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A17C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A188);
	op_hex		(x,	1);
	create_insn	(0X710004A1AC);
	create_insn	(0X710004A1B8);
	create_insn	(x=0X710004A1C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A1C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A1CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A1D0);
	op_stkvar	(x,	1);
	create_insn	(0X710004A1DC);
	create_insn	(x=0X710004A1E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A1E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A1E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A1EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A20C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A218);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A220);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A228);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A234);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A238);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A23C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A240);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A244);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A248);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A250);
	op_hex		(x,	1);
	create_insn	(x=0X710004A254);
	op_hex		(x,	1);
	create_insn	(x=0X710004A258);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A260);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A268);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A278);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A284);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A288);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A28C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A29C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A2B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A2D0);
	op_hex		(x,	1);
	create_insn	(x=0X710004A2FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A308);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A314);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A320);
	op_hex		(x,	1);
	create_insn	(0X710004A344);
	create_insn	(x=0X710004A350);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A354);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A358);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A35C);
	op_stkvar	(x,	1);
	make_array	(0X710004A368,	0X8);
	create_insn	(x=0X710004A370);
	op_stkvar	(x,	1);
	set_name	(0X710004A370,	"GetService_SetSys");
	create_insn	(x=0X710004A374);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A378);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A37C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A384);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710004A398);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710004A3B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710004A3C8);
	op_plain_offset	(x,	1,	0X71000B0828);
	op_plain_offset	(x,	129,	0X71000B0828);
	create_insn	(0X710004A3D8);
	create_insn	(x=0X710004A3DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710004A400);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710004A404);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710004A41C);
	op_plain_offset	(x,	1,	0X71000B0828);
	op_plain_offset	(x,	129,	0X71000B0828);
	create_insn	(x=0X710004A42C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710004A438);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710004A458);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710004A45C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A460);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710004A46C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710004A484);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710004A494);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A498);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A49C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A4A0);
	op_stkvar	(x,	1);
	create_insn	(0X710004A4A8);
	create_insn	(x=0X710004A4AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A4CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710004A4D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710004A4F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710004A4FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710004A500);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710004A520);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710004A52C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710004A530);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710004A568);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A56C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A570);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A574);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A57C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710004A58C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710004A594);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710004A5A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710004A5A4);
	op_plain_offset	(x,	1,	0X7100222FA0);
	op_plain_offset	(x,	129,	0X7100222FA0);
	create_insn	(x=0X710004A5A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X710004A5BC);
	create_insn	(0X710004A5D0);
	create_insn	(0X710004A5D4);
	create_insn	(0X710004A5DC);
	create_insn	(x=0X710004A5E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A5E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A5E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A61C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A624);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A62C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A630);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A678);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A67C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A680);
	op_stkvar	(x,	1);
	create_insn	(0X710004A68C);
	create_insn	(0X710004A694);
	create_insn	(0X710004A6A0);
	create_insn	(0X710004A6BC);
	create_insn	(0X710004A6D8);
	create_insn	(0X710004A6E8);
	create_insn	(0X710004A6F8);
	create_insn	(0X710004A704);
	create_insn	(0X710004A710);
	create_insn	(x=0X710004A714);
	op_hex		(x,	1);
	create_insn	(0X710004A720);
	create_insn	(0X710004A72C);
	create_insn	(0X710004A738);
	create_insn	(0X710004A750);
	create_insn	(0X710004A768);
	create_insn	(0X710004A774);
	create_insn	(0X710004A780);
	create_insn	(0X710004A78C);
	create_insn	(0X710004A798);
	create_insn	(0X710004A7A4);
	create_insn	(x=0X710004A7A8);
	op_hex		(x,	1);
	create_insn	(0X710004A7B4);
	create_insn	(0X710004A7C4);
	create_insn	(0X710004A7D4);
	create_insn	(0X710004A7F0);
	create_insn	(0X710004A80C);
	create_insn	(0X710004A818);
	create_insn	(0X710004A828);
	create_insn	(0X710004A834);
	create_insn	(x=0X710004A838);
	op_hex		(x,	1);
	create_insn	(0X710004A844);
	create_insn	(0X710004A850);
	create_insn	(x=0X710004A854);
	op_hex		(x,	1);
	create_insn	(0X710004A860);
	create_insn	(0X710004A86C);
	create_insn	(0X710004A878);
	create_insn	(0X710004A894);
	create_insn	(0X710004A8B0);
	create_insn	(0X710004A8BC);
	create_insn	(0X710004A8CC);
	create_insn	(0X710004A8E4);
	create_insn	(x=0X710004A8E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A90C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004A918);
	op_stkvar	(x,	1);
	create_insn	(0X710004A924);
	create_insn	(0X710004A930);
	create_insn	(0X710004A93C);
	create_insn	(0X710004A94C);
	create_insn	(0X710004A95C);
	create_insn	(0X710004A96C);
	create_insn	(0X710004A980);
	create_insn	(0X710004A98C);
	create_insn	(x=0X710004A990);
	op_hex		(x,	1);
	create_insn	(0X710004A99C);
	create_insn	(0X710004A9A8);
	create_insn	(x=0X710004A9AC);
	op_hex		(x,	1);
	create_insn	(0X710004A9B8);
	create_insn	(0X710004A9C4);
	create_insn	(0X710004A9D0);
	create_insn	(0X710004A9DC);
	create_insn	(0X710004A9E8);
	create_insn	(0X710004A9F4);
	create_insn	(0X710004AA00);
	create_insn	(0X710004AA0C);
	create_insn	(0X710004AA20);
	create_insn	(0X710004AA30);
	create_insn	(0X710004AA3C);
	create_insn	(0X710004AA48);
	create_insn	(0X710004AA54);
	create_insn	(x=0X710004AA58);
	op_hex		(x,	1);
	create_insn	(0X710004AA64);
	create_insn	(0X710004AA70);
	create_insn	(0X710004AA7C);
	create_insn	(0X710004AA8C);
	create_insn	(0X710004AA98);
	create_insn	(x=0X710004AA9C);
	op_hex		(x,	1);
	create_insn	(0X710004AAA8);
	create_insn	(0X710004AAB4);
	create_insn	(0X710004AAC0);
	create_insn	(0X710004AACC);
	create_insn	(x=0X710004AAD0);
	op_hex		(x,	1);
	create_insn	(0X710004AADC);
	create_insn	(0X710004AAE8);
	create_insn	(0X710004AAF4);
	create_insn	(0X710004AB00);
	create_insn	(x=0X710004AB04);
	op_hex		(x,	1);
	create_insn	(0X710004AB10);
	create_insn	(0X710004AB1C);
	create_insn	(0X710004AB28);
	create_insn	(0X710004AB38);
	create_insn	(0X710004AB48);
	create_insn	(0X710004AB54);
	create_insn	(0X710004AB60);
	create_insn	(0X710004AB70);
	create_insn	(0X710004AB7C);
	create_insn	(0X710004AB88);
	create_insn	(0X710004AB94);
	create_insn	(0X710004ABA0);
	create_insn	(0X710004ABAC);
	create_insn	(0X710004ABB8);
	create_insn	(0X710004ABC4);
	create_insn	(x=0X710004ABC8);
	op_hex		(x,	1);
	create_insn	(0X710004ABD4);
	create_insn	(0X710004ABE0);
	create_insn	(0X710004ABEC);
	create_insn	(0X710004ABF8);
	create_insn	(0X710004AC04);
	create_insn	(0X710004AC10);
	create_insn	(0X710004AC1C);
	create_insn	(x=0X710004AC20);
	op_hex		(x,	1);
	create_insn	(0X710004AC2C);
	create_insn	(0X710004AC48);
	create_insn	(0X710004AC64);
	create_insn	(0X710004AC70);
	create_insn	(x=0X710004AC74);
	op_hex		(x,	1);
	create_insn	(0X710004AC80);
	create_insn	(0X710004AC8C);
	create_insn	(x=0X710004AC90);
	op_hex		(x,	1);
	create_insn	(0X710004AC9C);
	create_insn	(0X710004ACA8);
	create_insn	(x=0X710004ACAC);
	op_hex		(x,	1);
	create_insn	(0X710004ACB8);
	create_insn	(0X710004ACC4);
	create_insn	(0X710004ACD0);
	create_insn	(0X710004ACDC);
	create_insn	(0X710004ACE8);
	create_insn	(0X710004ACF4);
	create_insn	(0X710004AD04);
	create_insn	(0X710004AD10);
	create_insn	(x=0X710004AD14);
	op_hex		(x,	1);
	create_insn	(0X710004AD20);
	create_insn	(0X710004AD2C);
	create_insn	(x=0X710004AD30);
	op_hex		(x,	1);
	create_insn	(0X710004AD3C);
	create_insn	(0X710004AD48);
	create_insn	(x=0X710004AD4C);
	op_hex		(x,	1);
	create_insn	(0X710004AD58);
	create_insn	(0X710004AD64);
	create_insn	(x=0X710004AD68);
	op_hex		(x,	1);
	create_insn	(0X710004AD74);
	create_insn	(0X710004AD80);
	create_insn	(0X710004AD90);
	create_insn	(0X710004AD9C);
	create_insn	(x=0X710004ADA0);
	op_hex		(x,	1);
	create_insn	(0X710004ADAC);
	create_insn	(0X710004ADB8);
	create_insn	(0X710004ADC8);
	create_insn	(0X710004ADD4);
	create_insn	(x=0X710004ADD8);
	op_hex		(x,	1);
	create_insn	(0X710004ADE4);
	create_insn	(0X710004ADF0);
	create_insn	(0X710004ADFC);
	create_insn	(0X710004AE08);
	create_insn	(0X710004AE14);
	create_insn	(0X710004AE20);
	create_insn	(0X710004AE2C);
	create_insn	(0X710004AE38);
	create_insn	(0X710004AE44);
	create_insn	(0X710004AE50);
	create_insn	(0X710004AE60);
	create_insn	(0X710004AE6C);
	create_insn	(0X710004AE84);
	create_insn	(0X710004AE94);
	create_insn	(0X710004AEA0);
	create_insn	(x=0X710004AEA4);
	op_hex		(x,	1);
	create_insn	(0X710004AEB0);
	create_insn	(0X710004AEC8);
	create_insn	(0X710004AEE0);
	create_insn	(0X710004AEEC);
	create_insn	(0X710004AEF8);
	create_insn	(0X710004AF04);
	create_insn	(0X710004AF10);
	create_insn	(0X710004AF1C);
	create_insn	(0X710004AF28);
	create_insn	(0X710004AF34);
	create_insn	(0X710004AF40);
	create_insn	(0X710004AF4C);
	create_insn	(0X710004AF68);
	create_insn	(0X710004AF84);
	create_insn	(0X710004AF90);
	create_insn	(x=0X710004AF94);
	op_hex		(x,	1);
	create_insn	(0X710004AFA0);
	create_insn	(0X710004AFAC);
	create_insn	(0X710004AFB8);
	create_insn	(0X710004AFC4);
	create_insn	(0X710004AFD0);
	create_insn	(0X710004AFDC);
	create_insn	(x=0X710004AFE0);
	op_hex		(x,	1);
	create_insn	(0X710004AFEC);
	create_insn	(0X710004AFF8);
	create_insn	(x=0X710004AFFC);
	op_hex		(x,	1);
	create_insn	(0X710004B008);
	create_insn	(0X710004B014);
	create_insn	(x=0X710004B018);
	op_hex		(x,	1);
	create_insn	(0X710004B024);
	create_insn	(0X710004B034);
	create_insn	(0X710004B044);
	create_insn	(0X710004B050);
	create_insn	(0X710004B060);
	create_insn	(0X710004B06C);
	create_insn	(0X710004B07C);
	create_insn	(0X710004B088);
	create_insn	(0X710004B094);
	create_insn	(0X710004B0A0);
	create_insn	(0X710004B0AC);
	create_insn	(0X710004B0B8);
	create_insn	(0X710004B0C4);
	create_insn	(x=0X710004B0C8);
	op_hex		(x,	1);
	create_insn	(0X710004B0D4);
	create_insn	(0X710004B0E0);
	create_insn	(x=0X710004B0E4);
	op_hex		(x,	1);
	create_insn	(0X710004B0F0);
	create_insn	(0X710004B0FC);
	create_insn	(0X710004B10C);
	create_insn	(0X710004B118);
	create_insn	(0X710004B124);
	create_insn	(0X710004B130);
	create_insn	(0X710004B140);
	create_insn	(0X710004B15C);
	create_insn	(0X710004B178);
	create_insn	(0X710004B194);
	create_insn	(0X710004B1B0);
	create_insn	(0X710004B1CC);
	create_insn	(0X710004B1E8);
	create_insn	(0X710004B204);
	create_insn	(0X710004B220);
	create_insn	(0X710004B230);
	create_insn	(0X710004B240);
	create_insn	(0X710004B25C);
	create_insn	(0X710004B278);
	create_insn	(0X710004B284);
	create_insn	(x=0X710004B288);
	op_hex		(x,	1);
	create_insn	(0X710004B294);
	create_insn	(0X710004B2A0);
	create_insn	(0X710004B2B0);
	create_insn	(0X710004B2CC);
	create_insn	(0X710004B2E8);
	create_insn	(0X710004B2F4);
	create_insn	(x=0X710004B2F8);
	op_hex		(x,	1);
	create_insn	(0X710004B304);
	create_insn	(0X710004B310);
	create_insn	(0X710004B31C);
	create_insn	(0X710004B324);
	create_insn	(0X710004B32C);
	create_insn	(x=0X710004B330);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B334);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B338);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B33C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B368);
	op_hex		(x,	1);
	create_insn	(x=0X710004B3A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B3B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B3BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B3C8);
	op_hex		(x,	1);
	create_insn	(0X710004B3EC);
	create_insn	(x=0X710004B3F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B3FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B400);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B404);
	op_stkvar	(x,	1);
	create_insn	(0X710004B410);
	create_insn	(x=0X710004B414);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B418);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B41C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B420);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B448);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B450);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B458);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B484);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B48C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B494);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B49C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B4A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B4B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B4B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B4B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B4C0);
	op_hex		(x,	1);
	create_insn	(x=0X710004B4C4);
	op_hex		(x,	1);
	create_insn	(x=0X710004B4CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B4D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B4E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B4F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B4F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B4F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B4FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B508);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B520);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B53C);
	op_hex		(x,	1);
	create_insn	(x=0X710004B574);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B580);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B58C);
	op_hex		(x,	1);
	create_insn	(0X710004B5B0);
	create_insn	(x=0X710004B5BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B5C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B5C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B5C8);
	op_stkvar	(x,	1);
	create_insn	(0X710004B5D4);
	create_insn	(0X710004B5DC);
	create_insn	(x=0X710004B5E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B5E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B5E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B5EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B618);
	op_hex		(x,	1);
	create_insn	(x=0X710004B650);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B65C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B668);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B674);
	op_hex		(x,	1);
	create_insn	(0X710004B698);
	create_insn	(0X710004B6A4);
	create_insn	(x=0X710004B6C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B6CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B6D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B6D4);
	op_stkvar	(x,	1);
	create_insn	(0X710004B6E0);
	create_insn	(x=0X710004B6E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B6E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B6EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B6F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B71C);
	op_hex		(x,	1);
	create_insn	(x=0X710004B754);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B760);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B76C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B778);
	op_hex		(x,	1);
	create_insn	(0X710004B79C);
	create_insn	(0X710004B7A8);
	create_insn	(x=0X710004B7C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B7C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B7CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B7D0);
	op_stkvar	(x,	1);
	create_insn	(0X710004B7DC);
	create_insn	(x=0X710004B7E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B7E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B7E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B7EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B818);
	op_hex		(x,	1);
	create_insn	(x=0X710004B874);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B880);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B88C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B898);
	op_hex		(x,	1);
	create_insn	(0X710004B8BC);
	create_insn	(x=0X710004B8C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B8CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B8D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B8D4);
	op_stkvar	(x,	1);
	create_insn	(0X710004B8E0);
	create_insn	(x=0X710004B8E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B8E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B8EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B8F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B91C);
	op_hex		(x,	1);
	create_insn	(x=0X710004B954);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B960);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B96C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B978);
	op_hex		(x,	1);
	create_insn	(0X710004B99C);
	create_insn	(0X710004B9A8);
	create_insn	(x=0X710004B9B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B9B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B9BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B9C0);
	op_stkvar	(x,	1);
	create_insn	(0X710004B9CC);
	create_insn	(x=0X710004B9D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B9D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B9D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004B9DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004BA08);
	op_hex		(x,	1);
	create_insn	(x=0X710004BA4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004BA58);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004BA64);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004BA70);
	op_hex		(x,	1);
	create_insn	(0X710004BA94);
	create_insn	(x=0X710004BAA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004BAA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004BAA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004BAAC);
	op_stkvar	(x,	1);
	create_insn	(0X710004BAB8);
	create_insn	(x=0X710004BABC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004BAC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004BAC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004BAC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004BAF4);
	op_hex		(x,	1);
	create_insn	(x=0X710004BB2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004BB38);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004BB44);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004BB50);
	op_hex		(x,	1);
	create_insn	(0X710004BB74);
	create_insn	(0X710004BB80);
	create_insn	(x=0X710004BB94);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004BB98);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004BB9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004BBA0);
	op_stkvar	(x,	1);
	create_insn	(0X710004BBAC);
	create_insn	(x=0X710004BBB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004BBB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004BBB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004BBF4);
	op_hex		(x,	1);
	create_insn	(x=0X710004BC38);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004BC3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004BC40);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004BC4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004BC58);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004BC64);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004BC70);
	op_hex		(x,	1);
	create_insn	(x=0X710004BC94);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004BC98);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004BC9C);
	op_stkvar	(x,	1);
	create_insn	(0X710004BCA8);
	create_insn	(x=0X710004BCB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004BCB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004BCBC);
	op_stkvar	(x,	1);
	create_insn	(0X710004BCC8);
	create_insn	(x=0X710004BCCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004BCD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004BCD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004BCD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004BD08);
	op_hex		(x,	1);
	create_insn	(x=0X710004BD44);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004BD50);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004BD5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004BD68);
	op_hex		(x,	1);
	create_insn	(0X710004BD8C);
	create_insn	(0X710004BD98);
	create_insn	(x=0X710004BDA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004BDA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004BDAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004BDB0);
	op_stkvar	(x,	1);
	create_insn	(0X710004BDBC);
	create_insn	(x=0X710004BDC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004BDC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004BDC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004BDCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004BE0C);
	op_hex		(x,	1);
	create_insn	(x=0X710004BE3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004BE48);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004BE54);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004BE60);
	op_hex		(x,	1);
	create_insn	(0X710004BE84);
	create_insn	(x=0X710004BE90);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004BE94);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004BE98);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004BE9C);
	op_stkvar	(x,	1);
	create_insn	(0X710004BEA8);
	create_insn	(x=0X710004BEAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004BEB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004BEB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004BEB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004BEE4);
	op_hex		(x,	1);
	create_insn	(x=0X710004BF1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004BF28);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004BF34);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004BF40);
	op_hex		(x,	1);
	create_insn	(0X710004BF64);
	create_insn	(0X710004BF70);
	create_insn	(x=0X710004BF84);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004BF88);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004BF8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004BF90);
	op_stkvar	(x,	1);
	create_insn	(0X710004BF9C);
	create_insn	(x=0X710004BFA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004BFA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004BFA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004BFAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004BFD8);
	op_hex		(x,	1);
	create_insn	(x=0X710004C028);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C034);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C040);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C04C);
	op_hex		(x,	1);
	create_insn	(0X710004C070);
	create_insn	(x=0X710004C07C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C080);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C084);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C088);
	op_stkvar	(x,	1);
	create_insn	(0X710004C094);
	create_insn	(x=0X710004C098);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C09C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C0A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C0A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C0A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C0AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C0E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C0E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C0F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C11C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C128);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C12C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C134);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C13C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C144);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C148);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C150);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C154);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C158);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C15C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C164);
	op_hex		(x,	1);
	create_insn	(x=0X710004C168);
	op_hex		(x,	1);
	create_insn	(x=0X710004C170);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C178);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C188);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C194);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C198);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C1A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C1AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C1B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C1CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C1E8);
	op_hex		(x,	1);
	create_insn	(x=0X710004C214);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C220);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C22C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C238);
	op_hex		(x,	1);
	create_insn	(0X710004C25C);
	create_insn	(0X710004C268);
	create_insn	(x=0X710004C274);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C278);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C27C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C280);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C284);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C288);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C294);
	op_stkvar	(x,	1);
	create_insn	(0X710004C29C);
	create_insn	(x=0X710004C2A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C2A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C2A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C2AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C2B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C2B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C2EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C2F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C2FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C328);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710004C338);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C340);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C350);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C358);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C35C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C36C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C374);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C384);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C390);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C394);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C39C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C3A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C3A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C3B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C3BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C3C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C3D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C3D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C3E8);
	op_hex		(x,	1);
	create_insn	(x=0X710004C428);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C434);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C440);
	op_hex		(x,	1);
	create_insn	(0X710004C464);
	create_insn	(0X710004C470);
	create_insn	(x=0X710004C47C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C480);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C484);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C488);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C48C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C490);
	op_stkvar	(x,	1);
	create_insn	(0X710004C49C);
	create_insn	(0X710004C4A4);
	create_insn	(x=0X710004C4A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C4AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C4B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C4B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C4E0);
	op_hex		(x,	1);
	create_insn	(x=0X710004C518);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C524);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C530);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C53C);
	op_hex		(x,	1);
	create_insn	(0X710004C560);
	create_insn	(0X710004C56C);
	create_insn	(x=0X710004C580);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C584);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C588);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C58C);
	op_stkvar	(x,	1);
	create_insn	(0X710004C598);
	create_insn	(x=0X710004C59C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C5A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C5A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C5E0);
	op_hex		(x,	1);
	create_insn	(x=0X710004C624);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C628);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C62C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C638);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C644);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C650);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C65C);
	op_hex		(x,	1);
	create_insn	(x=0X710004C680);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C684);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C688);
	op_stkvar	(x,	1);
	create_insn	(0X710004C694);
	create_insn	(x=0X710004C6A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C6A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C6A8);
	op_stkvar	(x,	1);
	create_insn	(0X710004C6B4);
	create_insn	(x=0X710004C6B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C6BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C6C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C6C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C6EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C6F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C6FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C728);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C730);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C738);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C740);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C74C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C754);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C758);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C75C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C764);
	op_hex		(x,	1);
	create_insn	(x=0X710004C768);
	op_hex		(x,	1);
	create_insn	(x=0X710004C770);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C778);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C788);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C794);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C798);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C79C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C7A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C7AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C7C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C7E0);
	op_hex		(x,	1);
	create_insn	(x=0X710004C818);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C824);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C830);
	op_hex		(x,	1);
	create_insn	(0X710004C854);
	create_insn	(x=0X710004C860);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C864);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C868);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C86C);
	op_stkvar	(x,	1);
	create_insn	(0X710004C878);
	create_insn	(0X710004C880);
	create_insn	(x=0X710004C884);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C888);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C88C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C890);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C8B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C8C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C8C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C8F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C900);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C904);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C90C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C914);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C91C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C920);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C928);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C930);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C934);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C93C);
	op_hex		(x,	1);
	create_insn	(x=0X710004C940);
	op_hex		(x,	1);
	create_insn	(x=0X710004C948);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C950);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C960);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C96C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C970);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C974);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C978);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C984);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C99C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C9B8);
	op_hex		(x,	1);
	create_insn	(x=0X710004C9F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004C9FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004CA08);
	op_hex		(x,	1);
	create_insn	(0X710004CA2C);
	create_insn	(x=0X710004CA38);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004CA3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004CA40);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004CA44);
	op_stkvar	(x,	1);
	create_insn	(0X710004CA50);
	create_insn	(0X710004CA58);
	create_insn	(x=0X710004CA5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004CA60);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004CA64);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004CA68);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004CA98);
	op_hex		(x,	1);
	create_insn	(x=0X710004CAD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004CAE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004CAEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004CAF8);
	op_hex		(x,	1);
	create_insn	(0X710004CB1C);
	create_insn	(0X710004CB28);
	create_insn	(x=0X710004CB34);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004CB38);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004CB3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004CB40);
	op_stkvar	(x,	1);
	create_insn	(0X710004CB4C);
	create_insn	(x=0X710004CB50);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004CB54);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004CB58);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004CB5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004CB9C);
	op_hex		(x,	1);
	create_insn	(x=0X710004CBC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004CBD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004CBE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004CBEC);
	op_hex		(x,	1);
	create_insn	(0X710004CC10);
	create_insn	(x=0X710004CC1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004CC20);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004CC24);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004CC28);
	op_stkvar	(x,	1);
	create_insn	(0X710004CC34);
	create_insn	(x=0X710004CC38);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004CC3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004CC40);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004CC44);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004CC70);
	op_hex		(x,	1);
	create_insn	(x=0X710004CCA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004CCB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004CCC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004CCCC);
	op_hex		(x,	1);
	create_insn	(0X710004CCF0);
	create_insn	(0X710004CCFC);
	create_insn	(x=0X710004CD08);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004CD0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004CD10);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004CD14);
	op_stkvar	(x,	1);
	create_insn	(0X710004CD20);
	create_insn	(x=0X710004CD24);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004CD28);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004CD2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004CD30);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004CD5C);
	op_hex		(x,	1);
	create_insn	(x=0X710004CD98);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004CDA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004CDB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004CDBC);
	op_hex		(x,	1);
	create_insn	(0X710004CDE0);
	create_insn	(x=0X710004CDEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004CDF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004CDF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004CDF8);
	op_stkvar	(x,	1);
	create_insn	(0X710004CE04);
	create_insn	(x=0X710004CE08);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004CE0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004CE10);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004CE14);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004CE40);
	op_hex		(x,	1);
	create_insn	(x=0X710004CE78);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004CE84);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004CE90);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004CE9C);
	op_hex		(x,	1);
	create_insn	(0X710004CEC0);
	create_insn	(0X710004CECC);
	create_insn	(x=0X710004CEF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004CEF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004CEF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004CEFC);
	op_stkvar	(x,	1);
	create_insn	(0X710004CF08);
	create_insn	(x=0X710004CF0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004CF10);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004CF14);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004CF18);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004CF44);
	op_hex		(x,	1);
	create_insn	(x=0X710004CFA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004CFB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004CFC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004CFCC);
	op_hex		(x,	1);
	create_insn	(0X710004CFF0);
	create_insn	(x=0X710004CFFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D000);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D004);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D008);
	op_stkvar	(x,	1);
	create_insn	(0X710004D014);
	create_insn	(x=0X710004D018);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D01C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D020);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D024);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D050);
	op_hex		(x,	1);
	create_insn	(x=0X710004D088);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D094);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D0A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D0AC);
	op_hex		(x,	1);
	create_insn	(0X710004D0D0);
	create_insn	(0X710004D0DC);
	create_insn	(x=0X710004D0F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D0F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D0F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D0FC);
	op_stkvar	(x,	1);
	create_insn	(0X710004D108);
	create_insn	(x=0X710004D10C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D110);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D114);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D118);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D144);
	op_hex		(x,	1);
	create_insn	(x=0X710004D17C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D188);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D194);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D1A0);
	op_hex		(x,	1);
	create_insn	(0X710004D1C4);
	create_insn	(0X710004D1D0);
	create_insn	(x=0X710004D1E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D1E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D1EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D1F0);
	op_stkvar	(x,	1);
	create_insn	(0X710004D1FC);
	create_insn	(x=0X710004D200);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D204);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D208);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D20C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D238);
	op_hex		(x,	1);
	create_insn	(x=0X710004D288);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D294);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D2A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D2AC);
	op_hex		(x,	1);
	create_insn	(0X710004D2D0);
	create_insn	(x=0X710004D2DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D2E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D2E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D2E8);
	op_stkvar	(x,	1);
	create_insn	(0X710004D2F4);
	create_insn	(x=0X710004D2F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D2FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D300);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D304);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D324);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D330);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D338);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D340);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D34C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D350);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D354);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D358);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D35C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D360);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D368);
	op_hex		(x,	1);
	create_insn	(x=0X710004D36C);
	op_hex		(x,	1);
	create_insn	(x=0X710004D370);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D378);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D380);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D390);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D39C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D3A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D3A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D3B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D3CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D3E8);
	op_hex		(x,	1);
	create_insn	(x=0X710004D414);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D420);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D42C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D438);
	op_hex		(x,	1);
	create_insn	(0X710004D45C);
	create_insn	(x=0X710004D468);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D46C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D470);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D474);
	op_stkvar	(x,	1);
	create_insn	(0X710004D480);
	create_insn	(x=0X710004D484);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D488);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D48C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D490);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D4BC);
	op_hex		(x,	1);
	create_insn	(x=0X710004D4F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D500);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D50C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D518);
	op_hex		(x,	1);
	create_insn	(0X710004D53C);
	create_insn	(0X710004D548);
	create_insn	(x=0X710004D554);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D558);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D55C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D560);
	op_stkvar	(x,	1);
	create_insn	(0X710004D56C);
	create_insn	(x=0X710004D570);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D574);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D578);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D57C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D5A8);
	op_hex		(x,	1);
	create_insn	(x=0X710004D5F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D604);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D610);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D61C);
	op_hex		(x,	1);
	create_insn	(0X710004D640);
	create_insn	(x=0X710004D64C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D650);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D654);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D658);
	op_stkvar	(x,	1);
	create_insn	(0X710004D664);
	create_insn	(x=0X710004D668);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D66C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D670);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D674);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D6A0);
	op_hex		(x,	1);
	create_insn	(x=0X710004D6DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D6E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D6F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D700);
	op_hex		(x,	1);
	create_insn	(0X710004D724);
	create_insn	(x=0X710004D730);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D734);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D738);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D73C);
	op_stkvar	(x,	1);
	create_insn	(0X710004D748);
	create_insn	(x=0X710004D74C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D750);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D754);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D758);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D784);
	op_hex		(x,	1);
	create_insn	(x=0X710004D7BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D7C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D7D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D7E0);
	op_hex		(x,	1);
	create_insn	(0X710004D804);
	create_insn	(0X710004D810);
	create_insn	(x=0X710004D834);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D838);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D83C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D840);
	op_stkvar	(x,	1);
	create_insn	(0X710004D84C);
	create_insn	(x=0X710004D850);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D854);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D858);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D85C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D888);
	op_hex		(x,	1);
	create_insn	(x=0X710004D8F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D8FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D908);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D914);
	op_hex		(x,	1);
	create_insn	(0X710004D938);
	create_insn	(x=0X710004D944);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D948);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D94C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D950);
	op_stkvar	(x,	1);
	create_insn	(0X710004D95C);
	create_insn	(x=0X710004D960);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D964);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D968);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D96C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D998);
	op_hex		(x,	1);
	create_insn	(x=0X710004D9D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D9DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D9E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004D9F4);
	op_hex		(x,	1);
	create_insn	(0X710004DA18);
	create_insn	(0X710004DA24);
	create_insn	(x=0X710004DA48);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DA4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DA50);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DA54);
	op_stkvar	(x,	1);
	create_insn	(0X710004DA60);
	create_insn	(x=0X710004DA64);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DA68);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DA6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DA70);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DA9C);
	op_hex		(x,	1);
	create_insn	(x=0X710004DB00);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DB0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DB18);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DB24);
	op_hex		(x,	1);
	create_insn	(0X710004DB48);
	create_insn	(x=0X710004DB54);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DB58);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DB5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DB60);
	op_stkvar	(x,	1);
	create_insn	(0X710004DB6C);
	create_insn	(x=0X710004DB70);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DB74);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DB78);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DB7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DB9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DBA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DBB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DBB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DBC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DBC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DBCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DBD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DBD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DBD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DBE0);
	op_hex		(x,	1);
	create_insn	(x=0X710004DBE4);
	op_hex		(x,	1);
	create_insn	(x=0X710004DBE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DBF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DBF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DC08);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DC14);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DC18);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DC1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DC2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DC44);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DC60);
	op_hex		(x,	1);
	create_insn	(x=0X710004DC8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DC98);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DCA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DCB0);
	op_hex		(x,	1);
	create_insn	(0X710004DCD4);
	create_insn	(x=0X710004DCE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DCE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DCE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DCEC);
	op_stkvar	(x,	1);
	create_insn	(0X710004DCF8);
	create_insn	(x=0X710004DCFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DD00);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DD04);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DD08);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DD34);
	op_hex		(x,	1);
	create_insn	(x=0X710004DD6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DD78);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DD84);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DD90);
	op_hex		(x,	1);
	create_insn	(0X710004DDB4);
	create_insn	(0X710004DDC0);
	create_insn	(x=0X710004DDE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DDE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DDEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DDF0);
	op_stkvar	(x,	1);
	create_insn	(0X710004DDFC);
	create_insn	(x=0X710004DE00);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DE04);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DE08);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DE0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DE38);
	op_hex		(x,	1);
	create_insn	(x=0X710004DE70);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DE7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DE88);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DE94);
	op_hex		(x,	1);
	create_insn	(0X710004DEB8);
	create_insn	(0X710004DEC4);
	create_insn	(x=0X710004DED8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DEDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DEE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DEE4);
	op_stkvar	(x,	1);
	create_insn	(0X710004DEF0);
	create_insn	(x=0X710004DEF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DEF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DEFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DF00);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DF2C);
	op_hex		(x,	1);
	create_insn	(x=0X710004DF7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DF88);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DF94);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DFA0);
	op_hex		(x,	1);
	create_insn	(0X710004DFC4);
	create_insn	(x=0X710004DFD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DFD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DFD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DFDC);
	op_stkvar	(x,	1);
	create_insn	(0X710004DFE8);
	create_insn	(x=0X710004DFEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DFF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DFF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004DFF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E024);
	op_hex		(x,	1);
	create_insn	(x=0X710004E05C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E068);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E074);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E080);
	op_hex		(x,	1);
	create_insn	(0X710004E0A4);
	create_insn	(0X710004E0B0);
	create_insn	(x=0X710004E0BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E0C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E0C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E0C8);
	op_stkvar	(x,	1);
	create_insn	(0X710004E0D4);
	create_insn	(x=0X710004E0D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E0DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E0E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E0E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E110);
	op_hex		(x,	1);
	create_insn	(x=0X710004E154);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E160);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E16C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E178);
	op_hex		(x,	1);
	create_insn	(0X710004E19C);
	create_insn	(x=0X710004E1A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E1AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E1B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E1B4);
	op_stkvar	(x,	1);
	create_insn	(0X710004E1C0);
	create_insn	(x=0X710004E1C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E1C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E1CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E1D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E200);
	op_hex		(x,	1);
	create_insn	(x=0X710004E23C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E248);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E254);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E260);
	op_hex		(x,	1);
	create_insn	(0X710004E284);
	create_insn	(0X710004E290);
	create_insn	(x=0X710004E2D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E2D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E2DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E2E0);
	op_stkvar	(x,	1);
	create_insn	(0X710004E2EC);
	create_insn	(x=0X710004E2F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E2F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E2F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E2FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E33C);
	op_hex		(x,	1);
	create_insn	(x=0X710004E3CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E3D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E3E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E3F0);
	op_hex		(x,	1);
	create_insn	(0X710004E414);
	create_insn	(x=0X710004E420);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E424);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E428);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E42C);
	op_stkvar	(x,	1);
	create_insn	(0X710004E438);
	create_insn	(x=0X710004E43C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E440);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E444);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E448);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E474);
	op_hex		(x,	1);
	create_insn	(x=0X710004E4AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E4B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E4C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E4D0);
	op_hex		(x,	1);
	create_insn	(0X710004E4F4);
	create_insn	(0X710004E500);
	create_insn	(x=0X710004E514);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E518);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E51C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E520);
	op_stkvar	(x,	1);
	create_insn	(0X710004E52C);
	create_insn	(x=0X710004E530);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E534);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E538);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E53C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E55C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E568);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E570);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E578);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E584);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E588);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E58C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E590);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E594);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E598);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E5A0);
	op_hex		(x,	1);
	create_insn	(x=0X710004E5A4);
	op_hex		(x,	1);
	create_insn	(x=0X710004E5A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E5B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E5B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E5C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E5D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E5D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E5DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E5EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E604);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E620);
	op_hex		(x,	1);
	create_insn	(x=0X710004E64C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E658);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E664);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E670);
	op_hex		(x,	1);
	create_insn	(0X710004E694);
	create_insn	(x=0X710004E6A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E6A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E6A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E6AC);
	op_stkvar	(x,	1);
	create_insn	(0X710004E6B8);
	create_insn	(x=0X710004E6BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E6C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E6C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E6C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E6E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E6F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E6FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E704);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E710);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E714);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E718);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E71C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E720);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E724);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E72C);
	op_hex		(x,	1);
	create_insn	(x=0X710004E730);
	op_hex		(x,	1);
	create_insn	(x=0X710004E734);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E73C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E744);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E754);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E760);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E764);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E768);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E778);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E790);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E7AC);
	op_hex		(x,	1);
	create_insn	(x=0X710004E7D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E7E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E7F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E7FC);
	op_hex		(x,	1);
	create_insn	(0X710004E820);
	create_insn	(x=0X710004E82C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E830);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E834);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E838);
	op_stkvar	(x,	1);
	make_array	(0X710004E844,	0XC);
	create_insn	(0X710004E850);
	set_name	(0X710004E850,	"SetSys_GetExternalSteadyClockSourceId_W");
	create_insn	(x=0X710004E854);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E860);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E868);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E874);
	op_stkvar	(x,	1);
	create_dword	(0X710004E87C);
	create_insn	(0X710004E880);
	set_name	(0X710004E880,	"SetSys_SetExternalSteadyClockSourceId_");
	create_insn	(x=0X710004E884);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E890);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E898);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E8A4);
	op_stkvar	(x,	1);
	create_dword	(0X710004E8AC);
	create_insn	(0X710004E8B0);
	set_name	(0X710004E8B0,	"SetSys_GetExternalSteadyClockInternalOffset_");
	create_insn	(x=0X710004E8B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E8BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E8C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E8C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E8D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E8D4);
	op_stkvar	(x,	1);
	create_insn	(0X710004E8E0);
	create_qword	(0X710004E8E8);
	create_insn	(0X710004E8F0);
	set_name	(0X710004E8F0,	"SetSys::SetExternalSteadyClockInternalOffset_");
	create_insn	(x=0X710004E8F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E900);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E908);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E914);
	op_stkvar	(x,	1);
	create_dword	(0X710004E91C);
	create_insn	(0X710004E920);
	set_name	(0X710004E920,	"SetSys_GetUserSystemClockContext_W");
	create_insn	(x=0X710004E924);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E930);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E938);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E944);
	op_stkvar	(x,	1);
	create_dword	(0X710004E94C);
	create_insn	(0X710004E950);
	set_name	(0X710004E950,	"SetSys_SetUserSystemClockContext_");
	create_insn	(x=0X710004E954);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E960);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E968);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E974);
	op_stkvar	(x,	1);
	create_dword	(0X710004E97C);
	create_insn	(0X710004E980);
	set_name	(0X710004E980,	"SetSys_GetNetworkSystemClockContext_");
	create_insn	(x=0X710004E984);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E990);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E998);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E9A4);
	op_stkvar	(x,	1);
	create_dword	(0X710004E9AC);
	create_insn	(0X710004E9B0);
	set_name	(0X710004E9B0,	"SetSys_SetNetworkSystemClockContext_");
	create_insn	(x=0X710004E9B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E9C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E9C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E9D4);
	op_stkvar	(x,	1);
	create_dword	(0X710004E9DC);
	create_insn	(0X710004E9E0);
	set_name	(0X710004E9E0,	"SetSys_IsUserSystemClockAutomaticCorrectionEnabled_");
	create_insn	(x=0X710004E9E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E9EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E9F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004E9F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EA00);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EA04);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EA10);
	op_stkvar	(x,	1);
	create_qword	(0X710004EA18);
	create_insn	(0X710004EA20);
	set_name	(0X710004EA20,	"SetSys_SetUserSystemClockAutomaticCorrection_");
	create_insn	(x=0X710004EA24);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EA30);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EA38);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EA44);
	op_stkvar	(x,	1);
	create_dword	(0X710004EA4C);
	create_insn	(0X710004EA50);
	set_name	(0X710004EA50,	"SetSys_GetUserSystemClockAutomaticCorrectionUpdatedTime_");
	create_insn	(x=0X710004EA54);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EA60);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EA68);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EA74);
	op_stkvar	(x,	1);
	create_dword	(0X710004EA7C);
	create_insn	(0X710004EA80);
	set_name	(0X710004EA80,	"SetSys_SetUserSystemClockAutoCorrectionUpdatedTime_");
	create_insn	(x=0X710004EA84);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EA90);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EA98);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EAA4);
	op_stkvar	(x,	1);
	create_dword	(0X710004EAAC);
	create_insn	(0X710004EAB0);
	set_name	(0X710004EAB0,	"SetSys_GetExternalSteadyClockSourceId");
	create_insn	(x=0X710004EAB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EAB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EAC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EAC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EAD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EAF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EAF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EB00);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EB18);
	op_stkvar	(x,	1);
	make_array	(0X710004EB24,	0XC);
	create_insn	(0X710004EB30);
	set_name	(0X710004EB30,	"SetSys_SetExternalSteadyClockSourceId");
	create_insn	(x=0X710004EB34);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EB38);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EB44);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EB48);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EB58);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EB70);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EB74);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EB80);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EB98);
	op_stkvar	(x,	1);
	make_array	(0X710004EBA4,	0XC);
	create_insn	(0X710004EBB0);
	set_name	(0X710004EBB0,	"SetSys_GetExternalSteadyClockInternalOffset");
	create_insn	(x=0X710004EBB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EBB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EBC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EBC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EBD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EBF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EBF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EC00);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EC18);
	op_stkvar	(x,	1);
	make_array	(0X710004EC24,	0XC);
	create_insn	(0X710004EC30);
	set_name	(0X710004EC30,	"SetSys::SetExternalSteadyClockInternalOffset");
	create_insn	(x=0X710004EC34);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EC38);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EC44);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EC48);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EC58);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EC70);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EC74);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EC80);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EC98);
	op_stkvar	(x,	1);
	make_array	(0X710004ECA4,	0XC);
	create_insn	(0X710004ECB0);
	set_name	(0X710004ECB0,	"SetSys_GetUserSystemClockContext");
	create_insn	(x=0X710004ECB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004ECB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004ECC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004ECC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004ECD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004ECF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004ECF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004ED00);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004ED18);
	op_stkvar	(x,	1);
	make_array	(0X710004ED24,	0XC);
	create_insn	(0X710004ED30);
	set_name	(0X710004ED30,	"SetSys_SetUserSystemClockContext");
	create_insn	(x=0X710004ED34);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004ED38);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004ED44);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004ED48);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004ED58);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004ED70);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004ED74);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004ED80);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004ED98);
	op_stkvar	(x,	1);
	make_array	(0X710004EDA4,	0XC);
	create_insn	(0X710004EDB0);
	set_name	(0X710004EDB0,	"SetSys_GetNetworkSystemClockContext");
	create_insn	(x=0X710004EDB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EDB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EDC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EDC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EDD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EDF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EDF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EE00);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EE18);
	op_stkvar	(x,	1);
	make_array	(0X710004EE24,	0XC);
	create_insn	(0X710004EE30);
	set_name	(0X710004EE30,	"SetSys_SetNetworkSystemClockContext");
	create_insn	(x=0X710004EE34);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EE38);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EE44);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EE48);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EE58);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EE70);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EE74);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EE80);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EE98);
	op_stkvar	(x,	1);
	make_array	(0X710004EEA4,	0XC);
	create_insn	(0X710004EEB0);
	set_name	(0X710004EEB0,	"SetSys_IsUserSystemClockAutomaticCorrectionEnabled");
	create_insn	(x=0X710004EEB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EEB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EEC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EEC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EED8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EEF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EEF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EF00);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EF18);
	op_stkvar	(x,	1);
	make_array	(0X710004EF24,	0XC);
	create_insn	(0X710004EF30);
	set_name	(0X710004EF30,	"SetSys_SetUserSystemClockAutomaticCorrection");
	create_insn	(x=0X710004EF34);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EF38);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EF44);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EF48);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EF58);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EF70);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EF74);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EF80);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EF84);
	op_hex		(x,	1);
	create_insn	(x=0X710004EF98);
	op_stkvar	(x,	1);
	make_array	(0X710004EFA4,	0XC);
	create_insn	(0X710004EFB0);
	set_name	(0X710004EFB0,	"SetSys_GetUserSystemClockAutomaticCorrectionUpdatedTime");
	create_insn	(x=0X710004EFB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EFB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EFC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EFC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EFD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EFF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004EFF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F000);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F018);
	op_stkvar	(x,	1);
	make_array	(0X710004F024,	0XC);
	create_insn	(0X710004F030);
	set_name	(0X710004F030,	"SetSys_SetUserSystemClockAutoCorrectionUpdatedTime");
	create_insn	(x=0X710004F034);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F038);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F044);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F048);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F058);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F070);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F074);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F080);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F098);
	op_stkvar	(x,	1);
	make_array	(0X710004F0A4,	0XC);
	create_insn	(0X710004F0B0);
	set_name	(0X710004F0B0,	"SetSys_GetDeviceTimeZoneLocationName_");
	create_insn	(x=0X710004F0B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F0C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F0C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F0D4);
	op_stkvar	(x,	1);
	create_dword	(0X710004F0DC);
	create_insn	(0X710004F0E0);
	set_name	(0X710004F0E0,	"SetSys_SetDeviceTimeZoneLocationName_");
	create_insn	(x=0X710004F0E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F0F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F0F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F104);
	op_stkvar	(x,	1);
	create_dword	(0X710004F10C);
	create_insn	(0X710004F110);
	set_name	(0X710004F110,	"SetSys_GetDeviceTimeZoneLocationUpdatedTime_");
	create_insn	(x=0X710004F114);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F120);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F128);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F134);
	op_stkvar	(x,	1);
	create_dword	(0X710004F13C);
	create_insn	(0X710004F140);
	set_name	(0X710004F140,	"SetSys_SetDeviceTimeZoneLocationUpdatedTime_");
	create_insn	(x=0X710004F144);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F150);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F158);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F164);
	op_stkvar	(x,	1);
	create_dword	(0X710004F16C);
	create_insn	(0X710004F170);
	set_name	(0X710004F170,	"SetSys_GetDeviceTimeZoneLocationName");
	create_insn	(x=0X710004F174);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F178);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F184);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F188);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F198);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F1B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F1B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F1C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F1D8);
	op_stkvar	(x,	1);
	make_array	(0X710004F1E4,	0XC);
	create_insn	(0X710004F1F0);
	set_name	(0X710004F1F0,	"SetSys_SetDeviceTimeZoneLocationName");
	create_insn	(x=0X710004F1F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F1F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F204);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F208);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F218);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F230);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F234);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F240);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F258);
	op_stkvar	(x,	1);
	make_array	(0X710004F264,	0XC);
	create_insn	(0X710004F270);
	set_name	(0X710004F270,	"SetSys_GetDeviceTimeZoneLocationUpdatedTime");
	create_insn	(x=0X710004F274);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F278);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F284);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F288);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F298);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F2B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F2B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F2C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F2D8);
	op_stkvar	(x,	1);
	make_array	(0X710004F2E4,	0XC);
	create_insn	(0X710004F2F0);
	set_name	(0X710004F2F0,	"SetSys_SetDeviceTimeZoneLocationUpdatedTime");
	create_insn	(x=0X710004F2F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F2F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F304);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F308);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F318);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F330);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F334);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F340);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F358);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F364);
	op_stkvar	(x,	1);
	set_name	(0X710004F364,	"nn::srepo::SystemReport::SystemReport");
	create_insn	(x=0X710004F368);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F398);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F39C);
	op_stkvar	(x,	1);
	make_array	(0X710004F3A4,	0XC);
	create_insn	(0X710004F3B0);
	set_name	(0X710004F3B0,	"nn::srepo::SystemReport::SetEventId");
	create_insn	(x=0X710004F3B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F3B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F3C4);
	op_stkvar	(x,	1);
	create_insn	(0X710004F5D0);
	create_insn	(x=0X710004F5D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F5D8);
	op_stkvar	(x,	1);
	create_insn	(0X710004F5E4);
	create_insn	(0X710004F5F0);
	create_insn	(0X710004F5F8);
	create_insn	(0X710004F600);
	create_insn	(0X710004F608);
	create_insn	(0X710004F610);
	create_insn	(0X710004F618);
	create_insn	(0X710004F620);
	create_insn	(0X710004F628);
	create_insn	(0X710004F630);
	create_insn	(0X710004F638);
	create_insn	(0X710004F640);
	create_insn	(0X710004F648);
	create_insn	(0X710004F650);
	create_insn	(0X710004F658);
	create_insn	(0X710004F660);
	create_insn	(0X710004F668);
	create_insn	(0X710004F670);
	create_insn	(0X710004F678);
	create_insn	(0X710004F680);
	create_insn	(0X710004F688);
	create_insn	(0X710004F690);
	create_insn	(0X710004F698);
	create_insn	(0X710004F6A0);
	create_insn	(0X710004F6A8);
	create_insn	(0X710004F6B0);
	create_insn	(0X710004F6B8);
	create_insn	(0X710004F6C0);
	create_insn	(0X710004F6C8);
	create_insn	(0X710004F6D0);
	create_insn	(x=0X710004F6EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F6F0);
	op_stkvar	(x,	1);
	create_insn	(0X710004F6FC);
	create_insn	(0X710004F708);
	set_name	(0X710004F708,	"nn::srepo::SystemReport::SetApplicationId");
	create_insn	(0X710004F718);
	create_insn	(0X710004F728);
	create_insn	(0X710004F738);
	create_insn	(0X710004F748);
	create_insn	(0X710004F758);
	set_name	(0X710004F758,	"nn::srepo::SystemReport::Report");
	create_insn	(x=0X710004F75C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F760);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F764);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F788);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710004F78C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710004F790);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710004F798);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710004F7A8);
	op_plain_offset	(x,	1,	0X7100222FB0);
	op_plain_offset	(x,	129,	0X7100222FB0);
	create_insn	(x=0X710004F7B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710004F7B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710004F7CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F7DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F7E4);
	op_stkvar	(x,	1);
	create_insn	(0X710004F7F4);
	create_insn	(x=0X710004F7FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F800);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F804);
	op_stkvar	(x,	1);
	create_insn	(0X710004F810);
	create_insn	(x=0X710004F818);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F81C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F820);
	op_stkvar	(x,	1);
	create_insn	(0X710004F82C);
	create_insn	(x=0X710004F838);
	op_plain_offset	(x,	1,	0X7100222FB0);
	op_plain_offset	(x,	129,	0X7100222FB0);
	create_insn	(x=0X710004F83C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710004F840);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710004F854);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F864);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F86C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F878);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F8AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F8B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F8B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004F8C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710004F8C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710004F8D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710004F8D8);
	op_plain_offset	(x,	1,	0X7100222FB0);
	op_plain_offset	(x,	129,	0X7100222FB0);
	create_insn	(x=0X710004F8DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X710004F8E8);
	create_dword	(0X710004F8EC);
	create_insn	(0X710004F8F0);
	set_name	(0X710004F8F0,	"GetNameLen");
	create_insn	(0X710004F908);
	create_insn	(0X710004F960);
	create_insn	(0X710004F96C);
	make_array	(0X710004F984,	0XC);
	create_insn	(0X710004F990);
	create_insn	(0X710004F9C0);
	create_insn	(0X710004FA20);
	make_array	(0X710004FA2C,	0X4);
	create_insn	(0X710004FA30);
	create_insn	(0X710004FA50);
	create_insn	(0X710004FA58);
	create_insn	(0X710004FA74);
	create_insn	(0X710004FAB8);
	create_insn	(0X710004FAC0);
	create_insn	(0X710004FAF4);
	set_name	(0X710004FAF4,	"ResetReport_Maybe");
	create_insn	(x=0X710004FAF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FAFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FB08);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FB10);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FB14);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FB28);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FB30);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FB34);
	op_stkvar	(x,	1);
	create_insn	(0X710004FB40);
	create_insn	(x=0X710004FB44);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FB48);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FB4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FB50);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FB60);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FB94);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FB98);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FB9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FBA0);
	op_stkvar	(x,	1);
	create_insn	(0X710004FBAC);
	create_insn	(x=0X710004FBCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FBD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FBD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FBDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FBE0);
	op_hex		(x,	1);
	create_insn	(x=0X710004FBF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FC08);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FC0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FC10);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FC14);
	op_stkvar	(x,	1);
	create_insn	(0X710004FC20);
	create_insn	(x=0X710004FC30);
	op_stkvar	(x,	1);
	create_insn	(0X710004FC44);
	create_insn	(x=0X710004FC48);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FC4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FC50);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FC54);
	op_stkvar	(x,	1);
	create_insn	(0X710004FC60);
	create_insn	(x=0X710004FC74);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FC94);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FCA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FCA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FCA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FCAC);
	op_stkvar	(x,	1);
	create_insn	(0X710004FCB8);
	create_insn	(x=0X710004FCBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FCC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FCC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FCC8);
	op_stkvar	(x,	1);
	make_array	(0X710004FCD4,	0XC);
	create_insn	(0X710004FCE0);
	create_insn	(x=0X710004FCE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FCE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FCF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FCF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FCF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FD00);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FD08);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FD10);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FD14);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FD1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FD2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FD30);
	op_stkvar	(x,	1);
	create_insn	(0X710004FD3C);
	create_insn	(x=0X710004FD40);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FD4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FD58);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FD64);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FD6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FD98);
	op_hex		(x,	1);
	create_insn	(x=0X710004FDD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FDE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FDF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FDF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FDFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FE00);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FE04);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FE08);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FE14);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FE20);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FE24);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FE38);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FE3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FE48);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FE4C);
	op_stkvar	(x,	1);
	create_insn	(0X710004FE5C);
	create_insn	(x=0X710004FE60);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FE64);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FE68);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FE70);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FE80);
	op_stkvar	(x,	1);
	create_insn	(0X710004FE88);
	create_insn	(x=0X710004FE90);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FEA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FEA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FEAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FEB0);
	op_stkvar	(x,	1);
	create_insn	(0X710004FEC0);
	create_insn	(x=0X710004FEC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FEC8);
	op_stkvar	(x,	1);
	create_insn	(0X710004FED4);
	create_insn	(0X710004FED8);
	create_insn	(x=0X710004FEDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FEE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FEE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FEE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FEF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FF20);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FF24);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FF28);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FF2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FF38);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FF40);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FF44);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FF48);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FF60);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FF70);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FF74);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FF78);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FF7C);
	op_stkvar	(x,	1);
	create_insn	(0X710004FF88);
	create_insn	(x=0X710004FF8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FF90);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FF94);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FF98);
	op_stkvar	(x,	1);
	create_insn	(0X710004FFA4);
	create_insn	(x=0X710004FFD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FFD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FFD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FFDC);
	op_stkvar	(x,	1);
	create_insn	(0X710004FFE8);
	create_insn	(x=0X710004FFEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FFF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FFF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710004FFF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050008);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050030);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050034);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050038);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005003C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050048);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005004C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050050);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050054);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050058);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050064);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050068);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050080);
	op_hex		(x,	1);
	create_insn	(x=0X7100050084);
	op_hex		(x,	1);
	create_insn	(x=0X7100050090);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005009C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000500AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000500B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000500B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000500B8);
	op_stkvar	(x,	1);
	create_insn	(0X71000500C4);
	create_insn	(x=0X71000500C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000500CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000500D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000500D4);
	op_stkvar	(x,	1);
	create_insn	(0X71000500E0);
	create_insn	(x=0X710005010C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050110);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050114);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050118);
	op_stkvar	(x,	1);
	create_insn	(0X7100050124);
	create_insn	(x=0X710005012C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050130);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050134);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050138);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050148);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050170);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050174);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050178);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005017C);
	op_stkvar	(x,	1);
	create_insn	(0X7100050188);
	create_insn	(x=0X7100050190);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050194);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050198);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005019C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000501A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000501A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000501AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000501B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000501C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000501C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000501D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000501E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000501EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000501F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000501F4);
	op_stkvar	(x,	1);
	create_insn	(0X7100050200);
	create_insn	(x=0X7100050204);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050208);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005020C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050210);
	op_stkvar	(x,	1);
	create_insn	(0X710005021C);
	create_insn	(x=0X7100050220);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050224);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050228);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005022C);
	op_stkvar	(x,	1);
	create_insn	(0X7100050238);
	create_insn	(x=0X7100050264);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050268);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005026C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050270);
	op_stkvar	(x,	1);
	create_insn	(0X710005027C);
	create_insn	(x=0X7100050280);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050284);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050288);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005028C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005029C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000502C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000502C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000502CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000502D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000502DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000502E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000502E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000502EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000502F4);
	op_hex		(x,	1);
	create_insn	(x=0X7100050304);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050314);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050318);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005031C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050320);
	op_stkvar	(x,	1);
	create_insn	(0X710005032C);
	create_insn	(x=0X7100050330);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050334);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050338);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005033C);
	op_stkvar	(x,	1);
	create_insn	(0X7100050348);
	create_insn	(x=0X7100050374);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050378);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005037C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050380);
	op_stkvar	(x,	1);
	make_array	(0X710005038C,	0X4);
	create_insn	(0X7100050390);
	create_insn	(x=0X7100050394);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050398);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005039C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000503A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000503AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000503B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000503B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000503C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000503C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000503CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000503D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000503DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000503E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000503EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000503F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000503F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050404);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050408);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050414);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050420);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050428);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005042C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050430);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050434);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050440);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005044C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050450);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050460);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050470);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050480);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050484);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050488);
	op_stkvar	(x,	1);
	make_array	(0X7100050494,	0XC);
	create_insn	(x=0X71000504A0);
	op_hex		(x,	1);
	create_insn	(0X71000504B4);
	create_insn	(x=0X71000504B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000504C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000504CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000504D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000504D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000504DC);
	op_stkvar	(x,	1);
	create_insn	(0X71000504E8);
	set_name	(0X71000504E8,	"nullsub_65");
	make_array	(0X71000504EC,	0X4);
	create_insn	(0X71000504F0);
	create_insn	(x=0X71000504F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000504F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000504FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050500);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050504);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050508);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050510);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050518);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050520);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050524);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050528);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050540);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050558);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050560);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005057C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050584);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050590);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000505A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000505BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X71000505EC);
	create_insn	(x=0X7100050600);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005063C);
	op_plain_offset	(x,	1,	0X7100222FD0);
	op_plain_offset	(x,	129,	0X7100222FD0);
	create_insn	(x=0X7100050644);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100050664);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100050674);
	op_hex		(x,	1);
	create_insn	(0X710005068C);
	create_insn	(x=0X7100050690);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000506DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7100050708);
	create_insn	(x=0X710005070C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005071C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050724);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005074C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100050754);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005075C);
	op_stkvar	(x,	1);
	set_cmt	(0X7100050774,	"switch 11 cases",	0);
	create_insn	(x=0X7100050784);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100050790,	"switch jump",	0);
	set_cmt	(0X7100050794,	"jumptable 0000007100050790 cases 3,5",	1);
	create_insn	(0X7100050794);
	set_cmt	(0X71000507C8,	"jumptable 0000007100050790 cases 4,6",	1);
	create_insn	(0X71000507C8);
	create_insn	(0X71000507FC);
	create_insn	(0X710005081C);
	set_cmt	(0X710005083C,	"jumptable 0000007100050790 case 1",	1);
	create_insn	(0X710005083C);
	set_cmt	(0X7100050870,	"jumptable 0000007100050790 case 2",	1);
	create_insn	(0X7100050870);
	set_cmt	(0X71000508A4,	"jumptable 0000007100050790 case 7",	1);
	create_insn	(0X71000508A4);
	set_cmt	(0X71000508D8,	"jumptable 0000007100050790 case 8",	1);
	create_insn	(0X71000508D8);
	set_cmt	(0X71000508FC,	"jumptable 0000007100050790 case 9",	1);
	create_insn	(0X71000508FC);
	create_insn	(x=0X7100050924);
	op_hex		(x,	1);
	set_cmt	(0X7100050934,	"jumptable 0000007100050790 case 10",	1);
	create_insn	(0X7100050934);
	set_cmt	(0X7100050960,	"jumptable 0000007100050790 case 11",	1);
	create_insn	(0X7100050960);
	create_insn	(0X7100050998);
	create_insn	(0X71000509B8);
	create_insn	(0X71000509D8);
	create_insn	(0X71000509F8);
	create_insn	(x=0X7100050A00);
	op_hex		(x,	1);
	create_insn	(0X7100050A28);
	create_insn	(x=0X7100050A3C);
	op_hex		(x,	1);
	create_insn	(0X7100050A4C);
	create_insn	(0X7100050A98);
	create_insn	(0X7100050ABC);
	create_insn	(0X7100050AF8);
	create_insn	(x=0X7100050B30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050B38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050B3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050B44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050B54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050B60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050B64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050B68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050B6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050B70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050B74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050B80);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100050B84);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100050B98,	"jumptable 0000007100050790 default case",	1);
	create_insn	(0X7100050B98);
	set_name	(0X7100050B98,	"def_7100050790");
	create_insn	(x=0X7100050B9C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100050BB4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7100050BE8);
	set_name	(0X7100050BE8,	"j_delete_5");
	create_insn	(0X7100050BEC);
	create_insn	(x=0X7100050BF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050BF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050C00);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100050C04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050C0C);
	op_stkvar	(x,	1);
	make_array	(0X7100050C18,	0X8);
	create_insn	(0X7100050C20);
	create_insn	(x=0X7100050C24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050C28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050C38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050C4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050C68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050C88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050CA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050CA8);
	op_stkvar	(x,	1);
	create_insn	(0X7100050CC4);
	create_insn	(x=0X7100050CD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050CD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050CE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050CF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050CF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050D00);
	op_stkvar	(x,	1);
	create_insn	(0X7100050D0C);
	create_insn	(x=0X7100050D10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050D14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050D24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050D30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050D3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050D48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050D54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050D60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050D6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050D78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050D84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050D90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050D9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050DA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050DB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050DC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050DCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050DD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050DE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050DF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050DFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050E08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050E14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050E20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050E30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050E3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050E40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050E48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100050E4C);
	op_stkvar	(x,	1);
	make_array	(0X7100050E58,	0X8);
	create_insn	(0X7100050E60);
	create_insn	(x=0X7100050E98);
	op_hex		(x,	1);
	create_insn	(0X7100050EAC);
	create_insn	(x=0X7100050EB4);
	op_hex		(x,	1);
	create_insn	(0X7100050EC8);
	create_insn	(x=0X7100050ECC);
	op_hex		(x,	1);
	create_insn	(0X7100050F64);
	create_insn	(x=0X7100050F68);
	op_hex		(x,	1);
	create_insn	(0X7100051020);
	create_insn	(0X7100051140);
	create_insn	(x=0X7100051148);
	op_hex		(x,	1);
	create_insn	(0X710005115C);
	create_insn	(0X7100051164);
	create_insn	(x=0X7100051174);
	op_hex		(x,	1);
	create_insn	(0X7100051184);
	create_insn	(x=0X7100051188);
	op_hex		(x,	1);
	create_insn	(0X7100051200);
	create_insn	(x=0X7100051204);
	op_hex		(x,	1);
	create_insn	(0X71000512B0);
	make_array	(0X7100051324,	0XC);
	create_insn	(0X7100051330);
	create_insn	(0X7100051364);
	create_insn	(x=0X71000513D8);
	op_hex		(x,	1);
	create_insn	(x=0X7100051484);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051488);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051490);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000514A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000514A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000514AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000514B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000514D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000514DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000514E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000514F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000514F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100051500);
	op_stkvar	(x,	1);
	create_insn	(0X7100051508);
	create_insn	(0X7100051514);
	create_insn	(0X7100051518);
	create_insn	(x=0X710005151C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051520);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051524);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051530);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100051534);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100051548);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100051550);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100051560);
	op_plain_offset	(x,	1,	0X7100222FB0);
	op_plain_offset	(x,	129,	0X7100222FB0);
	create_insn	(x=0X7100051574);
	op_plain_offset	(x,	1,	0X7100222FB0);
	op_plain_offset	(x,	129,	0X7100222FB0);
	create_insn	(x=0X7100051578);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005157C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100051584);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051588);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005158C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051590);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051594);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051598);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005159C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000515A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000515A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000515B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000515C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000515C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000515D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000515DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000515EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000515F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051600);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051614);
	op_stkvar	(x,	1);
	set_cmt	(0X710005161C,	"result",	0);
	create_insn	(x=0X710005161C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051624);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051638);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005163C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051640);
	op_stkvar	(x,	1);
	create_insn	(0X710005164C);
	create_insn	(x=0X7100051650);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100051654);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100051664);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100051668);
	op_plain_offset	(x,	1,	0X7100222FB0);
	op_plain_offset	(x,	129,	0X7100222FB0);
	create_insn	(x=0X710005166C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100051678);
	op_stkvar	(x,	1);
	create_insn	(0X7100051680);
	create_insn	(x=0X7100051684);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051688);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005168C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051690);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000516DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000516EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051710);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051714);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051718);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005171C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051728);
	op_stkvar	(x,	1);
	create_insn	(0X7100051730);
	create_insn	(x=0X7100051744);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051748);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051780);
	op_hex		(x,	1);
	create_insn	(x=0X7100051794);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051798);
	op_stkvar	(x,	1);
	create_insn	(0X71000517A0);
	make_array	(0X71000517AC,	0X4);
	create_insn	(x=0X71000517B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000517B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000517B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000517C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000517D4);
	op_plain_offset	(x,	1,	0X71000B1128);
	op_plain_offset	(x,	129,	0X71000B1128);
	create_insn	(x=0X71000517E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000517FC);
	op_plain_offset	(x,	1,	0X71000B1128);
	op_plain_offset	(x,	129,	0X71000B1128);
	create_insn	(x=0X7100051804);
	op_plain_offset	(x,	1,	0X71000B1128);
	op_plain_offset	(x,	129,	0X71000B1128);
	create_insn	(x=0X710005180C);
	op_plain_offset	(x,	1,	0X71000B1128);
	op_plain_offset	(x,	129,	0X71000B1128);
	create_insn	(x=0X7100051814);
	op_plain_offset	(x,	1,	0X71000B1128);
	op_plain_offset	(x,	129,	0X71000B1128);
	create_insn	(x=0X710005181C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051820);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051824);
	op_stkvar	(x,	1);
	make_array	(0X710005182C,	0X4);
	create_insn	(x=0X7100051830);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051834);
	op_stkvar	(x,	1);
	make_array	(0X710005185C,	0X4);
	create_insn	(0X7100051860);
	create_insn	(x=0X7100051864);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051868);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005186C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051874);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100051880);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100051888);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051894);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005189C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000518A4);
	op_plain_offset	(x,	1,	0X71000B15E8);
	op_plain_offset	(x,	129,	0X71000B15E8);
	create_insn	(x=0X71000518AC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000518B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000518B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000518C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000518C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000518CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000518DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000518E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100051904);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005190C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7100051920);
	create_insn	(x=0X7100051924);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051928);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051938);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005194C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005195C);
	op_hex		(x,	1);
	create_insn	(x=0X7100051974);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005197C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051980);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051988);
	op_plain_offset	(x,	1,	0X71000B15E8);
	op_plain_offset	(x,	129,	0X71000B15E8);
	create_insn	(x=0X7100051994);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051998);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000519AC);
	op_plain_offset	(x,	1,	0X71000B15E0);
	op_plain_offset	(x,	129,	0X71000B15E0);
	create_insn	(x=0X71000519B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000519B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000519BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000519D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000519D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000519DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000519F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100051A14);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100051A20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051A24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051A28);
	op_stkvar	(x,	1);
	create_insn	(0X7100051A34);
	create_insn	(x=0X7100051A38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051A4C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100051A58);
	op_hex		(x,	1);
	create_insn	(0X7100051A68);
	create_insn	(x=0X7100051A6C);
	op_stkvar	(x,	1);
	create_dword	(0X7100051A74);
	make_array	(0X7100051A78,	0X8);
	create_insn	(x=0X7100051A80);
	op_stkvar	(x,	1);
	set_name	(0X7100051A80,	"GetService_SRepo");
	create_insn	(x=0X7100051A84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051A8C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100051A9C);
	op_plain_offset	(x,	1,	0X71002240E0);
	op_plain_offset	(x,	129,	0X71002240E0);
	create_insn	(x=0X7100051AAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051AB0);
	op_stkvar	(x,	1);
	create_insn	(0X7100051AB8);
	create_insn	(x=0X7100051ABC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051AC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051AC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051AC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051ACC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051AD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051B1C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100051B24);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100051C80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051C88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051C90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051CA8);
	op_stkvar	(x,	1);
	create_insn	(0X7100051CB4);
	create_insn	(x=0X7100051CD8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100051D04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051D28);
	op_stkvar	(x,	1);
	set_cmt	(0X7100051D64,	"result",	0);
	set_cmt	(0X7100051D74,	"result",	0);
	create_insn	(x=0X7100051DB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051DB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051DB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051DBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051DC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051DC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051DD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051DD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051DF8);
	op_stkvar	(x,	1);
	create_insn	(0X7100051E04);
	create_insn	(0X7100051E0C);
	create_insn	(x=0X7100051E10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051E14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051E18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051E1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051E2C);
	op_hex		(x,	1);
	create_insn	(x=0X7100051E30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051E54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051E6C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100051E74);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100051EFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051F00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051F04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051F08);
	op_stkvar	(x,	1);
	create_insn	(0X7100051F14);
	create_insn	(x=0X7100051F1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051F20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051F50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051F60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051F68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100051F6C);
	op_stkvar	(x,	1);
	create_insn	(0X7100051F74);
	create_insn	(0X7100051F7C);
	set_name	(0X7100051F7C,	"nn::srepo::detail::ipc::ISrepoService::SaveReport");
	create_insn	(0X7100051F9C);
	set_name	(0X7100051F9C,	"nn::srepo::detail::ipc::ISrepoService::SaveReportWithUser");
	create_insn	(0X7100051FBC);
	set_name	(0X7100051FBC,	"nn::srepo::detail::ipc::ISrepoService::SaveReportForAntiPiracy");
	create_insn	(0X7100051FDC);
	create_insn	(0X7100051FFC);
	create_insn	(x=0X7100052000);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052004);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052008);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005200C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052010);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052014);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005202C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052030);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052044);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052058);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052068);
	op_hex		(x,	1);
	create_insn	(x=0X710005206C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052074);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052088);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005208C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052094);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052098);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000520A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000520BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000520C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000520C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000520C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000520CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000520D0);
	op_stkvar	(x,	1);
	create_insn	(0X71000520DC);
	create_insn	(x=0X71000520E0);
	op_stkvar	(x,	1);
	create_insn	(0X71000520EC);
	create_insn	(0X7100052104);
	create_insn	(0X7100052110);
	create_insn	(0X710005211C);
	create_insn	(0X7100052128);
	create_insn	(0X7100052134);
	create_insn	(x=0X7100052138);
	op_hex		(x,	1);
	create_insn	(x=0X710005213C);
	op_hex		(x,	1);
	create_insn	(0X7100052148);
	create_insn	(x=0X710005214C);
	op_hex		(x,	1);
	create_insn	(0X7100052158);
	create_insn	(x=0X710005215C);
	op_hex		(x,	1);
	create_insn	(0X7100052168);
	create_insn	(x=0X710005216C);
	op_hex		(x,	1);
	create_insn	(0X7100052178);
	create_insn	(x=0X710005217C);
	op_hex		(x,	1);
	create_insn	(0X7100052188);
	create_insn	(0X7100052194);
	create_insn	(0X71000521A0);
	create_insn	(0X71000521AC);
	create_insn	(x=0X71000521B0);
	op_hex		(x,	1);
	create_insn	(x=0X71000521B4);
	op_hex		(x,	1);
	create_insn	(x=0X71000521B8);
	op_hex		(x,	1);
	create_insn	(0X71000521C4);
	create_insn	(0X71000521D8);
	create_insn	(0X71000521EC);
	create_insn	(x=0X71000521F0);
	op_hex		(x,	1);
	create_insn	(0X71000521FC);
	create_insn	(0X710005220C);
	create_insn	(0X7100052220);
	create_insn	(0X710005222C);
	create_insn	(x=0X7100052230);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052234);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052238);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005223C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052250);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052254);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052258);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005226C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052278);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005228C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052290);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052294);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000522B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000522C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000522CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000522D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000522D4);
	op_stkvar	(x,	1);
	create_insn	(0X71000522E0);
	create_insn	(x=0X71000522E4);
	op_stkvar	(x,	1);
	create_insn	(0X71000522F0);
	create_insn	(0X71000522FC);
	create_insn	(x=0X7100052300);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052308);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005232C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052334);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052338);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052340);
	op_stkvar	(x,	1);
	create_insn	(0X710005234C);
	create_insn	(0X7100052358);
	create_insn	(0X7100052364);
	create_insn	(0X7100052374);
	create_insn	(0X7100052380);
	create_insn	(0X710005238C);
	create_insn	(0X7100052398);
	create_insn	(x=0X710005239C);
	op_hex		(x,	1);
	create_insn	(0X71000523A8);
	create_insn	(0X71000523B0);
	create_insn	(0X71000523B8);
	create_insn	(x=0X71000523BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000523C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000523C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000523C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000523CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000523D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000523EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052418);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100052428);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052430);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052438);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052440);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052448);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005244C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005245C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052464);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052474);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052480);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052484);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005248C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052490);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052498);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000524A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000524BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000524D0);
	op_hex		(x,	1);
	create_insn	(x=0X71000524D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052520);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005252C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052538);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052544);
	op_hex		(x,	1);
	create_insn	(0X7100052568);
	create_insn	(x=0X7100052588);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005258C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052590);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052594);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052598);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005259C);
	op_stkvar	(x,	1);
	create_insn	(0X71000525A8);
	create_insn	(x=0X71000525AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000525B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000525B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000525B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000525BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000525C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000525DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000525EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052610);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100052620);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052628);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052630);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052638);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052640);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052644);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052654);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005265C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005266C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005267C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052684);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052688);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005268C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052690);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005269C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000526B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000526C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000526D8);
	op_hex		(x,	1);
	create_insn	(x=0X71000526FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052730);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005273C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052748);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052754);
	op_hex		(x,	1);
	create_insn	(0X7100052778);
	create_insn	(x=0X7100052798);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005279C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000527A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000527A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000527A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000527AC);
	op_stkvar	(x,	1);
	create_insn	(0X71000527B8);
	create_insn	(x=0X71000527BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000527C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000527C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000527C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000527CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000527D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000527FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005281C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005282C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052830);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052838);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052844);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052850);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052860);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052870);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052878);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052888);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052898);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005289C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000528A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000528A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000528AC);
	op_stkvar	(x,	1);
	create_insn	(0X71000528C8);
	create_insn	(x=0X71000528E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000528E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000528E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000528F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052910);
	op_hex		(x,	1);
	create_insn	(x=0X7100052918);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005293C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052974);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052980);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005298C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052998);
	op_hex		(x,	1);
	create_insn	(0X71000529C0);
	set_cmt	(0X71000529CC,	"result",	0);
	create_insn	(x=0X71000529EC);
	op_stkvar	(x,	1);
	create_insn	(0X7100052A24);
	create_insn	(x=0X7100052A38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052A60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052A64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052A68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052A6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052A70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052A74);
	op_stkvar	(x,	1);
	create_insn	(0X7100052A80);
	create_insn	(x=0X7100052A8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052A90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052A94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052AE0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100052B10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052B14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052B1C);
	op_stkvar	(x,	1);
	create_insn	(0X7100052B24);
	create_insn	(x=0X7100052B28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052B2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052B30);
	op_stkvar	(x,	1);
	create_insn	(0X7100052B38);
	create_insn	(x=0X7100052B40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052B44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052B74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052B84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052B8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052B90);
	op_stkvar	(x,	1);
	create_insn	(0X7100052B98);
	create_insn	(0X7100052BA0);
	create_insn	(0X7100052BAC);
	create_insn	(0X7100052BB8);
	create_insn	(0X7100052BC4);
	create_insn	(0X7100052BCC);
	create_insn	(0X7100052BD4);
	create_insn	(x=0X7100052BD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052BDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052BE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052BE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052BE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052C40);
	op_hex		(x,	1);
	create_insn	(x=0X7100052C90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052C9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052CA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052CB4);
	op_hex		(x,	1);
	create_insn	(0X7100052CD8);
	create_insn	(x=0X7100052CF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052CFC);
	op_stkvar	(x,	1);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_8(void) {
        auto x;
#define id x

	create_insn	(x=0X7100052D00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052D04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052D08);
	op_stkvar	(x,	1);
	create_insn	(0X7100052D14);
	create_insn	(x=0X7100052D18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052D1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052D20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052D24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052D28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052D7C);
	op_hex		(x,	1);
	create_insn	(x=0X7100052DC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052DD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052DDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052DE8);
	op_hex		(x,	1);
	create_insn	(0X7100052E0C);
	create_insn	(x=0X7100052E2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052E30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052E34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052E38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052E3C);
	op_stkvar	(x,	1);
	create_insn	(0X7100052E48);
	create_insn	(x=0X7100052E4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052E50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052E54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052E58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052E5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052EB4);
	op_hex		(x,	1);
	create_insn	(x=0X7100052F04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052F10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052F1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052F28);
	op_hex		(x,	1);
	create_insn	(0X7100052F4C);
	create_insn	(x=0X7100052F6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052F70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052F74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052F78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052F7C);
	op_stkvar	(x,	1);
	create_insn	(0X7100052F88);
	create_insn	(x=0X7100052F8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052F90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052F94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052F98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052F9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100052FF4);
	op_hex		(x,	1);
	create_insn	(x=0X7100053040);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005304C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053058);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053064);
	op_hex		(x,	1);
	create_insn	(0X7100053088);
	create_insn	(x=0X71000530A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000530AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000530B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000530B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000530B8);
	op_stkvar	(x,	1);
	create_insn	(0X71000530C4);
	create_insn	(x=0X71000530C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000530CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000530D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000530D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000530D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000530DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005311C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053128);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053130);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053138);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053144);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053148);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005314C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053150);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053154);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053158);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053160);
	op_hex		(x,	1);
	create_insn	(x=0X7100053164);
	op_hex		(x,	1);
	create_insn	(x=0X7100053168);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053170);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053178);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053188);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053190);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053194);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053198);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000531AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000531C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000531D8);
	op_hex		(x,	1);
	create_insn	(x=0X7100053224);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053230);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005323C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053248);
	op_hex		(x,	1);
	create_insn	(0X710005326C);
	create_insn	(x=0X710005328C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053290);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053294);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053298);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005329C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000532A0);
	op_stkvar	(x,	1);
	create_insn	(0X71000532AC);
	create_insn	(x=0X71000532B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000532B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000532B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000532BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000532C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000532C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000532E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005330C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053318);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005331C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053324);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005332C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053334);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053338);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053340);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053344);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053348);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005334C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053354);
	op_hex		(x,	1);
	create_insn	(x=0X7100053358);
	op_hex		(x,	1);
	create_insn	(x=0X7100053360);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053368);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053378);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053384);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053388);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005338C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053390);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005339C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000533B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000533CC);
	op_hex		(x,	1);
	create_insn	(x=0X710005341C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053428);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053434);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053440);
	op_hex		(x,	1);
	create_insn	(0X7100053464);
	create_insn	(0X7100053470);
	create_insn	(x=0X7100053474);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053494);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053498);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005349C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000534A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000534A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000534A8);
	op_stkvar	(x,	1);
	create_insn	(0X71000534B4);
	create_insn	(x=0X71000534B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000534BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000534C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000534C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000534C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000534CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000534F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005352C);
	op_hex		(x,	1);
	create_insn	(x=0X7100053578);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053584);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053590);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005359C);
	op_hex		(x,	1);
	create_insn	(0X71000535C0);
	create_insn	(0X7100053614);
	create_insn	(x=0X7100053628);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053650);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053654);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053658);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005365C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053660);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053664);
	op_stkvar	(x,	1);
	create_insn	(0X7100053670);
	create_insn	(x=0X7100053688);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005368C);
	op_stkvar	(x,	1);
	set_cmt	(0X7100053694,	"result",	0);
	create_insn	(x=0X71000536D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000536D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000536DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053728);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100053758);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005375C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053764);
	op_stkvar	(x,	1);
	create_insn	(0X710005376C);
	create_insn	(x=0X7100053770);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053774);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053778);
	op_stkvar	(x,	1);
	create_insn	(0X7100053780);
	create_insn	(x=0X7100053788);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005378C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000537BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000537CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000537D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000537D8);
	op_stkvar	(x,	1);
	create_insn	(0X71000537E0);
	create_insn	(0X71000537E8);
	create_insn	(0X71000537F4);
	create_insn	(0X71000537FC);
	create_insn	(0X7100053804);
	create_insn	(x=0X7100053808);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005380C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053810);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053814);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053818);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005381C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053828);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005382C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053834);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053864);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100053874);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053884);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005388C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053890);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053894);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053898);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000538A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000538B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000538C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000538CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000538D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000538D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000538DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000538E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000538F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053908);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005390C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005391C);
	op_hex		(x,	1);
	create_insn	(x=0X7100053968);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053974);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053980);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005398C);
	op_hex		(x,	1);
	create_insn	(0X71000539B0);
	create_insn	(0X71000539BC);
	create_insn	(x=0X71000539C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000539C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000539D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000539E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053A1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053A20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053A24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053A28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053A2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053A30);
	op_stkvar	(x,	1);
	create_insn	(0X7100053A3C);
	create_insn	(x=0X7100053A40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053A44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053A48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053A4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053A50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053AA8);
	op_hex		(x,	1);
	create_insn	(x=0X7100053AEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053AF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053B04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053B10);
	op_hex		(x,	1);
	create_insn	(0X7100053B34);
	create_insn	(0X7100053B40);
	create_insn	(x=0X7100053B68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053B6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053B70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053B74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053B78);
	op_stkvar	(x,	1);
	create_insn	(0X7100053B84);
	create_insn	(x=0X7100053B88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053B8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053B90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053B94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053B98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053BE4);
	op_hex		(x,	1);
	create_insn	(x=0X7100053C2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053C38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053C44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053C50);
	op_hex		(x,	1);
	create_insn	(0X7100053C74);
	create_insn	(0X7100053C80);
	create_insn	(x=0X7100053CA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053CAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053CB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053CB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053CB8);
	op_stkvar	(x,	1);
	create_insn	(0X7100053CC4);
	create_insn	(x=0X7100053CC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053CCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053CD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053CD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053D1C);
	op_hex		(x,	1);
	create_insn	(x=0X7100053D64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053D70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053D7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053D88);
	op_hex		(x,	1);
	create_insn	(0X7100053DAC);
	create_insn	(0X7100053DB8);
	create_insn	(x=0X7100053DD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053DDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053DE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053DE4);
	op_stkvar	(x,	1);
	create_insn	(0X7100053DF0);
	create_insn	(x=0X7100053DF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053DF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053DFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053E00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053E04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053E5C);
	op_hex		(x,	1);
	create_insn	(x=0X7100053EAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053EB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053EC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053ED0);
	op_hex		(x,	1);
	create_insn	(0X7100053EF4);
	create_insn	(x=0X7100053F14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053F18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053F1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053F20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053F24);
	op_stkvar	(x,	1);
	create_insn	(0X7100053F30);
	create_insn	(x=0X7100053F38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053F3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053F40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053F48);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100053F50);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100053F80,	"result",	0);
	set_cmt	(0X7100053F90,	"result",	0);
	create_insn	(x=0X7100053FB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053FBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053FC0);
	op_stkvar	(x,	1);
	create_insn	(0X7100053FC8);
	create_insn	(x=0X7100053FDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053FE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100053FE4);
	op_stkvar	(x,	1);
	create_insn	(0X7100053FEC);
	create_insn	(0X7100053FFC);
	create_insn	(0X7100054000);
	create_insn	(0X7100054014);
	create_insn	(0X7100054018);
	create_insn	(0X710005402C);
	create_insn	(0X7100054030);
	create_insn	(0X7100054044);
	create_insn	(0X7100054048);
	create_insn	(0X710005405C);
	create_insn	(0X7100054060);
	create_insn	(0X7100054074);
	make_array	(0X7100054078,	0X8);
	create_insn	(0X7100054080);
	set_name	(0X7100054080,	"GetStaticServiceUser");
	make_array	(0X7100054088,	0X8);
	create_insn	(0X7100054090);
	set_name	(0X7100054090,	"GetStaticService");
	create_insn	(x=0X7100054094);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054098);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005409C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000540A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000540A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000540BC);
	op_plain_offset	(x,	1,	0X7100224178);
	op_plain_offset	(x,	129,	0X7100224178);
	create_insn	(x=0X71000540C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000540C8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000540D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000540DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000540E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000540EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000540F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100054110,	"switch 4 cases",	0);
	create_insn	(x=0X7100054114);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054124);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100054128);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100054134,	"switch jump",	0);
	set_cmt	(0X7100054138,	"jumptable 0000007100054134 case 1",	1);
	create_insn	(x=0X7100054138);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100054140);
	op_stkvar	(x,	1);
	set_cmt	(0X7100054154,	"jumptable 0000007100054134 default case",	1);
	create_insn	(x=0X7100054154);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X7100054154,	"def_7100054134");
	create_insn	(x=0X710005415C);
	op_stkvar	(x,	1);
	set_cmt	(0X7100054170,	"jumptable 0000007100054134 case 2",	1);
	create_insn	(x=0X7100054170);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100054178);
	op_stkvar	(x,	1);
	set_cmt	(0X710005418C,	"jumptable 0000007100054134 case 3",	1);
	create_insn	(x=0X710005418C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100054194);
	op_stkvar	(x,	1);
	set_cmt	(0X71000541A8,	"jumptable 0000007100054134 case 4",	1);
	create_insn	(x=0X71000541A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000541B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000541C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000541C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000541CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000541E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000541E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000541F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000541F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000541F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000541FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054218);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005421C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054238);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100054248);
	op_plain_offset	(x,	1,	0X7100224120);
	op_plain_offset	(x,	129,	0X7100224120);
	create_insn	(x=0X7100054260);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054280);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005429C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000542A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000542B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000542B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000542C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000542E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000542F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054304);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100054314);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054318);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005431C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054320);
	op_stkvar	(x,	1);
	create_insn	(0X710005432C);
	create_insn	(x=0X7100054330);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054334);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005433C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005434C);
	op_plain_offset	(x,	1,	0X7100224178);
	op_plain_offset	(x,	129,	0X7100224178);
	create_insn	(x=0X7100054358);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005435C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100054364);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100054384);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000543A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000543C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000543E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100054404);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100054424);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100054434);
	op_plain_offset	(x,	1,	0X7100224120);
	op_plain_offset	(x,	129,	0X7100224120);
	create_insn	(x=0X7100054448);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005445C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100054468);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054470);
	op_stkvar	(x,	1);
	make_array	(0X7100054478,	0X8);
	create_insn	(x=0X7100054480);
	op_stkvar	(x,	1);
	set_name	(0X7100054480,	"GetStandardLocalSystemClock");
	create_insn	(x=0X7100054484);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054488);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054494);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000544A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000544A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000544A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000544AC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000544CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000544D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X710005450C);
	create_insn	(x=0X7100054510);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100054520);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054524);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054528);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054530);
	op_stkvar	(x,	1);
	create_insn	(0X7100054558);
	set_name	(0X7100054558,	"nullsub_66");
	make_array	(0X710005455C,	0X4);
	create_insn	(x=0X7100054560);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054564);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005456C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100054574);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100054578);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005457C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005458C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100054590);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100054594);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000545A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000545A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000545AC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000545B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000545BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000545C8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000545D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000545E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000545E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000545F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000545FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100054600);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005460C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100054614);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100054618);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005461C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100054628);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100054630);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100054634);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100054638);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005463C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100054644);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054648);
	op_stkvar	(x,	1);
	create_insn	(0X7100054650);
	set_name	(0X7100054650,	"TimeSharedMemory_GetSetLocalSystemClockContext");
	create_insn	(x=0X7100054654);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005465C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054664);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005466C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100054674);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005467C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054688);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054690);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X7100054690,	"TimeSharedMemoryLocal_Init");
	create_insn	(0X710005469C);
	set_name	(0X710005469C,	"TimeSharedMemory_GetSetNetworkSystemClockContext");
	create_insn	(x=0X71000546A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000546A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000546B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000546B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000546C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000546C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000546D4);
	op_stkvar	(x,	1);
	create_dword	(0X71000546DC);
	create_insn	(x=0X71000546E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X71000546E0,	"TimeSharedMemoryNetwork_Init");
	make_array	(0X71000546EC,	0X4);
	create_insn	(0X71000546F0);
	set_name	(0X71000546F0,	"StandardLocalSystemClock_GetOperationEventReadableHandle");
	create_insn	(x=0X71000546F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000546F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054704);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054708);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054714);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005471C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054720);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054724);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054728);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054738);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054748);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054754);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005475C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054770);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054774);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054780);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054788);
	op_stkvar	(x,	1);
	create_insn	(0X7100054790);
	create_dword	(0X7100054794);
	make_array	(0X7100054798,	0X8);
	create_insn	(0X71000547A0);
	set_name	(0X71000547A0,	"TimeZoneService_GetDeviceLocationNameOperationEventReadableHandle");
	create_insn	(x=0X71000547A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000547A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000547B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000547B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000547C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000547DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000547E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000547E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000547F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054808);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054814);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005481C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054820);
	op_stkvar	(x,	1);
	create_insn	(0X710005482C);
	create_insn	(0X7100054830);
	create_insn	(0X7100054838);
	set_name	(0X7100054838,	"nullsub_67");
	make_array	(0X710005483C,	0X4);
	create_insn	(x=0X7100054840);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054844);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005487C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054884);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054888);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054890);
	op_stkvar	(x,	1);
	set_name	(0X7100054890,	"TimeSharedMemory_GetNetworkSystemClockContext_");
	create_insn	(x=0X7100054898);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000548B8);
	op_stkvar	(x,	1);
	create_insn	(0X71000548C0);
	create_insn	(x=0X71000548C4);
	op_stkvar	(x,	1);
	make_array	(0X71000548CC,	0X4);
	create_insn	(x=0X71000548D0);
	op_stkvar	(x,	1);
	set_name	(0X71000548D0,	"TimeSharedMemory::GetContinuousTimePoint_");
	create_insn	(x=0X71000548D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000548DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100054910);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054914);
	op_stkvar	(x,	1);
	create_insn	(0X710005491C);
	create_insn	(x=0X7100054920);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054924);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005492C);
	op_stkvar	(x,	1);
	set_name	(0X710005492C,	"TimeSharedMemory_GetTimeFromContinuousTimePoint");
	create_insn	(x=0X7100054934);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100054944,	"out_time",	0);
	set_cmt	(0X7100054948,	"this",	0);
	create_insn	(x=0X7100054954);
	op_stkvar	(x,	1);
	create_insn	(0X710005495C);
	create_insn	(x=0X7100054960);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054968);
	op_stkvar	(x,	1);
	set_name	(0X7100054968,	"TimeSharedMemory_GetLocalSystemClockContext_");
	create_insn	(x=0X7100054970);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100054990);
	op_stkvar	(x,	1);
	create_insn	(0X7100054998);
	create_insn	(x=0X710005499C);
	op_stkvar	(x,	1);
	make_array	(0X71000549A4,	0XC);
	create_insn	(0X71000549B0);
	set_name	(0X71000549B0,	"TimeZoneService_ToCalendarTimeWithMyRule");
	create_insn	(x=0X71000549B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000549B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000549C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000549C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000549C8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000549D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000549FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054A10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054A14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054A1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054A24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054A28);
	op_stkvar	(x,	1);
	create_insn	(0X7100054A34);
	create_insn	(x=0X7100054A38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054A3C);
	op_stkvar	(x,	1);
	make_array	(0X7100054A48,	0X8);
	create_insn	(0X7100054A50);
	make_array	(0X7100054A54,	0XC);
	create_insn	(0X7100054A60);
	set_name	(0X7100054A60,	"TimeZoneService_ToPosixTimeWithMyRule");
	create_insn	(x=0X7100054A64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054A6C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100054A70);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100054A74);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100054A7C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100054AB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054AC8);
	op_stkvar	(x,	1);
	create_insn	(0X7100054AD4);
	create_insn	(x=0X7100054AD8);
	op_stkvar	(x,	1);
	make_array	(0X7100054AE4,	0XC);
	create_insn	(0X7100054AF0);
	set_name	(0X7100054AF0,	"j_CalendarTimeToUnixEpoch");
	create_insn	(0X7100054AF4);
	set_name	(0X7100054AF4,	"TimeSharedMemory_InitSystemClockContexts");
	create_insn	(x=0X7100054B14);
	op_hex		(x,	1);
	create_insn	(x=0X7100054B30);
	op_stkvar	(x,	1);
	set_name	(0X7100054B30,	"TimeSharedMemory_SetSystemClockContext");
	create_insn	(x=0X7100054B34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054B58);
	op_hex		(x,	1);
	create_insn	(x=0X7100054B74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054B78);
	op_stkvar	(x,	1);
	create_insn	(0X7100054B80);
	set_name	(0X7100054B80,	"TimeSharedMemory_Setup");
	create_insn	(x=0X7100054B84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054B88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054BA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054BA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054BA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054BB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054BC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054BD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054BE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054BE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054BFC);
	op_stkvar	(x,	1);
	set_cmt	(0X7100054C08,	"result",	0);
	create_insn	(x=0X7100054C08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054C10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054C14);
	op_stkvar	(x,	1);
	create_insn	(0X7100054C20);
	create_insn	(0X7100054C24);
	create_dword	(0X7100054C2C);
	create_insn	(0X7100054C30);
	set_name	(0X7100054C30,	"TimeSharedMemory::GetContinuousTimePoint");
	create_insn	(x=0X7100054C34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054C38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054C3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054C40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054C64);
	op_hex		(x,	1);
	create_insn	(x=0X7100054C7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054C9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054CAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054CC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054CE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054CF4);
	op_stkvar	(x,	1);
	create_insn	(0X7100054D00);
	create_insn	(x=0X7100054D04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054D08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054D24);
	op_hex		(x,	1);
	create_insn	(x=0X7100054D30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054D38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054D60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054D64);
	op_stkvar	(x,	1);
	create_insn	(0X7100054D70);
	create_insn	(x=0X7100054D74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054D78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054D98);
	op_hex		(x,	1);
	create_insn	(x=0X7100054DA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054DAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054DB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054DBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054DE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054DF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054DFC);
	op_stkvar	(x,	1);
	create_insn	(0X7100054E08);
	create_insn	(x=0X7100054E10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054E18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054E30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054E74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054E78);
	op_stkvar	(x,	1);
	make_array	(0X7100054E84,	0XC);
	create_insn	(0X7100054E90);
	set_name	(0X7100054E90,	"TimeSharedMemory_GetLocalSystemClockContext");
	create_insn	(x=0X7100054EA4);
	op_hex		(x,	1);
	create_insn	(x=0X7100054EB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054EB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054ECC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054ED4);
	op_stkvar	(x,	1);
	make_array	(0X7100054EE4,	0XC);
	create_insn	(0X7100054EF0);
	set_name	(0X7100054EF0,	"TimeSharedMemory_GetNetworkSystemClockContext");
	create_insn	(x=0X7100054F04);
	op_hex		(x,	1);
	create_insn	(x=0X7100054F10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054F18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054F2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054F34);
	op_stkvar	(x,	1);
	create_insn	(0X7100054F44);
	set_name	(0X7100054F44,	"nullsub_68");
	create_insn	(0X7100054F48);
	set_name	(0X7100054F48,	"nullsub_69");
	create_insn	(0X7100054F4C);
	set_name	(0X7100054F4C,	"GetService_TimeU");
	create_insn	(x=0X7100054F50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054F54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054F5C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100054F64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054F70);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100054F78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100054F84);
	op_plain_offset	(x,	1,	0X71000B1F88);
	op_plain_offset	(x,	129,	0X71000B1F88);
	create_insn	(x=0X7100054F8C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100054F90);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100054F98);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100054F9C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100054FA4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100054FB4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100054FB8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100054FC0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100055004);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055008);
	op_stkvar	(x,	1);
	create_insn	(0X7100055014);
	create_insn	(x=0X7100055018);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005501C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005502C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055040);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100055050);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055054);
	op_stkvar	(x,	1);
	create_insn	(0X7100055060);
	create_insn	(x=0X7100055064);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005506C);
	op_plain_offset	(x,	1,	0X71000B1F80);
	op_plain_offset	(x,	129,	0X71000B1F80);
	create_insn	(x=0X7100055070);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005507C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100055080);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005508C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X71000550A4);
	set_name	(0X71000550A4,	"GetService_TimeA");
	create_insn	(x=0X71000550A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000550AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000550B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000550BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000550C8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000550D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000550DC);
	op_plain_offset	(x,	1,	0X71000B1F88);
	op_plain_offset	(x,	129,	0X71000B1F88);
	create_insn	(x=0X71000550E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000550E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000550F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000550F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000550FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005510C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100055110);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100055118);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005515C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055160);
	op_stkvar	(x,	1);
	create_insn	(0X710005516C);
	create_insn	(x=0X7100055170);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055174);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055184);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055198);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000551A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000551AC);
	op_stkvar	(x,	1);
	create_insn	(0X71000551B8);
	create_insn	(x=0X71000551BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000551C4);
	op_plain_offset	(x,	1,	0X71000B1F80);
	op_plain_offset	(x,	129,	0X71000B1F80);
	create_insn	(x=0X71000551C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000551D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000551D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000551E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X71000551FC);
	set_name	(0X71000551FC,	"GetService_TimeS");
	create_insn	(x=0X7100055200);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055204);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005520C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100055214);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055220);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100055228);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055234);
	op_plain_offset	(x,	1,	0X71000B1F88);
	op_plain_offset	(x,	129,	0X71000B1F88);
	create_insn	(x=0X710005523C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100055240);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100055248);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005524C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100055254);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100055264);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100055268);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100055270);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000552B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000552B8);
	op_stkvar	(x,	1);
	create_insn	(0X71000552C4);
	create_insn	(x=0X71000552C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000552CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000552DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000552F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100055300);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055304);
	op_stkvar	(x,	1);
	create_insn	(0X7100055310);
	create_insn	(x=0X7100055314);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005531C);
	op_plain_offset	(x,	1,	0X71000B1F80);
	op_plain_offset	(x,	129,	0X71000B1F80);
	create_insn	(x=0X7100055320);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005532C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100055330);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005533C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7100055354);
	set_name	(0X7100055354,	"GetService_TimeR");
	create_insn	(x=0X7100055358);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005535C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055364);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005536C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055378);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100055380);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005538C);
	op_plain_offset	(x,	1,	0X71000B1F88);
	op_plain_offset	(x,	129,	0X71000B1F88);
	create_insn	(x=0X7100055394);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100055398);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000553A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000553A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000553AC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000553BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000553C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000553C8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005540C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055410);
	op_stkvar	(x,	1);
	create_insn	(0X710005541C);
	create_insn	(x=0X7100055420);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055424);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055434);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055448);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100055458);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005545C);
	op_stkvar	(x,	1);
	create_insn	(0X7100055468);
	create_insn	(x=0X710005546C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100055474);
	op_plain_offset	(x,	1,	0X71000B1F80);
	op_plain_offset	(x,	129,	0X71000B1F80);
	create_insn	(x=0X7100055478);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055484);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100055488);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100055494);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X71000554AC);
	set_name	(0X71000554AC,	"GetService_TimeSU");
	create_insn	(x=0X71000554B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000554B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000554BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000554C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000554D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000554D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000554E4);
	op_plain_offset	(x,	1,	0X71000B1F88);
	op_plain_offset	(x,	129,	0X71000B1F88);
	create_insn	(x=0X71000554EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000554F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000554F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000554FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100055504);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100055514);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100055518);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100055520);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100055564);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055568);
	op_stkvar	(x,	1);
	create_insn	(0X7100055574);
	create_insn	(x=0X7100055578);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005557C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005558C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000555A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000555B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000555B4);
	op_stkvar	(x,	1);
	create_insn	(0X71000555C0);
	create_insn	(x=0X71000555C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000555CC);
	op_plain_offset	(x,	1,	0X71000B1F80);
	op_plain_offset	(x,	129,	0X71000B1F80);
	create_insn	(x=0X71000555D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000555DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000555E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000555EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100055604);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055608);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055610);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100055620);
	op_plain_offset	(x,	1,	0X71000B1F88);
	op_plain_offset	(x,	129,	0X71000B1F88);
	create_insn	(x=0X7100055628);
	op_plain_offset	(x,	1,	0X71000B1F88);
	op_plain_offset	(x,	129,	0X71000B1F88);
	create_insn	(x=0X7100055630);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055634);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005563C);
	op_stkvar	(x,	1);
	create_insn	(0X7100055644);
	create_insn	(x=0X7100055648);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005565C);
	op_plain_offset	(x,	1,	0X71000B1F80);
	op_plain_offset	(x,	129,	0X71000B1F80);
	create_insn	(x=0X7100055668);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005566C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100055674);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100055680);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055684);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005568C);
	op_stkvar	(x,	1);
	create_insn	(0X7100055694);
	create_insn	(x=0X7100055698);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005569C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000556A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000556A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000556A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000556AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000556F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100055700);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005585C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055864);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005586C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055884);
	op_stkvar	(x,	1);
	create_insn	(0X7100055890);
	create_insn	(x=0X71000558B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000558E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055904);
	op_stkvar	(x,	1);
	set_cmt	(0X7100055940,	"result",	0);
	set_cmt	(0X7100055950,	"result",	0);
	create_insn	(x=0X710005598C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055990);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055994);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055998);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005599C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000559A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000559AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000559B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000559D4);
	op_stkvar	(x,	1);
	create_insn	(0X71000559E0);
	create_insn	(0X71000559E8);
	create_insn	(x=0X71000559EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000559F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000559F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000559F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055A08);
	op_hex		(x,	1);
	create_insn	(x=0X7100055A0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055A30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055A48);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100055A50);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100055AD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055ADC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055AE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055AE4);
	op_stkvar	(x,	1);
	create_insn	(0X7100055AF0);
	create_insn	(x=0X7100055AF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055AFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055B2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055B3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055B44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055B48);
	op_stkvar	(x,	1);
	create_insn	(0X7100055B50);
	create_insn	(0X7100055B58);
	create_insn	(x=0X7100055B5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055B60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055B74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055B78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055B7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055B84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055B8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055B9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055BA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055BA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055BB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055BCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055BD0);
	op_stkvar	(x,	1);
	create_insn	(0X7100055BDC);
	create_insn	(x=0X7100055BE0);
	op_stkvar	(x,	1);
	create_insn	(0X7100055BEC);
	create_insn	(x=0X7100055BF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055BF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055C08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055C0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055C10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055C18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055C20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055C30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055C34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055C3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055C48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055C60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055C64);
	op_stkvar	(x,	1);
	create_insn	(0X7100055C70);
	create_insn	(x=0X7100055C74);
	op_stkvar	(x,	1);
	create_insn	(0X7100055C80);
	create_insn	(x=0X7100055C84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055C88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055C9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055CA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055CA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055CAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055CB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055CC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055CC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055CD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055CDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055CF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055CF8);
	op_stkvar	(x,	1);
	create_insn	(0X7100055D04);
	create_insn	(x=0X7100055D08);
	op_stkvar	(x,	1);
	create_insn	(0X7100055D14);
	create_insn	(x=0X7100055D18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055D1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055D30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055D34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055D38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055D40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055D48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055D58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055D5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055D64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055D70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055D88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055D8C);
	op_stkvar	(x,	1);
	create_insn	(0X7100055D98);
	create_insn	(x=0X7100055D9C);
	op_stkvar	(x,	1);
	create_insn	(0X7100055DA8);
	create_insn	(x=0X7100055DAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055DB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055DC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055DC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055DCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055DD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055DDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055DEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055DF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055DF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055E04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055E1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055E20);
	op_stkvar	(x,	1);
	create_insn	(0X7100055E2C);
	create_insn	(x=0X7100055E30);
	op_stkvar	(x,	1);
	create_insn	(0X7100055E3C);
	set_name	(0X7100055E3C,	"nn::timesrv::detail::service::IStaticService::GetEphemeralNetworkSystemClock_0");
	create_insn	(x=0X7100055E40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055E44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055E58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055E5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055E60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055E68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055E70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055E84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055E88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055E8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055E98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055EB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055EB4);
	op_stkvar	(x,	1);
	create_insn	(0X7100055EC0);
	create_insn	(x=0X7100055EC4);
	op_stkvar	(x,	1);
	create_insn	(0X7100055ED0);
	create_insn	(0X7100055EDC);
	create_insn	(0X7100055EE8);
	create_insn	(0X7100055EF4);
	create_insn	(0X7100055F00);
	create_insn	(x=0X7100055F04);
	op_hex		(x,	1);
	create_insn	(0X7100055F10);
	create_insn	(0X7100055F1C);
	create_insn	(0X7100055F28);
	create_insn	(0X7100055F34);
	create_insn	(0X7100055F40);
	create_insn	(x=0X7100055F44);
	op_hex		(x,	1);
	create_insn	(0X7100055F54);
	create_insn	(x=0X7100055F60);
	op_hex		(x,	1);
	create_insn	(0X7100055F74);
	create_insn	(0X7100055F8C);
	create_insn	(0X7100055FA4);
	create_insn	(0X7100055FAC);
	create_insn	(x=0X7100055FB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055FB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100055FBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056008);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100056038);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005603C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056044);
	op_stkvar	(x,	1);
	create_insn	(0X710005604C);
	create_insn	(x=0X7100056050);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056054);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056058);
	op_stkvar	(x,	1);
	create_insn	(0X7100056060);
	create_insn	(x=0X7100056068);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005606C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005609C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000560AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000560B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000560B8);
	op_stkvar	(x,	1);
	create_insn	(0X71000560C0);
	create_insn	(0X71000560C8);
	set_name	(0X71000560C8,	"nn::timesrv::detail::service::ISystemClock::GetCurrentTime");
	create_insn	(0X71000560D4);
	set_name	(0X71000560D4,	"nn::timesrv::detail::service::ISystemClock::SetCurrentTime");
	create_insn	(0X71000560E0);
	set_name	(0X71000560E0,	"nn::timesrv::detail::service::ISystemClock::GetSystemClockContext");
	create_insn	(0X71000560EC);
	set_name	(0X71000560EC,	"nn::timesrv::detail::service::ISystemClock::SetSystemClockContext");
	create_insn	(0X71000560F8);
	set_name	(0X71000560F8,	"nn::timesrv::detail::service::ISystemClock::GetOperationEventReadableHandle");
	create_insn	(0X7100056104);
	create_insn	(0X710005610C);
	create_insn	(0X7100056114);
	set_name	(0X7100056114,	"nn::timesrv::detail::service::SystemClock::GetSystemClockContext");
	create_insn	(x=0X7100056118);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005611C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056120);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056124);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005616C);
	op_hex		(x,	1);
	create_insn	(x=0X71000561B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000561C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000561CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000561D8);
	op_hex		(x,	1);
	create_insn	(0X71000561FC);
	create_insn	(0X7100056208);
	create_insn	(x=0X7100056230);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056234);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056238);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005623C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056248);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005624C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056250);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005629C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000562CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000562D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000562D8);
	op_stkvar	(x,	1);
	create_insn	(0X71000562E0);
	create_insn	(x=0X71000562E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000562E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000562EC);
	op_stkvar	(x,	1);
	create_insn	(0X71000562F4);
	create_insn	(x=0X71000562FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056300);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056330);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056340);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056348);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005634C);
	op_stkvar	(x,	1);
	create_insn	(0X7100056354);
	create_insn	(0X710005635C);
	create_insn	(0X7100056368);
	create_insn	(0X7100056374);
	create_insn	(0X7100056380);
	create_insn	(0X710005638C);
	create_insn	(0X7100056398);
	create_insn	(0X71000563A4);
	create_insn	(0X71000563B0);
	create_insn	(0X71000563B8);
	create_insn	(0X71000563C0);
	create_insn	(x=0X71000563C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000563C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000563CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000563D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056418);
	op_hex		(x,	1);
	create_insn	(x=0X7100056460);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005646C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056478);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056484);
	op_hex		(x,	1);
	create_insn	(0X71000564A8);
	create_insn	(0X71000564B4);
	create_insn	(x=0X71000564DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000564E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000564E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000564E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000564F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000564F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000564FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056548);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100056578);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005657C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056584);
	op_stkvar	(x,	1);
	create_insn	(0X710005658C);
	create_insn	(x=0X7100056590);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056594);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056598);
	op_stkvar	(x,	1);
	create_insn	(0X71000565A0);
	create_insn	(x=0X71000565A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000565AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000565DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000565EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000565F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000565F8);
	op_stkvar	(x,	1);
	create_insn	(0X7100056600);
	create_insn	(0X7100056608);
	create_insn	(0X7100056614);
	create_insn	(0X7100056620);
	create_insn	(0X710005662C);
	create_insn	(0X7100056650);
	create_insn	(0X7100056664);
	create_insn	(0X7100056670);
	create_insn	(0X710005667C);
	create_insn	(0X7100056690);
	create_insn	(0X71000566A4);
	create_insn	(0X71000566B0);
	create_insn	(0X71000566C0);
	create_insn	(0X71000566CC);
	create_insn	(0X71000566F0);
	create_insn	(0X710005670C);
	create_insn	(0X7100056714);
	create_insn	(0X710005671C);
	create_insn	(x=0X7100056720);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056724);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056728);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005672C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056774);
	op_hex		(x,	1);
	create_insn	(x=0X71000567BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000567C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000567D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000567E0);
	op_hex		(x,	1);
	create_insn	(0X7100056804);
	create_insn	(0X7100056810);
	create_insn	(x=0X7100056848);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005684C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056850);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056854);
	op_stkvar	(x,	1);
	create_insn	(0X7100056860);
	create_insn	(x=0X7100056864);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056868);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005686C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056870);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000568C4);
	op_hex		(x,	1);
	create_insn	(x=0X710005692C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056938);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056944);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056950);
	op_hex		(x,	1);
	create_insn	(0X7100056974);
	create_insn	(x=0X7100056994);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056998);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005699C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000569A0);
	op_stkvar	(x,	1);
	create_insn	(0X71000569AC);
	create_insn	(x=0X71000569B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000569B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000569B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000569BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000569C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000569C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056A08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056A14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056A1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056A24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056A30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056A34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056A3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056A40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056A44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056A4C);
	op_hex		(x,	1);
	create_insn	(x=0X7100056A50);
	op_hex		(x,	1);
	create_insn	(x=0X7100056A54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056A5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056A64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056A74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056A84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056A88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056A8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056A90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056A98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056AB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056AC8);
	op_hex		(x,	1);
	create_insn	(0X7100056B18);
	create_insn	(x=0X7100056B24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056B30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056B3C);
	op_hex		(x,	1);
	create_insn	(0X7100056B60);
	create_insn	(0X7100056B6C);
	create_insn	(x=0X7100056B8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056B90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056B94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056B98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056B9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056BA0);
	op_stkvar	(x,	1);
	create_insn	(0X7100056BAC);
	create_insn	(x=0X7100056BB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056BB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056BB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056BBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056BC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056BC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056C04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056C10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056C18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056C20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056C2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056C30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056C34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056C38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056C3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056C40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056C48);
	op_hex		(x,	1);
	create_insn	(x=0X7100056C4C);
	op_hex		(x,	1);
	create_insn	(x=0X7100056C50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056C58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056C60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056C70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056C80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056C84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056C88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056C94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056CB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056CD0);
	op_hex		(x,	1);
	create_insn	(x=0X7100056D3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056D48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056D54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056D60);
	op_hex		(x,	1);
	create_insn	(0X7100056D84);
	create_insn	(x=0X7100056DA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056DA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056DAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056DB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056DB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056DB8);
	op_stkvar	(x,	1);
	create_insn	(0X7100056DC4);
	create_insn	(x=0X7100056DC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056DCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056DD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056DD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056E1C);
	op_hex		(x,	1);
	create_insn	(x=0X7100056E64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056E70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056E7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056E88);
	op_hex		(x,	1);
	create_insn	(0X7100056EAC);
	create_insn	(0X7100056EB8);
	create_insn	(x=0X7100056ED8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056EDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056EE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056EE4);
	op_stkvar	(x,	1);
	create_insn	(0X7100056EF0);
	create_insn	(x=0X7100056EF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056EF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056EFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056F00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056F04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056F50);
	op_hex		(x,	1);
	create_insn	(x=0X7100056F98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056FA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056FB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100056FBC);
	op_hex		(x,	1);
	create_insn	(0X7100056FE0);
	create_insn	(0X7100056FEC);
	create_insn	(x=0X7100057034);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057038);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005703C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057040);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057044);
	op_stkvar	(x,	1);
	create_insn	(0X7100057050);
	create_insn	(x=0X7100057054);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057058);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005705C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057060);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057064);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057068);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000570A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000570B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000570C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000570C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000570D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000570D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000570DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000570EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000570F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057104);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057114);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057118);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005711C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057128);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057144);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057164);
	op_hex		(x,	1);
	create_insn	(x=0X71000571D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000571DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000571E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000571F4);
	op_hex		(x,	1);
	create_insn	(0X7100057218);
	create_insn	(x=0X7100057238);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005723C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057240);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057244);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057248);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005724C);
	op_stkvar	(x,	1);
	create_insn	(0X7100057258);
	create_insn	(x=0X710005725C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057260);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057264);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057268);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005726C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057270);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000572B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000572C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000572D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000572DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000572E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000572EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000572FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057304);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057314);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057320);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057324);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005732C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057330);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057338);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057344);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005735C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057370);
	op_hex		(x,	1);
	create_insn	(0X71000573BC);
	create_insn	(x=0X71000573C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000573D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000573E0);
	op_hex		(x,	1);
	create_insn	(0X7100057404);
	create_insn	(x=0X7100057424);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057428);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005742C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057430);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057434);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057438);
	op_stkvar	(x,	1);
	create_insn	(0X7100057444);
	create_insn	(x=0X7100057448);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005744C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057450);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057454);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057458);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005745C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057480);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000574A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000574B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000574B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000574C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000574CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000574D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000574D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000574D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000574DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000574E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000574E8);
	op_hex		(x,	1);
	create_insn	(x=0X71000574EC);
	op_hex		(x,	1);
	create_insn	(x=0X71000574F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000574F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057500);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057510);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005751C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057520);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057524);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057528);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057534);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057550);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057564);
	op_hex		(x,	1);
	create_insn	(x=0X71000575B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000575BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000575C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000575D4);
	op_hex		(x,	1);
	create_insn	(0X71000575F8);
	create_insn	(0X7100057604);
	create_insn	(x=0X7100057608);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057638);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005763C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057640);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057644);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057648);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005764C);
	op_stkvar	(x,	1);
	create_insn	(0X7100057658);
	create_insn	(x=0X710005765C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057660);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057664);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057668);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005766C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000576BC);
	op_hex		(x,	1);
	create_insn	(x=0X7100057704);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057710);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005771C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057728);
	op_hex		(x,	1);
	create_insn	(0X710005774C);
	create_insn	(0X7100057758);
	create_insn	(x=0X7100057788);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005778C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057790);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057794);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057798);
	op_stkvar	(x,	1);
	create_insn	(0X71000577A4);
	create_insn	(x=0X71000577A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000577AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000577B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000577B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000577B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000577BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000577DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057804);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100057814);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057824);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005782C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057830);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057834);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057838);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057848);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057850);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057860);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005786C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057870);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057878);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005787C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057884);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057890);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000578A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000578BC);
	op_hex		(x,	1);
	create_insn	(x=0X71000578C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005790C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057918);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057924);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057930);
	op_hex		(x,	1);
	create_insn	(0X7100057954);
	create_insn	(0X7100057960);
	create_insn	(x=0X7100057964);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057984);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057988);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005798C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057990);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057994);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057998);
	op_stkvar	(x,	1);
	create_insn	(0X71000579A4);
	create_insn	(x=0X71000579A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000579AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000579B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000579B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000579B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000579BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057A00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057A08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057A10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057A18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057A24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057A2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057A30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057A34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057A3C);
	op_hex		(x,	1);
	create_insn	(x=0X7100057A40);
	op_hex		(x,	1);
	create_insn	(x=0X7100057A48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057A50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057A60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057A6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057A70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057A74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057A78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057A84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057AA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057AB4);
	op_hex		(x,	1);
	create_insn	(0X7100057B00);
	create_insn	(x=0X7100057B0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057B18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057B24);
	op_hex		(x,	1);
	create_insn	(0X7100057B48);
	create_insn	(0X7100057B54);
	create_insn	(x=0X7100057B74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057B78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057B7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057B80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057B84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057B88);
	op_stkvar	(x,	1);
	create_insn	(0X7100057B94);
	create_insn	(x=0X7100057B98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057B9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057BA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057BA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057BA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057C00);
	op_hex		(x,	1);
	create_insn	(x=0X7100057C54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057C60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057C6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057C78);
	op_hex		(x,	1);
	create_insn	(0X7100057C9C);
	create_insn	(0X7100057CA8);
	create_insn	(x=0X7100057CC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057CCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057CD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057CD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057CD8);
	op_stkvar	(x,	1);
	create_insn	(0X7100057CE4);
	create_insn	(x=0X7100057CE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057CEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057CF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057CF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057CF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057CFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057D3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057D44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057D4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057D54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057D60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057D64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057D68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057D6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057D70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057D78);
	op_hex		(x,	1);
	create_insn	(x=0X7100057D7C);
	op_hex		(x,	1);
	create_insn	(x=0X7100057D84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057D8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057D9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057DAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057DB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057DB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057DC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057DDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057DF0);
	op_hex		(x,	1);
	create_insn	(x=0X7100057E40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057E4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057E58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057E64);
	op_hex		(x,	1);
	create_insn	(0X7100057E88);
	create_insn	(x=0X7100057EA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057EAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057EB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057EB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057EB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057EBC);
	op_stkvar	(x,	1);
	create_insn	(0X7100057EC8);
	create_insn	(x=0X7100057ECC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057ED0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057ED4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057ED8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057EDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057EE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057EF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057F28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057F30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057F38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057F40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057F4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057F50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057F54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057F58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057F5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057F64);
	op_hex		(x,	1);
	create_insn	(x=0X7100057F68);
	op_hex		(x,	1);
	create_insn	(x=0X7100057F70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057F78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057F88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057F94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057F98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057F9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057FA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057FAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057FC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057FD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100057FF4);
	op_hex		(x,	1);
	create_insn	(x=0X7100058064);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058070);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005807C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058088);
	op_hex		(x,	1);
	create_insn	(0X71000580AC);
	create_insn	(x=0X71000580CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000580D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000580D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000580D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000580DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000580E0);
	op_stkvar	(x,	1);
	create_insn	(0X71000580EC);
	create_insn	(x=0X71000580F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000580F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000580F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000580FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058100);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058104);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058128);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005814C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058158);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005815C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058164);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005816C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058174);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058178);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058180);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058184);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058188);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005818C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058194);
	op_hex		(x,	1);
	create_insn	(x=0X7100058198);
	op_hex		(x,	1);
	create_insn	(x=0X71000581A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000581A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000581B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000581C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000581C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000581D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000581D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000581DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000581E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058200);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058214);
	op_hex		(x,	1);
	create_insn	(x=0X7100058260);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005826C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058278);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058284);
	op_hex		(x,	1);
	create_insn	(0X71000582A8);
	create_insn	(0X71000582B4);
	create_insn	(x=0X71000582B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000582D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000582DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000582E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000582E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000582E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000582EC);
	op_stkvar	(x,	1);
	create_insn	(0X71000582F8);
	create_insn	(x=0X7100058300);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058304);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058308);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058310);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100058318);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100058348,	"result",	0);
	set_cmt	(0X7100058358,	"result",	0);
	create_insn	(x=0X7100058380);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058384);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058388);
	op_stkvar	(x,	1);
	create_insn	(0X7100058390);
	create_insn	(x=0X71000583A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000583A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000583AC);
	op_stkvar	(x,	1);
	make_array	(0X71000583B4,	0XC);
	create_insn	(0X71000583C0);
	set_name	(0X71000583C0,	"CalendarTimeToUnixEpoch");
	create_insn	(x=0X71000583F0);
	op_hex		(x,	1);
	create_insn	(x=0X7100058448);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005848C);
	op_hex		(x,	1);
	make_array	(0X71000584E4,	0XC);
	create_insn	(0X71000584F0);
	create_insn	(x=0X71000585CC);
	op_hex		(x,	1);
	create_insn	(x=0X71000585E4);
	op_hex		(x,	1);
	create_insn	(x=0X7100058614);
	op_hex		(x,	1);
	create_insn	(x=0X710005861C);
	op_hex		(x,	1);
	create_insn	(x=0X7100058638);
	op_hex		(x,	1);
	create_insn	(0X7100058690);
	create_insn	(x=0X71000586CC);
	op_hex		(x,	1);
	create_insn	(x=0X71000586E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100058704);
	op_hex		(x,	1);
	create_insn	(x=0X7100058720);
	op_hex		(x,	1);
	create_insn	(x=0X7100058728);
	op_hex		(x,	1);
	create_insn	(0X7100058744);
	create_insn	(0X7100058750);
	make_array	(0X7100058758,	0X8);
	create_insn	(x=0X7100058760);
	op_stkvar	(x,	1);
	set_name	(0X7100058760,	"Setup_time");
	create_insn	(x=0X7100058764);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058770);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005877C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100058780);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100058798);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000587A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000587AC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X71000587B0,	"result",	0);
	create_insn	(x=0X71000587BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000587C0);
	op_stkvar	(x,	1);
	create_insn	(0X71000587C8);
	create_insn	(0X71000587D0);
	set_name	(0X71000587D0,	"timeIpcServerThreadFunc");
	create_insn	(0X71000587D4);
	create_insn	(0X71000587E4);
	make_array	(0X71000587E8,	0X8);
	create_insn	(x=0X71000587F0);
	op_stkvar	(x,	1);
	set_name	(0X71000587F0,	"Setup_timeIpcServer");
	create_insn	(x=0X71000587F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000587FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100058800);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100058808);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100058814);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100058830);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058834);
	op_stkvar	(x,	1);
	make_array	(0X710005883C,	0X4);
	create_insn	(x=0X7100058840);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X710005884C,	0X4);
	create_insn	(x=0X7100058850);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100058854);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005885C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100058864);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X710005886C);
	set_name	(0X710005886C,	"GlueTime40::GlueTime40");
	create_insn	(0X7100058878);
	set_name	(0X7100058878,	"GlueTime40::SetFilesystemPosixTime");
	create_insn	(x=0X710005887C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058880);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000588AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000588B0);
	op_stkvar	(x,	1);
	create_insn	(0X71000588BC);
	create_insn	(x=0X71000588C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000588C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000588DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000588E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000588E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000588EC);
	op_stkvar	(x,	1);
	create_insn	(0X71000588F8);
	set_name	(0X71000588F8,	"SetupServiceManagerAndTimeZoneBinary");
	create_insn	(x=0X71000588FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058908);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058910);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005891C);
	op_stkvar	(x,	1);
	create_insn	(0X7100058924);
	create_insn	(0X7100058928);
	set_name	(0X7100058928,	"Time::Initialise");
	create_insn	(x=0X710005892C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058930);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058934);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058938);
	op_stkvar	(x,	1);
	set_cmt	(0X710005894C,	"service_manager",	0);
	create_insn	(x=0X7100058974);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058988);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005899C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000589C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000589C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000589C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000589CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000589DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000589EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000589F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058A00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058A08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058A0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058A28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058A2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058A50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058A5C);
	op_stkvar	(x,	1);
	set_cmt	(0X7100058A60,	"context",	0);
	create_insn	(x=0X7100058A60);
	op_stkvar	(x,	1);
	set_cmt	(0X7100058A64,	"time",	0);
	create_insn	(x=0X7100058A6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058A74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058A80);
	op_stkvar	(x,	1);
	set_cmt	(0X7100058A84,	"context",	0);
	create_insn	(x=0X7100058A84);
	op_stkvar	(x,	1);
	set_cmt	(0X7100058A88,	"sufficient_accuracy_minutes",	0);
	create_insn	(x=0X7100058A90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058A9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058AA8);
	op_hex		(x,	1);
	create_insn	(x=0X7100058AAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058AB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058AC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058ACC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058AD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058AE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058B18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058B1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058B20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058B34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058B38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058B40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058B54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058B68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058B6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058B70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058B74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058B80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058B88);
	op_stkvar	(x,	1);
	create_insn	(0X7100058B90);
	create_insn	(0X7100058B98);
	set_name	(0X7100058B98,	"SetupStandardSteadyClockCore");
	create_insn	(x=0X7100058B9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058BA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058BB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058BB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058BC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058BD8);
	op_stkvar	(x,	1);
	set_cmt	(0X7100058BDC,	"out_clock_source_id",	0);
	create_insn	(x=0X7100058BDC);
	op_stkvar	(x,	1);
	set_cmt	(0X7100058BE0,	"external_clock_source_id",	0);
	create_insn	(x=0X7100058BE0);
	op_stkvar	(x,	1);
	set_cmt	(0X7100058BE4,	"steady_resource",	0);
	create_insn	(x=0X7100058BEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058BF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058C04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058C14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058C18);
	op_hex		(x,	1);
	create_insn	(x=0X7100058C1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058C20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058C24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058C28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058C30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058C38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058C3C);
	op_stkvar	(x,	1);
	create_insn	(0X7100058C48);
	create_insn	(0X7100058C50);
	set_name	(0X7100058C50,	"SetupTimeZoneServiceCore");
	create_insn	(x=0X7100058C54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058C58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058C60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058C68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058C78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058C7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058C84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058C8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058C90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058C94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058C98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058C9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058CA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058CA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058CAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058CB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058CB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058CBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058CC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058CC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058CD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058CD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058CDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058CE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058CF0);
	op_stkvar	(x,	1);
	set_name	(0X7100058CF0,	"Time::Shutdown");
	create_insn	(x=0X7100058CF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058D58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058D5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058D64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058D78);
	op_stkvar	(x,	1);
	create_insn	(0X7100058D80);
	set_name	(0X7100058D80,	"j_ReadOrParseTimeZoneBinary");
	create_insn	(0X7100058D84);
	set_name	(0X7100058D84,	"TimeZone_GetRule");
	create_insn	(x=0X7100058D88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058D8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058D90);
	op_stkvar	(x,	1);
	set_cmt	(0X7100058DA0,	"out_zone_info",	0);
	create_insn	(x=0X7100058DA0);
	op_stkvar	(x,	1);
	set_cmt	(0X7100058DA4,	"name_string",	0);
	create_insn	(x=0X7100058DAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058DB0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100058DB8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100058DBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058DC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058DD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058DD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058DD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058DE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058DF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058DF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058DF8);
	op_stkvar	(x,	1);
	make_array	(0X7100058E04,	0XC);
	create_insn	(0X7100058E10);
	set_name	(0X7100058E10,	"TimeZoneBinaryList_GetCount");
	create_insn	(x=0X7100058E14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058E18);
	op_stkvar	(x,	1);
	set_cmt	(0X7100058E20,	"out_path",	0);
	create_insn	(x=0X7100058E28);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100058E30);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100058E48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058E4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058E58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058E60);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100058E68);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7100058E70);
	create_insn	(0X7100058E94);
	create_insn	(x=0X7100058E98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058E9C);
	op_stkvar	(x,	1);
	create_insn	(0X7100058EA8);
	set_name	(0X7100058EA8,	"TimeZoneBinary_TimeZoneBinaryInvalid");
	create_insn	(x=0X7100058EAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058EB0);
	op_stkvar	(x,	1);
	set_cmt	(0X7100058EB8,	"name_string",	0);
	set_cmt	(0X7100058EBC,	"out_zone_info",	0);
	create_insn	(x=0X7100058ED0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058EDC);
	op_stkvar	(x,	1);
	make_array	(0X7100058EE8,	0X8);
	create_insn	(0X7100058EF0);
	set_name	(0X7100058EF0,	"TimeZoneBinary_LoadLocationList");
	create_insn	(x=0X7100058EF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058EF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058EFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058F00);
	op_stkvar	(x,	1);
	set_cmt	(0X7100058F0C,	"out_path",	0);
	create_insn	(x=0X7100058F20);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100058F28);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100058F3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058F40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058F44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058F48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058F54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058F5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058F60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058F64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058F68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058F70);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100058F78);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7100058F88);
	create_insn	(x=0X7100058F94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058F98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058F9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058FA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058FC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058FD8);
	op_stkvar	(x,	1);
	create_insn	(0X7100058FE4);
	create_insn	(x=0X7100058FF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100058FF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059008);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005901C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059020);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059024);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059028);
	op_stkvar	(x,	1);
	create_insn	(0X7100059034);
	create_insn	(x=0X710005903C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059040);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059044);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059048);
	op_stkvar	(x,	1);
	create_insn	(0X7100059054);
	set_name	(0X7100059054,	"TimeZone_GetVersionString");
	create_insn	(x=0X7100059058);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005905C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059068);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059070);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059074);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059088);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005908C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059098);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000590A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000590A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000590B0);
	op_stkvar	(x,	1);
	set_name	(0X71000590B0,	"MountTimeZoneBinary");
	create_insn	(x=0X71000590B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000590C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000590D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000590DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000590E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000590E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000590EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000590F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100059108);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005910C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100059110);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100059114);
	op_stkvar	(x,	1);
	make_array	(0X710005911C,	0X4);
	create_insn	(x=0X7100059120);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X7100059120,	"TimeZone_BinaryZoneInfoString");
	create_insn	(x=0X7100059124);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100059130,	"__int64",	0);
	create_insn	(0X7100059130);
	create_insn	(x=0X7100059138);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005913C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100059144,	"__int64",	0);
	make_array	(0X710005914C,	0X4);
	create_insn	(x=0X7100059150);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X7100059150,	"TimeZoneBinaryList_GetPath");
	create_insn	(x=0X7100059154);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100059160);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100059168);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100059170,	"__int64",	0);
	make_array	(0X7100059178,	0X8);
	create_insn	(x=0X7100059180);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X7100059180,	"TimeZone_GetBinaryVersionPath");
	create_insn	(x=0X7100059188);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100059190,	"__int64",	0);
	make_array	(0X7100059198,	0X8);
	create_insn	(0X71000591A0);
	set_name	(0X71000591A0,	"GetFileSize");
	create_insn	(x=0X71000591A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000591A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000591B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000591B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000591C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000591C4);
	op_stkvar	(x,	1);
	create_insn	(0X71000591D0);
	create_insn	(x=0X71000591D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000591E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000591FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059204);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059210);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059214);
	op_stkvar	(x,	1);
	create_insn	(0X7100059220);
	set_name	(0X7100059220,	"TimeZone_ReadBinary");
	create_insn	(x=0X7100059224);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059228);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005922C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059234);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100059238);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100059244);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059248);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005924C);
	op_stkvar	(x,	1);
	create_insn	(0X7100059258);
	create_insn	(x=0X7100059264);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005927C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059290);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005929C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000592B4);
	op_stkvar	(x,	1);
	create_insn	(0X71000592C0);
	create_insn	(x=0X71000592C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000592D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000592D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000592DC);
	op_stkvar	(x,	1);
	create_insn	(0X71000592E8);
	set_name	(0X71000592E8,	"nn::timemgr::detail::core::StandardSteadyClockResource::StandardSteadyClockResource");
	create_insn	(x=0X71000592EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7100059308);
	set_name	(0X7100059308,	"nullsub_70");
	create_insn	(x=0X710005930C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059310);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059324);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059328);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059330);
	op_stkvar	(x,	1);
	set_name	(0X7100059330,	"StandardSteadyClockResource::GetResetDetected");
	create_insn	(x=0X7100059334);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059338);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059360);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100059370);
	op_hex		(x,	1);
	create_insn	(x=0X7100059374);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005937C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059380);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059388);
	op_stkvar	(x,	1);
	set_name	(0X7100059388,	"StandardSteadyClockResource::GetRtcTimeInSeconds");
	create_insn	(x=0X710005938C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000593AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000593B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000593B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000593C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000593C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000593CC);
	op_stkvar	(x,	1);
	set_name	(0X71000593CC,	"StandardSteadyClockResource::Initialise");
	create_insn	(x=0X71000593D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000593D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000593D8);
	op_stkvar	(x,	1);
	create_insn	(0X710005959C);
	create_insn	(x=0X71000595C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000595CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000595D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000595D4);
	op_stkvar	(x,	1);
	create_insn	(0X71000595DC);
	create_insn	(0X71000595F0);
	set_name	(0X71000595F0,	"StandardSteadyClockResource::GetTime");
	create_insn	(x=0X71000595F8);
	op_stkvar	(x,	1);
	set_name	(0X71000595F8,	"StandardSteadyClockResource::UpdateTime");
	create_insn	(x=0X71000595FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005960C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059610);
	op_stkvar	(x,	1);
	create_insn	(0X7100059618);
	create_insn	(x=0X7100059658);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005965C);
	op_stkvar	(x,	1);
	create_insn	(0X7100059664);
	set_name	(0X7100059664,	"StandardSteadyClockResource::SetCurrentTime");
	create_insn	(x=0X7100059668);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005966C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059670);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005968C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059698);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005969C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000596A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000596AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000596D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X71000596E4,	"__int64",	0);
	create_insn	(x=0X71000596E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X71000596EC,	"__int64",	0);
	create_insn	(x=0X710005970C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059710);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059714);
	op_stkvar	(x,	1);
	create_insn	(0X7100059720);
	create_insn	(x=0X7100059754);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059758);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005975C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059768);
	op_stkvar	(x,	1);
	set_name	(0X7100059768,	"EnableAlarmId0");
	create_insn	(x=0X7100059788);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059790);
	op_stkvar	(x,	1);
	set_name	(0X7100059790,	"Rtc_DisableAlarm_Id0");
	create_insn	(x=0X71000597AC);
	op_stkvar	(x,	1);
	make_array	(0X71000597B4,	0XC);
	create_insn	(x=0X71000597C0);
	op_stkvar	(x,	1);
	set_name	(0X71000597C0,	"Rtc_GetTimeInSeconds_0");
	create_insn	(x=0X71000597C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000597C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000597D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000597D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000597EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000597F0);
	op_hex		(x,	1);
	create_insn	(x=0X71000597F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000597FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059800);
	op_stkvar	(x,	1);
	make_array	(0X7100059808,	0X8);
	create_insn	(0X7100059810);
	set_name	(0X7100059810,	"Rtc_GetRtcResetDetected_");
	create_insn	(x=0X7100059814);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059818);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059820);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100059828);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100059838);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005983C);
	op_hex		(x,	1);
	create_insn	(x=0X7100059840);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059848);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005984C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059850);
	op_stkvar	(x,	1);
	make_array	(0X710005985C,	0X4);
	create_insn	(x=0X7100059860);
	op_stkvar	(x,	1);
	set_name	(0X7100059860,	"Rtc_ClearRtcResetDetected_");
	create_insn	(x=0X7100059864);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005986C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100059874);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100059884);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100059888);
	op_hex		(x,	1);
	create_insn	(x=0X710005988C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059890);
	op_stkvar	(x,	1);
	make_array	(0X7100059898,	0X8);
	create_insn	(0X71000598A0);
	set_name	(0X71000598A0,	"EnableAlarmInFuture");
	create_insn	(x=0X71000598A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000598A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000598AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000598B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000598B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000598C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000598D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000598DC);
	op_hex		(x,	1);
	create_insn	(x=0X71000598E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000598EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059958);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059968);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059984);
	op_stkvar	(x,	1);
	set_cmt	(0X710005998C,	"__int64",	0);
	create_insn	(x=0X710005998C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100059990,	"__int64",	0);
	create_insn	(x=0X71000599E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000599E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000599E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000599EC);
	op_stkvar	(x,	1);
	create_insn	(0X71000599F8);
	create_insn	(x=0X7100059A00);
	op_stkvar	(x,	1);
	set_name	(0X7100059A00,	"Rtc_DisableAlarm_");
	create_insn	(x=0X7100059A04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059A08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059A10);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100059A18);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100059A2C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100059A30);
	op_hex		(x,	1);
	create_insn	(x=0X7100059A3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059A44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059A48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059A4C);
	op_stkvar	(x,	1);
	create_insn	(0X7100059A54);
	create_dword	(0X7100059A5C);
	create_insn	(0X7100059A60);
	set_name	(0X7100059A60,	"SetSys_GetExternalSteadyClockSourceId_W_");
	create_insn	(x=0X7100059A64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059A74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059A78);
	op_stkvar	(x,	1);
	make_array	(0X7100059A84,	0XC);
	create_insn	(0X7100059A90);
	set_name	(0X7100059A90,	"j_SetSys_SetExternalSteadyClockSourceId_");
	make_array	(0X7100059A94,	0XC);
	create_insn	(x=0X7100059AA0);
	op_stkvar	(x,	1);
	set_name	(0X7100059AA0,	"SetSys_GetExternalSteadyClockInternalOffset_Seconds");
	create_insn	(x=0X7100059AB8);
	op_stkvar	(x,	1);
	create_insn	(0X7100059AC0);
	set_name	(0X7100059AC0,	"SetSys::SetExternalSteadyClockInternalOffset__");
	create_insn	(0X7100059AE0);
	set_name	(0X7100059AE0,	"SetSys_GetUserSystemClockContext_W_");
	make_array	(0X7100059AE8,	0X8);
	create_insn	(0X7100059AF0);
	set_name	(0X7100059AF0,	"j_SetSys_SetUserSystemClockContext_");
	make_array	(0X7100059AF4,	0XC);
	create_insn	(0X7100059B00);
	set_name	(0X7100059B00,	"SetSys_GetNetworkSystemClockContext_W");
	make_array	(0X7100059B08,	0X8);
	create_insn	(0X7100059B10);
	set_name	(0X7100059B10,	"j_SetSys_SetNetworkSystemClockContext_");
	make_array	(0X7100059B14,	0XC);
	create_insn	(0X7100059B20);
	set_name	(0X7100059B20,	"j_SetSys_IsUserSystemClockAutomaticCorrectionEnabled_");
	make_array	(0X7100059B24,	0XC);
	create_insn	(0X7100059B30);
	set_name	(0X7100059B30,	"j_SetSys_SetUserSystemClockAutomaticCorrection_");
	make_array	(0X7100059B34,	0XC);
	create_insn	(0X7100059B40);
	set_name	(0X7100059B40,	"SetSys_GetUserSystemClockAutomaticCorrectionUpdatedTime__");
	make_array	(0X7100059B48,	0X8);
	create_insn	(0X7100059B50);
	set_name	(0X7100059B50,	"j_SetSys_SetUserSystemClockAutoCorrectionUpdatedTime_");
	make_array	(0X7100059B54,	0XC);
	create_insn	(0X7100059B60);
	set_name	(0X7100059B60,	"SetSys_GetDeviceTimeZoneLocationName__");
	make_array	(0X7100059B68,	0X8);
	create_insn	(0X7100059B70);
	set_name	(0X7100059B70,	"j_SetSys_SetDeviceTimeZoneLocationName_");
	make_array	(0X7100059B74,	0XC);
	create_insn	(0X7100059B80);
	set_name	(0X7100059B80,	"SetSys_GetDeviceTimeZoneLocationUpdatedTime__");
	make_array	(0X7100059B88,	0X8);
	create_insn	(0X7100059B90);
	set_name	(0X7100059B90,	"j_SetSys_SetDeviceTimeZoneLocationUpdatedTime_");
	make_array	(0X7100059B94,	0XC);
	create_insn	(0X7100059BA0);
	set_name	(0X7100059BA0,	"SetSys_GetStandardNetworkClockSufficientAccuracyMinutes");
	create_insn	(x=0X7100059BA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059BAC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100059BB8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100059BBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059BD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059BDC);
	op_stkvar	(x,	1);
	create_insn	(0X7100059BF0);
	create_dword	(0X7100059BF4);
	make_array	(0X7100059BF8,	0X8);
	create_insn	(0X7100059C00);
	set_name	(0X7100059C00,	"SetSys_GetStandardSteadyClockTestOffsetMinutes");
	create_insn	(x=0X7100059C04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059C0C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100059C14);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100059C1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059C30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059C3C);
	op_stkvar	(x,	1);
	create_insn	(0X7100059C50);
	create_dword	(0X7100059C54);
	make_array	(0X7100059C58,	0X8);
	create_insn	(0X7100059C60);
	set_name	(0X7100059C60,	"SetSys_GetStandardSteadyClockRtcUdpateIntervalNanoseconds");
	create_insn	(x=0X7100059C64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059C6C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100059C74);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100059C7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059C90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059C9C);
	op_stkvar	(x,	1);
	create_insn	(0X7100059CB0);
	create_dword	(0X7100059CB4);
	make_array	(0X7100059CB8,	0X8);
	create_insn	(0X7100059CC0);
	set_name	(0X7100059CC0,	"SetSys_GetNotifyTimeToFsIntervalSeconds");
	create_insn	(x=0X7100059CC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059CCC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100059CD4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100059CDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059CF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059CFC);
	op_stkvar	(x,	1);
	create_insn	(0X7100059D0C);
	create_insn	(0X7100059D10);
	set_name	(0X7100059D10,	"SetSys_GetStandardUserClockInitialYear");
	create_insn	(x=0X7100059D14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059D1C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100059D24);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100059D2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059D40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059D44);
	op_stkvar	(x,	1);
	create_insn	(0X7100059D50);
	create_insn	(0X7100059D54);
	set_name	(0X7100059D54,	"GlueTime58PmStateChangeHandler::GlueTime58PmStateChangeHandler");
	create_insn	(x=0X7100059D58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059D68);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100059D7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059D84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059D90);
	op_stkvar	(x,	1);
	create_insn	(0X7100059D98);
	create_insn	(0X7100059D9C);
	create_insn	(0X7100059DA8);
	create_insn	(x=0X7100059DB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059DBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059DD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059DDC);
	op_stkvar	(x,	1);
	create_insn	(0X7100059DE4);
	create_insn	(x=0X7100059DEC);
	op_stkvar	(x,	1);
	set_name	(0X7100059DEC,	"GlueTime58::GlueTime58");
	create_insn	(x=0X7100059DF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059DF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059DF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059DFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059EC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059EDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059EF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059F08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059F20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059F34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059F50);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100059F54);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100059F5C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100059F74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059F80);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100059F84,	"result",	0);
	create_insn	(x=0X7100059F8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059F90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059F94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059F98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100059F9C);
	op_stkvar	(x,	1);
	create_insn	(0X7100059FA4);
	create_insn	(0X7100059FAC);
	set_name	(0X7100059FAC,	"timeWorkerThreadFunc");
	create_insn	(x=0X7100059FB0);
	op_stkvar	(x,	1);
	set_name	(0X7100059FB0,	"GlueTime58::Finalise");
	create_insn	(x=0X7100059FB4);
	op_stkvar	(x,	1);
	set_cmt	(0X710005A094,	"result",	0);
	create_insn	(x=0X710005A098);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A09C);
	op_stkvar	(x,	1);
	create_insn	(0X710005A0A4);
	set_name	(0X710005A0A4,	"j__ZN2nn2os11StartThreadEPNS0_10ThreadTypeE");
	make_array	(0X710005A0A8,	0X8);
	create_insn	(0X710005A0B0);
	set_name	(0X710005A0B0,	"TimeWorker_MainThreadFunc");
	create_insn	(x=0X710005A0B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A0B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A0BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A0C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A0C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A0C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A0D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005A0DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A0E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005A104);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X710005A10C,	"jumptable 000000710005A258 case 8",	1);
	create_insn	(0X710005A10C);
	set_cmt	(0X710005A114,	"this",	0);
	create_insn	(x=0X710005A124);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A12C);
	op_stkvar	(x,	1);
	set_cmt	(0X710005A130,	"__int64",	0);
	create_insn	(x=0X710005A138);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A13C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A140);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A148);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A14C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A150);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A154);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A158);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A168);
	op_stkvar	(x,	1);
	create_insn	(0X710005A17C);
	create_insn	(x=0X710005A184);
	op_stkvar	(x,	1);
	set_cmt	(0X710005A188,	"__int64",	0);
	create_insn	(x=0X710005A190);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A19C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A1A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A1A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A1A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A1AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A1B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A1B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A1B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A1C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A1CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A1D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A1D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A1DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A1E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A1E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A1E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A1EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A1F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A1F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A1F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A1FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A200);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A204);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A208);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A20C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A210);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A21C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A224);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A230);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A238);
	op_stkvar	(x,	1);
	set_cmt	(0X710005A240,	"switch 10 cases",	0);
	create_insn	(x=0X710005A248);
	op_hex		(x,	1);
	create_insn	(x=0X710005A24C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X710005A258,	"switch jump",	0);
	set_cmt	(0X710005A25C,	"jumptable 000000710005A258 case 1",	1);
	create_insn	(0X710005A25C);
	set_cmt	(0X710005A26C,	"jumptable 000000710005A258 case 2",	1);
	create_insn	(0X710005A26C);
	set_cmt	(0X710005A284,	"a1",	0);
	set_cmt	(0X710005A290,	"jumptable 000000710005A258 case 3",	1);
	create_insn	(0X710005A290);
	set_cmt	(0X710005A2A8,	"jumptable 000000710005A258 case 4",	1);
	create_insn	(x=0X710005A2A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A2B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A2C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A2CC);
	op_stkvar	(x,	1);
	set_cmt	(0X710005A2D8,	"jumptable 000000710005A258 case 5",	1);
	create_insn	(x=0X710005A2D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A2E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A2F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A2FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A308);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A31C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A320);
	op_stkvar	(x,	1);
	set_cmt	(0X710005A32C,	"jumptable 000000710005A258 case 6",	1);
	create_insn	(0X710005A32C);
	create_insn	(x=0X710005A338);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A350);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A364);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A368);
	op_stkvar	(x,	1);
	set_cmt	(0X710005A374,	"jumptable 000000710005A258 case 7",	1);
	create_insn	(0X710005A374);
	create_insn	(x=0X710005A38C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A390);
	op_stkvar	(x,	1);
	set_cmt	(0X710005A39C,	"jumptable 000000710005A258 case 9",	1);
	create_insn	(0X710005A39C);
	create_insn	(x=0X710005A3A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A3B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A3C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A3D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A3DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A3E4);
	op_stkvar	(x,	1);
	set_cmt	(0X710005A3F0,	"jumptable 000000710005A258 case 0",	1);
	create_insn	(x=0X710005A3F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A3F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A3F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A3FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A400);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A404);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A410);
	op_stkvar	(x,	1);
	set_cmt	(0X710005A418,	"jumptable 000000710005A258 default case",	1);
	create_insn	(0X710005A418);
	set_name	(0X710005A418,	"def_710005A258");
	create_insn	(x=0X710005A41C);
	op_stkvar	(x,	1);
	create_insn	(0X710005A424);
	set_name	(0X710005A424,	"nullsub_71");
	create_insn	(0X710005A428);
	set_name	(0X710005A428,	"nullsub_72");
	create_insn	(0X710005A42C);
	set_name	(0X710005A42C,	"nullsub_73");
	create_insn	(0X710005A430);
	set_name	(0X710005A430,	"nullsub_74");
	create_insn	(0X710005A434);
	set_name	(0X710005A434,	"nullsub_75");
	create_insn	(0X710005A438);
	set_name	(0X710005A438,	"nullsub_76");
	create_insn	(0X710005A43C);
	set_name	(0X710005A43C,	"nullsub_77");
	create_insn	(0X710005A440);
	set_name	(0X710005A440,	"nullsub_78");
	make_array	(0X710005A444,	0XC);
	create_insn	(0X710005A450);
	set_name	(0X710005A450,	"MultiWait_LinkLotsOfEvents");
	create_insn	(x=0X710005A454);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A458);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A45C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A460);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A464);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A468);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A47C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A480);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A484);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A488);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A4A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A4B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A4B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A4C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A4D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A4D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A4E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A4EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A500);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A51C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A528);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A530);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A534);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A53C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A54C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A554);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A55C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A570);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A580);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A584);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A588);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A58C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A590);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A594);
	op_stkvar	(x,	1);
	create_insn	(0X710005A5A0);
	create_insn	(x=0X710005A5A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A5A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A5AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A5B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A5B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A5B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A5CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A5D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A5EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A5FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A604);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A60C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A61C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A624);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A62C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A65C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A668);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A674);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A684);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A68C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A694);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A6A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A6B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A6BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A6C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A6C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A6C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A6CC);
	op_stkvar	(x,	1);
	make_array	(0X710005A6D8,	0X8);
	create_insn	(0X710005A6E0);
	create_insn	(x=0X710005A6E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A6E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A6EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A6F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A6F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A6F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A734);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A73C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A744);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A754);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A75C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A764);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A788);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A794);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A7A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A7B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A7E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A7E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A7E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A7EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A7F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A7F4);
	op_stkvar	(x,	1);
	create_insn	(0X710005A800);
	set_name	(0X710005A800,	"GlueTime58PmStateChangeHandler::InitialiseIPmModule");
	create_insn	(x=0X710005A804);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A80C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005A818);
	op_plain_offset	(x,	1,	0X7100240000);
	op_plain_offset	(x,	129,	0X7100240000);
	create_insn	(x=0X710005A820);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A828);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A83C);
	op_stkvar	(x,	1);
	make_array	(0X710005A848,	0X8);
	create_insn	(x=0X710005A850);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X710005A850,	"gIPmModuleService::GetEvent_");
	make_array	(0X710005A85C,	0X4);
	create_insn	(0X710005A860);
	set_name	(0X710005A860,	"HandleTimePowerStateChange");
	create_insn	(x=0X710005A864);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A868);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A870);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X710005A878,	"__int64",	0);
	create_insn	(x=0X710005A878);
	op_stkvar	(x,	1);
	set_cmt	(0X710005A880,	"int",	0);
	create_insn	(x=0X710005A880);
	op_stkvar	(x,	1);
	set_cmt	(0X710005A884,	"_BYTE *",	0);
	create_insn	(x=0X710005A894);
	op_stkvar	(x,	1);
	set_cmt	(0X710005A898,	"switch 6 cases",	0);
	create_insn	(x=0X710005A8A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005A8A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X710005A8B4,	"switch jump",	0);
	set_cmt	(0X710005A8B8,	"jumptable 000000710005A8B4 case 0",	1);
	create_insn	(0X710005A8B8);
	set_cmt	(0X710005A8C0,	"jumptable 000000710005A8B4 case 1",	1);
	create_insn	(0X710005A8C0);
	set_cmt	(0X710005A8CC,	"jumptable 000000710005A8B4 case 2",	1);
	create_insn	(0X710005A8CC);
	set_cmt	(0X710005A8D8,	"jumptable 000000710005A8B4 case 3",	1);
	create_insn	(0X710005A8D8);
	set_cmt	(0X710005A8E4,	"jumptable 000000710005A8B4 case 4",	1);
	create_insn	(0X710005A8E4);
	set_cmt	(0X710005A8F0,	"jumptable 000000710005A8B4 case 5",	1);
	create_insn	(x=0X710005A8F0);
	op_dec		(x,	1);
	set_cmt	(0X710005A900,	"jumptable 000000710005A8B4 default case",	1);
	create_insn	(x=0X710005A900);
	op_stkvar	(x,	1);
	set_name	(0X710005A900,	"def_710005A8B4");
	create_insn	(x=0X710005A918);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A934);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A938);
	op_stkvar	(x,	1);
	make_array	(0X710005A944,	0XC);
	create_insn	(x=0X710005A950);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X710005A95C,	0X4);
	create_insn	(x=0X710005A960);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A964);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A96C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005A97C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005A984);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005A988);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A990);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005A994);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A99C);
	op_stkvar	(x,	1);
	set_name	(0X710005A99C,	"GlueTime58Sub::GlueTime58Sub");
	create_insn	(x=0X710005A9A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A9CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A9D0);
	op_stkvar	(x,	1);
	create_insn	(0X710005A9D8);
	set_name	(0X710005A9D8,	"nullsub_79");
	create_insn	(0X710005A9DC);
	set_name	(0X710005A9DC,	"GlueTime58Sub::GetTimerEvent");
	create_insn	(x=0X710005A9E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005A9E8);
	op_stkvar	(x,	1);
	set_cmt	(0X710005AA08,	"this",	0);
	create_insn	(x=0X710005AA0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005AA10);
	op_stkvar	(x,	1);
	create_insn	(0X710005AA18);
	create_insn	(x=0X710005AA1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005AA20);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005AA24);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005AA34);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005AA3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005AA48);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005AA54);
	op_stkvar	(x,	1);
	set_cmt	(0X710005AA98,	"__int64",	0);
	create_insn	(x=0X710005AA98);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X710005AA9C,	"__int64",	0);
	create_insn	(x=0X710005AAE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005AAE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005AAE8);
	op_stkvar	(x,	1);
	create_insn	(0X710005AAF4);
	create_insn	(x=0X710005AB1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005AB20);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005AB24);
	op_stkvar	(x,	1);
	create_insn	(0X710005AB30);
	create_insn	(x=0X710005AB34);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X710005AB40,	"__int64",	0);
	create_insn	(x=0X710005AB40);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X710005AB48,	"__int64",	0);
	create_insn	(x=0X710005AB58);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005AB5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005AB60);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005AB6C);
	op_stkvar	(x,	1);
	set_name	(0X710005AB6C,	"CheckAndSignalAlarms_");
	create_insn	(x=0X710005AB88);
	op_stkvar	(x,	1);
	create_insn	(0X710005AB90);
	create_insn	(x=0X710005AB94);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005AB98);
	op_stkvar	(x,	1);
	set_cmt	(0X710005ABCC,	"a1",	0);
	create_insn	(x=0X710005ABD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005ABD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005ABDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005ABE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005ABEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005ABF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005ABF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005AC04);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005AC0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005AC14);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005AC28);
	op_stkvar	(x,	1);
	set_cmt	(0X710005AC30,	"__int64",	0);
	create_insn	(x=0X710005AC30);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X710005AC34,	"__int64",	0);
	create_insn	(x=0X710005ACD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005ACD8);
	op_stkvar	(x,	1);
	create_insn	(0X710005ACE4);
	create_insn	(x=0X710005ACF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005ACFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005AD08);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005AD10);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005AD14);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005AD3C);
	op_stkvar	(x,	1);
	set_cmt	(0X710005AD48,	"a1",	0);
	set_cmt	(0X710005AD50,	"this",	0);
	create_insn	(x=0X710005AD54);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005AD58);
	op_stkvar	(x,	1);
	create_insn	(0X710005AD60);
	create_qword	(0X710005AD68);
	create_insn	(0X710005AD70);
	set_name	(0X710005AD70,	"SystemReport_ReportLaunch");
	create_insn	(x=0X710005AD74);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005AD78);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005AD8C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005ADA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005ADA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005ADB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005ADB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005ADC4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005ADD8);
	op_hex		(x,	1);
	create_insn	(x=0X710005ADDC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005ADF0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005AE10);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005AE14);
	op_stkvar	(x,	1);
	create_insn	(0X710005AE20);
	set_name	(0X710005AE20,	"UpdateGlobalNetworkSystemClockContext");
	create_insn	(x=0X710005AE24);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005AE28);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005AE38);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005AE50);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005AE58);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005AE64);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005AE68);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005AE74);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005AE8C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005AEA0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005AEAC);
	op_plain_offset	(x,	1,	0X7100240050);
	op_plain_offset	(x,	129,	0X7100240050);
	create_insn	(x=0X710005AEB0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005AED0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005AEFC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005AF04);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005AF10);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005AF14);
	op_stkvar	(x,	1);
	create_insn	(0X710005AF20);
	set_name	(0X710005AF20,	"UpdateGlobalEphemeralSystemClockContext");
	create_insn	(x=0X710005AF24);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005AF28);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005AF38);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005AF50);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005AF58);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005AF64);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005AF68);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005AF74);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005AF8C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005AFA0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005AFAC);
	op_plain_offset	(x,	1,	0X7100240078);
	op_plain_offset	(x,	129,	0X7100240078);
	create_insn	(x=0X710005AFB0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005AFD0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005AFFC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005B004);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005B010);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005B014);
	op_stkvar	(x,	1);
	create_insn	(0X710005B020);
	set_name	(0X710005B020,	"Unk4440::Unk4440");
	create_insn	(x=0X710005B024);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005B028);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005B02C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005B030);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005B034);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005B058);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005B05C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005B060);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005B064);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X710005B070,	"info",	0);
	create_insn	(x=0X710005B070);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X710005B074,	"a3",	0);
	set_cmt	(0X710005B078,	"a4",	0);
	set_cmt	(0X710005B09C,	"a1",	0);
	create_insn	(x=0X710005B0A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005B0B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X710005B0B8,	"info",	0);
	create_insn	(x=0X710005B0B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X710005B0BC,	"a3",	0);
	set_cmt	(0X710005B0C0,	"a4",	0);
	set_cmt	(0X710005B0D0,	"a1",	0);
	set_cmt	(0X710005B0E4,	"info",	0);
	create_insn	(x=0X710005B0E4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X710005B0E8,	"a1",	0);
	set_cmt	(0X710005B0F0,	"a3",	0);
	set_cmt	(0X710005B0F4,	"a4",	0);
	create_insn	(x=0X710005B130);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005B138);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005B13C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005B14C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005B158);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005B170);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005B17C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005B18C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005B1A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005B1B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005B1C0);
	op_stkvar	(x,	1);
	set_cmt	(0X710005B1D4,	"this",	0);
	create_insn	(x=0X710005B1DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005B1E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005B1E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005B1E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005B1EC);
	op_stkvar	(x,	1);
	make_array	(0X710005B1F8,	0X8);
	create_insn	(x=0X710005B200);
	op_stkvar	(x,	1);
	set_name	(0X710005B200,	"GlueTime458::Finalise");
	create_insn	(x=0X710005B204);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005B20C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005B214);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X710005B238,	"this",	0);
	set_cmt	(0X710005B244,	"this",	0);
	set_cmt	(0X710005B250,	"this",	0);
	create_insn	(x=0X710005B258);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005B260);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X710005B278);
	create_insn	(0X710005B2A4);
	set_cmt	(0X710005B2E0,	"result",	0);
	set_cmt	(0X710005B2E8,	"a1",	0);
	create_insn	(x=0X710005B2EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005B2F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005B2F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005B2FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005B310);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005B314);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005B31C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005B320);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005B324);
	op_stkvar	(x,	1);
	create_insn	(0X710005B5B4);
	create_insn	(0X710005B5BC);
	create_insn	(0X710005B5C8);
	create_insn	(0X710005B5D4);
	create_insn	(0X710005B5E0);
	create_insn	(0X710005B5EC);
	create_insn	(0X710005B5F8);
	create_insn	(0X710005B604);
	create_insn	(0X710005B610);
	create_insn	(0X710005B61C);
	create_insn	(0X710005B628);
	create_insn	(0X710005B634);
	create_insn	(0X710005B640);
	create_insn	(0X710005B64C);
	create_insn	(0X710005B658);
	create_insn	(0X710005B664);
	create_insn	(0X710005B670);
	create_insn	(0X710005B67C);
	create_insn	(0X710005B688);
	create_insn	(0X710005B694);
	create_insn	(0X710005B6A0);
	create_insn	(0X710005B6AC);
	create_insn	(0X710005B6B8);
	create_insn	(0X710005B6C4);
	create_insn	(0X710005B6D0);
	create_insn	(0X710005B6DC);
	create_insn	(0X710005B6E8);
	create_insn	(0X710005B6F4);
	create_insn	(0X710005B700);
	create_insn	(0X710005B70C);
	create_insn	(0X710005B718);
	create_insn	(0X710005B724);
	create_insn	(0X710005B730);
	create_insn	(0X710005B73C);
	create_insn	(0X710005B748);
	create_insn	(0X710005B754);
	create_insn	(0X710005B760);
	create_insn	(0X710005B76C);
	create_insn	(0X710005B778);
	create_insn	(0X710005B784);
	create_insn	(0X710005B790);
	create_insn	(0X710005B79C);
	create_insn	(0X710005B7A8);
	create_insn	(0X710005B7B4);
	create_insn	(0X710005B7C0);
	create_insn	(0X710005B7CC);
	create_insn	(0X710005B7D8);
	create_insn	(0X710005B7E4);
	create_insn	(0X710005B7F0);
	create_insn	(0X710005B7FC);
	create_insn	(0X710005B808);
	create_insn	(0X710005B814);
	create_insn	(x=0X710005B838);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005B83C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005B840);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005B848);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005B84C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005B850);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005B87C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005B890);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005B898);
	op_stkvar	(x,	1);
	create_insn	(0X710005B8A0);
	create_insn	(0X710005B8CC);
	set_name	(0X710005B8CC,	"nullsub_80");
	create_insn	(x=0X710005B8D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005B8EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005B8F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005B900);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005B904);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005B944);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005B948);
	op_stkvar	(x,	1);
	create_insn	(0X710005B950);
	create_insn	(0X710005B95C);
	create_insn	(0X710005B968);
	create_insn	(x=0X710005B990);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005B994);
	op_stkvar	(x,	1);
	create_insn	(0X710005B99C);
	create_insn	(0X710005B9A4);
	set_name	(0X710005B9A4,	"nullsub_81");
	create_insn	(x=0X710005B9A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005B9AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005B9B0);
	op_stkvar	(x,	1);
	create_insn	(0X710005BAA8);
	create_insn	(0X710005BAB0);
	create_insn	(0X710005BAB8);
	create_insn	(0X710005BAC0);
	create_insn	(0X710005BAC8);
	create_insn	(0X710005BAD0);
	create_insn	(0X710005BAD8);
	create_insn	(0X710005BAE0);
	create_insn	(0X710005BAE8);
	create_insn	(0X710005BAF0);
	create_insn	(0X710005BAF8);
	create_insn	(0X710005BB00);
	create_insn	(0X710005BB08);
	create_insn	(0X710005BB10);
	create_insn	(0X710005BB18);
	create_insn	(0X710005BB20);
	create_insn	(0X710005BB28);
	create_insn	(0X710005BB30);
	create_insn	(0X710005BB38);
	create_insn	(0X710005BB40);
	create_insn	(0X710005BB48);
	create_insn	(0X710005BB50);
	create_insn	(0X710005BB58);
	create_insn	(0X710005BB60);
	create_insn	(0X710005BB68);
	create_insn	(0X710005BB70);
	create_insn	(x=0X710005BB98);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005BB9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005BBA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005BBA8);
	op_stkvar	(x,	1);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_9(void) {
        auto x;
#define id x

	create_insn	(x=0X710005BBAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005BBB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005BBDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005BBF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005BBFC);
	op_stkvar	(x,	1);
	create_insn	(0X710005BC04);
	create_insn	(0X710005BC10);
	set_name	(0X710005BC10,	"nullsub_82");
	create_insn	(0X710005BC14);
	create_insn	(x=0X710005BC1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005BC20);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005BC24);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005BC50);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005BC64);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005BC70);
	op_stkvar	(x,	1);
	create_insn	(0X710005BC78);
	create_insn	(x=0X710005BC84);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005BC88);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005BC8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005BC94);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005BC9C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005BD00);
	op_hex		(x,	1);
	create_insn	(x=0X710005BD08);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C124);
	op_hex		(x,	1);
	create_insn	(x=0X710005C12C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C130);
	op_stkvar	(x,	1);
	create_insn	(0X710005C138);
	set_name	(0X710005C138,	"nullsub_83");
	create_insn	(0X710005C13C);
	set_name	(0X710005C13C,	"nullsub_84");
	create_insn	(0X710005C140);
	set_name	(0X710005C140,	"nn::timesrv::detail::service::IStaticService::GetStandardUserSystemClock");
	create_insn	(x=0X710005C144);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C154);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C158);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C160);
	op_stkvar	(x,	1);
	create_insn	(0X710005C16C);
	set_name	(0X710005C16C,	"nn::timesrv::detail::service::IStaticService::GetStandardNetworkSystemClock");
	create_insn	(x=0X710005C170);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C180);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C184);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C18C);
	op_stkvar	(x,	1);
	create_insn	(0X710005C198);
	set_name	(0X710005C198,	"nn::timesrv::detail::service::IStaticService::GetStandardSteadyClock");
	create_insn	(x=0X710005C19C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C1AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C1B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C1B8);
	op_stkvar	(x,	1);
	create_insn	(0X710005C1C4);
	set_name	(0X710005C1C4,	"nn::timesrv::detail::service::IStaticService::GetTimeZoneService");
	create_insn	(x=0X710005C1C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C1D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C1DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C1E4);
	op_stkvar	(x,	1);
	create_insn	(0X710005C1F0);
	set_name	(0X710005C1F0,	"nn::timesrv::detail::service::IStaticService::GetStandardLocalSystemClock");
	create_insn	(x=0X710005C1F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C204);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C208);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C210);
	op_stkvar	(x,	1);
	create_insn	(0X710005C21C);
	set_name	(0X710005C21C,	"nn::timesrv::detail::service::IStaticService::GetEphemeralNetworkSystemClock");
	create_insn	(x=0X710005C220);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C230);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C234);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C23C);
	op_stkvar	(x,	1);
	create_insn	(0X710005C248);
	set_name	(0X710005C248,	"nn::timesrv::detail::service::IStaticService::GetSharedMemoryNativeHandle");
	create_insn	(0X710005C250);
	set_name	(0X710005C250,	"nn::timesrv::detail::service::IStaticService::SetStandardSteadyClockInternalOffset");
	create_insn	(0X710005C258);
	set_name	(0X710005C258,	"nn::timesrv::detail::service::IStaticService::GetStandardSteadyClockRtcValue");
	set_cmt	(0X710005C260,	"a1",	0);
	create_insn	(0X710005C260);
	set_name	(0X710005C260,	"nn::timesrv::detail::service::IStaticService::IsStandardUserSystemClockAutomaticCorrectionEnabled");
	create_insn	(0X710005C268);
	set_name	(0X710005C268,	"nn::timesrv::detail::service::IStaticService::SetStandardUserSystemClockAutomaticCorrectionEnabled");
	create_insn	(0X710005C270);
	set_name	(0X710005C270,	"nn::timesrv::detail::service::IStaticService::GetStandardUserSystemClockInitialYear");
	create_insn	(0X710005C278);
	set_name	(0X710005C278,	"nn::timesrv::detail::service::IStaticService::IsStandardNetworkSystemClockAccuracySufficient");
	create_insn	(0X710005C280);
	set_name	(0X710005C280,	"nn::timesrv::detail::service::IStaticService::GetStandardUserSystemClockAutomaticCorrectionUpdatedTime");
	create_insn	(0X710005C288);
	set_name	(0X710005C288,	"nn::timesrv::detail::service::IStaticService::CalculateMonotonicSystemClockBaseTimePoint");
	create_insn	(0X710005C290);
	set_name	(0X710005C290,	"nn::timesrv::detail::service::IStaticService::GetClockSnapshot");
	create_insn	(0X710005C298);
	set_name	(0X710005C298,	"nn::timesrv::detail::service::IStaticService::GetClockSnapshotFromSystemClockContext");
	create_insn	(0X710005C2A0);
	set_name	(0X710005C2A0,	"nn::timesrv::detail::service::IStaticService::CalculateStandardUserSystemClockDifferenceByUser");
	create_insn	(0X710005C2A8);
	set_name	(0X710005C2A8,	"nn::timesrv::detail::service::IStaticService::CalculateSpanBetween");
	create_insn	(0X710005C2B0);
	set_name	(0X710005C2B0,	"ServiceHandler_time_w");
	create_insn	(x=0X710005C2B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C2B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C2C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C2D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C2D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C304);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C310);
	op_hex		(x,	1);
	create_insn	(x=0X710005C32C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C330);
	op_stkvar	(x,	1);
	create_insn	(0X710005C33C);
	create_insn	(x=0X710005C344);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C348);
	op_stkvar	(x,	1);
	create_insn	(0X710005C354);
	create_insn	(x=0X710005C35C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C360);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C36C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C3A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C3A4);
	op_stkvar	(x,	1);
	create_insn	(0X710005C3B0);
	create_insn	(0X710005C3B8);
	set_name	(0X710005C3B8,	"ServiceHandler_time");
	create_insn	(x=0X710005C3BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C3C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C3C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C3C8);
	op_stkvar	(x,	1);
	set_cmt	(0X710005C3F0,	"switch 103 cases",	0);
	create_insn	(x=0X710005C400);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005C404);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X710005C410,	"switch jump",	0);
	set_cmt	(0X710005C414,	"jumptable 000000710005C410 case 0",	1);
	create_insn	(0X710005C414);
	create_insn	(x=0X710005C41C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C428);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C42C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C430);
	op_stkvar	(x,	1);
	create_insn	(0X710005C43C);
	create_insn	(x=0X710005C464);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C470);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C474);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C478);
	op_stkvar	(x,	1);
	create_insn	(0X710005C484);
	create_insn	(x=0X710005C4A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C4B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C4B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C4B8);
	op_stkvar	(x,	1);
	create_insn	(0X710005C4C4);
	create_insn	(x=0X710005C4DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C4E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C4EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C4F0);
	op_stkvar	(x,	1);
	set_cmt	(0X710005C4FC,	"jumptable 000000710005C410 case 1",	1);
	create_insn	(0X710005C4FC);
	create_insn	(x=0X710005C504);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C510);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C514);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C518);
	op_stkvar	(x,	1);
	set_cmt	(0X710005C524,	"jumptable 000000710005C410 case 2",	1);
	create_insn	(0X710005C524);
	create_insn	(x=0X710005C52C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C538);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C53C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C540);
	op_stkvar	(x,	1);
	set_cmt	(0X710005C54C,	"jumptable 000000710005C410 case 3",	1);
	create_insn	(0X710005C54C);
	create_insn	(x=0X710005C554);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C560);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C564);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C568);
	op_stkvar	(x,	1);
	set_cmt	(0X710005C574,	"jumptable 000000710005C410 case 4",	1);
	create_insn	(0X710005C574);
	create_insn	(x=0X710005C57C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C588);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C58C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C590);
	op_stkvar	(x,	1);
	set_cmt	(0X710005C59C,	"jumptable 000000710005C410 case 5",	1);
	create_insn	(0X710005C59C);
	create_insn	(x=0X710005C5A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C5B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C5B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C5B8);
	op_stkvar	(x,	1);
	set_cmt	(0X710005C5C4,	"jumptable 000000710005C410 case 20",	1);
	create_insn	(0X710005C5C4);
	create_insn	(x=0X710005C5CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C5D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C5DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C5E0);
	op_stkvar	(x,	1);
	set_cmt	(0X710005C5EC,	"jumptable 000000710005C410 case 50",	1);
	create_insn	(0X710005C5EC);
	create_insn	(x=0X710005C5F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C5F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C5FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C604);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C608);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C610);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C614);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C618);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C61C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C620);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C624);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C628);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C668);
	op_hex		(x,	1);
	create_insn	(x=0X710005C6B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C6BC);
	op_stkvar	(x,	1);
	set_cmt	(0X710005C6C8,	"jumptable 000000710005C410 case 51",	1);
	create_insn	(0X710005C6C8);
	create_insn	(x=0X710005C6D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C6DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C6E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C6E4);
	op_stkvar	(x,	1);
	set_cmt	(0X710005C6F0,	"jumptable 000000710005C410 case 100",	1);
	create_insn	(0X710005C6F0);
	create_insn	(x=0X710005C6F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C704);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C708);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C70C);
	op_stkvar	(x,	1);
	set_cmt	(0X710005C718,	"jumptable 000000710005C410 case 101",	1);
	create_insn	(0X710005C718);
	create_insn	(x=0X710005C720);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C72C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C730);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C734);
	op_stkvar	(x,	1);
	set_cmt	(0X710005C740,	"jumptable 000000710005C410 case 102",	1);
	create_insn	(0X710005C740);
	create_insn	(x=0X710005C748);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C754);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C758);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C75C);
	op_stkvar	(x,	1);
	create_insn	(0X710005C768);
	create_insn	(x=0X710005C770);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C77C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C780);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C784);
	op_stkvar	(x,	1);
	create_insn	(0X710005C790);
	create_insn	(x=0X710005C798);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C7A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C7A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C7AC);
	op_stkvar	(x,	1);
	create_insn	(0X710005C7B8);
	create_insn	(x=0X710005C7C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C7CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C7D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C7D4);
	op_stkvar	(x,	1);
	create_insn	(0X710005C7E0);
	create_insn	(x=0X710005C7E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C7F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C7F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C7FC);
	op_stkvar	(x,	1);
	create_insn	(0X710005C808);
	create_insn	(0X710005C814);
	create_insn	(x=0X710005C828);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C834);
	op_stkvar	(x,	1);
	set_cmt	(0X710005C844,	"jumptable 000000710005C410 default case, cases 6-19,21-49,52-99",	1);
	set_name	(0X710005C844,	"def_710005C410");
	create_insn	(x=0X710005C848);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C84C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C850);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C854);
	op_stkvar	(x,	1);
	create_insn	(0X710005C860);
	create_insn	(x=0X710005C864);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C868);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C86C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C870);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C87C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C888);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C88C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C8A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C8A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C8AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C8B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C8B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C8B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C8BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C8C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C8C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C8C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C8E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C8E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C8F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C8FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C90C);
	op_hex		(x,	1);
	create_insn	(x=0X710005C938);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C94C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C958);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C960);
	op_stkvar	(x,	1);
	create_insn	(0X710005C96C);
	create_insn	(x=0X710005C970);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C980);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C98C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C990);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C9A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C9A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C9A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C9B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005C9B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C9C8);
	op_stkvar	(x,	1);
	create_insn	(0X710005C9D4);
	create_insn	(x=0X710005C9DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005C9F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CA08);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CA0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CA10);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CA14);
	op_stkvar	(x,	1);
	create_insn	(0X710005CA20);
	create_insn	(x=0X710005CA28);
	op_stkvar	(x,	1);
	create_insn	(0X710005CA34);
	create_insn	(x=0X710005CA38);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CA3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CA40);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CA44);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CA50);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CA5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CA60);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CA74);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CA78);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CA80);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CA84);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CA88);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CA8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CA90);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CA94);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CA98);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CA9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CAB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CABC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CAC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CAD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CAE0);
	op_hex		(x,	1);
	create_insn	(x=0X710005CB0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CB20);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CB2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CB34);
	op_stkvar	(x,	1);
	create_insn	(0X710005CB40);
	create_insn	(x=0X710005CB44);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CB54);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CB60);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CB64);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CB74);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CB78);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CB7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CB84);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005CB88);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CB9C);
	op_stkvar	(x,	1);
	create_insn	(0X710005CBA8);
	create_insn	(x=0X710005CBB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CBC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CBDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CBE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CBE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CBE8);
	op_stkvar	(x,	1);
	create_insn	(0X710005CBF4);
	create_insn	(x=0X710005CBFC);
	op_stkvar	(x,	1);
	create_insn	(0X710005CC08);
	create_insn	(x=0X710005CC0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CC10);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CC14);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CC18);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CC24);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CC30);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CC34);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CC48);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CC4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CC54);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CC58);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CC5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CC60);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CC64);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CC68);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CC6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CC70);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CC88);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CC90);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CC98);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CCA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CCB4);
	op_hex		(x,	1);
	create_insn	(x=0X710005CCE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CCF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CD00);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CD08);
	op_stkvar	(x,	1);
	create_insn	(0X710005CD14);
	create_insn	(x=0X710005CD18);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CD28);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CD34);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CD38);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CD48);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CD4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CD50);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CD58);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005CD5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CD70);
	op_stkvar	(x,	1);
	create_insn	(0X710005CD7C);
	create_insn	(x=0X710005CD84);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CD98);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CDB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CDB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CDB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CDBC);
	op_stkvar	(x,	1);
	create_insn	(0X710005CDC8);
	create_insn	(x=0X710005CDD0);
	op_stkvar	(x,	1);
	create_insn	(0X710005CDDC);
	create_insn	(x=0X710005CDE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CDE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CDE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CDEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CDF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CE04);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CE08);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CE1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CE20);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CE28);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CE2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CE30);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CE34);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CE38);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CE3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CE40);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CE44);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CE5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CE64);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CE6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CE78);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CE88);
	op_hex		(x,	1);
	create_insn	(x=0X710005CEB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CEC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CED4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CEDC);
	op_stkvar	(x,	1);
	create_insn	(0X710005CEE8);
	create_insn	(x=0X710005CEEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CEFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CF08);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CF0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CF1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CF20);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CF24);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CF2C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005CF30);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CF44);
	op_stkvar	(x,	1);
	create_insn	(0X710005CF50);
	create_insn	(x=0X710005CF58);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CF6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CF84);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CF88);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CF8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CF90);
	op_stkvar	(x,	1);
	create_insn	(0X710005CF9C);
	create_insn	(x=0X710005CFA4);
	op_stkvar	(x,	1);
	create_insn	(0X710005CFB0);
	create_insn	(x=0X710005CFB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CFB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CFBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CFC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CFCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CFD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CFDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CFF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CFF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005CFFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D000);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D004);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D008);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D00C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D010);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D014);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D018);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D030);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D038);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D040);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D04C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D05C);
	op_hex		(x,	1);
	create_insn	(x=0X710005D088);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D09C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D0A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D0B0);
	op_stkvar	(x,	1);
	create_insn	(0X710005D0BC);
	create_insn	(x=0X710005D0C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D0D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D0DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D0E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D0F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D0F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D0F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D100);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005D104);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D118);
	op_stkvar	(x,	1);
	create_insn	(0X710005D124);
	create_insn	(x=0X710005D12C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D140);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D158);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D15C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D160);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D164);
	op_stkvar	(x,	1);
	create_insn	(0X710005D170);
	create_insn	(x=0X710005D178);
	op_stkvar	(x,	1);
	create_insn	(0X710005D184);
	create_insn	(x=0X710005D188);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D18C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D190);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D194);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D1A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D1AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D1B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D1C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D1C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D1D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D1D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D1D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D1DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D1E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D1E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D1E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D1EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D204);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D20C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D214);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D220);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D230);
	op_hex		(x,	1);
	create_insn	(x=0X710005D25C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D270);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D27C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D284);
	op_stkvar	(x,	1);
	create_insn	(0X710005D290);
	create_insn	(x=0X710005D294);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D2A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D2B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D2B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D2C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D2C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D2CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D2D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005D2D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D2EC);
	op_stkvar	(x,	1);
	create_insn	(0X710005D2F8);
	create_insn	(x=0X710005D300);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D314);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D32C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D330);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D334);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D338);
	op_stkvar	(x,	1);
	create_insn	(0X710005D344);
	create_insn	(x=0X710005D34C);
	op_stkvar	(x,	1);
	create_insn	(0X710005D358);
	create_insn	(x=0X710005D35C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D360);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D364);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D368);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D374);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D380);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D384);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D398);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D39C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D3A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D3A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D3AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D3B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D3B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D3B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D3BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D3C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D3C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D3E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D3E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D400);
	op_hex		(x,	1);
	create_insn	(x=0X710005D440);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D44C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D454);
	op_stkvar	(x,	1);
	create_insn	(0X710005D460);
	create_insn	(x=0X710005D474);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D480);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D494);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D4A8);
	op_stkvar	(x,	1);
	create_insn	(0X710005D4B4);
	create_insn	(x=0X710005D4BC);
	op_stkvar	(x,	1);
	set_cmt	(0X710005D4C4,	"result",	0);
	create_insn	(x=0X710005D4C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D4D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D4D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D4D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D4DC);
	op_stkvar	(x,	1);
	create_insn	(0X710005D4E8);
	create_insn	(x=0X710005D4F0);
	op_stkvar	(x,	1);
	create_insn	(0X710005D4FC);
	create_insn	(x=0X710005D500);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D504);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D508);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D50C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D51C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D520);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D52C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D534);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D544);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D548);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D54C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D550);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D554);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D558);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D55C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D560);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D580);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D598);
	op_hex		(x,	1);
	create_insn	(x=0X710005D5D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D5E4);
	op_stkvar	(x,	1);
	create_insn	(0X710005D5F0);
	create_insn	(x=0X710005D604);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D610);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D614);
	op_hex		(x,	1);
	create_insn	(0X710005D630);
	create_insn	(x=0X710005D63C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D640);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D644);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D648);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D654);
	op_stkvar	(x,	1);
	create_insn	(0X710005D664);
	create_insn	(x=0X710005D668);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D66C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D670);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D674);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D684);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D688);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D694);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D69C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D6AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D6B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D6B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D6B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D6BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D6C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D6C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D6C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D6E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D700);
	op_hex		(x,	1);
	create_insn	(x=0X710005D740);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D74C);
	op_stkvar	(x,	1);
	create_insn	(0X710005D758);
	create_insn	(x=0X710005D76C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D778);
	op_stkvar	(x,	1);
	create_insn	(0X710005D794);
	create_insn	(x=0X710005D7A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D7A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D7A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D7AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D7B8);
	op_stkvar	(x,	1);
	create_insn	(0X710005D7C8);
	create_insn	(x=0X710005D7CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D7D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D7D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D7D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D7E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D7EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D7F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D800);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D810);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D814);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D818);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D81C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D820);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D824);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D828);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D82C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D860);
	op_hex		(x,	1);
	create_insn	(x=0X710005D870);
	op_hex		(x,	1);
	create_insn	(x=0X710005D8B0);
	op_stkvar	(x,	1);
	create_insn	(0X710005D8C0);
	create_insn	(0X710005D8C8);
	create_insn	(x=0X710005D8DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D8EC);
	op_stkvar	(x,	1);
	create_insn	(0X710005D8F8);
	create_insn	(x=0X710005D904);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D908);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D90C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D910);
	op_stkvar	(x,	1);
	create_insn	(0X710005D91C);
	create_insn	(x=0X710005D920);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D924);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D928);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D92C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D93C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D940);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D94C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D954);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D964);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D968);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D96C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D970);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D974);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D978);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D97C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D980);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D9A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005D9B8);
	op_hex		(x,	1);
	create_insn	(x=0X710005D9F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DA04);
	op_stkvar	(x,	1);
	create_insn	(0X710005DA10);
	create_insn	(x=0X710005DA24);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DA30);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DA34);
	op_hex		(x,	1);
	create_insn	(0X710005DA50);
	create_insn	(x=0X710005DA5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DA60);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DA64);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DA68);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DA74);
	op_stkvar	(x,	1);
	create_insn	(0X710005DA84);
	create_insn	(x=0X710005DA88);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DA8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DA90);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DA94);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DAA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DAA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DAB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DABC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DACC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DAD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DAD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DAD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DADC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DAE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DAE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DAE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DB08);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DB20);
	op_hex		(x,	1);
	create_insn	(x=0X710005DB60);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DB6C);
	op_stkvar	(x,	1);
	create_insn	(0X710005DB78);
	create_insn	(x=0X710005DB8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DB98);
	op_stkvar	(x,	1);
	create_insn	(0X710005DBB4);
	create_insn	(x=0X710005DBC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DBC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DBC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DBCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DBD8);
	op_stkvar	(x,	1);
	create_insn	(0X710005DBE8);
	create_insn	(x=0X710005DBEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DBF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DBF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DBF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DC08);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DC0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DC18);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DC20);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DC30);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DC34);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DC38);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DC3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DC40);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DC44);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DC48);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DC4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DC64);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DC6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DC74);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DC88);
	op_hex		(x,	1);
	create_insn	(x=0X710005DCB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DCC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DCD4);
	op_stkvar	(x,	1);
	create_insn	(0X710005DCE0);
	create_insn	(x=0X710005DCE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DCF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DD00);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DD14);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DD1C);
	op_stkvar	(x,	1);
	create_insn	(0X710005DD2C);
	create_insn	(x=0X710005DD38);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DD3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DD40);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DD44);
	op_stkvar	(x,	1);
	create_insn	(0X710005DD50);
	create_insn	(0X710005DD58);
	create_insn	(x=0X710005DD5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DD60);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DD64);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DD68);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DD6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DD7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DD80);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DD8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DD94);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DDA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DDA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DDAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DDB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DDB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DDB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DDBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DDC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DDF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DE08);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DE10);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DE18);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DE24);
	op_hex		(x,	1);
	create_insn	(x=0X710005DE64);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DE70);
	op_stkvar	(x,	1);
	create_insn	(0X710005DE7C);
	create_insn	(x=0X710005DE90);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DE9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DEA0);
	op_hex		(x,	1);
	create_insn	(0X710005DEB8);
	create_insn	(x=0X710005DEC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DEC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DECC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DED0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DED4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DEE0);
	op_stkvar	(x,	1);
	create_insn	(0X710005DEF0);
	create_insn	(x=0X710005DEF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DEF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DEFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DF00);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DF10);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DF14);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DF20);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DF28);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DF38);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DF3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DF44);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DF4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DF54);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DF58);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DF5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DF60);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DF64);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DF68);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DF8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DFC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005DFCC);
	op_hex		(x,	1);
	create_insn	(x=0X710005E00C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E018);
	op_stkvar	(x,	1);
	create_insn	(0X710005E024);
	create_insn	(x=0X710005E030);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E034);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E038);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E03C);
	op_stkvar	(x,	1);
	create_insn	(0X710005E048);
	create_insn	(x=0X710005E05C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E068);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E06C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E07C);
	op_stkvar	(x,	1);
	create_insn	(0X710005E094);
	create_insn	(0X710005E09C);
	create_insn	(x=0X710005E0A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E0A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E0A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E0AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E0BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E0C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E0CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E0D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E0E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E0E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E0F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E0F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E100);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E104);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E108);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E10C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E110);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E114);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E138);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E14C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E158);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E15C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E168);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E170);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E184);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E188);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E19C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E1A8);
	op_hex		(x,	1);
	create_insn	(x=0X710005E1D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E1E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E1F4);
	op_stkvar	(x,	1);
	create_insn	(0X710005E200);
	create_insn	(x=0X710005E20C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E210);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E214);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E218);
	op_stkvar	(x,	1);
	create_insn	(0X710005E224);
	create_insn	(x=0X710005E228);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E238);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E244);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E248);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E258);
	op_stkvar	(x,	1);
	create_insn	(0X710005E270);
	create_insn	(0X710005E278);
	create_insn	(x=0X710005E27C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E280);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E284);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E288);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E298);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E29C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E2A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E2B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E2C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E2CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E2D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E2DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E2E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E2E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E2EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E2F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E2F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E2F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E310);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E318);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E33C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E344);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E348);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E354);
	op_hex		(x,	1);
	create_insn	(x=0X710005E380);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E394);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E3A0);
	op_stkvar	(x,	1);
	create_insn	(0X710005E3AC);
	create_insn	(x=0X710005E3B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E3C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E3CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E3D0);
	op_hex		(x,	1);
	create_insn	(0X710005E3EC);
	create_insn	(x=0X710005E3F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E3FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E400);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E404);
	op_stkvar	(x,	1);
	create_insn	(0X710005E410);
	create_insn	(x=0X710005E418);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E41C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E430);
	op_stkvar	(x,	1);
	create_insn	(0X710005E440);
	create_insn	(x=0X710005E444);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E448);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E44C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E450);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E460);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E464);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E470);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E478);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E488);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E494);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E498);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E4A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E4A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E4B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E4B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E4B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E4BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E4C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E4D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E4E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E504);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E50C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E510);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E51C);
	op_hex		(x,	1);
	create_insn	(x=0X710005E548);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E55C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E568);
	op_stkvar	(x,	1);
	create_insn	(0X710005E574);
	create_insn	(x=0X710005E578);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E588);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E594);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E598);
	op_hex		(x,	1);
	create_insn	(0X710005E5B4);
	create_insn	(x=0X710005E5C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E5C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E5C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E5CC);
	op_stkvar	(x,	1);
	create_insn	(0X710005E5D8);
	create_insn	(x=0X710005E5E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E5E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E5F8);
	op_stkvar	(x,	1);
	create_insn	(0X710005E608);
	create_insn	(x=0X710005E60C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E610);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E61C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E628);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E630);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E65C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E668);
	op_hex		(x,	1);
	create_insn	(x=0X710005E684);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E688);
	op_stkvar	(x,	1);
	create_insn	(0X710005E694);
	create_insn	(x=0X710005E69C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E6A0);
	op_stkvar	(x,	1);
	create_insn	(0X710005E6AC);
	create_insn	(x=0X710005E6B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E6B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E6C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E6F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E6FC);
	op_stkvar	(x,	1);
	create_insn	(0X710005E708);
	create_insn	(0X710005E710);
	create_insn	(x=0X710005E714);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E718);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E71C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E720);
	op_stkvar	(x,	1);
	set_cmt	(0X710005E728,	"switch 5 cases",	0);
	create_insn	(x=0X710005E738);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005E73C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X710005E758,	"switch jump",	0);
	set_cmt	(0X710005E75C,	"jumptable 000000710005E758 case 0",	1);
	create_insn	(0X710005E75C);
	create_insn	(x=0X710005E764);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E770);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E774);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E778);
	op_stkvar	(x,	1);
	set_cmt	(0X710005E784,	"jumptable 000000710005E758 default case",	1);
	create_insn	(0X710005E784);
	set_name	(0X710005E784,	"def_710005E758");
	set_cmt	(0X710005E790,	"jumptable 000000710005E758 case 1",	1);
	create_insn	(0X710005E790);
	create_insn	(x=0X710005E798);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E79C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E7A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E7A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E7AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E7B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E7B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E7BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E7C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E7C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E7C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E7CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E7E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E7E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E7EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E7F0);
	op_stkvar	(x,	1);
	set_cmt	(0X710005E7FC,	"jumptable 000000710005E758 case 2",	1);
	create_insn	(0X710005E7FC);
	create_insn	(x=0X710005E804);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E810);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E814);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E818);
	op_stkvar	(x,	1);
	set_cmt	(0X710005E824,	"jumptable 000000710005E758 case 3",	1);
	create_insn	(0X710005E824);
	create_insn	(x=0X710005E82C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E838);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E83C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E840);
	op_stkvar	(x,	1);
	set_cmt	(0X710005E84C,	"jumptable 000000710005E758 case 4",	1);
	create_insn	(0X710005E84C);
	create_insn	(x=0X710005E854);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E860);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E864);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E868);
	op_stkvar	(x,	1);
	create_insn	(0X710005E874);
	create_insn	(x=0X710005E8A0);
	op_hex		(x,	1);
	create_insn	(x=0X710005E8E0);
	op_stkvar	(x,	1);
	create_insn	(0X710005E8F0);
	create_insn	(0X710005E8F8);
	create_insn	(x=0X710005E90C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E91C);
	op_stkvar	(x,	1);
	create_insn	(0X710005E928);
	create_insn	(0X710005E930);
	create_insn	(x=0X710005E934);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E938);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E93C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E940);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E950);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E954);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E960);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E968);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E978);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E97C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E980);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E984);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E988);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E98C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E990);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E994);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E9B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005E9CC);
	op_hex		(x,	1);
	create_insn	(x=0X710005EA0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EA18);
	op_stkvar	(x,	1);
	create_insn	(0X710005EA24);
	create_insn	(x=0X710005EA38);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EA44);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EA48);
	op_hex		(x,	1);
	create_insn	(0X710005EA64);
	create_insn	(x=0X710005EA70);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EA74);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EA78);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EA7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EA88);
	op_stkvar	(x,	1);
	create_insn	(0X710005EA98);
	create_insn	(x=0X710005EA9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EAA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EAA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EAA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EAB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EABC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EAC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EAD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EAE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EAE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EAE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EAEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EAF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EAF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EAF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EAFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EB14);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EB1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EB24);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EB38);
	op_hex		(x,	1);
	create_insn	(x=0X710005EB78);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EB84);
	op_stkvar	(x,	1);
	create_insn	(0X710005EB90);
	create_insn	(x=0X710005EBA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EBB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EBC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EBCC);
	op_stkvar	(x,	1);
	create_insn	(0X710005EBDC);
	create_insn	(x=0X710005EBE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EBEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EBF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EBF4);
	op_stkvar	(x,	1);
	create_insn	(0X710005EC00);
	create_insn	(0X710005EC08);
	create_insn	(x=0X710005EC0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EC10);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EC14);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EC18);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EC28);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EC2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EC38);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EC40);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EC50);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EC54);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EC58);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EC5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EC60);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EC64);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EC68);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EC6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EC90);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005ECA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005ECB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005ECBC);
	op_hex		(x,	1);
	create_insn	(x=0X710005ECFC);
	op_stkvar	(x,	1);
	create_insn	(0X710005ED0C);
	create_insn	(x=0X710005ED18);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005ED1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005ED20);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005ED24);
	op_stkvar	(x,	1);
	create_insn	(0X710005ED30);
	create_insn	(x=0X710005ED44);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005ED54);
	op_stkvar	(x,	1);
	create_insn	(0X710005ED60);
	create_insn	(0X710005ED68);
	create_insn	(x=0X710005ED6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005ED70);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005ED74);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005ED78);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005ED84);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005ED90);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005ED94);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EDA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EDAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EDB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EDB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EDBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EDC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EDC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EDC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EDCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EDD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EDD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EDF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EDF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EE10);
	op_hex		(x,	1);
	create_insn	(x=0X710005EE50);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EE5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EE64);
	op_stkvar	(x,	1);
	create_insn	(0X710005EE70);
	create_insn	(x=0X710005EE84);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EE90);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EEA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EEB8);
	op_stkvar	(x,	1);
	create_insn	(0X710005EEC4);
	create_insn	(x=0X710005EECC);
	op_stkvar	(x,	1);
	set_cmt	(0X710005EED4,	"result",	0);
	create_insn	(x=0X710005EED4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EEE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EEE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EEE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EEEC);
	op_stkvar	(x,	1);
	create_insn	(0X710005EEF8);
	create_insn	(x=0X710005EF00);
	op_stkvar	(x,	1);
	create_insn	(0X710005EF0C);
	create_insn	(x=0X710005EF10);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EF14);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EF20);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EF2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EF34);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EF60);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EF6C);
	op_hex		(x,	1);
	create_insn	(x=0X710005EF88);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EF8C);
	op_stkvar	(x,	1);
	create_insn	(0X710005EF98);
	create_insn	(x=0X710005EFA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EFA4);
	op_stkvar	(x,	1);
	create_insn	(0X710005EFB0);
	create_insn	(x=0X710005EFB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EFBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EFC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005EFFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F000);
	op_stkvar	(x,	1);
	create_insn	(0X710005F00C);
	create_insn	(0X710005F014);
	create_insn	(x=0X710005F018);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F01C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F020);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F024);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F06C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F078);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F07C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F080);
	op_stkvar	(x,	1);
	create_insn	(0X710005F08C);
	create_insn	(x=0X710005F0A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F0AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F0B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F0B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F0BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F0C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F0C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F0CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F0D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F0D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F0D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F0DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F11C);
	op_hex		(x,	1);
	create_insn	(x=0X710005F164);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F170);
	op_stkvar	(x,	1);
	create_insn	(0X710005F17C);
	create_insn	(x=0X710005F194);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F1A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F1A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F1A8);
	op_stkvar	(x,	1);
	create_insn	(0X710005F1B4);
	create_insn	(x=0X710005F1BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F1C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F1CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F1D0);
	op_stkvar	(x,	1);
	create_insn	(0X710005F1DC);
	create_insn	(x=0X710005F1E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F1F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F1F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F1F8);
	op_stkvar	(x,	1);
	create_insn	(0X710005F204);
	create_insn	(x=0X710005F20C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F218);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F21C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F220);
	op_stkvar	(x,	1);
	create_insn	(0X710005F22C);
	create_insn	(x=0X710005F234);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F240);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F244);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F248);
	op_stkvar	(x,	1);
	create_insn	(0X710005F254);
	create_insn	(0X710005F260);
	create_insn	(x=0X710005F274);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F280);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F294);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F298);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F29C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F2A0);
	op_stkvar	(x,	1);
	create_insn	(0X710005F2AC);
	create_insn	(x=0X710005F2B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F2B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F2B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F2BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F2CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F2D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F2DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F2E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F2F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F2F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F2FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F300);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F304);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F308);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F30C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F310);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F328);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F330);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F338);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F34C);
	op_hex		(x,	1);
	create_insn	(x=0X710005F378);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F38C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F398);
	op_stkvar	(x,	1);
	create_insn	(0X710005F3A4);
	create_insn	(x=0X710005F3A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F3B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F3C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F3D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F3E0);
	op_stkvar	(x,	1);
	create_insn	(0X710005F3F0);
	create_insn	(x=0X710005F3FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F400);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F404);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F408);
	op_stkvar	(x,	1);
	create_insn	(0X710005F414);
	create_insn	(0X710005F41C);
	create_insn	(x=0X710005F420);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F424);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F428);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F42C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F43C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F440);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F44C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F454);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F464);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F468);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F46C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F470);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F474);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F478);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F47C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F480);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F4A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F4B8);
	op_hex		(x,	1);
	create_insn	(x=0X710005F4F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F504);
	op_stkvar	(x,	1);
	create_insn	(0X710005F510);
	create_insn	(x=0X710005F524);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F530);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F534);
	op_hex		(x,	1);
	create_insn	(0X710005F550);
	create_insn	(x=0X710005F55C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F560);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F564);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F568);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F574);
	op_stkvar	(x,	1);
	create_insn	(0X710005F584);
	create_insn	(x=0X710005F588);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F58C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F590);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F594);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F5A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F5A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F5B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F5BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F5CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F5D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F5D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F5D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F5DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F5E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F5E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F5E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F608);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F620);
	op_hex		(x,	1);
	create_insn	(x=0X710005F660);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F66C);
	op_stkvar	(x,	1);
	create_insn	(0X710005F678);
	create_insn	(x=0X710005F68C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F698);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F69C);
	op_hex		(x,	1);
	create_insn	(0X710005F6B8);
	create_insn	(x=0X710005F6C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F6C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F6CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F6D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F6DC);
	op_stkvar	(x,	1);
	create_insn	(0X710005F6EC);
	create_insn	(x=0X710005F6F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F6F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F6F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F6FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F70C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F710);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F71C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F724);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F734);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F738);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F73C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F740);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F744);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F748);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F74C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F750);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F770);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F788);
	op_hex		(x,	1);
	create_insn	(x=0X710005F7C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F7D4);
	op_stkvar	(x,	1);
	create_insn	(0X710005F7E0);
	create_insn	(x=0X710005F7F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F800);
	op_stkvar	(x,	1);
	create_insn	(0X710005F81C);
	create_insn	(x=0X710005F828);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F82C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F830);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F834);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F840);
	op_stkvar	(x,	1);
	create_insn	(0X710005F850);
	create_insn	(x=0X710005F854);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F858);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F85C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F860);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F870);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F874);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F880);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F888);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F898);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F89C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F8A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F8A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F8A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F8AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F8B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F8B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F8D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F8EC);
	op_hex		(x,	1);
	create_insn	(x=0X710005F92C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F938);
	op_stkvar	(x,	1);
	create_insn	(0X710005F944);
	create_insn	(x=0X710005F958);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F964);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F968);
	op_hex		(x,	1);
	create_insn	(0X710005F984);
	create_insn	(x=0X710005F990);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F994);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F998);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F99C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F9A8);
	op_stkvar	(x,	1);
	create_insn	(0X710005F9B8);
	create_insn	(x=0X710005F9BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F9C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F9C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F9C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F9D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F9DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F9E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005F9F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FA00);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FA04);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FA08);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FA0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FA10);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FA14);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FA18);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FA1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FA3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FA54);
	op_hex		(x,	1);
	create_insn	(x=0X710005FA94);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FAA0);
	op_stkvar	(x,	1);
	create_insn	(0X710005FAAC);
	create_insn	(x=0X710005FAC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FACC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FAD0);
	op_hex		(x,	1);
	create_insn	(0X710005FAEC);
	create_insn	(x=0X710005FAF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FAFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FB00);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FB04);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FB10);
	op_stkvar	(x,	1);
	create_insn	(0X710005FB20);
	create_insn	(x=0X710005FB24);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FB28);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FB34);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FB40);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FB48);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FB74);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FB80);
	op_hex		(x,	1);
	create_insn	(x=0X710005FB9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FBA0);
	op_stkvar	(x,	1);
	create_insn	(0X710005FBAC);
	create_insn	(x=0X710005FBB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FBB8);
	op_stkvar	(x,	1);
	create_insn	(0X710005FBC4);
	create_insn	(x=0X710005FBCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FBD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FBDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FC10);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FC14);
	op_stkvar	(x,	1);
	create_insn	(0X710005FC20);
	set_cmt	(0X710005FC28,	"switch 102 cases",	0);
	create_insn	(0X710005FC28);
	create_insn	(x=0X710005FC38);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710005FC3C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X710005FC48,	"switch jump",	0);
	set_cmt	(0X710005FC4C,	"jumptable 000000710005FC48 case 0",	1);
	create_insn	(0X710005FC4C);
	set_cmt	(0X710005FC50,	"jumptable 000000710005FC48 default case",	1);
	create_insn	(0X710005FC50);
	set_name	(0X710005FC50,	"def_710005FC48");
	set_cmt	(0X710005FC64,	"jumptable 000000710005FC48 cases 9-19,21-99",	1);
	create_insn	(0X710005FC64);
	set_cmt	(0X710005FC70,	"jumptable 000000710005FC48 case 1",	1);
	create_insn	(0X710005FC70);
	set_cmt	(0X710005FC74,	"jumptable 000000710005FC48 case 2",	1);
	create_insn	(0X710005FC74);
	set_cmt	(0X710005FC78,	"jumptable 000000710005FC48 case 3",	1);
	create_insn	(0X710005FC78);
	set_cmt	(0X710005FC7C,	"jumptable 000000710005FC48 case 4",	1);
	create_insn	(0X710005FC7C);
	set_cmt	(0X710005FC80,	"jumptable 000000710005FC48 case 5",	1);
	create_insn	(0X710005FC80);
	set_cmt	(0X710005FC84,	"jumptable 000000710005FC48 case 6",	1);
	create_insn	(0X710005FC84);
	set_cmt	(0X710005FC88,	"jumptable 000000710005FC48 case 7",	1);
	create_insn	(0X710005FC88);
	set_cmt	(0X710005FC8C,	"jumptable 000000710005FC48 case 8",	1);
	create_insn	(0X710005FC8C);
	set_cmt	(0X710005FC90,	"jumptable 000000710005FC48 case 20",	1);
	create_insn	(0X710005FC90);
	set_cmt	(0X710005FC94,	"jumptable 000000710005FC48 case 100",	1);
	create_insn	(0X710005FC94);
	set_cmt	(0X710005FC98,	"jumptable 000000710005FC48 case 101",	1);
	create_insn	(0X710005FC98);
	create_insn	(0X710005FC9C);
	create_insn	(0X710005FCA0);
	create_insn	(x=0X710005FCA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FCA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FCAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FCB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FCC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FCC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FCD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FCD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FCE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FCEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FCF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FCF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FCF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FCFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FD00);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FD04);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FD1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FD20);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FD28);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FD30);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FD44);
	op_hex		(x,	1);
	create_insn	(x=0X710005FD70);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FD84);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FD90);
	op_stkvar	(x,	1);
	create_insn	(0X710005FD9C);
	create_insn	(x=0X710005FDA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FDB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FDBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FDD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FDDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FDE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FDE4);
	op_stkvar	(x,	1);
	create_insn	(0X710005FDF8);
	create_insn	(x=0X710005FE04);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FE08);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FE0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FE10);
	op_stkvar	(x,	1);
	create_insn	(0X710005FE1C);
	create_insn	(0X710005FE24);
	create_insn	(x=0X710005FE28);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FE2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FE30);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FE34);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FE44);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FE48);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FE54);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FE5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FE6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FE70);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FE74);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FE78);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FE7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FE80);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FE84);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FE88);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FEAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FEC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FED0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FED8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FEDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FEE8);
	op_hex		(x,	1);
	create_insn	(x=0X710005FF14);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FF28);
	op_stkvar	(x,	1);
	create_insn	(0X710005FF38);
	create_insn	(x=0X710005FF44);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FF48);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FF4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FF50);
	op_stkvar	(x,	1);
	create_insn	(0X710005FF5C);
	create_insn	(x=0X710005FF60);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FF70);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FF80);
	op_stkvar	(x,	1);
	create_insn	(0X710005FF8C);
	create_insn	(0X710005FF94);
	create_insn	(x=0X710005FF98);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FF9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FFA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FFA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FFB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FFB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FFC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FFCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FFDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FFE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FFE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FFE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FFEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FFF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FFF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710005FFF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060018);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060030);
	op_hex		(x,	1);
	create_insn	(x=0X7100060070);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006007C);
	op_stkvar	(x,	1);
	create_insn	(0X7100060088);
	create_insn	(x=0X710006009C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000600A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000600AC);
	op_hex		(x,	1);
	create_insn	(0X71000600C8);
	create_insn	(x=0X71000600D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000600D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000600DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000600E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000600EC);
	op_stkvar	(x,	1);
	create_insn	(0X71000600FC);
	create_insn	(x=0X7100060100);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060104);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060108);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006010C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060118);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060124);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060128);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006013C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060140);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060148);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006014C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060154);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060158);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006015C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060160);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060164);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060168);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006016C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006019C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000601B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000601C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000601DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000601E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000601F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060204);
	op_hex		(x,	1);
	create_insn	(x=0X7100060230);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060244);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060250);
	op_stkvar	(x,	1);
	create_insn	(0X710006025C);
	create_insn	(x=0X7100060260);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060270);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006027C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060280);
	op_hex		(x,	1);
	create_insn	(0X7100060298);
	create_insn	(x=0X71000602A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000602A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000602AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000602B0);
	op_stkvar	(x,	1);
	create_insn	(0X71000602BC);
	create_insn	(x=0X71000602C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000602C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000602DC);
	op_stkvar	(x,	1);
	create_insn	(0X71000602EC);
	create_insn	(x=0X71000602F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000602F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000602F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000602FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006030C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060310);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006031C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060324);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060334);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060338);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060340);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060348);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060350);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060354);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060358);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006035C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060360);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060364);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060388);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000603A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000603A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000603B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000603CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000603D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000603E0);
	op_hex		(x,	1);
	create_insn	(x=0X710006040C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060420);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006042C);
	op_stkvar	(x,	1);
	create_insn	(0X7100060438);
	create_insn	(x=0X7100060444);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060448);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006044C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060450);
	op_stkvar	(x,	1);
	create_insn	(0X710006045C);
	create_insn	(x=0X7100060460);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060470);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006047C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060480);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060490);
	op_stkvar	(x,	1);
	create_insn	(0X71000604A8);
	create_insn	(0X71000604B0);
	create_insn	(x=0X71000604B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000604B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000604BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000604C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000604D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000604D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000604E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000604E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000604F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000604FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060500);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060504);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060508);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006050C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060510);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060514);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006052C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060534);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006054C);
	op_hex		(x,	1);
	create_insn	(x=0X710006058C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060598);
	op_stkvar	(x,	1);
	create_insn	(0X71000605A4);
	create_insn	(x=0X71000605B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000605C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000605C8);
	op_hex		(x,	1);
	create_insn	(0X71000605E4);
	create_insn	(x=0X71000605F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000605F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000605F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000605FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060608);
	op_stkvar	(x,	1);
	create_insn	(0X7100060618);
	create_insn	(x=0X710006061C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060620);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060624);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060628);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060638);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006063C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060648);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060650);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060660);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060664);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060668);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006066C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060670);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060674);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060678);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006067C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060694);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006069C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000606A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000606AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000606B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000606C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000606C8);
	op_hex		(x,	1);
	create_insn	(x=0X7100060708);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060714);
	op_stkvar	(x,	1);
	create_insn	(0X7100060720);
	create_insn	(x=0X7100060734);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060740);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060754);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006075C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060768);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006076C);
	op_stkvar	(x,	1);
	create_insn	(0X710006077C);
	create_insn	(x=0X7100060788);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006078C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060790);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060794);
	op_stkvar	(x,	1);
	create_insn	(0X71000607A0);
	create_insn	(0X71000607A8);
	create_insn	(x=0X71000607AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000607B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000607B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000607B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000607C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000607CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000607D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000607E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000607F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000607F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000607FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060804);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060808);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006080C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060810);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060814);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060818);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006081C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060840);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006085C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060860);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060868);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060880);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060884);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060888);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060890);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000608A0);
	op_hex		(x,	1);
	create_insn	(x=0X71000608CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000608E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000608EC);
	op_stkvar	(x,	1);
	create_insn	(0X71000608F8);
	create_insn	(x=0X7100060904);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060908);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006090C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060910);
	op_stkvar	(x,	1);
	create_insn	(0X710006091C);
	create_insn	(x=0X7100060920);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060930);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006093C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060940);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060950);
	op_stkvar	(x,	1);
	create_insn	(0X7100060968);
	create_insn	(0X7100060970);
	create_insn	(x=0X7100060974);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060978);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006097C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060980);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006098C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006099C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000609A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000609B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000609B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000609C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000609C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000609CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000609D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000609DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000609E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000609E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000609E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000609EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060A04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060A28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060A30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060A38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060A48);
	op_hex		(x,	1);
	create_insn	(x=0X7100060A88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060A94);
	op_stkvar	(x,	1);
	create_insn	(0X7100060AA0);
	create_insn	(x=0X7100060AB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060AC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060AC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060AD4);
	op_stkvar	(x,	1);
	create_insn	(0X7100060AEC);
	create_insn	(x=0X7100060AF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060AFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060B00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060B04);
	op_stkvar	(x,	1);
	create_insn	(0X7100060B10);
	create_insn	(x=0X7100060B14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060B18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060B1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060B20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060B2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060B38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060B3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060B50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060B54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060B58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060B5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060B64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060B68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060B6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060B70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060B74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060B78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060B7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060B9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060BA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060BB8);
	op_hex		(x,	1);
	create_insn	(x=0X7100060BF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060C04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060C0C);
	op_stkvar	(x,	1);
	create_insn	(0X7100060C18);
	create_insn	(x=0X7100060C2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060C38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060C4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060C60);
	op_stkvar	(x,	1);
	create_insn	(0X7100060C6C);
	create_insn	(x=0X7100060C74);
	op_stkvar	(x,	1);
	set_cmt	(0X7100060C7C,	"result",	0);
	create_insn	(x=0X7100060C7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060C88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060C8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060C90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060C94);
	op_stkvar	(x,	1);
	create_insn	(0X7100060CA0);
	create_insn	(x=0X7100060CA8);
	op_stkvar	(x,	1);
	create_insn	(0X7100060CB4);
	create_insn	(x=0X7100060CB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060CBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060CC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060CC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060CC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060CD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060CDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060CE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060CF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060D00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060D04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060D0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060D14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060D1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060D20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060D24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060D28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060D2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060D30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060D60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060D78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060D80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060D90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060D94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060D98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060DB4);
	op_hex		(x,	1);
	create_insn	(x=0X7100060DF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060E00);
	op_stkvar	(x,	1);
	create_insn	(0X7100060E0C);
	create_insn	(x=0X7100060E20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060E2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060E44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060E4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060E5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060E64);
	op_stkvar	(x,	1);
	create_insn	(0X7100060E74);
	create_insn	(x=0X7100060E80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060E84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060E88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060E8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060E90);
	op_stkvar	(x,	1);
	create_insn	(0X7100060E9C);
	create_insn	(0X7100060EA4);
	create_insn	(x=0X7100060EA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060EAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060EB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060EB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060EC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060EC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060ED4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060EDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060EEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060EF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060EF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060EF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060EFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060F00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060F04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060F08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060F38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060F48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060F58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060F5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060F68);
	op_hex		(x,	1);
	create_insn	(x=0X7100060FA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060FB4);
	op_stkvar	(x,	1);
	create_insn	(0X7100060FC0);
	create_insn	(x=0X7100060FD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060FE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060FF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100060FFC);
	op_stkvar	(x,	1);
	create_insn	(0X710006100C);
	create_insn	(x=0X7100061018);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006101C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061020);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061024);
	op_stkvar	(x,	1);
	create_insn	(0X7100061030);
	create_insn	(0X7100061038);
	create_insn	(x=0X710006103C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061040);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061044);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061048);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006104C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061058);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061068);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061070);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006107C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061088);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061094);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061098);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006109C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000610A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000610AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000610B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000610B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000610B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000610BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000610EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000610F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061118);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061120);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061134);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061144);
	op_hex		(x,	1);
	create_insn	(x=0X7100061184);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061190);
	op_stkvar	(x,	1);
	create_insn	(0X710006119C);
	create_insn	(x=0X71000611B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000611BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000611C0);
	op_hex		(x,	1);
	create_insn	(0X71000611D8);
	create_insn	(x=0X71000611E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000611E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000611EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000611F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000611F4);
	op_stkvar	(x,	1);
	create_insn	(0X7100061200);
	create_insn	(x=0X7100061208);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006120C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061220);
	op_stkvar	(x,	1);
	create_insn	(0X7100061230);
	create_insn	(x=0X7100061234);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061238);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006123C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061240);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061250);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061254);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061260);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061268);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061278);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061280);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061284);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006128C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061290);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061294);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061298);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006129C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000612A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000612A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000612D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000612DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061300);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061304);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061308);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061318);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061328);
	op_hex		(x,	1);
	create_insn	(x=0X7100061354);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061368);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061374);
	op_stkvar	(x,	1);
	create_insn	(0X7100061380);
	create_insn	(x=0X7100061384);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061394);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000613A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000613A4);
	op_hex		(x,	1);
	create_insn	(0X71000613BC);
	create_insn	(x=0X71000613C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000613CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000613D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000613D4);
	op_stkvar	(x,	1);
	create_insn	(0X71000613E0);
	create_insn	(x=0X71000613E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000613EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061400);
	op_stkvar	(x,	1);
	create_insn	(0X7100061410);
	set_name	(0X7100061410,	"nn::timesrv::detail::service::StaticService::StaticService");
	create_insn	(x=0X7100061414);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061418);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061488);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061490);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061494);
	op_stkvar	(x,	1);
	create_insn	(0X71000614A8);
	set_cmt	(0X71000614D4,	"nn::timesrv::detail::service::IAlarmService::vtable ***",	0);
	create_insn	(x=0X71000614D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000614DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000614E0);
	op_stkvar	(x,	1);
	create_insn	(0X71000614F4);
	create_insn	(x=0X710006150C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061514);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061518);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061534);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006154C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061550);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061560);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061568);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006156C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061578);
	op_stkvar	(x,	1);
	create_insn	(0X7100061580);
	create_insn	(x=0X7100061584);
	op_stkvar	(x,	1);
	set_name	(0X7100061584,	"GlueStaticService::Finalise");
	create_insn	(x=0X7100061588);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000615B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000615BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000615C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000615C8);
	op_stkvar	(x,	1);
	create_insn	(0X71000615D0);
	set_name	(0X71000615D0,	"nn::timesrv::detail::service::StaticService::GetStandardUserSystemClock");
	create_insn	(x=0X71000615D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000615E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000615E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000615F8);
	op_stkvar	(x,	1);
	create_insn	(0X7100061604);
	set_name	(0X7100061604,	"nn::timesrv::detail::service::StaticService::GetStandardNetworkSystemClock");
	create_insn	(x=0X7100061608);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061614);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061618);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006162C);
	op_stkvar	(x,	1);
	create_insn	(0X7100061638);
	set_name	(0X7100061638,	"nn::timesrv::detail::service::StaticService::GetEphemeralNetworkSystemClock");
	create_insn	(x=0X710006163C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061648);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006164C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061660);
	op_stkvar	(x,	1);
	create_insn	(0X710006166C);
	set_name	(0X710006166C,	"nn::timesrv::detail::service::StaticService::GetSharedMemoryNativeHandle");
	create_insn	(0X710006167C);
	set_name	(0X710006167C,	"nn::timesrv::detail::service::StaticService::GetStandardLocalSystemClock");
	create_insn	(x=0X7100061680);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006168C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061690);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000616A4);
	op_stkvar	(x,	1);
	create_insn	(0X71000616B0);
	set_name	(0X71000616B0,	"nn::timesrv::detail::service::StaticService::GetStandardSteadyClock");
	create_insn	(x=0X71000616B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000616C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000616C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000616D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000616E4);
	op_stkvar	(x,	1);
	set_name	(0X71000616E4,	"nn::timesrv::detail::service::StaticService::GetTimeZoneService");
	create_insn	(x=0X71000616E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000616EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000616F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000616F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061740);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100061754);
	op_stkvar	(x,	1);
	set_cmt	(0X710006176C,	"timezone_service",	0);
	set_cmt	(0X7100061770,	"a1",	0);
	set_cmt	(0X7100061774,	"a3",	0);
	set_cmt	(0X7100061778,	"a2",	0);
	create_insn	(x=0X7100061780);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061794);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710006179C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000617B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000617B8);
	op_hex		(x,	1);
	create_insn	(0X71000617D0);
	create_insn	(x=0X71000617DC);
	op_hex		(x,	1);
	create_insn	(0X7100061804);
	create_insn	(x=0X7100061850);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061854);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061858);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006185C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061860);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061868);
	op_stkvar	(x,	1);
	set_name	(0X7100061868,	"nn::timesrv::detail::service::StaticService::SetStandardSteadyClockInternalOffset");
	create_insn	(x=0X7100061884);
	op_stkvar	(x,	1);
	create_insn	(0X710006188C);
	create_insn	(x=0X7100061890);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061898);
	op_stkvar	(x,	1);
	set_name	(0X7100061898,	"nn::timesrv::detail::service::StaticService::GetStandardSteadyClockRtcValue");
	create_insn	(x=0X710006189C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000618B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000618BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000618C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000618CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000618D0);
	op_stkvar	(x,	1);
	create_insn	(0X71000618D8);
	set_name	(0X71000618D8,	"nn::timesrv::detail::service::StaticService::IsStandardUserSystemClockAutomaticCorrectionEnabled");
	create_insn	(0X71000618E8);
	set_name	(0X71000618E8,	"nn::timesrv::detail::service::StaticService::SetStandardUserSystemClockAutomaticCorrectionEnabled");
	create_insn	(0X71000618F8);
	set_name	(0X71000618F8,	"nn::timesrv::detail::service::StaticService::IsStandardNetworkSystemClockAccuracySufficient");
	create_insn	(0X7100061908);
	set_name	(0X7100061908,	"nn::timesrv::detail::service::StaticService::GetStandardUserSystemClockAutomaticCorrectionUpdatedTime");
	create_insn	(0X7100061918);
	set_name	(0X7100061918,	"nn::timesrv::detail::service::StaticService::CalculateMonotonicSystemClockBaseTimePoint");
	create_insn	(0X7100061928);
	set_name	(0X7100061928,	"nn::timesrv::detail::service::StaticService::GetClockSnapshot");
	create_insn	(0X7100061938);
	set_name	(0X7100061938,	"nn::timesrv::detail::service::StaticService::GetClockSnapshotFromSystemClockContext");
	create_insn	(0X7100061948);
	set_name	(0X7100061948,	"nn::timesrv::detail::service::StaticService::CalculateStandardUserSystemClockDifferenceByUser");
	create_insn	(0X7100061958);
	set_name	(0X7100061958,	"nn::timesrv::detail::service::StaticService::CalculateSpanBetween");
	create_insn	(x=0X7100061968);
	op_stkvar	(x,	1);
	set_name	(0X7100061968,	"nn::timesrv::detail::service::StaticService::GetStandardUserSystemClockInitialYear");
	create_insn	(x=0X710006196C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061980);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061988);
	op_stkvar	(x,	1);
	create_insn	(0X7100061990);
	create_insn	(x=0X7100061998);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006199C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000619A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000619E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000619E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000619E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000619F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000619F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000619F8);
	op_stkvar	(x,	1);
	create_insn	(0X7100061A00);
	set_name	(0X7100061A00,	"nn::timesrv::detail::service::ITimeZoneService::GetDeviceLocationName");
	create_insn	(0X7100061A08);
	set_name	(0X7100061A08,	"nn::timesrv::detail::service::ITimeZoneService::SetDeviceLocationName");
	create_insn	(0X7100061A10);
	set_name	(0X7100061A10,	"nn::timesrv::detail::service::ITimeZoneService::GetTotalLocationNameCount");
	create_insn	(0X7100061A18);
	set_name	(0X7100061A18,	"nn::timesrv::detail::service::ITimeZoneService::LoadLocationNameList");
	create_insn	(0X7100061A2C);
	set_name	(0X7100061A2C,	"nn::timesrv::detail::service::ITimeZoneService::LoadTimeZoneRule");
	create_insn	(0X7100061A34);
	set_name	(0X7100061A34,	"nn::timesrv::detail::service::ITimeZoneService::GetTimeZoneRuleVersion");
	create_insn	(0X7100061A3C);
	set_name	(0X7100061A3C,	"nn::timesrv::detail::service::ITimeZoneService::GetDeviceLocationNameAndUpdatedTime");
	create_insn	(0X7100061A44);
	set_name	(0X7100061A44,	"nn::timesrv::detail::service::ITimeZoneService::SetDeviceLocationNameWithTimeZoneRule");
	set_cmt	(0X7100061A4C,	"__int64",	0);
	create_insn	(0X7100061A4C);
	set_name	(0X7100061A4C,	"nn::timesrv::detail::service::ITimeZoneService::ParseTimeZoneBinary");
	create_insn	(0X7100061A54);
	set_name	(0X7100061A54,	"nn::timesrv::detail::service::ITimeZoneService::GetDeviceLocationNameOperationEventReadableHandle");
	create_insn	(0X7100061A5C);
	set_name	(0X7100061A5C,	"nn::timesrv::detail::service::ITimeZoneService::ToCalendarTime");
	create_insn	(x=0X7100061A60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061A68);
	op_stkvar	(x,	1);
	set_cmt	(0X7100061A6C,	"this",	0);
	set_cmt	(0X7100061A70,	"time",	0);
	create_insn	(x=0X7100061A70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061A78);
	op_stkvar	(x,	1);
	create_insn	(0X7100061A84);
	set_name	(0X7100061A84,	"nn::timesrv::detail::service::ITimeZoneService::ToCalendarTimeWithMyRule");
	create_insn	(x=0X7100061A88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061A90);
	op_stkvar	(x,	1);
	set_cmt	(0X7100061A94,	"this",	0);
	set_cmt	(0X7100061A98,	"time",	0);
	create_insn	(x=0X7100061A98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061AA0);
	op_stkvar	(x,	1);
	create_insn	(0X7100061AAC);
	set_name	(0X7100061AAC,	"nn::timesrv::detail::service::ITimeZoneService::ToPosixTime");
	create_insn	(x=0X7100061AB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061AB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061AC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061AD4);
	op_stkvar	(x,	1);
	create_insn	(0X7100061AE0);
	set_name	(0X7100061AE0,	"nn::timesrv::detail::service::ITimeZoneService::ToPosixTimeWithMyRule");
	create_insn	(x=0X7100061AE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061AEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061AF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061B04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061B10);
	op_stkvar	(x,	1);
	set_name	(0X7100061B10,	"GlueTImeZoneService::GlueTimeZoneService");
	create_insn	(x=0X7100061B14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061B54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061B58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061B60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061B64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061B68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061B80);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100061BB4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100061BE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061BEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061BF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061BFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061C00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061C04);
	op_stkvar	(x,	1);
	create_insn	(0X7100061C0C);
	set_name	(0X7100061C0C,	"nn::timesrv::detail::service::TimeZoneService::GetDeviceLocationName");
	make_array	(0X7100061C1C,	0X4);
	create_insn	(0X7100061C20);
	set_name	(0X7100061C20,	"nn::timesrv::detail::service::TimeZoneService::SetDeviceLocationName");
	create_insn	(x=0X7100061C24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061C28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061C2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061C60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061C68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061C6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061C70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061C74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061C7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061C8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061C90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061C9C);
	op_stkvar	(x,	1);
	set_cmt	(0X7100061CB4,	"this",	0);
	create_insn	(x=0X7100061CC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061CC4);
	op_stkvar	(x,	1);
	create_insn	(0X7100061CE0);
	create_insn	(x=0X7100061CE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061CEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061CF0);
	op_stkvar	(x,	1);
	create_insn	(0X7100061CFC);
	create_insn	(x=0X7100061D08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061D0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061D10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061D1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061D24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061D30);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100061D3C);
	op_plain_offset	(x,	1,	0X71000B2A50);
	op_plain_offset	(x,	129,	0X71000B2A50);
	create_insn	(x=0X7100061D64);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100061D74,	"a1",	0);
	create_insn	(x=0X7100061D80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061D84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061D88);
	op_stkvar	(x,	1);
	create_insn	(0X7100061D94);
	set_name	(0X7100061D94,	"nn::timesrv::detail::service::TimeZoneService::GetTotalLocationNameCount");
	create_insn	(0X7100061DA4);
	set_name	(0X7100061DA4,	"nn::timesrv::detail::service::TimeZoneService::LoadTimeZoneRule");
	create_insn	(x=0X7100061DA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061DAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061DB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061DD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061DDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061DE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061DE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061DE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061DF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061E00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061E04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061E10);
	op_stkvar	(x,	1);
	set_cmt	(0X7100061E24,	"a1",	0);
	create_insn	(x=0X7100061E30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061E34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061E38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061E44);
	op_stkvar	(x,	1);
	set_name	(0X7100061E44,	"nn::timesrv::detail::service::TimeZoneService::LoadLocationNameList");
	create_insn	(x=0X7100061E48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061E4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061E50);
	op_stkvar	(x,	1);
	set_cmt	(0X7100061E8C,	"nn::os::detail::InternalCriticalSectionImplByHorizon *",	0);
	create_insn	(x=0X7100061E98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061E9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061EA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061EA4);
	op_stkvar	(x,	1);
	create_insn	(0X7100061EAC);
	set_name	(0X7100061EAC,	"nn::timesrv::detail::service::TimeZoneService::GetTimeZoneRuleVersion");
	create_insn	(0X7100061EBC);
	set_name	(0X7100061EBC,	"nn::timesrv::detail::service::TimeZoneService::GetDeviceLocationNameAndUpdatedTime");
	create_insn	(0X7100061ECC);
	set_name	(0X7100061ECC,	"nn::timesrv::detail::service::TimeZoneService::SetDeviceLocationNameWithTimeZoneRule");
	create_insn	(0X7100061EE8);
	set_name	(0X7100061EE8,	"nn::timesrv::detail::service::TimeZoneService::ParseTimeZoneBinary");
	create_insn	(0X7100061EF4);
	set_name	(0X7100061EF4,	"nn::timesrv::detail::service::TimeZoneService::GetDeviceLocationNameOperationEventReadableHandle");
	create_insn	(x=0X7100061EF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061EFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061F00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061F04);
	op_stkvar	(x,	1);
	create_insn	(0X7100061F24);
	set_cmt	(0X7100061F30,	"event",	0);
	set_cmt	(0X7100061F34,	"clearMode",	0);
	set_cmt	(0X7100061F38,	"type",	0);
	create_insn	(x=0X7100061F48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061F54);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100061F7C);
	op_plain_offset	(x,	1,	0X71000B2A50);
	op_plain_offset	(x,	129,	0X71000B2A50);
	set_cmt	(0X7100061F94,	"result",	0);
	create_insn	(x=0X7100061FAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061FB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061FB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061FBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100061FC8);
	op_stkvar	(x,	1);
	create_insn	(0X7100061FD0);
	set_name	(0X7100061FD0,	"nn::timesrv::detail::service::TimeZoneService::ToCalendarTime");
	create_insn	(0X7100061FE4);
	set_name	(0X7100061FE4,	"nn::timesrv::detail::service::TimeZoneService::ToCalendarTimeWithMyRule");
	create_insn	(0X7100061FF8);
	set_name	(0X7100061FF8,	"nn::timesrv::detail::service::TimeZoneService::ToPosixTime");
	create_insn	(x=0X7100061FFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062008);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062024);
	op_stkvar	(x,	1);
	create_insn	(0X7100062030);
	set_name	(0X7100062030,	"nn::timesrv::detail::service::TimeZoneService::ToPosixTimeWithMyRule");
	create_insn	(x=0X7100062034);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062040);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062058);
	op_stkvar	(x,	1);
	make_array	(0X7100062064,	0XC);
	create_insn	(0X7100062070);
	set_name	(0X7100062070,	"GetUnixEpochFromInitialYear");
	create_insn	(x=0X7100062074);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062080);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062088);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006208C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062090);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062098);
	op_stkvar	(x,	1);
	make_array	(0X71000620A4,	0XC);
	create_insn	(0X71000620B0);
	set_name	(0X71000620B0,	"GetServce_IRtcManager");
	create_insn	(x=0X71000620B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000620B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000620C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000620D0);
	op_plain_offset	(x,	1,	0X71002406BC);
	op_plain_offset	(x,	129,	0X71002406BC);
	create_insn	(x=0X71000620D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000620E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000620EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000620F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000620FC);
	op_plain_offset	(x,	1,	0X71000B2AF8);
	op_plain_offset	(x,	129,	0X71000B2AF8);
	create_insn	(x=0X7100062104);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100062108);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100062110);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100062114);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710006211C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710006212C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100062130);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7100062138);
	create_insn	(x=0X710006213C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062140);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062150);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100062158);
	op_plain_offset	(x,	1,	0X71000B2AF0);
	op_plain_offset	(x,	129,	0X71000B2AF0);
	create_insn	(x=0X710006215C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062168);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710006216C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100062174);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100062180);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100062184);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100062190);
	op_plain_offset	(x,	1,	0X71002406BC);
	op_plain_offset	(x,	129,	0X71002406BC);
	create_insn	(x=0X7100062198);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006219C);
	op_stkvar	(x,	1);
	create_insn	(0X71000621A8);
	create_insn	(x=0X71000621AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000621C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000621D0);
	op_stkvar	(x,	1);
	create_qword	(0X71000621D8);
	create_insn	(x=0X71000621E0);
	op_stkvar	(x,	1);
	set_name	(0X71000621E0,	"Rtc_GetTimeInSeconds");
	create_insn	(x=0X71000621E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000621E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000621F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000621F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100062240);
	op_hex		(x,	1);
	create_insn	(x=0X7100062250);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062254);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062258);
	op_stkvar	(x,	1);
	create_insn	(0X7100062260);
	create_insn	(x=0X7100062264);
	op_stkvar	(x,	1);
	create_dword	(0X710006226C);
	create_insn	(x=0X7100062270);
	op_stkvar	(x,	1);
	set_name	(0X7100062270,	"Rtc_GetRtcResetDetected");
	create_insn	(x=0X7100062274);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062278);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062280);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100062288);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000622D0);
	op_hex		(x,	1);
	create_insn	(x=0X71000622E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000622E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000622E8);
	op_stkvar	(x,	1);
	create_insn	(0X71000622F0);
	create_insn	(x=0X71000622F4);
	op_stkvar	(x,	1);
	create_dword	(0X71000622FC);
	create_insn	(0X7100062300);
	set_name	(0X7100062300,	"Rtc_ClearRtcResetDetected");
	create_insn	(x=0X7100062304);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062308);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062310);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100062318);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100062358);
	op_hex		(x,	1);
	create_insn	(x=0X7100062368);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006236C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062378);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006237C);
	op_stkvar	(x,	1);
	create_dword	(0X7100062384);
	make_array	(0X7100062388,	0X8);
	create_insn	(0X7100062390);
	set_name	(0X7100062390,	"Rtc_EnableAlarm");
	create_insn	(x=0X7100062394);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062398);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006239C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000623A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000623AC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000623FC);
	op_hex		(x,	1);
	create_insn	(x=0X710006240C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062410);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062414);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062420);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062424);
	op_stkvar	(x,	1);
	create_dword	(0X710006242C);
	create_insn	(x=0X7100062430);
	op_stkvar	(x,	1);
	set_name	(0X7100062430,	"Rtc_DisableAlarm");
	create_insn	(x=0X7100062434);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062438);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062440);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100062448);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100062490);
	op_hex		(x,	1);
	create_insn	(x=0X71000624A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000624A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000624A8);
	op_stkvar	(x,	1);
	create_insn	(0X71000624B0);
	create_insn	(x=0X71000624B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000624BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000624C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000624C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000624C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062518);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006256C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062570);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062574);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062578);
	op_stkvar	(x,	1);
	create_insn	(0X7100062580);
	create_insn	(x=0X71000625A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X71000625D0);
	create_insn	(x=0X71000625DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062608);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100062658);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006265C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062660);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062664);
	op_stkvar	(x,	1);
	create_insn	(0X710006266C);
	create_insn	(0X7100062674);
	create_insn	(x=0X7100062678);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006267C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062680);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000626B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000626BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000626C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000626C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062710);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062714);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062718);
	op_stkvar	(x,	1);
	create_insn	(0X7100062724);
	create_insn	(0X710006272C);
	create_insn	(0X710006273C);
	create_insn	(0X710006274C);
	create_insn	(x=0X7100062754);
	op_hex		(x,	1);
	create_insn	(0X7100062760);
	create_insn	(0X7100062770);
	create_insn	(0X7100062780);
	create_insn	(0X7100062794);
	create_insn	(0X71000627A8);
	create_insn	(0X71000627B0);
	create_insn	(0X71000627B8);
	create_insn	(x=0X71000627BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000627C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000627C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000627C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062808);
	op_hex		(x,	1);
	create_insn	(x=0X7100062838);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062844);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062850);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006285C);
	op_hex		(x,	1);
	create_insn	(0X7100062880);
	create_insn	(x=0X710006288C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062890);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062894);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062898);
	op_stkvar	(x,	1);
	create_insn	(0X71000628A4);
	create_insn	(x=0X71000628A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000628AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000628B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000628B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000628F4);
	op_hex		(x,	1);
	create_insn	(x=0X7100062928);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062934);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062940);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006294C);
	op_hex		(x,	1);
	create_insn	(0X7100062970);
	create_insn	(x=0X710006297C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062980);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062984);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062988);
	op_stkvar	(x,	1);
	create_insn	(0X7100062994);
	create_insn	(x=0X7100062998);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006299C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000629A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000629A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000629D4);
	op_hex		(x,	1);
	create_insn	(x=0X7100062A10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062A1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062A28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062A34);
	op_hex		(x,	1);
	create_insn	(0X7100062A58);
	create_insn	(0X7100062A64);
	create_insn	(x=0X7100062A70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062A74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062A78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062A7C);
	op_stkvar	(x,	1);
	create_insn	(0X7100062A88);
	create_insn	(x=0X7100062A8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062A90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062A94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062A98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062ADC);
	op_hex		(x,	1);
	create_insn	(x=0X7100062B0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062B18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062B24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062B30);
	op_hex		(x,	1);
	create_insn	(0X7100062B54);
	create_insn	(x=0X7100062B60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062B64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062B68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062B6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062B78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062B7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062BA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062BAC);
	op_stkvar	(x,	1);
	create_insn	(0X7100062BB4);
	create_insn	(x=0X7100062BC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062BCC);
	op_stkvar	(x,	1);
	create_insn	(0X7100062BD4);
	create_insn	(x=0X7100062BD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062BDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062BF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062BF4);
	op_stkvar	(x,	1);
	create_insn	(0X7100062BFC);
	create_insn	(0X7100062C00);
	set_name	(0X7100062C00,	"j_TimeAL::CreateAlarm");
	create_insn	(0X7100062C04);
	create_insn	(0X7100062C08);
	create_insn	(0X7100062C0C);
	set_name	(0X7100062C0C,	"j_nullsub_85");
	create_insn	(0X7100062C10);
	create_insn	(0X7100062C24);
	create_insn	(0X7100062C28);
	create_insn	(x=0X7100062C38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062C3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062C50);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100062CAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062CB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062CB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062CBC);
	op_stkvar	(x,	1);
	create_insn	(0X7100062CC4);
	create_insn	(x=0X7100062CC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062CCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062CE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062CF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062D00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062D18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062D48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062D74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062D78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062D84);
	op_stkvar	(x,	1);
	create_insn	(0X7100062D8C);
	create_insn	(0X7100062D94);
	create_dword	(0X7100062D9C);
	create_insn	(x=0X7100062DA0);
	op_stkvar	(x,	1);
	set_name	(0X7100062DA0,	"GetTimeAL");
	create_insn	(x=0X7100062DA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062DAC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100062DC0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100062DC8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100062DE4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100062DF0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100062E08);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100062E18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062E1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062E24);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100062E34);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100062E40);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100062E4C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100062E54);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100062E58);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100062E5C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100062E68);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100062E78);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7100062E84);
	set_name	(0X7100062E84,	"TimeAL::CreateAlarm");
	create_insn	(x=0X7100062E88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062E8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062E90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062EA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062EA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062EAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062EB8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100062EC0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100062EC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062EDC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100062EE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062F04);
	op_hex		(x,	1);
	create_insn	(x=0X7100062F2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062F30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062F34);
	op_stkvar	(x,	1);
	create_insn	(0X7100062F40);
	create_insn	(x=0X7100062F44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062F48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062F5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062F6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062F78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062F8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062F90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062F94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062FA0);
	op_stkvar	(x,	1);
	create_insn	(0X7100062FA8);
	create_insn	(0X7100062FAC);
	create_insn	(x=0X7100062FB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062FB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062FC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062FD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062FE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100062FF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063000);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063004);
	op_stkvar	(x,	1);
	create_insn	(0X7100063010);
	create_insn	(x=0X7100063018);
	op_stkvar	(x,	1);
	create_insn	(0X7100063020);
	create_insn	(0X7100063034);
	set_name	(0X7100063034,	"nullsub_85");
	create_insn	(0X7100063038);
	set_name	(0X7100063038,	"nullsub_86");
	create_insn	(0X710006303C);
	set_name	(0X710006303C,	"nullsub_87");
	create_insn	(x=0X7100063040);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100063044);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710006304C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100063054);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7100063060);
	set_name	(0X7100063060,	"nullsub_88");
	create_insn	(0X7100063064);
	set_name	(0X7100063064,	"nullsub_89");
	create_insn	(0X7100063068);
	set_name	(0X7100063068,	"GetService_TimeAL");
	create_insn	(x=0X710006306C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063070);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063078);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100063080);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006308C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100063094);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000630A0);
	op_plain_offset	(x,	1,	0X71000B2FD8);
	op_plain_offset	(x,	129,	0X71000B2FD8);
	create_insn	(x=0X71000630A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000630AC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000630B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000630B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000630C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000630D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000630D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000630DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100063120);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063124);
	op_stkvar	(x,	1);
	create_insn	(0X7100063130);
	create_insn	(x=0X7100063134);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063138);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063148);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006315C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710006316C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063170);
	op_stkvar	(x,	1);
	create_insn	(0X710006317C);
	create_insn	(x=0X7100063180);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100063188);
	op_plain_offset	(x,	1,	0X71000B2FD0);
	op_plain_offset	(x,	129,	0X71000B2FD0);
	create_insn	(x=0X710006318C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063198);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710006319C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000631A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X71000631C0);
	create_insn	(x=0X71000631C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000631C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000631CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000631D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000631D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000631D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063224);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710006322C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100063388);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063390);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063398);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000633B0);
	op_stkvar	(x,	1);
	create_insn	(0X71000633BC);
	create_insn	(x=0X71000633E0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710006340C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063430);
	op_stkvar	(x,	1);
	set_cmt	(0X710006346C,	"result",	0);
	set_cmt	(0X710006347C,	"result",	0);
	create_insn	(x=0X71000634B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000634BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000634C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000634C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000634C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000634CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000634D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000634DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063500);
	op_stkvar	(x,	1);
	create_insn	(0X710006350C);
	create_insn	(0X7100063514);
	create_insn	(x=0X7100063518);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006351C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063520);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063524);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063534);
	op_hex		(x,	1);
	create_insn	(x=0X7100063538);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006355C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063574);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710006357C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100063604);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063608);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006360C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063610);
	op_stkvar	(x,	1);
	create_insn	(0X710006361C);
	create_insn	(x=0X7100063624);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063628);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063658);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063668);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063670);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063674);
	op_stkvar	(x,	1);
	create_insn	(0X710006367C);
	create_insn	(0X7100063684);
	create_insn	(x=0X7100063688);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006368C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000636A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000636A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000636A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000636B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000636B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000636C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000636CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000636D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000636E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000636F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000636FC);
	op_stkvar	(x,	1);
	create_insn	(0X7100063708);
	create_insn	(x=0X710006370C);
	op_stkvar	(x,	1);
	create_insn	(0X7100063718);
	create_insn	(x=0X710006371C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063720);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063734);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063738);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006373C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063744);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006374C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006375C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063760);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063768);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063774);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006378C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063790);
	op_stkvar	(x,	1);
	create_insn	(0X710006379C);
	create_insn	(x=0X71000637A0);
	op_stkvar	(x,	1);
	create_insn	(0X71000637AC);
	create_insn	(0X71000637B4);
	create_insn	(x=0X71000637BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000637C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000637C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063810);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100063840);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063844);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006384C);
	op_stkvar	(x,	1);
	create_insn	(0X7100063854);
	create_insn	(x=0X7100063858);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006385C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063860);
	op_stkvar	(x,	1);
	create_insn	(0X7100063868);
	create_insn	(x=0X7100063870);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063874);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000638A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000638B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000638BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000638C0);
	op_stkvar	(x,	1);
	create_insn	(0X71000638C8);
	create_insn	(0X71000638D0);
	create_insn	(0X71000638DC);
	create_insn	(0X71000638E8);
	create_insn	(0X71000638F4);
	create_insn	(0X7100063900);
	create_insn	(x=0X7100063904);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063908);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006391C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063920);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063924);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006392C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063934);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063948);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006394C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063950);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006395C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063974);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063978);
	op_stkvar	(x,	1);
	create_insn	(0X7100063984);
	create_insn	(x=0X7100063988);
	op_stkvar	(x,	1);
	create_insn	(0X7100063994);
	create_insn	(0X71000639A0);
	create_insn	(0X71000639A8);
	create_insn	(x=0X71000639B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000639B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000639B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063A04);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100063A34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063A38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063A40);
	op_stkvar	(x,	1);
	create_insn	(0X7100063A48);
	create_insn	(x=0X7100063A4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063A50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063A54);
	op_stkvar	(x,	1);
	create_insn	(0X7100063A5C);
	create_insn	(x=0X7100063A64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063A68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063A98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063AA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063AB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063AB4);
	op_stkvar	(x,	1);
	create_insn	(0X7100063ABC);
	create_insn	(0X7100063AC4);
	create_insn	(0X7100063AD4);
	create_insn	(0X7100063AE0);
	create_insn	(0X7100063AEC);
	create_insn	(0X7100063AF8);
	create_insn	(0X7100063B04);
	create_insn	(0X7100063B0C);
	create_insn	(0X7100063B14);
	create_insn	(x=0X7100063B1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063B20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063B24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063B2C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100063B34);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100063B64,	"result",	0);
	set_cmt	(0X7100063B74,	"result",	0);
	create_insn	(x=0X7100063B9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063BA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063BA4);
	op_stkvar	(x,	1);
	create_insn	(0X7100063BAC);
	create_insn	(x=0X7100063BC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063BC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063BC8);
	op_stkvar	(x,	1);
	create_insn	(0X7100063BD0);
	create_insn	(0X7100063BE0);
	create_insn	(0X7100063BE4);
	create_insn	(0X7100063BF8);
	make_array	(0X7100063BFC,	0X4);
	create_insn	(0X7100063C00);
	set_name	(0X7100063C00,	"Setup_ServiceManager");
	create_insn	(x=0X7100063C04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063C08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063C10);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100063C20);
	op_plain_offset	(x,	1,	0X71002406E4);
	op_plain_offset	(x,	129,	0X71002406E4);
	create_insn	(x=0X7100063C2C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100063C30);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100063C3C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100063C40);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100063C48);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100063C64);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100063C6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063C70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063C80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063C84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063C88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063C8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063C90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063CA4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100063CAC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100063CB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063CB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063CB8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100063CBC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100063CD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063CD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063CD8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100063CDC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100063CF0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100063CF4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100063CFC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100063D00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063D14);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100063D1C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100063D28);
	op_stkvar	(x,	1);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_10(void) {
        auto x;
#define id x

	create_insn	(x=0X7100063D3C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100063D4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063D50);
	op_stkvar	(x,	1);
	make_array	(0X7100063D5C,	0X4);
	create_insn	(x=0X7100063D60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063D64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063D6C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100063D7C);
	op_plain_offset	(x,	1,	0X71002406E4);
	op_plain_offset	(x,	129,	0X71002406E4);
	create_insn	(x=0X7100063D88);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100063D8C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100063D94);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100063D98);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100063D9C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100063DB0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100063DB4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100063DB8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100063DCC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100063DD0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100063DD4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100063DE8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100063DEC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100063DF0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100063E04);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100063E08);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100063E0C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100063E20);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100063E2C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100063E38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063E40);
	op_stkvar	(x,	1);
	make_array	(0X7100063E48,	0X8);
	create_insn	(0X7100063E50);
	set_name	(0X7100063E50,	"StaticServiceUser::StaticServiceUser");
	create_insn	(x=0X7100063E54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063E58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063E64);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100063E68);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100063E70);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100063E88);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100063E8C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7100063E9C);
	create_insn	(x=0X7100063EA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063EA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063EB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063EC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063EC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063EC8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100063ECC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100063EE4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063EF8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100063F10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063F14);
	op_stkvar	(x,	1);
	create_insn	(0X7100063F20);
	create_insn	(x=0X7100063F24);
	op_stkvar	(x,	1);
	create_dword	(0X7100063F2C);
	create_insn	(0X7100063F30);
	set_name	(0X7100063F30,	"StaticServiceAdmin::StaticServiceAdmin");
	create_insn	(x=0X7100063F34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063F38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063F44);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100063F48);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100063F50);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100063F68);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100063F6C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7100063F7C);
	create_insn	(x=0X7100063F80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063F88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063F98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063FA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063FA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063FA8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100063FAC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100063FC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063FD8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100063FF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100063FF4);
	op_stkvar	(x,	1);
	create_insn	(0X7100064000);
	create_insn	(x=0X7100064004);
	op_stkvar	(x,	1);
	create_dword	(0X710006400C);
	create_insn	(0X7100064010);
	set_name	(0X7100064010,	"StaticServiceRepair::StaticServiceRepair");
	create_insn	(x=0X7100064014);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064018);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064024);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100064028);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100064030);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100064048);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710006404C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X710006405C);
	create_insn	(x=0X7100064060);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064068);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064078);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064080);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064084);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064088);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710006408C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000640A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000640B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000640D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000640D4);
	op_stkvar	(x,	1);
	create_insn	(0X71000640E0);
	create_insn	(x=0X71000640E4);
	op_stkvar	(x,	1);
	create_dword	(0X71000640EC);
	create_insn	(x=0X71000640F0);
	op_stkvar	(x,	1);
	set_name	(0X71000640F0,	"GetServiceManager");
	create_insn	(x=0X71000640F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000640FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100064100);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100064104);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710006411C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100064120);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100064134);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006413C);
	op_stkvar	(x,	1);
	create_insn	(0X7100064144);
	create_qword	(0X7100064148);
	create_insn	(x=0X7100064150);
	op_stkvar	(x,	1);
	set_name	(0X7100064150,	"TimeServiceManager_SetupStandardSteadyClockCore");
	create_insn	(x=0X7100064158);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100064160);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100064168);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100064184);
	op_hex		(x,	1);
	create_insn	(x=0X71000641A8);
	op_stkvar	(x,	1);
	create_insn	(0X71000641B0);
	create_dword	(0X71000641B4);
	make_array	(0X71000641B8,	0X8);
	create_insn	(x=0X71000641C0);
	op_stkvar	(x,	1);
	set_name	(0X71000641C0,	"TimeServiceManager_SetupStandardLocalSystemClockCore");
	create_insn	(x=0X71000641C8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000641D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000641D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100064200);
	op_stkvar	(x,	1);
	create_insn	(0X7100064208);
	create_dword	(0X710006420C);
	create_insn	(x=0X7100064210);
	op_stkvar	(x,	1);
	set_name	(0X7100064210,	"TimeServiceManager_SetupStandardNetworkSystemClockCore");
	create_insn	(x=0X7100064218);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100064220);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100064228);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100064250);
	op_stkvar	(x,	1);
	create_insn	(0X7100064258);
	create_dword	(0X710006425C);
	create_insn	(x=0X7100064260);
	op_stkvar	(x,	1);
	set_name	(0X7100064260,	"TimeServiceManager_SetupStandardUserSystemClockCore");
	create_insn	(x=0X7100064268);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710006426C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100064270);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100064274);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100064294);
	op_hex		(x,	1);
	create_insn	(x=0X71000642A0);
	op_stkvar	(x,	1);
	create_insn	(0X71000642A8);
	create_dword	(0X71000642AC);
	create_insn	(0X71000642B0);
	set_name	(0X71000642B0,	"TimeServiceManager_SetupTimeZoneServiceCore");
	create_insn	(x=0X71000642B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000642BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000642D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000642D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000642F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064308);
	op_stkvar	(x,	1);
	create_insn	(0X7100064314);
	create_qword	(0X7100064318);
	create_insn	(x=0X7100064320);
	op_stkvar	(x,	1);
	set_name	(0X7100064320,	"TimeServiceManager_SetupEphemeralNetworkSystemClockCore");
	create_insn	(x=0X7100064328);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710006432C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100064334);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100064354);
	op_stkvar	(x,	1);
	create_insn	(0X710006435C);
	create_insn	(0X7100064360);
	set_name	(0X7100064360,	"TTimeServiceManager_GetStandardLocalClockOperationEvent");
	create_insn	(x=0X7100064364);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064368);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064370);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100064378);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100064380);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100064398);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000643A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000643B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000643C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000643CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000643D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000643D8);
	op_stkvar	(x,	1);
	create_insn	(0X71000643E4);
	create_insn	(x=0X71000643E8);
	op_stkvar	(x,	1);
	create_insn	(0X71000643F0);
	set_name	(0X71000643F0,	"TimeServiceManager_GetStandardNetworkClockOperationEventForServiceManager");
	create_insn	(x=0X71000643F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000643F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064400);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100064408);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100064410);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100064428);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064430);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064440);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064450);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006445C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064464);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064468);
	op_stkvar	(x,	1);
	create_insn	(0X7100064474);
	create_insn	(x=0X7100064478);
	op_stkvar	(x,	1);
	create_insn	(0X7100064480);
	set_name	(0X7100064480,	"TimeServiceManager_GetEphemeralNetworkClockOperationEventForServiceManager");
	create_insn	(x=0X7100064484);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064488);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064490);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100064498);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000644A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000644B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000644C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000644D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000644E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000644EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000644F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000644F8);
	op_stkvar	(x,	1);
	create_insn	(0X7100064504);
	create_insn	(x=0X7100064508);
	op_stkvar	(x,	1);
	create_insn	(0X7100064510);
	set_name	(0X7100064510,	"TimeServiceManager_GetStandardUserSystemClockAutomaticCorrectionUpdatedEvent");
	create_insn	(x=0X7100064514);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064518);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064520);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100064528);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100064530);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100064548);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064550);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064560);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064570);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006457C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064584);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064588);
	op_stkvar	(x,	1);
	create_insn	(0X7100064594);
	create_insn	(x=0X7100064598);
	op_stkvar	(x,	1);
	create_insn	(0X71000645A0);
	set_name	(0X71000645A0,	"TimeServiceManager::SetStandardSteadyClockBaseTime");
	create_insn	(x=0X71000645A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000645AC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000645B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000645BC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000645E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000645EC);
	op_stkvar	(x,	1);
	create_insn	(0X71000645F8);
	create_insn	(x=0X71000645FC);
	op_stkvar	(x,	1);
	create_dword	(0X7100064604);
	make_array	(0X7100064608,	0X8);
	create_insn	(0X7100064610);
	set_name	(0X7100064610,	"GlueTime58Sub::AttachToClosestAlarm");
	create_insn	(x=0X7100064614);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064618);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064620);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100064628);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100064630);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100064648);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064650);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064660);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064670);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006467C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064684);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064688);
	op_stkvar	(x,	1);
	create_insn	(0X7100064694);
	create_insn	(x=0X7100064698);
	op_stkvar	(x,	1);
	create_insn	(0X71000646A0);
	set_name	(0X71000646A0,	"CheckAndSignalAlarms");
	create_insn	(x=0X71000646A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000646AC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000646B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000646B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000646DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000646E4);
	op_stkvar	(x,	1);
	create_insn	(0X71000646F0);
	create_insn	(x=0X71000646F4);
	op_stkvar	(x,	1);
	create_dword	(0X71000646FC);
	create_insn	(0X7100064700);
	set_name	(0X7100064700,	"GetClosestAlarmInfo");
	create_insn	(x=0X7100064704);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064708);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064710);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100064718);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100064720);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100064740);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064744);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064748);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064754);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006475C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064764);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006476C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064770);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006477C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064784);
	op_stkvar	(x,	1);
	create_insn	(0X7100064794);
	create_insn	(x=0X7100064798);
	op_stkvar	(x,	1);
	create_insn	(0X71000647A0);
	set_name	(0X71000647A0,	"nullsub_90");
	make_array	(0X71000647A4,	0XC);
	create_insn	(x=0X71000647B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000647B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000647B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000647C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000647C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000647CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000647D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000647E8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000647F0);
	op_plain_offset	(x,	1,	0X71002406E0);
	op_plain_offset	(x,	129,	0X71002406E0);
	create_insn	(x=0X71000647F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100064800);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100064808);
	op_plain_offset	(x,	1,	0X71002406E0);
	op_plain_offset	(x,	129,	0X71002406E0);
	create_insn	(x=0X710006480C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100064824);
	op_plain_offset	(x,	1,	0X71002406E0);
	op_plain_offset	(x,	129,	0X71002406E0);
	create_insn	(x=0X7100064838);
	op_plain_offset	(x,	1,	0X71002406E0);
	op_plain_offset	(x,	129,	0X71002406E0);
	create_insn	(x=0X7100064840);
	op_plain_offset	(x,	1,	0X71002406E0);
	op_plain_offset	(x,	129,	0X71002406E0);
	create_insn	(x=0X710006484C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064854);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064858);
	op_stkvar	(x,	1);
	create_insn	(0X7100064860);
	set_name	(0X7100064860,	"nullsub_91");
	create_insn	(0X7100064864);
	set_name	(0X7100064864,	"nullsub_92");
	create_insn	(0X7100064868);
	set_name	(0X7100064868,	"GetService_timeM");
	create_insn	(x=0X710006486C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064870);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064878);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100064880);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006488C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100064894);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000648A0);
	op_plain_offset	(x,	1,	0X71000B35D8);
	op_plain_offset	(x,	129,	0X71000B35D8);
	create_insn	(x=0X71000648A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000648AC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000648B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000648B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000648C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000648D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000648D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000648DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100064920);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064924);
	op_stkvar	(x,	1);
	create_insn	(0X7100064930);
	create_insn	(x=0X7100064934);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064938);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064948);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006495C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710006496C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064970);
	op_stkvar	(x,	1);
	create_insn	(0X710006497C);
	create_insn	(x=0X7100064980);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100064988);
	op_plain_offset	(x,	1,	0X71000B35D0);
	op_plain_offset	(x,	129,	0X71000B35D0);
	create_insn	(x=0X710006498C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064998);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710006499C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000649A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000649C0);
	op_stkvar	(x,	1);
	set_name	(0X71000649C0,	"TimeServiceManager::Dtor");
	create_insn	(x=0X71000649C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000649CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000649DC);
	op_plain_offset	(x,	1,	0X71000B35D8);
	op_plain_offset	(x,	129,	0X71000B35D8);
	create_insn	(x=0X71000649E4);
	op_plain_offset	(x,	1,	0X71000B35D8);
	op_plain_offset	(x,	129,	0X71000B35D8);
	create_insn	(x=0X71000649EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000649F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000649F8);
	op_stkvar	(x,	1);
	create_insn	(0X7100064A00);
	create_insn	(x=0X7100064A04);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100064A18);
	op_plain_offset	(x,	1,	0X71000B35D0);
	op_plain_offset	(x,	129,	0X71000B35D0);
	create_insn	(x=0X7100064A24);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100064A28);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100064A30);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100064A3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064A40);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100064A48);
	op_stkvar	(x,	1);
	create_insn	(0X7100064A50);
	create_insn	(x=0X7100064A54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064A58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064A5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064A60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064A64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064A68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064AB4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100064ABC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100064C18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064C20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064C28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064C40);
	op_stkvar	(x,	1);
	create_insn	(0X7100064C4C);
	create_insn	(x=0X7100064C70);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100064C9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064CC0);
	op_stkvar	(x,	1);
	set_cmt	(0X7100064CFC,	"result",	0);
	set_cmt	(0X7100064D0C,	"result",	0);
	create_insn	(x=0X7100064D48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064D4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064D50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064D54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064D58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064D5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064D68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064D6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064D90);
	op_stkvar	(x,	1);
	create_insn	(0X7100064D9C);
	create_insn	(0X7100064DA4);
	set_name	(0X7100064DA4,	"TimeM::TimeM");
	create_insn	(x=0X7100064DA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064DAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064DB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064DB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064DC4);
	op_hex		(x,	1);
	create_insn	(x=0X7100064DC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064DEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064E04);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100064E0C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100064E94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064E98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064E9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064EA0);
	op_stkvar	(x,	1);
	create_insn	(0X7100064EAC);
	create_insn	(x=0X7100064EB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064EB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064EE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064EF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064F00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064F04);
	op_stkvar	(x,	1);
	create_insn	(0X7100064F0C);
	create_insn	(0X7100064F14);
	set_name	(0X7100064F14,	"nn::timesrv::detail::service::ITimeServiceManager::GetStaticServiceAsUser");
	create_insn	(x=0X7100064F18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064F1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064F30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064F34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064F38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064F40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064F48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064F58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064F5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064F64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064F70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064F88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064F8C);
	op_stkvar	(x,	1);
	create_insn	(0X7100064F98);
	create_insn	(x=0X7100064F9C);
	op_stkvar	(x,	1);
	create_insn	(0X7100064FA8);
	create_insn	(x=0X7100064FAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064FB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064FC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064FC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064FCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064FD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064FDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064FF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064FF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100064FF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065004);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006501C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065020);
	op_stkvar	(x,	1);
	create_insn	(0X710006502C);
	create_insn	(x=0X7100065030);
	op_stkvar	(x,	1);
	create_insn	(0X710006503C);
	create_insn	(x=0X7100065040);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065044);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065058);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006505C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065060);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065068);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065070);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065080);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065084);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006508C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065098);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000650B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000650B4);
	op_stkvar	(x,	1);
	create_insn	(0X71000650C0);
	create_insn	(x=0X71000650C4);
	op_stkvar	(x,	1);
	create_insn	(0X71000650D0);
	create_insn	(x=0X71000650D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000650D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000650EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000650F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000650F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000650FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065104);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065118);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006511C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065120);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006512C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065144);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065148);
	op_stkvar	(x,	1);
	create_insn	(0X7100065154);
	create_insn	(x=0X7100065158);
	op_stkvar	(x,	1);
	create_insn	(0X7100065164);
	create_insn	(x=0X7100065168);
	op_hex		(x,	1);
	create_insn	(0X7100065174);
	create_insn	(0X7100065180);
	create_insn	(0X710006518C);
	create_insn	(x=0X7100065190);
	op_hex		(x,	1);
	create_insn	(0X710006519C);
	create_insn	(0X71000651B4);
	create_insn	(0X71000651C0);
	create_insn	(0X71000651CC);
	create_insn	(0X71000651D8);
	create_insn	(0X71000651E4);
	create_insn	(0X71000651F0);
	create_insn	(0X71000651FC);
	create_insn	(0X7100065208);
	create_insn	(0X7100065214);
	set_name	(0X7100065214,	"nn::timesrv::detail::service::ITimeServiceManager::GetClosestAlarmInfo");
	create_insn	(0X7100065220);
	create_insn	(0X7100065228);
	create_insn	(x=0X7100065230);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065234);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065238);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065284);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000652B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000652B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000652C0);
	op_stkvar	(x,	1);
	create_insn	(0X71000652C8);
	create_insn	(x=0X71000652CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000652D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000652D4);
	op_stkvar	(x,	1);
	create_insn	(0X71000652DC);
	create_insn	(x=0X71000652E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000652E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000652E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000652EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000652F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000652F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065358);
	op_hex		(x,	1);
	create_insn	(x=0X71000653B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000653C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000653CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000653D8);
	op_hex		(x,	1);
	create_insn	(0X71000653FC);
	create_insn	(x=0X710006541C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065420);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065424);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065428);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006542C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065430);
	op_stkvar	(x,	1);
	create_insn	(0X710006543C);
	create_insn	(x=0X7100065440);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065444);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065448);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006544C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065450);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000654A8);
	op_hex		(x,	1);
	create_insn	(x=0X7100065504);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065510);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006551C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065528);
	op_hex		(x,	1);
	create_insn	(0X710006554C);
	create_insn	(x=0X710006556C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065570);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065574);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065578);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006557C);
	op_stkvar	(x,	1);
	create_insn	(0X7100065588);
	create_insn	(x=0X710006558C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065590);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065594);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065598);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006559C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000655F4);
	op_hex		(x,	1);
	create_insn	(x=0X710006564C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065658);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065664);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065670);
	op_hex		(x,	1);
	create_insn	(0X7100065694);
	create_insn	(x=0X71000656B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000656B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000656BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000656C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000656C4);
	op_stkvar	(x,	1);
	create_insn	(0X71000656D0);
	create_insn	(x=0X71000656D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000656D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000656DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000656E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000656E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000656E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065708);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065714);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065738);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100065748);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065750);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065758);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065760);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065768);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006576C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006577C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065784);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065794);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000657A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000657A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000657A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000657AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000657B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000657D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000657F4);
	op_hex		(x,	1);
	create_insn	(x=0X7100065830);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006585C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065890);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006589C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000658A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000658B4);
	op_hex		(x,	1);
	create_insn	(0X71000658D8);
	create_insn	(x=0X71000658F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000658FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065900);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065904);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065908);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006590C);
	op_stkvar	(x,	1);
	create_insn	(0X7100065918);
	create_insn	(x=0X710006591C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065920);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065924);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065928);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006592C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006597C);
	op_hex		(x,	1);
	create_insn	(x=0X71000659C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000659D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000659DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000659E8);
	op_hex		(x,	1);
	create_insn	(0X7100065A0C);
	create_insn	(0X7100065A18);
	create_insn	(x=0X7100065A48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065A4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065A50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065A54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065A58);
	op_stkvar	(x,	1);
	create_insn	(0X7100065A64);
	create_insn	(x=0X7100065A6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065A70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065A74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065A7C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100065A84);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100065AB4,	"result",	0);
	set_cmt	(0X7100065AC4,	"result",	0);
	create_insn	(x=0X7100065AEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065AF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065AF4);
	op_stkvar	(x,	1);
	create_insn	(0X7100065AFC);
	create_insn	(x=0X7100065B10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065B14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065B18);
	op_stkvar	(x,	1);
	create_insn	(0X7100065B20);
	create_insn	(0X7100065B48);
	create_insn	(x=0X7100065B54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065B58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065B70);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100065B78);
	create_insn	(x=0X7100065B8C);
	op_hex		(x,	1);
	create_insn	(0X7100065BA4);
	create_insn	(x=0X7100065BB4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100065BBC);
	create_insn	(x=0X7100065BCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065BD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065BD8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065BDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065BE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065BEC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100065C18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065C1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065C20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065C28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065C2C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100065C30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065C34);
	create_insn	(x=0X7100065C38);
	op_stkvar	(x,	1);
	create_insn	(0X7100065C40);
	set_name	(0X7100065C40,	"j_nullsub_95");
	create_insn	(0X7100065C44);
	set_name	(0X7100065C44,	"nullsub_93");
	create_insn	(0X7100065C48);
	set_name	(0X7100065C48,	"nullsub_94");
	create_insn	(x=0X7100065C4C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065C50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065C64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065C68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065C70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065C74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065C88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065C8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065C94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065C98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065CAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065CB0);
	op_stkvar	(x,	1);
	create_insn	(0X7100065CB8);
	create_insn	(x=0X7100065CBC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065CC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065CD8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100065CE0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100065CF0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100065CF4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100065D08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065D0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065D14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065D1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065D24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065D28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065D2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065D40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065D50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065D58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065D5C);
	op_stkvar	(x,	1);
	create_insn	(0X7100065D68);
	create_insn	(x=0X7100065D6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065D70);
	op_stkvar	(x,	1);
	make_array	(0X7100065D7C,	0X4);
	create_insn	(0X7100065D80);
	create_insn	(x=0X7100065D84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065D98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065D9C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065DA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065DA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065DAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065DB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065DDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065DEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065DF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065DF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065E08);
	op_stkvar	(x,	1);
	create_insn	(0X7100065E14);
	create_insn	(x=0X7100065E2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065E3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065E48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065E54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065E60);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065E6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065E78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065E84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065E88);
	op_stkvar	(x,	1);
	create_insn	(0X7100065E94);
	create_insn	(x=0X7100065E98);
	op_stkvar	(x,	1);
	create_insn	(0X7100065EA4);
	create_insn	(0X7100065EBC);
	create_insn	(0X7100065EEC);
	create_insn	(0X7100065F00);
	create_insn	(0X7100065F14);
	create_insn	(0X7100065F38);
	create_insn	(0X7100065F68);
	create_insn	(0X7100065F7C);
	create_insn	(x=0X7100065F90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065F94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065F98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100065F9C);
	op_stkvar	(x,	1);
	create_insn	(0X7100065FF0);
	create_insn	(x=0X710006601C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066020);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066024);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066028);
	op_stkvar	(x,	1);
	create_insn	(0X7100066030);
	create_insn	(x=0X7100066038);
	op_hex		(x,	1);
	create_insn	(x=0X7100066088);
	op_hex		(x,	1);
	create_insn	(0X71000660C0);
	create_insn	(x=0X71000660D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000660D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000660D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000660DC);
	op_stkvar	(x,	1);
	create_insn	(0X71000660E4);
	create_insn	(x=0X7100066100);
	op_hex		(x,	1);
	create_insn	(0X710006612C);
	create_insn	(x=0X710006613C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066140);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066144);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066148);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066150);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066154);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066158);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006615C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066160);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066164);
	op_stkvar	(x,	1);
	create_insn	(0X7100066208);
	create_insn	(x=0X710006624C);
	op_hex		(x,	1);
	create_insn	(x=0X710006625C);
	op_hex		(x,	1);
	create_insn	(0X7100066298);
	create_insn	(x=0X71000662A4);
	op_hex		(x,	1);
	create_insn	(x=0X71000662B0);
	op_hex		(x,	1);
	create_insn	(0X71000662EC);
	create_insn	(0X710006630C);
	create_insn	(x=0X7100066338);
	op_hex		(x,	1);
	create_insn	(x=0X7100066344);
	op_hex		(x,	1);
	create_insn	(0X7100066394);
	create_insn	(0X71000663A4);
	create_insn	(0X71000663B8);
	create_insn	(0X71000663C4);
	create_insn	(x=0X71000663C8);
	op_hex		(x,	1);
	create_insn	(x=0X71000663D4);
	op_hex		(x,	1);
	create_insn	(0X7100066428);
	create_insn	(x=0X710006642C);
	op_hex		(x,	1);
	create_insn	(x=0X7100066438);
	op_hex		(x,	1);
	create_insn	(0X7100066480);
	create_insn	(0X710006648C);
	create_insn	(0X7100066498);
	create_insn	(0X71000664A0);
	create_insn	(x=0X71000664E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000664E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000664E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000664EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000664F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000664F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000664FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066500);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066504);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066508);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066590);
	op_hex		(x,	1);
	create_insn	(0X71000665D0);
	create_insn	(x=0X71000665F4);
	op_hex		(x,	1);
	create_insn	(x=0X7100066604);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006660C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066610);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066618);
	op_stkvar	(x,	1);
	create_insn	(0X7100066620);
	create_insn	(x=0X710006662C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066630);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066634);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066638);
	op_stkvar	(x,	1);
	create_insn	(0X7100066640);
	create_insn	(x=0X7100066650);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066654);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066658);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006665C);
	op_stkvar	(x,	1);
	create_insn	(0X7100066664);
	create_insn	(x=0X7100066674);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066678);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006667C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066680);
	op_stkvar	(x,	1);
	create_insn	(0X7100066688);
	create_insn	(x=0X71000666BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000666C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000666C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000666C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000666D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000666D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000666D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000666DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066734);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066738);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006673C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066740);
	op_stkvar	(x,	1);
	create_insn	(0X7100066748);
	create_insn	(x=0X71000667B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000667BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000667C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000667C4);
	op_stkvar	(x,	1);
	create_insn	(0X71000667CC);
	create_insn	(x=0X71000667E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000667EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000667F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000667F4);
	op_stkvar	(x,	1);
	create_insn	(0X71000667FC);
	create_insn	(x=0X710006680C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066810);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066814);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066818);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066820);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066824);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066828);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006682C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066830);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066834);
	op_stkvar	(x,	1);
	create_insn	(0X71000668AC);
	create_insn	(x=0X71000668EC);
	op_hex		(x,	1);
	create_insn	(x=0X71000668FC);
	op_hex		(x,	1);
	create_insn	(0X710006692C);
	create_insn	(x=0X7100066938);
	op_hex		(x,	1);
	create_insn	(x=0X7100066944);
	op_hex		(x,	1);
	create_insn	(x=0X7100066978);
	op_hex		(x,	1);
	create_insn	(x=0X710006697C);
	op_hex		(x,	1);
	create_insn	(0X71000669A0);
	create_insn	(0X71000669C8);
	create_insn	(0X71000669E4);
	create_insn	(0X7100066A04);
	create_insn	(x=0X7100066A34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066A38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066A3C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066A40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066A44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066A48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066A50);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066A54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066A58);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066A5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066AB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066AB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066AB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066ABC);
	op_stkvar	(x,	1);
	create_insn	(0X7100066AC4);
	create_insn	(x=0X7100066AD8);
	op_hex		(x,	1);
	create_insn	(x=0X7100066AEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066AF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066AF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066B00);
	op_stkvar	(x,	1);
	create_insn	(0X7100066B08);
	create_insn	(0X7100066B2C);
	create_insn	(0X7100066B4C);
	create_insn	(x=0X7100066B7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066B80);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066B84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066B88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066B90);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066B94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066B98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066BD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066BD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066BD8);
	op_stkvar	(x,	1);
	create_insn	(0X7100066BE0);
	create_insn	(0X7100066C28);
	create_insn	(0X7100066C48);
	create_insn	(x=0X7100066C78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066C7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066C80);
	op_stkvar	(x,	1);
	create_insn	(0X7100066C88);
	set_name	(0X7100066C88,	"nullsub_95");
	make_array	(0X7100066C8C,	0X4);
	create_insn	(0X7100066C90);
	set_name	(0X7100066C90,	"j_delete_6");
	make_array	(0X7100066C94,	0XC);
	create_insn	(0X7100066CA0);
	create_insn	(x=0X7100066CA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066CA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066CB0);
	op_hex		(x,	1);
	create_insn	(x=0X7100066CCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066CD0);
	op_hex		(x,	1);
	create_insn	(0X7100066D28);
	create_insn	(0X7100066D34);
	create_insn	(0X7100066D58);
	make_array	(0X7100066D74,	0XC);
	create_insn	(0X7100066D80);
	create_insn	(x=0X7100066D84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066D88);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066D8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066D90);
	op_hex		(x,	1);
	create_insn	(x=0X7100066DA0);
	op_hex		(x,	1);
	make_array	(0X7100066DC8,	0X8);
	create_insn	(x=0X7100066DD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066DD4);
	op_stkvar	(x,	1);
	create_insn	(0X7100066DF4);
	create_insn	(x=0X7100066E08);
	op_hex		(x,	1);
	create_insn	(x=0X7100066E14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066E30);
	op_hex		(x,	1);
	make_array	(0X7100066E54,	0XC);
	create_insn	(0X7100066E60);
	create_insn	(x=0X7100066E64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066E68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100066E70);
	op_hex		(x,	1);
	create_insn	(x=0X7100066E88);
	op_hex		(x,	1);
	create_insn	(x=0X7100066EA8);
	op_hex		(x,	1);
	create_insn	(0X7100066EBC);
	create_insn	(x=0X7100066EE4);
	op_hex		(x,	1);
	create_insn	(0X7100066EF8);
	create_insn	(x=0X7100066F0C);
	op_hex		(x,	1);
	create_insn	(x=0X7100066F14);
	op_hex		(x,	1);
	create_insn	(0X7100066F28);
	create_insn	(x=0X7100066F38);
	op_hex		(x,	1);
	create_insn	(0X7100066F4C);
	create_insn	(x=0X7100066F5C);
	op_hex		(x,	1);
	create_insn	(0X7100066F70);
	create_insn	(x=0X7100066F8C);
	op_hex		(x,	1);
	create_insn	(x=0X7100066FD0);
	op_hex		(x,	1);
	create_insn	(x=0X7100066FE8);
	op_hex		(x,	1);
	create_insn	(x=0X7100066FFC);
	op_hex		(x,	1);
	create_insn	(0X7100067010);
	create_insn	(x=0X710006701C);
	op_hex		(x,	1);
	make_array	(0X7100067024,	0XC);
	create_insn	(0X7100067030);
	create_insn	(x=0X7100067034);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100067038);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006703C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100067040);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100067048);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006704C);
	op_hex		(x,	1);
	create_insn	(x=0X7100067058);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100067068);
	op_hex		(x,	1);
	create_insn	(x=0X7100067070);
	op_hex		(x,	1);
	create_insn	(x=0X71000670BC);
	op_hex		(x,	1);
	create_insn	(x=0X71000670CC);
	op_hex		(x,	1);
	create_insn	(x=0X71000670E8);
	op_hex		(x,	1);
	create_insn	(x=0X710006710C);
	op_hex		(x,	1);
	create_insn	(x=0X7100067144);
	op_hex		(x,	1);
	create_insn	(x=0X7100067158);
	op_hex		(x,	1);
	create_insn	(x=0X7100067174);
	op_hex		(x,	1);
	create_insn	(0X7100067188);
	create_insn	(x=0X71000671A4);
	op_hex		(x,	1);
	create_insn	(x=0X71000671A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000671AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000671B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000671B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000671BC);
	op_stkvar	(x,	1);
	create_insn	(0X71000671C8);
	create_insn	(x=0X71000671E0);
	op_hex		(x,	1);
	create_insn	(x=0X71000671E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000671E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000671EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000671F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000671F8);
	op_stkvar	(x,	1);
	create_insn	(0X7100067204);
	create_insn	(x=0X7100067224);
	op_hex		(x,	1);
	create_insn	(x=0X710006724C);
	op_hex		(x,	1);
	create_insn	(x=0X7100067274);
	op_hex		(x,	1);
	create_insn	(0X71000672A0);
	create_insn	(x=0X71000672A8);
	op_hex		(x,	1);
	create_insn	(x=0X71000672CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000672D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000672D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000672DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000672E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000672EC);
	op_hex		(x,	1);
	create_insn	(x=0X7100067300);
	op_hex		(x,	1);
	create_insn	(x=0X7100067310);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100067314);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710006731C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100067324);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100067328);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100067334);
	op_hex		(x,	1);
	create_insn	(x=0X710006735C);
	op_hex		(x,	1);
	create_insn	(x=0X7100067380);
	op_hex		(x,	1);
	create_insn	(x=0X7100067390);
	op_hex		(x,	1);
	create_insn	(x=0X7100067394);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100067398);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006739C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000673A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000673A8);
	op_stkvar	(x,	1);
	create_insn	(0X71000673B4);
	create_insn	(x=0X71000673D8);
	op_hex		(x,	1);
	create_insn	(x=0X7100067408);
	op_hex		(x,	1);
	create_insn	(x=0X7100067430);
	op_hex		(x,	1);
	create_insn	(x=0X7100067470);
	op_hex		(x,	1);
	create_insn	(x=0X7100067480);
	op_hex		(x,	1);
	create_insn	(0X71000674A4);
	create_insn	(0X71000674B0);
	create_insn	(x=0X71000674CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000674D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000674D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000674DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000674E0);
	op_stkvar	(x,	1);
	create_insn	(0X71000674EC);
	create_insn	(x=0X71000674FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100067500);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100067504);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006750C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100067510);
	op_stkvar	(x,	1);
	make_array	(0X710006751C,	0X4);
	create_insn	(0X7100067520);
	create_insn	(x=0X7100067538);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7100067548);
	create_insn	(0X7100067550);
	create_insn	(x=0X7100067558);
	op_hex		(x,	1);
	make_array	(0X7100067564,	0XC);
	create_insn	(0X7100067570);
	create_insn	(x=0X7100067574);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100067578);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006757C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100067584);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006758C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100067590);
	op_hex		(x,	1);
	create_insn	(x=0X71000675A4);
	op_hex		(x,	1);
	create_insn	(x=0X71000675A8);
	op_hex		(x,	1);
	create_insn	(x=0X71000675D0);
	op_hex		(x,	1);
	create_insn	(x=0X71000675D4);
	op_hex		(x,	1);
	create_insn	(x=0X71000675DC);
	op_hex		(x,	1);
	create_insn	(x=0X71000675E0);
	op_hex		(x,	1);
	create_insn	(x=0X71000675E4);
	op_hex		(x,	1);
	create_insn	(x=0X71000675EC);
	op_hex		(x,	1);
	create_insn	(x=0X71000676FC);
	op_hex		(x,	1);
	create_insn	(x=0X710006771C);
	op_hex		(x,	1);
	create_insn	(x=0X7100067720);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100067724);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100067728);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006772C);
	op_stkvar	(x,	1);
	create_insn	(0X7100067738);
	create_insn	(x=0X7100067748);
	op_hex		(x,	1);
	create_insn	(x=0X710006774C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100067750);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100067754);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100067758);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100067764);
	op_hex		(x,	1);
	create_insn	(x=0X7100067780);
	op_hex		(x,	1);
	create_insn	(x=0X7100067784);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100067788);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006778C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100067790);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006779C);
	op_hex		(x,	1);
	create_insn	(x=0X71000677B0);
	op_hex		(x,	1);
	create_insn	(x=0X71000677B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000677B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000677BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000677C0);
	op_stkvar	(x,	1);
	create_insn	(0X71000677CC);
	create_insn	(x=0X71000677DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000677E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000677E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000677E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000677F4);
	op_hex		(x,	1);
	create_insn	(x=0X7100067808);
	op_hex		(x,	1);
	create_insn	(x=0X710006780C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100067810);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100067814);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100067818);
	op_stkvar	(x,	1);
	create_insn	(0X7100067824);
	create_insn	(x=0X7100067838);
	op_hex		(x,	1);
	create_insn	(x=0X7100067884);
	op_hex		(x,	1);
	create_insn	(x=0X71000678F0);
	op_hex		(x,	1);
	create_insn	(x=0X71000678FC);
	op_hex		(x,	1);
	create_insn	(x=0X7100067908);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006790C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100067910);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100067914);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100067920);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100067924);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100067928);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006792C);
	op_stkvar	(x,	1);
	create_insn	(0X7100067938);
	create_insn	(x=0X7100067948);
	op_hex		(x,	1);
	create_insn	(x=0X7100067970);
	op_hex		(x,	1);
	create_insn	(x=0X71000679A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000679A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000679A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000679AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000679B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000679BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000679C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000679C4);
	op_stkvar	(x,	1);
	create_insn	(0X71000679D0);
	create_insn	(x=0X71000679D4);
	op_hex		(x,	1);
	create_insn	(x=0X71000679FC);
	op_hex		(x,	1);
	make_array	(0X7100067A28,	0X8);
	create_insn	(x=0X7100067A30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100067A34);
	op_stkvar	(x,	1);
	create_insn	(0X7100067A6C);
	create_insn	(x=0X7100067A70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100067A88);
	op_hex		(x,	1);
	make_array	(0X7100067AA8,	0X8);
	create_insn	(0X7100067AB0);
	create_insn	(x=0X7100067ACC);
	op_hex		(x,	1);
	create_insn	(x=0X7100067AE8);
	op_hex		(x,	1);
	create_insn	(x=0X7100067AF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100067AF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100067AFC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100067B00);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X7100067B0C,	0X4);
	create_insn	(0X7100067B10);
	create_insn	(x=0X7100067B14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100067B18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100067B1C);
	op_hex		(x,	1);
	create_insn	(x=0X7100067B20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100067B24);
	op_stkvar	(x,	1);
	make_array	(0X7100067B2C,	0X4);
	create_insn	(x=0X7100067B30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100067B34);
	op_stkvar	(x,	1);
	create_insn	(0X7100067B54);
	create_insn	(x=0X7100067B68);
	op_hex		(x,	1);
	create_insn	(x=0X7100067B74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100067B90);
	op_hex		(x,	1);
	make_array	(0X7100067BB4,	0XC);
	create_insn	(0X7100067BC0);
	create_insn	(x=0X7100067BE4);
	op_hex		(x,	1);
	create_insn	(x=0X7100067BF4);
	op_hex		(x,	1);
	create_insn	(x=0X7100067C00);
	op_hex		(x,	1);
	create_insn	(x=0X7100067C0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100067C10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100067C18);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100067C1C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	make_array	(0X7100067C28,	0X8);
	create_insn	(0X7100067C30);
	set_name	(0X7100067C30,	"nullsub_96");
	make_array	(0X7100067C34,	0XC);
	create_insn	(0X7100067C40);
	make_array	(0X7100067C44,	0XC);
	create_insn	(0X7100067C50);
	set_name	(0X7100067C50,	"nullsub_97");
	make_array	(0X7100067C54,	0XC);
	create_insn	(0X7100067C60);
	make_array	(0X7100067C64,	0XC);
	create_insn	(0X7100067C70);
	create_insn	(x=0X7100067C78);
	op_hex		(x,	1);
	create_insn	(x=0X7100067C8C);
	op_hex		(x,	1);
	create_insn	(0X7100067CA4);
	create_insn	(x=0X7100067CAC);
	op_hex		(x,	1);
	create_insn	(x=0X7100067CD0);
	op_hex		(x,	1);
	create_insn	(x=0X7100067CF4);
	op_hex		(x,	1);
	create_insn	(x=0X7100067D18);
	op_hex		(x,	1);
	create_insn	(x=0X7100067D3C);
	op_hex		(x,	1);
	create_insn	(x=0X7100067D60);
	op_hex		(x,	1);
	create_insn	(x=0X7100067D84);
	op_hex		(x,	1);
	create_insn	(0X7100067DB0);
	create_insn	(x=0X7100067DC8);
	op_hex		(x,	1);
	create_insn	(x=0X7100067DDC);
	op_hex		(x,	1);
	create_insn	(x=0X7100067E00);
	op_hex		(x,	1);
	create_insn	(0X7100067E40);
	set_name	(0X7100067E40,	"__memcpy_device");
	create_insn	(x=0X7100067E44);
	op_hex		(x,	1);
	create_insn	(x=0X7100067E7C);
	op_hex		(x,	1);
	create_insn	(x=0X7100067E8C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100067E90);
	op_hex		(x,	1);
	create_insn	(x=0X7100067E94);
	create_insn	(x=0X7100067E98);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(0X7100067EA8);
	create_insn	(0X7100067ED8);
	create_insn	(0X7100067EF0);
	create_insn	(0X7100067F50);
	create_insn	(x=0X7100067F54);
	op_hex		(x,	1);
	create_insn	(x=0X7100067F90);
	op_hex		(x,	1);
	create_insn	(0X7100067F9C);
	create_insn	(0X7100067FC0);
	create_insn	(x=0X7100067FD4);
	op_hex		(x,	1);
	create_insn	(0X7100067FEC);
	create_insn	(0X7100067FF8);
	create_insn	(0X7100068068);
	create_insn	(0X71000680C4);
	make_array	(0X7100068124,	0XC);
	create_insn	(0X7100068130);
	create_insn	(x=0X7100068160);
	op_hex		(x,	1);
	create_insn	(x=0X710006816C);
	op_hex		(x,	1);
	create_insn	(0X71000681A8);
	create_insn	(0X71000681AC);
	create_insn	(x=0X71000681B4);
	op_hex		(x,	1);
	create_insn	(x=0X71000681EC);
	op_hex		(x,	1);
	create_insn	(0X7100068244);
	create_insn	(0X710006824C);
	create_insn	(x=0X7100068250);
	op_hex		(x,	1);
	make_array	(0X71000682A4,	0XC);
	create_insn	(0X71000682B0);
	create_insn	(x=0X71000682F4);
	op_hex		(x,	1);
	create_insn	(x=0X71000682FC);
	op_hex		(x,	1);
	create_insn	(x=0X710006830C);
	op_hex		(x,	1);
	create_insn	(x=0X7100068334);
	op_hex		(x,	1);
	create_insn	(x=0X710006833C);
	op_hex		(x,	1);
	create_insn	(0X7100068380);
	make_array	(0X7100068394,	0XC);
	create_insn	(0X71000683A0);
	set_name	(0X71000683A0,	"nullsub_98");
	make_array	(0X71000683A4,	0XC);
	create_insn	(0X71000683B0);
	create_dword	(0X71000683CC);
	create_insn	(x=0X71000683D0);
	op_stkvar	(x,	1);
	set_cmt	(0X71000683E0,	"unsigned int *",	0);
	create_insn	(x=0X71000683EC);
	op_stkvar	(x,	1);
	create_insn	(0X71000683F4);
	create_insn	(x=0X71000683F8);
	op_stkvar	(x,	1);
	create_insn	(0X7100068400);
	set_cmt	(0X710006840C,	"_QWORD",	0);
	create_insn	(0X7100068414);
	make_array	(0X7100068418,	0X8);
	create_insn	(x=0X7100068420);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100068424);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100068428);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100068464);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100068468);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006846C);
	op_stkvar	(x,	1);
	create_insn	(0X7100068474);
	create_insn	(x=0X7100068484);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100068488);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006848C);
	op_stkvar	(x,	1);
	create_insn	(0X7100068494);
	create_insn	(0X71000684FC);
	create_insn	(x=0X710006851C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100068520);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100068524);
	op_stkvar	(x,	1);
	make_array	(0X710006852C,	0X4);
	create_insn	(0X7100068530);
	create_insn	(x=0X7100068564);
	op_hex		(x,	1);
	make_array	(0X7100068578,	0X8);
	create_insn	(0X7100068580);
	create_insn	(x=0X7100068584);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100068594);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100068598);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000685AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000685B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000685B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000685B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000685BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000685C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000685C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000685C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000685CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000685D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000685D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000685DC);
	op_stkvar	(x,	1);
	make_array	(0X71000685E8,	0X8);
	create_insn	(0X71000685F0);
	create_insn	(x=0X71000685F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000685F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100068618);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006861C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100068620);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100068628);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710006862C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100068630);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100068634);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100068638);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006863C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100068644);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100068648);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006864C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100068654);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100068658);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006865C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100068660);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100068664);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100068668);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006866C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100068670);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006868C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100068690);
	op_stkvar	(x,	1);
	create_insn	(0X710006869C);
	create_insn	(x=0X71000686A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000686B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000686BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000686C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000686C8);
	op_stkvar	(x,	1);
	make_array	(0X71000686D4,	0XC);
	create_insn	(x=0X71000686E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000686E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000686E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000686EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100068778);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006877C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100068788);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006878C);
	op_stkvar	(x,	1);
	make_array	(0X7100068794,	0XC);
	create_insn	(0X71000687A0);
	create_insn	(x=0X71000687A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000687A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000687AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000687B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000687C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000687C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000687D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000687D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000687DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000687E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000687E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000687E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006881C);
	op_hex		(x,	1);
	create_insn	(x=0X7100068824);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100068828);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006882C);
	op_stkvar	(x,	1);
	create_insn	(0X7100068844);
	create_insn	(0X710006884C);
	create_insn	(x=0X7100068860);
	op_hex		(x,	1);
	create_insn	(x=0X710006886C);
	op_hex		(x,	1);
	create_insn	(x=0X7100068884);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100068888);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006888C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000688E0);
	op_hex		(x,	1);
	create_insn	(x=0X7100068900);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100068904);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100068908);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006890C);
	op_stkvar	(x,	1);
	make_array	(0X7100068918,	0X8);
	create_insn	(x=0X7100068920);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100068924);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100068928);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006892C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100068930);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100068934);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100068940);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006895C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100068960);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100068968);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100068974);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006897C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100068980);
	op_stkvar	(x,	1);
	create_insn	(0X7100068988);
	set_cmt	(0X7100068994,	"jumptable 0000007100068F04 default case, case 5",	1);
	create_insn	(x=0X7100068994);
	op_hex		(x,	1);
	set_name	(0X7100068994,	"def_7100068F04");
	create_insn	(0X71000689D8);
	create_insn	(x=0X7100068A04);
	op_hex		(x,	1);
	create_insn	(0X7100068A30);
	create_insn	(x=0X7100068A64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100068A6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100068A7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100068B08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100068B0C);
	op_stkvar	(x,	1);
	create_insn	(0X7100068B24);
	create_insn	(x=0X7100068B2C);
	op_stkvar	(x,	1);
	create_insn	(0X7100068B60);
	create_insn	(x=0X7100068B6C);
	op_hex		(x,	1);
	create_insn	(x=0X7100068BB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100068BBC);
	op_stkvar	(x,	1);
	create_insn	(0X7100068BE4);
	create_insn	(0X7100068BF0);
	create_insn	(x=0X7100068C00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100068C08);
	op_hex		(x,	1);
	create_insn	(x=0X7100068C14);
	op_stkvar	(x,	1);
	create_insn	(0X7100068C20);
	create_insn	(x=0X7100068C48);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100068C6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100068C7C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100068C94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100068C9C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100068CA8);
	create_insn	(x=0X7100068CB4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100068CBC);
	create_insn	(x=0X7100068CEC);
	op_hex		(x,	1);
	create_insn	(x=0X7100068D10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100068D20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100068D24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100068D30);
	op_stkvar	(x,	1);
	create_insn	(0X7100068D58);
	create_insn	(0X7100068D6C);
	create_insn	(x=0X7100068DB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100068DC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100068DD4);
	op_stkvar	(x,	1);
	create_insn	(0X7100068DDC);
	create_insn	(0X7100068DEC);
	create_insn	(x=0X7100068DF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100068DF4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100068E04);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100068E10);
	op_hex		(x,	1);
	create_insn	(x=0X7100068E14);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100068E18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100068E1C);
	create_insn	(x=0X7100068E20);
	op_hex		(x,	1);
	create_insn	(x=0X7100068E28);
	op_hex		(x,	1);
	create_insn	(x=0X7100068E34);
	op_hex		(x,	1);
	create_insn	(x=0X7100068E38);
	op_stkvar	(x,	1);
	set_cmt	(0X7100068E40,	"switch 56 cases",	0);
	create_insn	(x=0X7100068E50);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100068E54);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100068E60,	"switch jump",	0);
	set_cmt	(0X7100068E64,	"jumptable 0000007100068E60 cases 65,69-71,97,101-103",	1);
	create_insn	(0X7100068E64);
	create_insn	(x=0X7100068E74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100068E88);
	op_stkvar	(x,	1);
	set_cmt	(0X7100068EA4,	"jumptable 0000007100068E60 cases 100,105",	1);
	create_insn	(x=0X7100068EA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100068EB0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100068EB4);
	op_hex		(x,	1);
	create_insn	(x=0X7100068EB8);
	set_cmt	(0X7100068EC8,	"jumptable 0000007100068E60 case 109",	1);
	create_insn	(0X7100068EC8);
	set_cmt	(0X7100068EDC,	"jumptable 0000007100068E60 case 110",	1);
	create_insn	(0X7100068EDC);
	create_insn	(x=0X7100068EE0);
	op_hex		(x,	1);
	set_cmt	(0X7100068EE4,	"switch 8 cases",	0);
	create_insn	(x=0X7100068EEC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100068EF0);
	op_hex		(x,	1);
	create_insn	(x=0X7100068EF4);
	create_insn	(x=0X7100068EF8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X7100068F04,	"switch jump",	0);
	set_cmt	(0X7100068F08,	"jumptable 0000007100068F04 cases 2,6,7",	1);
	create_insn	(x=0X7100068F08);
	op_stkvar	(x,	1);
	set_cmt	(0X7100068F20,	"jumptable 0000007100068E60 case 111",	1);
	create_insn	(x=0X7100068F20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100068F24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100068F2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100068F54);
	op_stkvar	(x,	1);
	set_cmt	(0X7100068F70,	"jumptable 0000007100068E60 case 115",	1);
	create_insn	(x=0X7100068F70);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100068F74);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100068F98);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100068FAC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100068FB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100068FBC);
	set_cmt	(0X7100068FC4,	"jumptable 0000007100068E60 case 67",	1);
	create_insn	(x=0X7100068FC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100068FC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100068FD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100068FD4);
	op_stkvar	(x,	1);
	set_cmt	(0X7100068FDC,	"jumptable 0000007100068E60 case 83",	1);
	create_insn	(x=0X7100068FDC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100068FE4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100069008);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006903C);
	op_stkvar	(x,	1);
	set_cmt	(0X710006904C,	"jumptable 0000007100068E60 case 99",	1);
	create_insn	(x=0X710006904C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069050);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100069054);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006905C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069064);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069068);
	create_insn	(x=0X710006906C);
	op_stkvar	(x,	1);
	set_cmt	(0X7100069074,	"jumptable 0000007100068E60 case 112",	1);
	create_insn	(0X7100069074);
	create_insn	(x=0X7100069080);
	op_hex		(x,	1);
	set_cmt	(0X7100069088,	"jumptable 0000007100068E60 cases 88,120",	1);
	create_insn	(x=0X7100069088);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069090);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069094);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100069098);
	op_hex		(x,	1);
	create_insn	(x=0X710006909C);
	create_insn	(x=0X71000690A0);
	op_hex		(x,	1);
	create_insn	(x=0X71000690D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000690D8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000690E0);
	set_cmt	(0X71000690E8,	"jumptable 0000007100068E60 case 117",	1);
	create_insn	(x=0X71000690E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000690EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000690F4);
	create_insn	(x=0X71000690FC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100069104);
	create_insn	(x=0X7100069118);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100069124);
	create_insn	(x=0X7100069128);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069130);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100069138);
	create_insn	(x=0X7100069140);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069164);
	op_hex		(x,	1);
	create_insn	(x=0X7100069178);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069184);
	op_hex		(x,	1);
	create_insn	(x=0X7100069190);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006919C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000691A8);
	op_stkvar	(x,	1);
	set_cmt	(0X71000691C8,	"jumptable 0000007100068E60 default case, cases 66,68,72-82,84-87,89-96,98,104,106-108,113,114,116,118,119",	1);
	create_insn	(x=0X71000691C8);
	op_stkvar	(x,	1);
	set_name	(0X71000691C8,	"def_7100068E60");
	create_insn	(x=0X71000691DC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000691E0);
	op_hex		(x,	1);
	create_insn	(x=0X7100069224);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006923C);
	op_stkvar	(x,	1);
	create_insn	(0X7100069244);
	create_insn	(x=0X7100069258);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069268);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069270);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069280);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006928C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069298);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000692A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000692AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000692CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000692E4);
	op_stkvar	(x,	1);
	create_insn	(0X71000692EC);
	create_insn	(x=0X7100069304);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069314);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006931C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006932C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069338);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069350);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069364);
	op_stkvar	(x,	1);
	create_insn	(0X710006936C);
	create_insn	(x=0X7100069384);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069394);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006939C);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000693AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000693B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000693D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000693F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069418);
	op_stkvar	(x,	1);
	create_insn	(0X7100069428);
	create_insn	(x=0X7100069444);
	op_stkvar	(x,	1);
	create_insn	(0X7100069458);
	create_insn	(x=0X7100069480);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000694A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000694AC);
	op_hex		(x,	1);
	create_insn	(0X71000694BC);
	create_insn	(x=0X71000694D0);
	op_stkvar	(x,	1);
	create_insn	(0X71000694E4);
	create_insn	(x=0X71000694F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069518);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069528);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069548);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006955C);
	op_stkvar	(x,	1);
	create_insn	(0X7100069564);
	create_insn	(x=0X7100069578);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069588);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069590);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000695A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000695AC);
	op_stkvar	(x,	1);
	create_insn	(0X71000695BC);
	set_cmt	(0X71000695CC,	"jumptable 0000007100068F04 case 0",	1);
	create_insn	(x=0X71000695CC);
	op_stkvar	(x,	1);
	set_cmt	(0X71000695DC,	"jumptable 0000007100068F04 case 1",	1);
	create_insn	(x=0X71000695DC);
	op_stkvar	(x,	1);
	set_cmt	(0X71000695F0,	"jumptable 0000007100068F04 case 3",	1);
	create_insn	(x=0X71000695F0);
	op_stkvar	(x,	1);
	set_cmt	(0X7100069600,	"jumptable 0000007100068F04 case 4",	1);
	create_insn	(x=0X7100069600);
	op_stkvar	(x,	1);
	create_insn	(0X7100069610);
	create_insn	(0X710006961C);
	create_insn	(x=0X7100069620);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069628);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069634);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069638);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069648);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069660);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069678);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069690);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000696A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000696C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000696D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000696F0);
	op_stkvar	(x,	1);
	create_insn	(0X7100069710);
	create_insn	(0X7100069718);
	create_insn	(0X7100069720);
	create_insn	(0X7100069728);
	create_insn	(0X7100069730);
	create_insn	(0X7100069738);
	create_insn	(0X7100069740);
	create_insn	(0X7100069748);
	create_insn	(0X7100069750);
	create_insn	(0X710006975C);
	create_insn	(0X7100069764);
	create_insn	(0X710006978C);
	create_insn	(x=0X71000697A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000697A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000697AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000697B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000697B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X71000697B8);
	op_stkvar	(x,	1);
	set_cmt	(0X71000697C0,	"switch 18 cases",	0);
	create_insn	(0X71000697C0);
	create_insn	(x=0X71000697D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X71000697D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_cmt	(0X71000697E0,	"switch jump",	0);
	set_cmt	(0X71000697E4,	"jumptable 00000071000697E0 cases 9,12-14,19-24",	1);
	create_insn	(0X71000697E4);
	create_insn	(0X7100069810);
	set_cmt	(0X7100069828,	"jumptable 00000071000697E0 case 10",	1);
	create_insn	(0X7100069828);
	set_cmt	(0X710006984C,	"jumptable 00000071000697E0 case 11",	1);
	create_insn	(0X710006984C);
	set_cmt	(0X7100069870,	"jumptable 00000071000697E0 case 15",	1);
	create_insn	(0X7100069870);
	set_cmt	(0X7100069894,	"jumptable 00000071000697E0 case 16",	1);
	create_insn	(0X7100069894);
	set_cmt	(0X71000698B8,	"jumptable 00000071000697E0 case 17",	1);
	create_insn	(0X71000698B8);
	set_cmt	(0X71000698DC,	"jumptable 00000071000697E0 case 18",	1);
	create_insn	(0X71000698DC);
	set_cmt	(0X7100069900,	"jumptable 00000071000697E0 case 25",	1);
	create_insn	(0X7100069900);
	set_cmt	(0X7100069924,	"jumptable 00000071000697E0 case 26",	1);
	create_insn	(0X7100069924);
	create_insn	(0X7100069948);
	create_insn	(0X7100069960);
	create_insn	(0X7100069978);
	create_insn	(0X7100069990);
	create_insn	(0X71000699A8);
	create_insn	(0X71000699C0);
	create_insn	(0X71000699D8);
	create_insn	(0X71000699F0);
	create_insn	(x=0X71000699F8);
	op_hex		(x,	1);
	set_cmt	(0X7100069A0C,	"jumptable 00000071000697E0 default case",	1);
	set_name	(0X7100069A0C,	"def_71000697E0");
	create_insn	(0X7100069A10);
	create_insn	(x=0X7100069A14);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069A18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069A1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069A2C);
	op_hex		(x,	1);
	create_insn	(x=0X7100069A30);
	op_hex		(x,	1);
	create_insn	(x=0X7100069A44);
	op_hex		(x,	1);
	create_insn	(x=0X7100069A74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069A78);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069A7C);
	op_stkvar	(x,	1);
	create_insn	(0X7100069A88);
	make_array	(0X7100069AB8,	0X8);
	create_insn	(x=0X7100069AC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069AC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069AC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069ACC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069AD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069AD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069AF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069AFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069B08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069B0C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100069B18);
	create_insn	(x=0X7100069B1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069B20);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069B24);
	op_hex		(x,	1);
	create_insn	(x=0X7100069B28);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069B2C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069B30);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069B40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069B44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069B48);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069B5C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100069B60);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100069B64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069B6C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069B74);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069B78);
	op_hex		(x,	1);
	create_insn	(x=0X7100069B84);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069B94);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069B9C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100069BA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069BA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069BA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069BAC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100069BB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069BC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069BC8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100069BCC);
	op_hex		(x,	1);
	create_insn	(x=0X7100069BD0);
	create_insn	(x=0X7100069BE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069BF4);
	op_hex		(x,	1);
	create_insn	(x=0X7100069C00);
	op_hex		(x,	1);
	create_insn	(x=0X7100069C18);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069C1C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069C24);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100069C30);
	create_insn	(x=0X7100069C34);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069C44);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069C48);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100069C4C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100069C50);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100069C54);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100069C58);
	create_insn	(x=0X7100069C5C);
	create_insn	(x=0X7100069C60);
	op_hex		(x,	1);
	create_insn	(x=0X7100069C68);
	create_insn	(x=0X7100069C6C);
	create_insn	(x=0X7100069CA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069CC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069CF0);
	op_hex		(x,	1);
	create_insn	(x=0X7100069CF4);
	op_hex		(x,	1);
	create_insn	(0X7100069D04);
	create_insn	(x=0X7100069D18);
	op_stkvar	(x,	1);
	create_insn	(0X7100069D2C);
	create_insn	(x=0X7100069D40);
	op_hex		(x,	1);
	create_insn	(x=0X7100069D44);
	op_hex		(x,	1);
	create_insn	(x=0X7100069D64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069D88);
	op_stkvar	(x,	1);
	create_insn	(0X7100069DA0);
	create_insn	(x=0X7100069DB4);
	op_stkvar	(x,	1);
	create_insn	(0X7100069DC8);
	create_insn	(x=0X7100069DD0);
	op_hex		(x,	1);
	create_insn	(x=0X7100069DE8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100069DEC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100069DF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069E00);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069E08);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069E0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069E10);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069E18);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100069E24);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069E30);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X7100069E38);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069E40);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069E54);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069E5C);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069E64);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069E68);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069E70);
	op_stkvar	(x,	1);
	create_insn	(0X7100069E98);
	create_insn	(x=0X7100069EA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X7100069EB0);
	op_stkvar	(x,	1);
	create_insn	(0X7100069F1C);
	create_insn	(0X7100069F68);
	create_insn	(x=0X7100069FC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A004);
	op_hex		(x,	1);
	create_insn	(0X710006A018);
	create_insn	(0X710006A04C);
	create_insn	(x=0X710006A058);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A084);
	op_stkvar	(x,	1);
	create_insn	(0X710006A0E4);
	create_insn	(x=0X710006A0F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710006A0F4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710006A100);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710006A104);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A108);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710006A110);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710006A114);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710006A11C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A130);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710006A134);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710006A138);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A144);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A14C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A154);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A15C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A174);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A180);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A184);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A188);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A18C);
	op_hex		(x,	1);
	create_insn	(x=0X710006A190);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A194);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A1A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A1A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A1AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A1B0);
	op_hex		(x,	1);
	create_insn	(x=0X710006A1B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A1B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A1C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A1C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A1D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710006A1D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A1D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A1DC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710006A1E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A1F0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710006A1F8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710006A1FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A208);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A244);
	op_hex		(x,	1);
	create_insn	(x=0X710006A258);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A264);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A27C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A28C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710006A290);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A294);
	create_insn	(x=0X710006A2A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A2AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A2B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710006A2B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710006A2BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A2C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A2C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A2EC);
	op_hex		(x,	1);
	create_insn	(0X710006A2F4);
	create_insn	(x=0X710006A2F8);
	op_hex		(x,	1);
	create_insn	(x=0X710006A2FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A300);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A30C);
	op_hex		(x,	1);
	create_insn	(x=0X710006A324);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A340);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A348);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A350);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A35C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A388);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A398);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A3B8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A3C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A3C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A3F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A40C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A41C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A43C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A460);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A474);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A4A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A4C0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A500);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A524);
	op_stkvar	(x,	1);
	create_insn	(0X710006A53C);
	create_insn	(x=0X710006A554);
	op_stkvar	(x,	1);
	create_insn	(0X710006A568);
	create_insn	(x=0X710006A584);
	op_stkvar	(x,	1);
	create_insn	(0X710006A598);
	create_insn	(x=0X710006A5B4);
	op_stkvar	(x,	1);
	create_insn	(0X710006A5C8);
	create_insn	(x=0X710006A5E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A5F8);
	op_hex		(x,	1);
	create_insn	(0X710006A628);
	create_insn	(x=0X710006A668);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710006A66C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710006A68C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710006A690);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710006A6A4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710006A6A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710006A6B0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710006A6B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710006A6C0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710006A6C4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710006A6C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A6CC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A6D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A6D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A6E8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A6EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A6F0);
	op_hex		(x,	1);
	create_insn	(x=0X710006A6F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A6F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A6FC);
	op_hex		(x,	1);
	create_insn	(x=0X710006A700);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A704);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A70C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A718);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A73C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A740);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A744);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A74C);
	op_stkvar	(x,	1);
	create_insn	(0X710006A760);
	create_insn	(x=0X710006A790);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A798);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A804);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A874);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A878);
	op_hex		(x,	1);
	create_insn	(0X710006A880);
	create_insn	(x=0X710006A888);
	op_hex		(x,	1);
	create_insn	(0X710006A8A8);
	create_insn	(x=0X710006A8F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A8F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A8F8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A8FC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A900);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A904);
	op_stkvar	(x,	1);
	create_insn	(0X710006A90C);
	create_insn	(x=0X710006A910);
	op_hex		(x,	1);
	create_insn	(x=0X710006A924);
	op_hex		(x,	1);
	create_insn	(0X710006A93C);
	create_insn	(x=0X710006A948);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A974);
	op_hex		(x,	1);
	create_insn	(x=0X710006A980);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A990);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A99C);
	op_hex		(x,	1);
	create_insn	(x=0X710006A9D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006A9D8);
	op_stkvar	(x,	1);
	create_insn	(0X710006A9F0);
	create_insn	(0X710006A9F4);
	create_insn	(0X710006AA1C);
	create_insn	(x=0X710006AA30);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006AA60);
	op_hex		(x,	1);
	create_insn	(x=0X710006AA68);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006AA80);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006AA88);
	op_hex		(x,	1);
	create_insn	(x=0X710006AAA0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006AAA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006AAB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006AABC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006AAC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006AAF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006AB0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006AB14);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006AB28);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006AB34);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006AB38);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006AB68);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006AB80);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006AB8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006ABB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006ABB4);
	op_stkvar	(x,	1);
	create_insn	(0X710006ABBC);
	create_insn	(x=0X710006ABFC);
	op_hex		(x,	1);
	create_insn	(0X710006AC28);
	create_insn	(0X710006AC44);
	create_insn	(0X710006AC50);
	create_insn	(x=0X710006AC54);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006AC74);
	op_stkvar	(x,	1);
	create_insn	(0X710006AC7C);
	create_insn	(x=0X710006AC94);
	op_stkvar	(x,	1);
	create_insn	(0X710006ACAC);
	create_insn	(x=0X710006ACC4);
	op_stkvar	(x,	1);
	create_insn	(0X710006ACDC);
	create_insn	(x=0X710006ACE8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006ACF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006AD10);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006AD18);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006AD20);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006AD4C);
	op_hex		(x,	1);
	create_insn	(x=0X710006AD60);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006AD64);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006AD78);
	op_hex		(x,	1);
	create_insn	(x=0X710006ADAC);
	op_stkvar	(x,	1);
	create_insn	(0X710006ADD4);
	create_insn	(x=0X710006AE08);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006AE24);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710006AE2C);
	create_insn	(x=0X710006AE40);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006AE70);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006AEA4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006AEA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006AEB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006AEC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006AED8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710006AEE0);
	create_insn	(x=0X710006AEEC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006AEF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006AF0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006AF34);
	op_hex		(x,	1);
	create_insn	(0X710006AF44);
	create_insn	(x=0X710006AF68);
	op_stkvar	(x,	1);
	create_insn	(0X710006AF8C);
	create_insn	(x=0X710006AFA8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006AFAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006AFCC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006AFF0);
	op_stkvar	(x,	1);
	create_insn	(0X710006B010);
	create_insn	(x=0X710006B024);
	op_stkvar	(x,	1);
	make_array	(0X710006B03C,	0X4);
	create_insn	(x=0X710006B040);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006B044);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006B048);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006B04C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006B050);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006B054);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006B078);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006B084);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710006B088);
	op_hex		(x,	1);
	create_insn	(x=0X710006B08C);
	create_insn	(x=0X710006B0A0);
	op_hex		(x,	1);
	create_insn	(x=0X710006B0A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006B0AC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006B0C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006B0C8);
	op_hex		(x,	1);
	create_insn	(x=0X710006B0D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006B0E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006B0EC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006B0FC);
	op_stkvar	(x,	1);
	create_insn	(0X710006B108);
	create_insn	(x=0X710006B10C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710006B118);
	create_insn	(x=0X710006B124);
	op_hex		(x,	1);
	create_insn	(x=0X710006B12C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710006B130);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710006B134);
	create_insn	(x=0X710006B138);
	create_insn	(x=0X710006B13C);
	op_hex		(x,	1);
	create_insn	(x=0X710006B140);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710006B148);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710006B150);
	create_insn	(x=0X710006B17C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006B1A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006B1CC);
	op_hex		(x,	1);
	create_insn	(x=0X710006B1D0);
	op_hex		(x,	1);
	create_insn	(0X710006B1E0);
	create_insn	(x=0X710006B1F4);
	op_stkvar	(x,	1);
	create_insn	(0X710006B208);
	create_insn	(x=0X710006B21C);
	op_hex		(x,	1);
	create_insn	(x=0X710006B220);
	op_hex		(x,	1);
	create_insn	(x=0X710006B240);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006B264);
	op_stkvar	(x,	1);
	create_insn	(0X710006B27C);
	create_insn	(x=0X710006B294);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006B2A8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710006B2B4);
	create_insn	(x=0X710006B2BC);
	op_hex		(x,	1);
	create_insn	(x=0X710006B2C8);
	op_hex		(x,	1);
	create_insn	(x=0X710006B2D4);
	op_hex		(x,	1);
	create_insn	(x=0X710006B2F4);
	op_hex		(x,	1);
	create_insn	(x=0X710006B318);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006B324);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006B328);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006B33C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006B34C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006B37C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006B390);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006B3A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006B40C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006B424);
	op_stkvar	(x,	1);
	create_insn	(0X710006B45C);
	create_insn	(x=0X710006B474);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006B4BC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006B4F8);
	op_hex		(x,	1);
	create_insn	(0X710006B50C);
	create_insn	(0X710006B514);
	create_insn	(0X710006B554);
	create_insn	(x=0X710006B55C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006B56C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006B58C);
	op_stkvar	(x,	1);
	create_insn	(0X710006B5F0);
	create_insn	(0X710006B5F8);
	create_insn	(0X710006B600);
	create_insn	(0X710006B60C);
	create_insn	(x=0X710006B668);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006B67C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006B6B4);
	op_hex		(x,	1);
	create_insn	(x=0X710006B6C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006B6D4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006B6EC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710006B704);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006B718);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006B73C);
	op_hex		(x,	1);
	create_insn	(0X710006B744);
	create_insn	(x=0X710006B748);
	op_hex		(x,	1);
	create_insn	(x=0X710006B74C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006B760);
	op_hex		(x,	1);
	create_insn	(x=0X710006B7C4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006B7D8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006B808);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006B82C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006B840);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006B86C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006B890);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006B8A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006B8D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006B8F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006B930);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006B954);
	op_stkvar	(x,	1);
	create_insn	(0X710006B96C);
	create_insn	(x=0X710006B984);
	op_stkvar	(x,	1);
	create_insn	(0X710006B998);
	create_insn	(x=0X710006B9B4);
	op_stkvar	(x,	1);
	create_insn	(0X710006B9C8);
	create_insn	(x=0X710006B9E4);
	op_stkvar	(x,	1);
	create_insn	(0X710006B9F8);
	create_insn	(x=0X710006BA14);
	op_stkvar	(x,	1);
	create_insn	(0X710006BA28);
	create_insn	(x=0X710006BA34);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006BA44);
	op_hex		(x,	1);
	create_insn	(0X710006BA74);
	create_insn	(x=0X710006BABC);
	op_hex		(x,	1);
	create_insn	(x=0X710006BB30);
	op_stkvar	(x,	1);
	create_insn	(0X710006BB44);
	create_insn	(0X710006BB74);
	create_insn	(x=0X710006BC14);
	op_hex		(x,	1);
	create_insn	(0X710006BC1C);
	create_insn	(x=0X710006BC20);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006BC24);
	op_hex		(x,	1);
	create_insn	(x=0X710006BC48);
	op_stkvar	(x,	1);
	create_insn	(0X710006BC88);
	create_insn	(x=0X710006BCAC);
	op_hex		(x,	1);
	create_insn	(x=0X710006BCB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006BCD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006BCE0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006BD04);
	op_hex		(x,	1);
	create_insn	(x=0X710006BD10);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006BD20);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006BD2C);
	op_hex		(x,	1);
	create_insn	(0X710006BD68);
	create_insn	(0X710006BD70);
	create_insn	(0X710006BD74);
	create_insn	(x=0X710006BD88);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006BDC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006BDC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006BDD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006BDF0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006BDF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006BE00);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006BE0C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006BE10);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006BE40);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006BE54);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006BE68);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006BE74);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006BE80);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006BE84);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006BEB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006BEC8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006BECC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006BED4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006BED8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006BEFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006BF04);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006BF3C);
	op_hex		(x,	1);
	create_insn	(0X710006BF68);
	create_insn	(0X710006BF90);
	create_insn	(0X710006BF9C);
	create_insn	(x=0X710006BFA0);
	op_stkvar	(x,	1);
	create_insn	(0X710006BFC4);
	create_insn	(x=0X710006BFD8);
	op_stkvar	(x,	1);
	create_insn	(0X710006BFEC);
	create_insn	(x=0X710006C004);
	op_stkvar	(x,	1);
	create_insn	(0X710006C018);
	create_insn	(x=0X710006C024);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006C02C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006C03C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006C04C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006C05C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006C08C);
	op_hex		(x,	1);
	create_insn	(x=0X710006C0A0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006C0A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006C0B8);
	op_hex		(x,	1);
	create_insn	(x=0X710006C0F0);
	op_stkvar	(x,	1);
	create_insn	(0X710006C120);
	create_insn	(x=0X710006C150);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006C16C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710006C174);
	create_insn	(x=0X710006C184);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006C1B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006C1C8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006C1D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006C1E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006C204);
	op_stkvar	(x,	1);
	create_insn	(0X710006C214);
	create_insn	(x=0X710006C228);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006C23C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006C24C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710006C254);
	create_insn	(x=0X710006C274);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006C2A4);
	op_hex		(x,	1);
	create_insn	(0X710006C2B4);
	create_insn	(0X710006C2FC);
	create_insn	(x=0X710006C314);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006C334);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006C340);
	op_stkvar	(x,	1);
	create_insn	(0X710006C348);
	create_insn	(x=0X710006C364);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006C378);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006C384);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006C398);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006C3A4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006C3B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006C3B4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006C3E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006C3F0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006C400);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006C404);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006C408);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006C40C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006C410);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006C414);
	op_stkvar	(x,	1);
	create_insn	(0X710006C41C);
	create_insn	(x=0X710006C434);
	op_stkvar	(x,	1);
	create_insn	(0X710006C448);
	make_array	(0X710006C46C,	0X4);
	create_insn	(x=0X710006C470);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006C474);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006C488);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710006C490);
	create_insn	(x=0X710006C494);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006C4A0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710006C4A8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006C4B0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006C4CC);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710006C4D8);
	op_stkvar	(x,	1);
	create_insn	(0X710006C4E0);
	create_insn	(x=0X710006C4E4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006C4F4);
	op_stkvar	(x,	1);
	make_array	(0X710006C4FC,	0X4);
	create_insn	(x=0X710006C500);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006C520);
	op_stkvar	(x,	1);
	create_insn	(0X710006C528);
	create_insn	(x=0X710006C530);
	op_stkvar	(x,	1);
	create_insn	(0X710006C538);
	create_insn	(x=0X710006C544);
	op_hex		(x,	1);
	create_insn	(x=0X710006C560);
	op_stkvar	(x,	1);
	create_insn	(0X710006C568);
	create_insn	(x=0X710006C574);
	op_hex		(x,	1);
	create_insn	(x=0X710006C594);
	op_hex		(x,	1);
	create_insn	(x=0X710006C5C4);
	op_stkvar	(x,	1);
	create_insn	(0X710006C5CC);
	create_insn	(x=0X710006C5D0);
	op_hex		(x,	1);
	create_insn	(x=0X710006C5F8);
	op_stkvar	(x,	1);
	create_insn	(0X710006C600);
	create_insn	(x=0X710006C614);
	op_stkvar	(x,	1);
	make_array	(0X710006C61C,	0X4);
	create_insn	(x=0X710006C620);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006C624);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006C63C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006C644);
	op_stkvar	(x,	1);
	make_array	(0X710006C64C,	0X4);
	create_insn	(x=0X710006C650);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006C654);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006C660);
	op_hex		(x,	1);
	create_insn	(x=0X710006C668);
	op_hex		(x,	1);
	create_insn	(x=0X710006C678);
	op_hex		(x,	1);
	create_insn	(x=0X710006C690);
	op_hex		(x,	1);
	create_insn	(x=0X710006C6AC);
	op_hex		(x,	1);
	create_insn	(x=0X710006C6C8);
	op_hex		(x,	1);
	create_insn	(x=0X710006C6E4);
	op_hex		(x,	1);
	create_insn	(x=0X710006C700);
	op_hex		(x,	1);
	create_insn	(x=0X710006C71C);
	op_hex		(x,	1);
	create_insn	(x=0X710006C738);
	op_hex		(x,	1);
	create_insn	(0X710006C754);
	create_insn	(0X710006C764);
	create_insn	(x=0X710006C77C);
	op_hex		(x,	1);
	create_insn	(x=0X710006C79C);
	op_hex		(x,	1);
	create_insn	(x=0X710006C7B0);
	op_hex		(x,	1);
	create_insn	(x=0X710006C7B8);
	op_hex		(x,	1);
	create_insn	(x=0X710006C7D0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006C7D4);
	op_stkvar	(x,	1);
	create_insn	(0X710006C7DC);
	create_insn	(x=0X710006C7E0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006C7E4);
	op_stkvar	(x,	1);
	make_array	(0X710006C7EC,	0X4);
	create_insn	(x=0X710006C7F0);
	op_stkvar	(x,	1);
	set_name	(0X710006C7F0,	"strcpy");
	create_insn	(x=0X710006C7F4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006C808);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006C80C);
	op_stkvar	(x,	1);
	make_array	(0X710006C814,	0XC);
	create_insn	(0X710006C820);
	set_name	(0X710006C820,	"stpcpy");
	create_insn	(x=0X710006C824);
	op_hex		(x,	1);
	create_insn	(x=0X710006C83C);
	op_hex		(x,	1);
	create_insn	(x=0X710006C858);
	op_hex		(x,	1);
	create_insn	(x=0X710006C874);
	op_hex		(x,	1);
	create_insn	(x=0X710006C890);
	op_hex		(x,	1);
	create_insn	(x=0X710006C8AC);
	op_hex		(x,	1);
	create_insn	(x=0X710006C8C8);
	op_hex		(x,	1);
	create_insn	(x=0X710006C8E4);
	op_hex		(x,	1);
	create_insn	(x=0X710006C900);
	op_hex		(x,	1);
	create_insn	(0X710006C920);
	create_insn	(x=0X710006C93C);
	op_hex		(x,	1);
	create_insn	(x=0X710006C958);
	op_hex		(x,	1);
	create_insn	(x=0X710006C960);
	op_hex		(x,	1);
	create_insn	(0X710006C988);
	make_array	(0X710006C98C,	0X4);
	create_insn	(x=0X710006C990);
	op_hex		(x,	1);
	set_name	(0X710006C990,	"strlen");
	create_insn	(x=0X710006C9B4);
	op_hex		(x,	1);
	create_insn	(x=0X710006C9C8);
	op_hex		(x,	1);
	create_insn	(x=0X710006C9DC);
	op_hex		(x,	1);
	create_insn	(x=0X710006C9F0);
	op_hex		(x,	1);
	create_insn	(x=0X710006CA04);
	op_hex		(x,	1);
	create_insn	(x=0X710006CA18);
	op_hex		(x,	1);
	create_insn	(x=0X710006CA2C);
	op_hex		(x,	1);
	create_insn	(x=0X710006CA5C);
	op_hex		(x,	1);
	create_insn	(x=0X710006CA80);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006CA84);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006CA98);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006CA9C);
	op_stkvar	(x,	1);
	make_array	(0X710006CAA4,	0XC);
	create_insn	(x=0X710006CAB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006CAB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006CAC0);
	op_hex		(x,	1);
	create_insn	(0X710006CAF4);
	create_insn	(x=0X710006CAF8);
	op_hex		(x,	1);
	create_insn	(x=0X710006CB1C);
	op_hex		(x,	1);
	create_insn	(x=0X710006CB44);
	op_hex		(x,	1);
	create_insn	(x=0X710006CB6C);
	op_hex		(x,	1);
	create_insn	(x=0X710006CB94);
	op_hex		(x,	1);
	create_insn	(x=0X710006CBBC);
	op_hex		(x,	1);
	create_insn	(x=0X710006CBE4);
	op_hex		(x,	1);
	create_insn	(x=0X710006CC0C);
	op_hex		(x,	1);
	create_insn	(0X710006CC44);
	create_insn	(x=0X710006CC70);
	op_hex		(x,	1);
	create_insn	(0X710006CC90);
	create_insn	(0X710006CCA4);
	create_insn	(x=0X710006CCC0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006CCC4);
	op_stkvar	(x,	1);
	make_array	(0X710006CCCC,	0X4);
	create_insn	(x=0X710006CCD0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006CCD4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006CCFC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006CD00);
	op_stkvar	(x,	1);
	make_array	(0X710006CD08,	0X8);
	create_insn	(0X710006CD10);
	create_insn	(x=0X710006CD14);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006CD18);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006CD1C);
	op_hex		(x,	1);
	create_insn	(0X710006CD48);
	create_insn	(0X710006CD5C);
	make_array	(0X710006CD68,	0X8);
	create_insn	(x=0X710006CD70);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006CD74);
	op_stkvar	(x,	1);
	make_array	(0X710006CD84,	0XC);
	create_insn	(x=0X710006CD90);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006CD94);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006CDDC);
	op_hex		(x,	1);
	create_insn	(x=0X710006CDE4);
	op_hex		(x,	1);
	create_insn	(0X710006CDF0);
	create_insn	(x=0X710006CDF8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006CDFC);
	op_stkvar	(x,	1);
	make_array	(0X710006CE04,	0XC);
	create_insn	(0X710006CE10);
	create_insn	(x=0X710006CE14);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006CE18);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006CE20);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006CE28);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006CE40);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710006CE44);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006CE48);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710006CE54);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710006CE58);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006CE5C);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710006CE78);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006CE7C);
	op_stkvar	(x,	1);
	create_insn	(0X710006CE88);
	create_insn	(x=0X710006CE8C);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006CE90);
	op_hex		(x,	1);
	create_insn	(x=0X710006CE98);
	op_hex		(x,	1);
	create_insn	(x=0X710006CEAC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006CEB0);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006CEB4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006CEB8);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006CEC4);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006CECC);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006CED0);
	op_stkvar	(x,	1);
	make_array	(0X710006CEDC,	0X24);
	create_insn	(0X710006CF00);
	create_insn	(x=0X710006CF04);
	op_hex		(x,	1);
	create_insn	(0X710006CF44);
	create_insn	(x=0X710006CF58);
	op_hex		(x,	1);
	create_insn	(x=0X710006CF94);
	op_hex		(x,	1);
	create_insn	(0X710006CFAC);
	create_insn	(x=0X710006CFB4);
	op_hex		(x,	1);
	create_insn	(x=0X710006CFBC);
	op_hex		(x,	1);
	make_array	(0X710006CFCC,	0X34);
	create_insn	(0X710006D000);
	set_name	(0X710006D000,	"strncmp");
	create_insn	(x=0X710006D008);
	op_hex		(x,	1);
	create_insn	(0X710006D030);
	create_insn	(x=0X710006D038);
	op_hex		(x,	1);
	create_insn	(x=0X710006D058);
	op_hex		(x,	1);
	create_insn	(x=0X710006D0B0);
	op_hex		(x,	1);
	create_insn	(0X710006D0E0);
	create_insn	(0X710006D0E8);
	create_insn	(x=0X710006D110);
	op_hex		(x,	1);
	create_insn	(x=0X710006D11C);
	op_hex		(x,	1);
	create_insn	(0X710006D12C);
	make_array	(0X710006D134,	0XC);
	create_insn	(0X710006D140);
	set_name	(0X710006D140,	"j__ZN2nn2os21SdkRecursiveMutexType4LockEv");
	make_array	(0X710006D144,	0XC);
	create_insn	(0X710006D150);
	set_name	(0X710006D150,	"j__ZN2nn2os21SdkRecursiveMutexType6UnlockEv");
	make_array	(0X710006D154,	0XC);
	create_insn	(x=0X710006D160);
	op_stkvar	(x,	1);
	create_insn	(x=0X710006D170);
	op_stkvar	(x,	1);
	make_array	(0X710006D178,	0X8);
	create_insn	(0X710006D180);
	set_name	(0X710006D180,	"nullsub_99");
	make_array	(0X710006D184,	0XC);
	create_insn	(0X710006D190);
	make_array	(0X710006D19C,	0X4);
	create_insn	(0X710006D1A0);
	create_dword	(0X710006D1AC);
	create_insn	(0X710006D1B0);
	create_insn	(x=0X710006D1B4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710006D1B8);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710006D1BC);
	create_insn	(0X710006D1C4);
	create_insn	(x=0X710006D1D0);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	set_name	(0X710006D1D0,	"nnosGetDefaultUserExceptionStackForApplication_0");
	create_insn	(x=0X710006D1D4);
	op_plain_offset	(x,	1,	0);
	op_plain_offset	(x,	129,	0);
	create_insn	(x=0X710006D1D8);
	make_array	(0X7100080054,	0X4);
	make_array	(0X710008015D,	0X3);
	create_strlit	(0X7100080160,	0X13);
	set_name	(0X7100080160,	"aSetupWakeTrigg");
	create_strlit	(0X7100080173,	0X9);
	set_name	(0X7100080173,	"aRtcTime");
	create_strlit	(0X710008017C,	0X9);
	set_name	(0X710008017C,	"aIsMuted");
	create_strlit	(0X7100080185,	0X9);
	set_name	(0X7100080185,	"aTimeSun");
	create_strlit	(0X710008018E,	0X10);
	set_name	(0X710008018E,	"aSVersionTxt");
	create_strlit	(0X710008019E,	0XD);
	set_name	(0X710008019E,	"aChargerType");
	create_strlit	(0X71000801AB,	0X11);
	set_name	(0X71000801AB,	"aMinimunInterva");
	create_strlit	(0X71000801BC,	0X45);
	set_name	(0X71000801BC,	"a02x02x02x02x02");
	create_strlit	(0X7100080201,	0X7);
	set_name	(0X7100080201,	"aActive");
	create_strlit	(0X7100080208,	0X18);
	set_name	(0X7100080208,	"aNintendoExt200");
	create_strlit	(0X7100080220,	0XB);
	set_name	(0X7100080220,	"aCommitimpl");
	create_strlit	(0X710008022B,	0X8);
	set_name	(0X710008022B,	"aUnmount");
	create_strlit	(0X7100080233,	0XD);
	set_name	(0X7100080233,	"aSetInterval");
	create_strlit	(0X7100080240,	0X12);
	set_name	(0X7100080240,	"aAdaptiveInterv");
	create_strlit	(0X7100080252,	0X3);
	set_name	(0X7100080252,	"aId");
	create_strlit	(0X7100080255,	0X57);
	set_name	(0X7100080255,	"aErrorUnmountFa");
	create_strlit	(0X71000802AC,	0X18);
	set_name	(0X71000802AC,	"aOpenmodeAllowa");
	create_strlit	(0X71000802C4,	0X11);
	set_name	(0X71000802C4,	"aSetsavedatafla");
	create_strlit	(0X71000802D5,	0X7);
	set_name	(0X71000802D5,	"aNull");
	create_strlit	(0X71000802DC,	0X16);
	set_name	(0X71000802DC,	"aAlarmSettingDe");
	create_strlit	(0X71000802F2,	0X10);
	set_name	(0X71000802F2,	"aSZoneinfoS");
	create_strlit	(0X7100080302,	0X15);
	set_name	(0X7100080302,	"aCreatesystemsa");
	create_strlit	(0X7100080317,	0X10);
	set_name	(0X7100080317,	"aMountsystemdat");
	create_strlit	(0X7100080327,	0X21);
	set_name	(0X7100080327,	"aHalfAwakeCount_0");
	create_strlit	(0X7100080348,	0X11);
	set_name	(0X7100080348,	"aReportTryCount");
	create_strlit	(0X7100080359,	0XC);
	set_name	(0X7100080359,	"aSS06uS");
	create_strlit	(0X7100080365,	0X5);
	set_name	(0X7100080365,	"aDat");
	create_strlit	(0X710008036A,	0X16);
	set_name	(0X710008036A,	"aAlarmSettingUp");
	create_strlit	(0X7100080380,	0X12);
	set_name	(0X7100080380,	"aIsUserSpecifie");
	create_strlit	(0X7100080392,	0X9);
	set_name	(0X7100080392,	"aTimeThu");
	create_strlit	(0X710008039B,	0X9);
	set_name	(0X710008039B,	"aTimeFri");
	create_strlit	(0X71000803A4,	0X9);
	set_name	(0X71000803A4,	"aTimeSat");
	create_strlit	(0X71000803AD,	0X12);
	set_name	(0X71000803AD,	"aNnTimeIpcserve");
	create_strlit	(0X71000803BF,	0X12);
	set_name	(0X71000803BF,	"aNnPlsrIpcserve");
	create_strlit	(0X71000803D1,	0X25);
	set_name	(0X71000803D1,	"aZn2nn2ro6detai_0");
	create_strlit	(0X71000803F6,	0X53);
	set_name	(0X71000803F6,	"aErrorMountFail_0");
	create_strlit	(0X7100080449,	0XE);
	set_name	(0X7100080449,	"aBatteryAware");
	create_strlit	(0X7100080457,	0XC);
	set_name	(0X7100080457,	"aUnconnected");
	create_strlit	(0X7100080463,	0X5);
	set_name	(0X7100080463,	"aSave");
	create_strlit	(0X7100080468,	0XA);
	set_name	(0X7100080468,	"aVibration");
	create_strlit	(0X7100080472,	0X12);
	set_name	(0X7100080472,	"aStatTotalCount");
	create_strlit	(0X7100080484,	0XB);
	set_name	(0X7100080484,	"aSharedfont");
	create_strlit	(0X710008048F,	0X32);
	set_name	(0X710008048F,	"aStandardSteady_0");
	create_strlit	(0X71000804C1,	0X36);
	set_name	(0X71000804C1,	"aZn2nn2ro6detai_2");
	create_strlit	(0X71000804F7,	0X17);
	set_name	(0X71000804F7,	"aHalfAwakeCount");
	create_strlit	(0X710008050E,	0XF);
	set_name	(0X710008050E,	"aWeeklyschedule");
	create_strlit	(0X710008051D,	0X6);
	set_name	(0X710008051D,	"aE");
	create_strlit	(0X7100080523,	0X16);
	set_name	(0X7100080523,	"aMinimumInterva");
	create_strlit	(0X7100080539,	0X15);
	set_name	(0X7100080539,	"aEnableBatteryS");
	create_strlit	(0X710008054E,	0X17);
	set_name	(0X710008054E,	"aBatteryThresho_0");
	create_strlit	(0X7100080565,	0X5);
	set_name	(0X7100080565,	"aMode");
	create_strlit	(0X710008056A,	0X7);
	set_name	(0X710008056A,	"aSender");
	create_strlit	(0X7100080571,	0X10);
	set_name	(0X7100080571,	"aOverlayDisplay");
	create_strlit	(0X7100080581,	0X6);
	set_name	(0X7100080581,	"aAlarm");
	create_strlit	(0X7100080587,	0X17);
	set_name	(0X7100080587,	"aNintendoExt003");
	create_strlit	(0X710008059E,	0X22);
	set_name	(0X710008059E,	"aZn2nn2ro6detai_1");
	create_strlit	(0X71000805C0,	0X3);
	create_strlit	(0X71000805C3,	0X18);
	set_name	(0X71000805C3,	"aRCopyIsNotSupp");
	create_strlit	(0X71000805DB,	0X3);
	set_name	(0X71000805DB,	"aS");
	create_strlit	(0X71000805DE,	0X3A);
	set_name	(0X71000805DE,	"aErrorUnmountFa_0");
	create_strlit	(0X7100080618,	0X4);
	set_name	(0X7100080618,	"aNan_0");
	create_strlit	(0X710008061C,	0X33);
	set_name	(0X710008061C,	"aStandardNetwor");
	create_strlit	(0X710008064F,	0X5);
	set_name	(0X710008064F,	"aTime");
	create_strlit	(0X7100080655,	0X1F);
	set_name	(0X7100080655,	"aNotifyerrorcon");
	create_strlit	(0X7100080674,	0X21);
	set_name	(0X7100080674,	"aWritesavedataf");
	create_strlit	(0X7100080695,	0X14);
	set_name	(0X7100080695,	"aSetcurrentposi");
	create_strlit	(0X71000806A9,	0X4);
	set_name	(0X71000806A9,	"aInf");
	create_strlit	(0X71000806AD,	0X11);
	set_name	(0X71000806AD,	"aHalfAwakeLeave");
	create_strlit	(0X71000806BE,	0X7);
	set_name	(0X71000806BE,	"aTiming");
	create_strlit	(0X71000806C5,	0XD);
	set_name	(0X71000806C5,	"aIllumination");
	create_strlit	(0X71000806D2,	0X24);
	set_name	(0X71000806D2,	"aNintendoUdsgRE");
	create_strlit	(0X71000806F6,	0X1D);
	set_name	(0X71000806F6,	"aNintendoUdsgRK");
	create_strlit	(0X7100080713,	0X21);
	set_name	(0X7100080713,	"aStandardUserCl");
	create_strlit	(0X7100080734,	0X8);
	set_name	(0X7100080734,	"aDefault");
	create_strlit	(0X710008073C,	0XE);
	set_name	(0X710008073C,	"aBatterySaver");
	create_strlit	(0X710008074A,	0XA);
	set_name	(0X710008074A,	"aLowPower");
	create_strlit	(0X7100080754,	0XA);
	set_name	(0X7100080754,	"aRtcReset");
	create_strlit	(0X710008075E,	0X23);
	set_name	(0X710008075E,	"aRomoduleReloca_0");
	create_strlit	(0X7100080781,	0X1E);
	set_name	(0X7100080781,	"aQuerymountsyst");
	create_strlit	(0X710008079F,	0X6);
	set_name	(0X710008079F,	"aQuest");
	create_strlit	(0X71000807A5,	0XD);
	set_name	(0X71000807A5,	"aEnoughPower");
	create_strlit	(0X71000807B2,	0XD);
	set_name	(0X71000807B2,	"aVariation001");
	create_strlit	(0X71000807BF,	0XA);
	set_name	(0X71000807BF,	"a02d02d");
	create_strlit	(0X71000807C9,	0X24);
	set_name	(0X71000807C9,	"aNintendoUdsgRO");
	create_strlit	(0X71000807ED,	0XB);
	set_name	(0X71000807ED,	"aThreadname");
	create_strlit	(0X71000807F8,	0X13);
	set_name	(0X71000807F8,	"aSBinarylistTxt");
	create_strlit	(0X710008080B,	0XD);
	set_name	(0X710008080B,	"aNnGlueMain");
	create_strlit	(0X7100080818,	0X11);
	set_name	(0X7100080818,	"aFullAwakeLeave");
	create_strlit	(0X7100080829,	0XD);
	set_name	(0X7100080829,	"aBatteryInfo");
	create_strlit	(0X7100080836,	0X19);
	set_name	(0X7100080836,	"aStrictSchedule");
	create_strlit	(0X710008084F,	0X1A);
	set_name	(0X710008084F,	"aPresentationse");
	create_strlit	(0X7100080869,	0X1C);
	set_name	(0X7100080869,	"aRtldUnresolved");
	create_strlit	(0X7100080885,	0XB);
	set_name	(0X7100080885,	"aMainthread");
	create_strlit	(0X7100080890,	0X5);
	set_name	(0X7100080890,	"aBgtc");
	create_strlit	(0X7100080895,	0X6);
	set_name	(0X7100080895,	"aSS");
	create_strlit	(0X710008089B,	0X1D);
	set_name	(0X710008089B,	"aPresentationSe");
	create_strlit	(0X71000808B8,	0X14);
	set_name	(0X71000808B8,	"aAlarmSettingMu");
	create_strlit	(0X71000808CC,	0XA);
	set_name	(0X71000808CC,	"aThread0x");
	create_strlit	(0X71000808D6,	0X5);
	set_name	(0X71000808D6,	"aKind");
	create_strlit	(0X71000808DB,	0X23);
	set_name	(0X71000808DB,	"aNotifyTimeToFs");
	create_strlit	(0X71000808FE,	0X11);
	set_name	(0X71000808FE,	"aFullAwakeEnter");
	create_strlit	(0X710008090F,	0X1E);
	set_name	(0X710008090F,	"aChargerTypeEno");
	create_strlit	(0X710008092D,	0X13);
	set_name	(0X710008092D,	"aAlarmsettingsD");
	create_strlit	(0X7100080940,	0X17);
	set_name	(0X7100080940,	"aBatteryThresho");
	create_strlit	(0X7100080957,	0X17);
	set_name	(0X7100080957,	"aFullAwakeCount");
	create_strlit	(0X710008096E,	0X22);
	set_name	(0X710008096E,	"aNintendoUdjxhD");
	create_strlit	(0X7100080990,	0X1C);
	set_name	(0X7100080990,	"aStandardNetclo");
	create_strlit	(0X71000809AC,	0X12);
	set_name	(0X71000809AC,	"aNnEctxIpcserve");
	create_strlit	(0X71000809BE,	0X2E);
	set_name	(0X71000809BE,	"aMArchdataDefau");
	create_strlit	(0X71000809EC,	0X40);
	set_name	(0X71000809EC,	"aErrorUnmountFa_1");
	create_strlit	(0X7100080A2C,	0XC);
	set_name	(0X7100080A2C,	"aGetfilesize");
	create_strlit	(0X7100080A38,	0X1A);
	set_name	(0X7100080A38,	"aDefaultSchedul");
	create_strlit	(0X7100080A52,	0X19);
	set_name	(0X7100080A52,	"aAlarmSettingRe");
	create_strlit	(0X7100080A6B,	0X13);
	set_name	(0X7100080A6B,	"aStatActiveCoun");
	create_strlit	(0X7100080A7E,	0X15);
	set_name	(0X7100080A7E,	"aContextOffsetA");
	create_strlit	(0X7100080A93,	0XB);
	set_name	(0X7100080A93,	"aDeletefile");
	create_strlit	(0X7100080A9E,	0X12);
	set_name	(0X7100080A9E,	"aOpenmodeWrite");
	create_strlit	(0X7100080AB0,	0X45);
	set_name	(0X7100080AB0,	"aErrorNnFsClose");
	create_strlit	(0X7100080AF5,	0X7);
	set_name	(0X7100080AF5,	"aConfig");
	create_strlit	(0X7100080AFC,	0X1B);
	set_name	(0X7100080AFC,	"aChargerTypeLow");
	create_strlit	(0X7100080B17,	0X7);
	set_name	(0X7100080B17,	"aAppId");
	create_strlit	(0X7100080B1E,	0X13);
	set_name	(0X7100080B1E,	"aNnBgtcMainthre");
	create_strlit	(0X7100080B31,	0X1A);
	set_name	(0X7100080B31,	"aNnNotification");
	create_strlit	(0X7100080B4B,	0X11);
	set_name	(0X7100080B4B,	"aNnArpIpcserver");
	create_strlit	(0X7100080B5C,	0X7);
	set_name	(0X7100080B5C,	"aSS_0");
	create_strlit	(0X7100080B63,	0X7);
	set_name	(0X7100080B63,	"aLaunch");
	create_strlit	(0X7100080B6A,	0X1D);
	set_name	(0X7100080B6A,	"aEphemeralNetcl");
	create_strlit	(0X7100080B87,	0X38);
	set_name	(0X7100080B87,	"aZn2nn2ro6detai_3");
	create_strlit	(0X7100080BBF,	0XA);
	set_name	(0X7100080BBF,	"aHalfawake");
	create_strlit	(0X7100080BC9,	0X1F);
	set_name	(0X7100080BC9,	"aChargerTypeNot");
	create_strlit	(0X7100080BE8,	0XF);
	set_name	(0X7100080BE8,	"aTimezonebinary");
	create_strlit	(0X7100080BF7,	0X2A);
	set_name	(0X7100080BF7,	"aStandardSteady");
	create_strlit	(0X7100080C21,	0X18);
	set_name	(0X7100080C21,	"aOpendatastorag");
	create_strlit	(0X7100080C39,	0X11);
	set_name	(0X7100080C39,	"aEnableHalfawak");
	create_strlit	(0X7100080C4A,	0X9);
	set_name	(0X7100080C4A,	"aTimeMon");
	create_strlit	(0X7100080C53,	0X9);
	set_name	(0X7100080C53,	"aTimeTue");
	create_strlit	(0X7100080C5C,	0XB);
	set_name	(0X7100080C5C,	"aClockTime");
	create_strlit	(0X7100080C67,	0X16);
	set_name	(0X7100080C67,	"aContextOffsetB");
	create_strlit	(0X7100080C7D,	0X9);
	set_name	(0X7100080C7D,	"aReadfile");
	create_strlit	(0X7100080C86,	0X14);
	set_name	(0X7100080C86,	"aMountsystemsav");
	create_strlit	(0X7100080C9A,	0X17);
	set_name	(0X7100080C9A,	"aApplicationpar");
	create_strlit	(0X7100080CB1,	0X20);
	set_name	(0X7100080CB1,	"aRomoduleReloca");
	create_strlit	(0X7100080CD1,	0XD);
	set_name	(0X7100080CD1,	"aGetentrytype");
	create_strlit	(0X7100080CDE,	0XA);
	set_name	(0X7100080CDE,	"aRtcValue");
	create_strlit	(0X7100080CE8,	0X23);
	set_name	(0X7100080CE8,	"aRomoduleFixrel");
	create_strlit	(0X7100080D0B,	0X23);
	set_name	(0X7100080D0B,	"aZn2nn2ro6detai");
	create_strlit	(0X7100080D2E,	0X24);
	set_name	(0X7100080D2E,	"aRoWarningUnres");
	create_strlit	(0X7100080D52,	0X19);
	set_name	(0X7100080D52,	"aLeavingHalfawa");
	create_strlit	(0X7100080D6B,	0X1A);
	set_name	(0X7100080D6B,	"aBatteryChargeP");
	create_strlit	(0X7100080D85,	0XA);
	set_name	(0X7100080D85,	"aBootUuid");
	create_strlit	(0X7100080D8F,	0XC);
	set_name	(0X7100080D8F,	"aUpTimeSec");
	create_strlit	(0X7100080D9B,	0XE);
	set_name	(0X7100080D9B,	"aNotSupported");
	create_strlit	(0X7100080DA9,	0X8);
	set_name	(0X7100080DA9,	"aBalance");
	create_strlit	(0X7100080DB1,	0X13);
	set_name	(0X7100080DB1,	"aAppParameterSi");
	create_strlit	(0X7100080DC4,	0X9);
	set_name	(0X7100080DC4,	"aTimeWed");
	create_strlit	(0X7100080DCD,	0X1E);
	set_name	(0X7100080DCD,	"aNintendoUdsgRS");
	create_strlit	(0X7100080DEB,	0XF);
	set_name	(0X7100080DEB,	"aNnTimeWorker");
	create_strlit	(0X7100080DFA,	0XE);
	set_name	(0X7100080DFA,	"aOpenmodeRead");
	create_strlit	(0X7100080E08,	0X1B);
	set_name	(0X7100080E08,	"aNnBgtcSystemev");
	create_strlit	(0X7100080E23,	0XD);
	set_name	(0X7100080E23,	"aSetallocator");
	create_strlit	(0X7100080E30,	0XB);
	set_name	(0X7100080E30,	"aCreatefile");
	create_strlit	(0X7100080E3B,	0X37);
	set_name	(0X7100080E3B,	"aErrorMountFail");
	create_strlit	(0X7100080E72,	0XF);
	set_name	(0X7100080E72,	"aOpenmodeWrite_0");
	create_strlit	(0X7100080E81,	0X15);
	set_name	(0X7100080E81,	"aOpenmodeAllowa_0");
	create_strlit	(0X7100080E96,	0X18);
	set_name	(0X7100080E96,	"aMinimumInterva_0");
	create_strlit	(0X7100080EAE,	0X11);
	set_name	(0X7100080EAE,	"aHalfAwakeEnter");
	create_strlit	(0X7100080EBF,	0X5);
	set_name	(0X7100080EBF,	"aStop");
	create_strlit	(0X7100080EC4,	0XA);
	set_name	(0X7100080EC4,	"a0x0x");
	create_strlit	(0X7100080ECE,	0X13);
	set_name	(0X7100080ECE,	"a0x0x0x0x0x0x");
	create_strlit	(0X7100080EE1,	0X6);
	set_name	(0X7100080EE1,	"aNotif");
	create_strlit	(0X7100080EE7,	0XA);
	set_name	(0X7100080EE7,	"aWritefile");
	create_strlit	(0X7100080EF1,	0X1D);
	set_name	(0X7100080EF1,	"aChargerTypeUnc");
	create_strlit	(0X7100080F0E,	0X31);
	set_name	(0X7100080F0E,	"aLatestFullAwak");
	create_strlit	(0X7100080F3F,	0X17);
	set_name	(0X7100080F3F,	"aNnPlsrLoadshar");
	create_strlit	(0X7100080F56,	0X7);
	set_name	(0X7100080F56,	"aBgtcT");
	create_strlit	(0X7100080F5D,	0X8);
	set_name	(0X7100080F5D,	"aBgtcSc");
	create_strlit	(0X7100080F65,	0X2);
	create_strlit	(0X7100080F67,	0X1D);
	set_name	(0X7100080F67,	"aNnNotification_0");
	create_strlit	(0X7100080F84,	0X24);
	set_name	(0X7100080F84,	"aRomoduleBindju");
	create_strlit	(0X7100080FA8,	0X9);
	set_name	(0X7100080FA8,	"aOpenfile");
	create_strlit	(0X7100080FB1,	0X11);
	set_name	(0X7100080FB1,	"aGetsavedatafla");
	create_strlit	(0X7100080FC2,	0X4);
	set_name	(0X7100080FC2,	"aNan");
	create_strlit	(0X7100080FC6,	0X5);
	set_name	(0X7100080FC6,	"aNone");
	create_strlit	(0X7100080FCB,	0X4);
	set_name	(0X7100080FCB,	"aInf_0");
	create_strlit	(0X7100080FCF,	0X15);
	set_name	(0X7100080FCF,	"aCurrentCharger");
	create_strlit	(0X7100080FE4,	0X7);
	set_name	(0X7100080FE4,	"aEctxW");
	create_strlit	(0X7100080FEB,	0X7);
	set_name	(0X7100080FEB,	"aEctxR");
	create_strlit	(0X7100080FF2,	0X8);
	set_name	(0X7100080FF2,	"aEctxAw");
	set_cmt	(0X7100080FFA,	"jump table for switch statement",	0);
	create_byte	(0X7100080FFA);
	set_name	(0X7100080FFA,	"jpt_7100003D58");
	create_byte	(0X7100080FFB);
	create_byte	(0X7100080FFC);
	create_byte	(0X7100080FFD);
	create_byte	(0X7100080FFE);
	create_byte	(0X7100080FFF);
	create_byte	(0X7100081000);
	create_byte	(0X7100081001);
	create_byte	(0X7100081002);
	create_byte	(0X7100081003);
	create_byte	(0X7100081004);
	create_byte	(0X7100081005);
	create_byte	(0X7100081006);
	create_byte	(0X7100081007);
	create_byte	(0X7100081008);
	create_byte	(0X7100081009);
	create_byte	(0X710008100A);
	create_byte	(0X710008100B);
	create_byte	(0X710008100C);
	create_byte	(0X710008100D);
	create_byte	(0X710008100E);
	create_byte	(0X710008100F);
	create_byte	(0X7100081010);
	create_byte	(0X7100081011);
	create_byte	(0X7100081012);
	create_byte	(0X7100081013);
	create_byte	(0X7100081014);
	create_byte	(0X7100081015);
	create_byte	(0X7100081016);
	create_byte	(0X7100081017);
	create_byte	(0X7100081018);
	create_byte	(0X7100081019);
	create_byte	(0X710008101A);
	create_byte	(0X710008101B);
	create_byte	(0X710008101C);
	create_byte	(0X710008101D);
	create_byte	(0X710008101E);
	create_byte	(0X710008101F);
	create_byte	(0X7100081020);
	create_byte	(0X7100081021);
	create_byte	(0X7100081022);
	set_cmt	(0X7100081023,	"jump table for switch statement",	0);
	create_byte	(0X7100081023);
	set_name	(0X7100081023,	"jpt_71000047E4");
	create_byte	(0X7100081024);
	create_byte	(0X7100081025);
	create_byte	(0X7100081026);
	create_byte	(0X7100081027);
	create_byte	(0X7100081028);
	create_byte	(0X7100081029);
	create_byte	(0X710008102A);
	create_byte	(0X710008102B);
	create_byte	(0X710008102C);
	create_byte	(0X710008102D);
	create_byte	(0X710008102E);
	create_byte	(0X710008102F);
	create_byte	(0X7100081030);
	create_byte	(0X7100081031);
	create_byte	(0X7100081032);
	create_byte	(0X7100081033);
	create_byte	(0X7100081034);
	create_byte	(0X7100081035);
	create_byte	(0X7100081036);
	create_byte	(0X7100081037);
	create_byte	(0X7100081038);
	create_byte	(0X7100081039);
	create_byte	(0X710008103A);
	create_byte	(0X710008103B);
	create_byte	(0X710008103C);
	create_byte	(0X710008103D);
	create_byte	(0X710008103E);
	create_byte	(0X710008103F);
	create_byte	(0X7100081040);
	create_byte	(0X7100081041);
	create_byte	(0X7100081042);
	create_byte	(0X7100081043);
	create_byte	(0X7100081044);
	create_byte	(0X7100081045);
	create_byte	(0X7100081046);
	create_byte	(0X7100081047);
	create_byte	(0X7100081048);
	create_byte	(0X7100081049);
	create_byte	(0X710008104A);
	create_byte	(0X710008104B);
	set_cmt	(0X710008104C,	"jump table for switch statement",	0);
	create_byte	(0X710008104C);
	set_name	(0X710008104C,	"jpt_7100004798");
	create_byte	(0X710008104D);
	create_byte	(0X710008104E);
	create_byte	(0X710008104F);
	create_byte	(0X7100081050);
	create_byte	(0X7100081051);
	create_byte	(0X7100081052);
	create_byte	(0X7100081053);
	create_byte	(0X7100081054);
	create_byte	(0X7100081055);
	create_byte	(0X7100081056);
	create_byte	(0X7100081057);
	create_byte	(0X7100081058);
	create_byte	(0X7100081059);
	create_byte	(0X710008105A);
	create_byte	(0X710008105B);
	create_byte	(0X710008105C);
	create_byte	(0X710008105D);
	create_byte	(0X710008105E);
	create_byte	(0X710008105F);
	create_byte	(0X7100081060);
	create_strlit	(0X7100081061,	0X8);
	set_name	(0X7100081061,	"aNotifA");
	create_strlit	(0X7100081069,	0X8);
	set_name	(0X7100081069,	"aNotifS");
	set_cmt	(0X7100081071,	"jump table for switch statement",	0);
	create_byte	(0X7100081071);
	set_name	(0X7100081071,	"jpt_7100007234");
	create_byte	(0X7100081072);
	create_byte	(0X7100081073);
	create_byte	(0X7100081074);
	create_byte	(0X7100081075);
	create_byte	(0X7100081076);
	create_byte	(0X7100081077);
	create_byte	(0X7100081078);
	create_byte	(0X7100081079);
	create_byte	(0X710008107A);
	create_byte	(0X710008107B);
	create_byte	(0X710008107C);
	create_byte	(0X710008107D);
	create_byte	(0X710008107E);
	create_byte	(0X710008107F);
	create_byte	(0X7100081080);
	create_byte	(0X7100081081);
	create_byte	(0X7100081082);
	create_byte	(0X7100081083);
	create_byte	(0X7100081084);
	create_byte	(0X7100081085);
	create_byte	(0X7100081086);
	create_byte	(0X7100081087);
	create_byte	(0X7100081088);
	create_strlit	(0X7100081089,	0X8);
	set_name	(0X7100081089,	"aFspSrv");
	set_cmt	(0X7100081091,	"type descriptor name",	1);
	create_strlit	(0X7100081091,	0X1A2);
	set_name	(0X7100081091,	"_ZTSN2nn2sf6detail39ObjectImplFactoryWithStatelessAllocatorINS0_4cmif6client6detail9CmifProxyINS_5fssrv2sf16IFileSystemProxyENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSC_18Hipc2ProxyKindBaseILNSB_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESP_E6ObjectE");
	set_cmt	(0X7100081233,	"type descriptor name",	1);
	create_strlit	(0X7100081233,	0X2D);
	set_name	(0X7100081233,	"_ZTSN2nn2sf4impl6detail22ServiceObjectImplBase2E");
	set_cmt	(0X7100081260,	"type descriptor name",	1);
	create_strlit	(0X7100081260,	0X161);
	set_name	(0X7100081260,	"_ZTSN2nn2sf4cmif6client6detail9CmifProxyINS_5fssrv2sf16IFileSystemProxyENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSA_18Hipc2ProxyKindBaseILNS9_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEENS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEvEE");
	set_cmt	(0X71000813C1,	"type descriptor name",	1);
	create_strlit	(0X71000813C1,	0X168);
	set_name	(0X71000813C1,	"_ZTSN2nn2sf4cmif6client6detail13CmifProxyImplINS_5fssrv2sf16IFileSystemProxyENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSA_18Hipc2ProxyKindBaseILNS9_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEES7_NS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEEE");
	set_cmt	(0X7100081529,	"type descriptor name",	1);
	create_strlit	(0X7100081529,	0X21);
	set_name	(0X7100081529,	"_ZTSN2nn5fssrv2sf16IFileSystemProxyE");
	set_cmt	(0X710008154A,	"type descriptor name",	1);
	create_strlit	(0X710008154A,	0X19);
	set_name	(0X710008154A,	"_ZTSN2nn2sf14IServiceObjectE");
	set_cmt	(0X7100081563,	"type descriptor name",	1);
	create_strlit	(0X7100081563,	0X18);
	set_name	(0X7100081563,	"_ZTSN2nn2sf13ISharedObjectE");
	set_cmt	(0X710008157B,	"type descriptor name",	1);
	create_strlit	(0X710008157B,	0XB3);
	set_name	(0X710008157B,	"_ZTSN2nn2sf4cmif6client23CmifDomainClientMessageINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINS5_18Hipc2ProxyKindBaseILNS4_6detail11MessageTypeE6EEEEEE15ProxyBaseObjectE");
	set_cmt	(0X710008162E,	"type descriptor name",	1);
	create_strlit	(0X710008162E,	0X25);
	set_name	(0X710008162E,	"_ZTSN2nn2sf4cmif6client14CmifBaseObjectE");
	set_cmt	(0X7100081653,	"type descriptor name",	1);
	create_strlit	(0X7100081653,	0X1F);
	set_name	(0X7100081653,	"_ZTSN2nn2sf6detail13CmifProxyInfoE");
	make_array	(0X7100081672,	0X6);
	set_cmt	(0X7100081758,	"type descriptor name",	1);
	create_strlit	(0X7100081758,	0X19D);
	set_name	(0X7100081758,	"_ZTSN2nn2sf6detail39ObjectImplFactoryWithStatelessAllocatorINS0_4cmif6client6detail9CmifProxyINS_5fssrv2sf11IFileSystemENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSC_18Hipc2ProxyKindBaseILNSB_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESP_E6ObjectE");
	set_cmt	(0X71000818F5,	"type descriptor name",	1);
	create_strlit	(0X71000818F5,	0X15C);
	set_name	(0X71000818F5,	"_ZTSN2nn2sf4cmif6client6detail9CmifProxyINS_5fssrv2sf11IFileSystemENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSA_18Hipc2ProxyKindBaseILNS9_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEENS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEvEE");
	set_cmt	(0X7100081A51,	"type descriptor name",	1);
	create_strlit	(0X7100081A51,	0X163);
	set_name	(0X7100081A51,	"_ZTSN2nn2sf4cmif6client6detail13CmifProxyImplINS_5fssrv2sf11IFileSystemENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSA_18Hipc2ProxyKindBaseILNS9_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEES7_NS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEEE");
	set_cmt	(0X7100081BB4,	"type descriptor name",	1);
	create_strlit	(0X7100081BB4,	0X1C);
	set_name	(0X7100081BB4,	"_ZTSN2nn5fssrv2sf11IFileSystemE");
	set_cmt	(0X7100081BD0,	"type descriptor name",	1);
	create_strlit	(0X7100081BD0,	0X196);
	set_name	(0X7100081BD0,	"_ZTSN2nn2sf6detail39ObjectImplFactoryWithStatelessAllocatorINS0_4cmif6client6detail9CmifProxyINS_5fssrv2sf5IFileENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSC_18Hipc2ProxyKindBaseILNSB_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESP_E6ObjectE");
	set_cmt	(0X7100081D66,	"type descriptor name",	1);
	create_strlit	(0X7100081D66,	0X155);
	set_name	(0X7100081D66,	"_ZTSN2nn2sf4cmif6client6detail9CmifProxyINS_5fssrv2sf5IFileENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSA_18Hipc2ProxyKindBaseILNS9_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEENS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEvEE");
	set_cmt	(0X7100081EBB,	"type descriptor name",	1);
	create_strlit	(0X7100081EBB,	0X15C);
	set_name	(0X7100081EBB,	"_ZTSN2nn2sf4cmif6client6detail13CmifProxyImplINS_5fssrv2sf5IFileENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSA_18Hipc2ProxyKindBaseILNS9_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEES7_NS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEEE");
	set_cmt	(0X7100082017,	"type descriptor name",	1);
	create_strlit	(0X7100082017,	0X15);
	set_name	(0X7100082017,	"_ZTSN2nn5fssrv2sf5IFileE");
	create_qword	(0X710008202C);
	set_cmt	(0X7100082064,	"type descriptor name",	1);
	create_strlit	(0X7100082064,	0X19C);
	set_name	(0X7100082064,	"_ZTSN2nn2sf6detail39ObjectImplFactoryWithStatelessAllocatorINS0_4cmif6client6detail9CmifProxyINS_5fssrv2sf10IDirectoryENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSC_18Hipc2ProxyKindBaseILNSB_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESP_E6ObjectE");
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_11(void) {
        auto x;
#define id x

	set_cmt	(0X7100082200,	"type descriptor name",	1);
	create_strlit	(0X7100082200,	0X15B);
	set_name	(0X7100082200,	"_ZTSN2nn2sf4cmif6client6detail9CmifProxyINS_5fssrv2sf10IDirectoryENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSA_18Hipc2ProxyKindBaseILNS9_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEENS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEvEE");
	set_cmt	(0X710008235B,	"type descriptor name",	1);
	create_strlit	(0X710008235B,	0X162);
	set_name	(0X710008235B,	"_ZTSN2nn2sf4cmif6client6detail13CmifProxyImplINS_5fssrv2sf10IDirectoryENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSA_18Hipc2ProxyKindBaseILNS9_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEES7_NS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEEE");
	set_cmt	(0X71000824BD,	"type descriptor name",	1);
	create_strlit	(0X71000824BD,	0X1B);
	set_name	(0X71000824BD,	"_ZTSN2nn5fssrv2sf10IDirectoryE");
	create_qword	(0X71000824D8);
	set_cmt	(0X7100082510,	"type descriptor name",	1);
	create_strlit	(0X7100082510,	0X199);
	set_name	(0X7100082510,	"_ZTSN2nn2sf6detail39ObjectImplFactoryWithStatelessAllocatorINS0_4cmif6client6detail9CmifProxyINS_5fssrv2sf8IStorageENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSC_18Hipc2ProxyKindBaseILNSB_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESP_E6ObjectE");
	set_cmt	(0X71000826A9,	"type descriptor name",	1);
	create_strlit	(0X71000826A9,	0X158);
	set_name	(0X71000826A9,	"_ZTSN2nn2sf4cmif6client6detail9CmifProxyINS_5fssrv2sf8IStorageENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSA_18Hipc2ProxyKindBaseILNS9_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEENS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEvEE");
	set_cmt	(0X7100082801,	"type descriptor name",	1);
	create_strlit	(0X7100082801,	0X15F);
	set_name	(0X7100082801,	"_ZTSN2nn2sf4cmif6client6detail13CmifProxyImplINS_5fssrv2sf8IStorageENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSA_18Hipc2ProxyKindBaseILNS9_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEES7_NS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEEE");
	set_cmt	(0X7100082960,	"type descriptor name",	1);
	create_strlit	(0X7100082960,	0X18);
	set_name	(0X7100082960,	"_ZTSN2nn5fssrv2sf8IStorageE");
	set_cmt	(0X7100082978,	"type descriptor name",	1);
	create_strlit	(0X7100082978,	0X1A5);
	set_name	(0X7100082978,	"_ZTSN2nn2sf6detail39ObjectImplFactoryWithStatelessAllocatorINS0_4cmif6client6detail9CmifProxyINS_5fssrv2sf19ISaveDataInfoReaderENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSC_18Hipc2ProxyKindBaseILNSB_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESP_E6ObjectE");
	set_cmt	(0X7100082B1D,	"type descriptor name",	1);
	create_strlit	(0X7100082B1D,	0X164);
	set_name	(0X7100082B1D,	"_ZTSN2nn2sf4cmif6client6detail9CmifProxyINS_5fssrv2sf19ISaveDataInfoReaderENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSA_18Hipc2ProxyKindBaseILNS9_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEENS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEvEE");
	set_cmt	(0X7100082C81,	"type descriptor name",	1);
	create_strlit	(0X7100082C81,	0X16B);
	set_name	(0X7100082C81,	"_ZTSN2nn2sf4cmif6client6detail13CmifProxyImplINS_5fssrv2sf19ISaveDataInfoReaderENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSA_18Hipc2ProxyKindBaseILNS9_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEES7_NS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEEE");
	set_cmt	(0X7100082DEC,	"type descriptor name",	1);
	create_strlit	(0X7100082DEC,	0X24);
	set_name	(0X7100082DEC,	"_ZTSN2nn5fssrv2sf19ISaveDataInfoReaderE");
	create_qword	(0X7100082E10);
	set_cmt	(0X7100082E48,	"type descriptor name",	1);
	create_strlit	(0X7100082E48,	0X1A1);
	set_name	(0X7100082E48,	"_ZTSN2nn2sf6detail39ObjectImplFactoryWithStatelessAllocatorINS0_4cmif6client6detail9CmifProxyINS_5fssrv2sf15IDeviceOperatorENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSC_18Hipc2ProxyKindBaseILNSB_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESP_E6ObjectE");
	set_cmt	(0X7100082FE9,	"type descriptor name",	1);
	create_strlit	(0X7100082FE9,	0X160);
	set_name	(0X7100082FE9,	"_ZTSN2nn2sf4cmif6client6detail9CmifProxyINS_5fssrv2sf15IDeviceOperatorENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSA_18Hipc2ProxyKindBaseILNS9_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEENS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEvEE");
	set_cmt	(0X7100083149,	"type descriptor name",	1);
	create_strlit	(0X7100083149,	0X167);
	set_name	(0X7100083149,	"_ZTSN2nn2sf4cmif6client6detail13CmifProxyImplINS_5fssrv2sf15IDeviceOperatorENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSA_18Hipc2ProxyKindBaseILNS9_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEES7_NS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEEE");
	set_cmt	(0X71000832B0,	"type descriptor name",	1);
	create_strlit	(0X71000832B0,	0X20);
	set_name	(0X71000832B0,	"_ZTSN2nn5fssrv2sf15IDeviceOperatorE");
	create_qword	(0X71000832D0);
	create_qword	(0X7100083308);
	set_cmt	(0X7100083340,	"type descriptor name",	1);
	create_strlit	(0X7100083340,	0X1A0);
	set_name	(0X7100083340,	"_ZTSN2nn2sf6detail39ObjectImplFactoryWithStatelessAllocatorINS0_4cmif6client6detail9CmifProxyINS_5fssrv2sf14IEventNotifierENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSC_18Hipc2ProxyKindBaseILNSB_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESP_E6ObjectE");
	set_cmt	(0X71000834E0,	"type descriptor name",	1);
	create_strlit	(0X71000834E0,	0X15F);
	set_name	(0X71000834E0,	"_ZTSN2nn2sf4cmif6client6detail9CmifProxyINS_5fssrv2sf14IEventNotifierENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSA_18Hipc2ProxyKindBaseILNS9_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEENS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEvEE");
	set_cmt	(0X710008363F,	"type descriptor name",	1);
	create_strlit	(0X710008363F,	0X166);
	set_name	(0X710008363F,	"_ZTSN2nn2sf4cmif6client6detail13CmifProxyImplINS_5fssrv2sf14IEventNotifierENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSA_18Hipc2ProxyKindBaseILNS9_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEES7_NS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEEE");
	set_cmt	(0X71000837A5,	"type descriptor name",	1);
	create_strlit	(0X71000837A5,	0X1F);
	set_name	(0X71000837A5,	"_ZTSN2nn5fssrv2sf14IEventNotifierE");
	set_cmt	(0X71000837C4,	"type descriptor name",	1);
	create_strlit	(0X71000837C4,	0X1A5);
	set_name	(0X71000837C4,	"_ZTSN2nn2sf6detail39ObjectImplFactoryWithStatelessAllocatorINS0_4cmif6client6detail9CmifProxyINS_5fssrv2sf19IMultiCommitManagerENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSC_18Hipc2ProxyKindBaseILNSB_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESP_E6ObjectE");
	set_cmt	(0X7100083969,	"type descriptor name",	1);
	create_strlit	(0X7100083969,	0X164);
	set_name	(0X7100083969,	"_ZTSN2nn2sf4cmif6client6detail9CmifProxyINS_5fssrv2sf19IMultiCommitManagerENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSA_18Hipc2ProxyKindBaseILNS9_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEENS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEvEE");
	set_cmt	(0X7100083ACD,	"type descriptor name",	1);
	create_strlit	(0X7100083ACD,	0X16B);
	set_name	(0X7100083ACD,	"_ZTSN2nn2sf4cmif6client6detail13CmifProxyImplINS_5fssrv2sf19IMultiCommitManagerENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSA_18Hipc2ProxyKindBaseILNS9_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEES7_NS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEEE");
	set_cmt	(0X7100083C38,	"type descriptor name",	1);
	create_strlit	(0X7100083C38,	0X24);
	set_name	(0X7100083C38,	"_ZTSN2nn5fssrv2sf19IMultiCommitManagerE");
	set_cmt	(0X7100083C5C,	"type descriptor name",	1);
	create_strlit	(0X7100083C5C,	0X197);
	set_name	(0X7100083C5C,	"_ZTSN2nn2sf6detail39ObjectImplFactoryWithStatelessAllocatorINS0_4cmif6client6detail9CmifProxyINS_5fssrv2sf6IWiperENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSC_18Hipc2ProxyKindBaseILNSB_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESP_E6ObjectE");
	set_cmt	(0X7100083DF3,	"type descriptor name",	1);
	create_strlit	(0X7100083DF3,	0X156);
	set_name	(0X7100083DF3,	"_ZTSN2nn2sf4cmif6client6detail9CmifProxyINS_5fssrv2sf6IWiperENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSA_18Hipc2ProxyKindBaseILNS9_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEENS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEvEE");
	set_cmt	(0X7100083F49,	"type descriptor name",	1);
	create_strlit	(0X7100083F49,	0X15D);
	set_name	(0X7100083F49,	"_ZTSN2nn2sf4cmif6client6detail13CmifProxyImplINS_5fssrv2sf6IWiperENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSA_18Hipc2ProxyKindBaseILNS9_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEES7_NS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEEE");
	set_cmt	(0X71000840A6,	"type descriptor name",	1);
	create_strlit	(0X71000840A6,	0X16);
	set_name	(0X71000840A6,	"_ZTSN2nn5fssrv2sf6IWiperE");
	set_cmt	(0X71000840BC,	"type descriptor name",	1);
	create_strlit	(0X71000840BC,	0X64);
	set_name	(0X71000840BC,	"_ZTSN2nn2sf4hipc6client34HipcSimpleClientSessionManagerBaseINS2_29DefaultSessionResourceManagerEE4ImplE");
	set_cmt	(0X7100084120,	"type descriptor name",	1);
	create_strlit	(0X7100084120,	0X2F);
	set_name	(0X7100084120,	"_ZTSN2nn2sf4hipc6client24HipcClientSessionManagerE");
	set_cmt	(0X710008414F,	"type descriptor name",	1);
	create_strlit	(0X710008414F,	0X31);
	set_name	(0X710008414F,	"_ZTSN2nn2sf4hipc6client26HipcClientSessionAllocatorE");
	set_cmt	(0X7100084180,	"type descriptor name",	1);
	create_strlit	(0X7100084180,	0X83);
	set_name	(0X7100084180,	"_ZTSN2nn2sf4hipc6client34HipcSimpleClientSessionManagerBaseINS_2fs6detail12_GLOBAL__N_137FileSystemProxySessionResourceManagerEE4ImplE");
	create_dword	(0X7100084204);
	make_array	(0X7100084204,	0X3);
	set_cmt	(0X7100084210,	"type descriptor name",	1);
	create_strlit	(0X7100084210,	0X21);
	set_name	(0X7100084210,	"_ZTSN2nn2fs12_GLOBAL__N_19AllocatorE");
	set_cmt	(0X7100084231,	"type descriptor name",	1);
	create_strlit	(0X7100084231,	0X16);
	set_name	(0X7100084231,	"_ZTSN2nn14MemoryResourceE");
	make_array	(0X7100084247,	0X9);
	create_oword	(0X7100084250);
	create_oword	(0X7100084260);
	create_oword	(0X7100084270);
	create_oword	(0X7100084280);
	create_oword	(0X7100084290);
	create_oword	(0X71000842A0);
	create_oword	(0X71000842B0);
	create_oword	(0X71000842C0);
	create_oword	(0X71000842D0);
	create_oword	(0X71000842E0);
	create_oword	(0X71000842F0);
	create_oword	(0X7100084310);
	create_strlit	(0X7100084320,	0X11);
	set_name	(0X7100084320,	"a0123456789abcd");
	create_oword	(0X7100084340);
	create_strlit	(0X7100084350,	0X6);
	set_name	(0X7100084350,	"aHost");
	set_cmt	(0X7100084357,	"type descriptor name",	1);
	create_strlit	(0X7100084357,	0X24);
	set_name	(0X7100084357,	"_ZTSN2nn2fs6detail18FileSystemAccessorE");
	set_cmt	(0X710008437B,	"type descriptor name",	1);
	create_strlit	(0X710008437B,	0X18);
	set_name	(0X710008437B,	"_ZTSN2nn2fs6detail7NewableE");
	set_cmt	(0X7100084393,	"type descriptor name",	1);
	create_strlit	(0X7100084393,	0X2A);
	set_name	(0X7100084393,	"_ZTSN2nn2fs6detail24FileServiceObjectAdapterE");
	set_cmt	(0X71000843BD,	"type descriptor name",	1);
	create_strlit	(0X71000843BD,	0X13);
	set_name	(0X71000843BD,	"_ZTSN2nn2fs3fsa5IFileE");
	set_cmt	(0X71000843D0,	"type descriptor name",	1);
	create_strlit	(0X71000843D0,	0X2F);
	set_name	(0X71000843D0,	"_ZTSN2nn2fs6detail29DirectoryServiceObjectAdapterE");
	set_cmt	(0X71000843FF,	"type descriptor name",	1);
	create_strlit	(0X71000843FF,	0X19);
	set_name	(0X71000843FF,	"_ZTSN2nn2fs3fsa10IDirectoryE");
	set_cmt	(0X7100084418,	"type descriptor name",	1);
	create_strlit	(0X7100084418,	0X30);
	set_name	(0X7100084418,	"_ZTSN2nn2fs6detail30FileSystemServiceObjectAdapterE");
	set_cmt	(0X7100084448,	"type descriptor name",	1);
	create_strlit	(0X7100084448,	0X1A);
	set_name	(0X7100084448,	"_ZTSN2nn2fs3fsa11IFileSystemE");
	set_cmt	(0X7100084462,	"type descriptor name",	1);
	create_strlit	(0X7100084462,	0X21);
	set_name	(0X7100084462,	"_ZTSN2nn2fs3fsa18IMultiCommitTargetE");
	set_cmt	(0X7100084483,	"type descriptor name",	1);
	create_strlit	(0X7100084483,	0X32);
	set_name	(0X7100084483,	"_ZTSN2nn2fs3fsa12_GLOBAL__N_121UnmountHookFileSystemE");
	set_cmt	(0X71000844B5,	"type descriptor name",	1);
	create_strlit	(0X71000844B5,	0X45);
	set_name	(0X71000844B5,	"_ZTSN2nn2fs6detail27StorageServiceObjectAdapterINS_5fssrv2sf8IStorageEEE");
	set_cmt	(0X71000844FA,	"type descriptor name",	1);
	create_strlit	(0X71000844FA,	0X12);
	set_name	(0X71000844FA,	"_ZTSN2nn2fs8IStorageE");
	set_cmt	(0X710008450C,	"type descriptor name",	1);
	create_strlit	(0X710008450C,	0X1A);
	set_name	(0X710008450C,	"_ZTSN2nn2fs6detail9RomFsFileE");
	set_cmt	(0X7100084526,	"type descriptor name",	1);
	create_strlit	(0X7100084526,	0X1A);
	set_name	(0X7100084526,	"_ZTSN2nn2fs15RomFsFileSystemE");
	set_cmt	(0X7100084540,	"type descriptor name",	1);
	create_strlit	(0X7100084540,	0X18);
	set_name	(0X7100084540,	"_ZTSN2nn2fs13MemoryStorageE");
	set_cmt	(0X7100084558,	"type descriptor name",	1);
	create_strlit	(0X7100084558,	0X15);
	set_name	(0X7100084558,	"_ZTSN2nn2fs10SubStorageE");
	set_cmt	(0X710008456D,	"type descriptor name",	1);
	create_strlit	(0X710008456D,	0X27);
	set_name	(0X710008456D,	"_ZTSN2nn2fs12_GLOBAL__N_114RomFsDirectoryE");
	set_cmt	(0X7100084594,	"type descriptor name",	1);
	create_strlit	(0X7100084594,	0X31);
	set_name	(0X7100084594,	"_ZTSN2nn2os6detail31MultiWaitHolderOfUserWaitObjectE");
	set_cmt	(0X71000845C5,	"type descriptor name",	1);
	create_strlit	(0X71000845C5,	0X25);
	set_name	(0X71000845C5,	"_ZTSN2nn2os6detail19MultiWaitHolderBaseE");
	set_cmt	(0X71000845EA,	"type descriptor name",	1);
	create_strlit	(0X71000845EA,	0X28);
	set_name	(0X71000845EA,	"_ZTSN2nn2os6detail22MultiWaitHolderOfEventE");
	set_cmt	(0X7100084612,	"type descriptor name",	1);
	create_strlit	(0X7100084612,	0X34);
	set_name	(0X7100084612,	"_ZTSN2nn2os6detail34MultiWaitHolderOfInterProcessEventE");
	set_cmt	(0X7100084646,	"type descriptor name",	1);
	create_strlit	(0X7100084646,	0X33);
	set_name	(0X7100084646,	"_ZTSN2nn2os6detail33MultiWaitHolderOfNativeWaitObjectE");
	set_cmt	(0X7100084679,	"type descriptor name",	1);
	create_strlit	(0X7100084679,	0X2F);
	set_name	(0X7100084679,	"_ZTSN2nn2os6detail29MultiWaitHolderOfNativeHandleE");
	set_cmt	(0X71000846A8,	"type descriptor name",	1);
	create_strlit	(0X71000846A8,	0X2F);
	set_name	(0X71000846A8,	"_ZTSN2nn2os6detail25AddressSpaceAllocatorBaseImmEE");
	set_cmt	(0X71000846D7,	"type descriptor name",	1);
	create_strlit	(0X71000846D7,	0X27);
	set_name	(0X71000846D7,	"_ZTSN2nn2os6detail21AddressSpaceAllocatorE");
	set_cmt	(0X71000846FE,	"type descriptor name",	1);
	create_strlit	(0X71000846FE,	0X2D);
	set_name	(0X71000846FE,	"_ZTSN2nn2os6detail27MultiWaitHolderOfTimerEventE");
	set_cmt	(0X710008472C,	"jump table for switch statement",	0);
	create_byte	(0X710008472C);
	set_name	(0X710008472C,	"jpt_7100026DAC");
	create_byte	(0X710008472D);
	create_byte	(0X710008472E);
	create_byte	(0X710008472F);
	create_byte	(0X7100084730);
	create_byte	(0X7100084731);
	create_byte	(0X7100084732);
	create_byte	(0X7100084733);
	create_byte	(0X7100084734);
	create_byte	(0X7100084735);
	create_byte	(0X7100084736);
	create_byte	(0X7100084737);
	create_byte	(0X7100084738);
	create_byte	(0X7100084739);
	create_byte	(0X710008473A);
	create_byte	(0X710008473B);
	create_byte	(0X710008473C);
	set_cmt	(0X710008473D,	"jump table for switch statement",	0);
	create_byte	(0X710008473D);
	set_name	(0X710008473D,	"jpt_7100026F6C");
	create_byte	(0X710008473E);
	create_byte	(0X710008473F);
	create_byte	(0X7100084740);
	create_byte	(0X7100084741);
	create_byte	(0X7100084742);
	create_byte	(0X7100084743);
	create_byte	(0X7100084744);
	create_byte	(0X7100084745);
	create_byte	(0X7100084746);
	create_byte	(0X7100084747);
	create_byte	(0X7100084748);
	create_byte	(0X7100084749);
	create_byte	(0X710008474A);
	create_byte	(0X710008474B);
	create_byte	(0X710008474C);
	create_byte	(0X710008474D);
	create_byte	(0X710008474E);
	create_byte	(0X710008474F);
	create_byte	(0X7100084750);
	create_byte	(0X7100084751);
	create_byte	(0X7100084752);
	create_byte	(0X7100084753);
	create_byte	(0X7100084754);
	create_byte	(0X7100084755);
	create_byte	(0X7100084756);
	create_byte	(0X7100084757);
	create_byte	(0X7100084758);
	create_byte	(0X7100084759);
	create_byte	(0X710008475A);
	create_byte	(0X710008475B);
	create_byte	(0X710008475C);
	create_byte	(0X710008475D);
	create_byte	(0X710008475E);
	create_byte	(0X710008475F);
	create_byte	(0X7100084760);
	create_byte	(0X7100084761);
	create_byte	(0X7100084762);
	create_byte	(0X7100084763);
	create_byte	(0X7100084764);
	create_byte	(0X7100084765);
	create_byte	(0X7100084766);
	create_byte	(0X7100084767);
	create_byte	(0X7100084768);
	create_byte	(0X7100084769);
	create_byte	(0X710008476A);
	create_byte	(0X710008476B);
	set_cmt	(0X710008476C,	"jump table for switch statement",	0);
	create_word	(0X710008476C);
	set_name	(0X710008476C,	"jpt_7100026FD0");
	create_word	(0X710008476E);
	create_word	(0X7100084770);
	create_word	(0X7100084772);
	create_word	(0X7100084774);
	create_word	(0X7100084776);
	create_word	(0X7100084778);
	create_word	(0X710008477A);
	create_word	(0X710008477C);
	create_word	(0X710008477E);
	create_word	(0X7100084780);
	create_word	(0X7100084782);
	create_word	(0X7100084784);
	create_word	(0X7100084786);
	create_word	(0X7100084788);
	create_word	(0X710008478A);
	create_word	(0X710008478C);
	create_word	(0X710008478E);
	create_word	(0X7100084790);
	create_word	(0X7100084792);
	create_word	(0X7100084794);
	create_word	(0X7100084796);
	create_word	(0X7100084798);
	create_word	(0X710008479A);
	create_word	(0X710008479C);
	create_word	(0X710008479E);
	create_word	(0X71000847A0);
	create_word	(0X71000847A2);
	create_word	(0X71000847A4);
	create_word	(0X71000847A6);
	create_word	(0X71000847A8);
	create_word	(0X71000847AA);
	create_word	(0X71000847AC);
	create_word	(0X71000847AE);
	create_word	(0X71000847B0);
	create_word	(0X71000847B2);
	create_word	(0X71000847B4);
	create_word	(0X71000847B6);
	create_word	(0X71000847B8);
	create_word	(0X71000847BA);
	create_word	(0X71000847BC);
	create_word	(0X71000847BE);
	create_word	(0X71000847C0);
	create_word	(0X71000847C2);
	create_word	(0X71000847C4);
	create_word	(0X71000847C6);
	create_word	(0X71000847C8);
	create_word	(0X71000847CA);
	create_word	(0X71000847CC);
	create_word	(0X71000847CE);
	create_word	(0X71000847D0);
	create_word	(0X71000847D2);
	create_word	(0X71000847D4);
	create_word	(0X71000847D6);
	create_word	(0X71000847D8);
	create_word	(0X71000847DA);
	create_word	(0X71000847DC);
	create_word	(0X71000847DE);
	create_word	(0X71000847E0);
	create_word	(0X71000847E2);
	create_word	(0X71000847E4);
	create_word	(0X71000847E6);
	create_word	(0X71000847E8);
	create_word	(0X71000847EA);
	create_word	(0X71000847EC);
	create_word	(0X71000847EE);
	create_word	(0X71000847F0);
	create_word	(0X71000847F2);
	create_word	(0X71000847F4);
	create_word	(0X71000847F6);
	create_word	(0X71000847F8);
	create_word	(0X71000847FA);
	create_word	(0X71000847FC);
	create_word	(0X71000847FE);
	create_word	(0X7100084800);
	create_word	(0X7100084802);
	create_word	(0X7100084804);
	create_word	(0X7100084806);
	create_word	(0X7100084808);
	create_word	(0X710008480A);
	create_word	(0X710008480C);
	create_word	(0X710008480E);
	create_word	(0X7100084810);
	create_word	(0X7100084812);
	set_cmt	(0X7100084830,	"jump table for switch statement",	0);
	create_byte	(0X7100084830);
	set_name	(0X7100084830,	"jpt_7100028A6C");
	create_byte	(0X7100084831);
	create_byte	(0X7100084832);
	create_byte	(0X7100084833);
	create_byte	(0X7100084834);
	make_array	(0X7100084834,	0X100);
	set_cmt	(0X7100084934,	"jump table for switch statement",	0);
	create_word	(0X7100084934);
	set_name	(0X7100084934,	"jpt_7100028EEC");
	create_word	(0X7100084936);
	create_word	(0X7100084938);
	create_word	(0X710008493A);
	create_word	(0X710008493C);
	create_word	(0X710008493E);
	create_word	(0X7100084940);
	create_word	(0X7100084942);
	create_word	(0X7100084944);
	create_word	(0X7100084946);
	create_word	(0X7100084948);
	create_word	(0X710008494A);
	create_word	(0X710008494C);
	create_word	(0X710008494E);
	create_word	(0X7100084950);
	create_word	(0X7100084952);
	create_word	(0X7100084954);
	create_word	(0X7100084956);
	create_word	(0X7100084958);
	create_word	(0X710008495A);
	create_word	(0X710008495C);
	create_word	(0X710008495E);
	create_word	(0X7100084960);
	create_word	(0X7100084962);
	create_word	(0X7100084964);
	set_cmt	(0X7100084966,	"jump table for switch statement",	0);
	create_byte	(0X7100084966);
	set_name	(0X7100084966,	"jpt_7100028E6C");
	create_byte	(0X7100084967);
	create_byte	(0X7100084968);
	create_byte	(0X7100084969);
	set_cmt	(0X710008496A,	"jump table for switch statement",	0);
	create_byte	(0X710008496A);
	set_name	(0X710008496A,	"jpt_710002909C");
	create_byte	(0X710008496B);
	create_byte	(0X710008496C);
	create_byte	(0X710008496D);
	set_cmt	(0X710008496E,	"jump table for switch statement",	0);
	create_byte	(0X710008496E);
	set_name	(0X710008496E,	"jpt_71000292C0");
	create_byte	(0X710008496F);
	create_byte	(0X7100084970);
	create_byte	(0X7100084971);
	create_byte	(0X7100084972);
	create_byte	(0X7100084973);
	create_byte	(0X7100084974);
	create_byte	(0X7100084975);
	create_byte	(0X7100084976);
	create_byte	(0X7100084977);
	create_byte	(0X7100084978);
	create_byte	(0X7100084979);
	create_byte	(0X710008497A);
	create_byte	(0X710008497B);
	create_byte	(0X710008497C);
	create_byte	(0X710008497D);
	create_byte	(0X710008497E);
	create_byte	(0X710008497F);
	set_cmt	(0X7100084980,	"jump table for switch statement",	0);
	create_byte	(0X7100084980);
	set_name	(0X7100084980,	"jpt_71000299A0");
	create_byte	(0X7100084981);
	create_byte	(0X7100084982);
	create_byte	(0X7100084983);
	create_byte	(0X7100084984);
	create_byte	(0X7100084985);
	create_byte	(0X7100084986);
	create_byte	(0X7100084987);
	create_byte	(0X7100084988);
	create_byte	(0X7100084989);
	create_byte	(0X710008498A);
	create_byte	(0X710008498B);
	create_byte	(0X710008498C);
	create_byte	(0X710008498D);
	create_byte	(0X710008498E);
	create_byte	(0X710008498F);
	set_cmt	(0X7100084C30,	"jump table for switch statement",	0);
	create_byte	(0X7100084C30);
	set_name	(0X7100084C30,	"jpt_710002AB30");
	create_byte	(0X7100084C31);
	create_byte	(0X7100084C32);
	create_byte	(0X7100084C33);
	set_cmt	(0X7100084C34,	"type descriptor name",	1);
	create_strlit	(0X7100084C34,	0X3E);
	set_name	(0X7100084C34,	"_ZTSN2nn2sf4hipc6server2v16detail29HipcAllInOneServerManagerBaseE");
	set_cmt	(0X7100084C72,	"type descriptor name",	1);
	create_strlit	(0X7100084C72,	0X2E);
	set_name	(0X7100084C72,	"_ZTSN2nn2sf4cmif6server23CmifServerDomainManagerE");
	set_cmt	(0X7100084CA0,	"type descriptor name",	1);
	create_strlit	(0X7100084CA0,	0X35);
	set_name	(0X7100084CA0,	"_ZTSN2nn2sf4cmif6server23CmifServerDomainManager6DomainE");
	set_cmt	(0X7100084CD5,	"type descriptor name",	1);
	create_strlit	(0X7100084CD5,	0X2D);
	set_name	(0X7100084CD5,	"_ZTSN2nn2sf4cmif6server22CmifDomainServerObjectE");
	set_cmt	(0X7100084D02,	"type descriptor name",	1);
	create_strlit	(0X7100084D02,	0X1B);
	set_name	(0X7100084D02,	"_ZTSN2nn2sf4cmif11ICmifDomainE");
	set_cmt	(0X7100084D1D,	"type descriptor name",	1);
	create_strlit	(0X7100084D1D,	0X27);
	set_name	(0X7100084D1D,	"_ZTSN2nn2sf4cmif6server16CmifServerDomainE");
	set_cmt	(0X7100084D44,	"jump table for switch statement",	0);
	create_byte	(0X7100084D44);
	set_name	(0X7100084D44,	"jpt_710002C3BC");
	create_byte	(0X7100084D45);
	create_byte	(0X7100084D46);
	create_byte	(0X7100084D47);
	set_cmt	(0X7100084D48,	"jump table for switch statement",	0);
	create_byte	(0X7100084D48);
	set_name	(0X7100084D48,	"jpt_710002D1F8");
	create_byte	(0X7100084D49);
	create_byte	(0X7100084D4A);
	create_byte	(0X7100084D4B);
	set_cmt	(0X7100084D4C,	"type descriptor name",	1);
	create_strlit	(0X7100084D4C,	0X32);
	set_name	(0X7100084D4C,	"_ZTSN2nn2sf4hipc6server2v124HipcServerSessionManagerE");
	set_cmt	(0X7100084D7E,	"type descriptor name",	1);
	create_strlit	(0X7100084D7E,	0X5C);
	set_name	(0X7100084D7E,	"_ZTSN2nn2sf4hipc6server2v125HipcServerSessionManagerTINS0_4cmif6server20CmifServerObjectInfoEEE");
	set_cmt	(0X7100084DDA,	"type descriptor name",	1);
	create_strlit	(0X7100084DDA,	0X36);
	set_name	(0X7100084DDA,	"_ZTSN2nn2sf4hipc6server2v128HipcServerSessionManagerBaseE");
	set_cmt	(0X7100084E10,	"type descriptor name",	1);
	create_strlit	(0X7100084E10,	0X2F);
	set_name	(0X7100084E10,	"_ZTSN2nn2sf4hipc6server24HipcServerApiModelHolderE");
	set_cmt	(0X7100084E3F,	"type descriptor name",	1);
	create_strlit	(0X7100084E3F,	0X38);
	set_name	(0X7100084E3F,	"_ZTSN2nn2sf4hipc6server2v112_GLOBAL__N_116HipcObjectDomainE");
	set_cmt	(0X7100084E77,	"type descriptor name",	1);
	create_strlit	(0X7100084E77,	0X28);
	set_name	(0X7100084E77,	"_ZTSN2nn2sf4hipc6server17IHipcObjectDomainE");
	set_cmt	(0X7100084E9F,	"type descriptor name",	1);
	create_strlit	(0X7100084E9F,	0X29);
	set_name	(0X7100084E9F,	"_ZTSN2nn2sf4hipc6server18Hipc2ServerMessageE");
	set_cmt	(0X7100084EC8,	"type descriptor name",	1);
	create_strlit	(0X7100084EC8,	0X28);
	set_name	(0X7100084EC8,	"_ZTSN2nn2sf4cmif6server17CmifServerMessageE");
	set_cmt	(0X7100084EF0,	"jump table for switch statement",	0);
	create_byte	(0X7100084EF0);
	set_name	(0X7100084EF0,	"jpt_710002DEF0");
	create_byte	(0X7100084EF1);
	create_byte	(0X7100084EF2);
	create_byte	(0X7100084EF3);
	create_byte	(0X7100084EF4);
	set_cmt	(0X7100084EF5,	"type descriptor name",	1);
	create_strlit	(0X7100084EF5,	0X3C);
	set_name	(0X7100084EF5,	"_ZTSN2nn2sf4hipc6server2v134HipcServerSessionManagerWithDomainE");
	set_cmt	(0X7100084F31,	"type descriptor name",	1);
	create_strlit	(0X7100084F31,	0X86);
	set_name	(0X7100084F31,	"_ZTSN2nn2sf22UnmanagedServiceObjectINS0_4hipc6detail12IHipcManagerENS2_6server2v134HipcServerSessionManagerWithDomain15HipcManagerImplEEE");
	set_cmt	(0X7100084FB7,	"type descriptor name",	1);
	create_strlit	(0X7100084FB7,	0X9E);
	set_name	(0X7100084FB7,	"_ZTSN2nn2sf13InterfaceInfoINS0_4hipc6detail12IHipcManagerEE4_tABINS5_5_tO2NINS2_6server2v134HipcServerSessionManagerWithDomain15HipcManagerImplEE4typeES4_E4typeE");
	set_cmt	(0X7100085055,	"type descriptor name",	1);
	create_strlit	(0X7100085055,	0XD1);
	set_name	(0X7100085055,	"_ZTSN2nn2sf6detail19InterfaceInfoBottomINS0_14IServiceObjectEE4_tABINS0_13InterfaceInfoINS0_4hipc6detail12IHipcManagerEE5_tO2NINS7_6server2v134HipcServerSessionManagerWithDomain15HipcManagerImplEE4typeES9_E4typeE");
	set_cmt	(0X7100085126,	"type descriptor name",	1);
	create_strlit	(0X7100085126,	0X23);
	set_name	(0X7100085126,	"_ZTSN2nn2sf4hipc6detail12IHipcManagerE");
	set_cmt	(0X7100085149,	"type descriptor name",	1);
	create_strlit	(0X7100085149,	0XAB);
	set_name	(0X7100085149,	"_ZTSN2nn2sf6detail16ObjectHolderImplINS0_13InterfaceInfoINS0_4hipc6detail12IHipcManagerEE5_tO2NINS4_6server2v134HipcServerSessionManagerWithDomain15HipcManagerImplEE4typeEvEE");
	set_cmt	(0X71000851F4,	"type descriptor name",	1);
	create_strlit	(0X71000851F4,	0X46);
	set_name	(0X71000851F4,	"_ZTSN2nn2sf4cmif6server22CmifDomainServerObject23CmifDomainServerMessageE");
	set_cmt	(0X710008523A,	"type descriptor name",	1);
	create_strlit	(0X710008523A,	0X21);
	set_name	(0X710008523A,	"_ZTSN2nn2sf22UnitHeapMemoryResourceE");
	set_cmt	(0X710008525B,	"type descriptor name",	1);
	create_strlit	(0X710008525B,	0X30);
	set_name	(0X710008525B,	"_ZTSN2nn2sf12_GLOBAL__N_123NewDeleteMemoryResourceE");
	create_strlit	(0X710008528B,	0X4);
	set_name	(0X710008528B,	"aSm");
	set_cmt	(0X710008528F,	"jump table for switch statement",	0);
	create_byte	(0X710008528F);
	set_name	(0X710008528F,	"jpt_710003035C");
	create_byte	(0X7100085290);
	create_byte	(0X7100085291);
	create_byte	(0X7100085292);
	set_cmt	(0X7100085293,	"jump table for switch statement",	0);
	create_byte	(0X7100085293);
	set_name	(0X7100085293,	"jpt_71000310C4");
	create_byte	(0X7100085294);
	create_byte	(0X7100085295);
	create_byte	(0X7100085296);
	set_cmt	(0X7100085297,	"jump table for switch statement",	0);
	create_byte	(0X7100085297);
	set_name	(0X7100085297,	"jpt_7100032684");
	create_byte	(0X7100085298);
	create_byte	(0X7100085299);
	create_byte	(0X710008529A);
	create_byte	(0X710008529B);
	create_byte	(0X710008529C);
	create_byte	(0X710008529D);
	create_byte	(0X710008529E);
	create_strlit	(0X710008529F,	0X6);
	set_name	(0X710008529F,	"aArpW");
	create_strlit	(0X71000852A5,	0X6);
	set_name	(0X71000852A5,	"aArpR");
	set_cmt	(0X71000852AB,	"type descriptor name",	1);
	create_strlit	(0X71000852AB,	0X23);
	set_name	(0X71000852AB,	"_ZTSN2nn4bgsu22PowerStateEventHandlerE");
	set_cmt	(0X71000852CE,	"type descriptor name",	1);
	create_strlit	(0X71000852CE,	0X21);
	set_name	(0X71000852CE,	"_ZTSN2nn4bgtc20IStateControlServiceE");
	set_cmt	(0X71000852EF,	"type descriptor name",	1);
	create_strlit	(0X71000852EF,	0X16F);
	set_name	(0X71000852EF,	"_ZTSN2nn2sf6detail38ObjectImplFactoryWithStatefulAllocatorINS0_4cmif6client6detail9CmifProxyINS_4bgtc16ITaskServiceRootENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSB_18Hipc2ProxyKindBaseILNSA_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESJ_E6ObjectE");
	set_cmt	(0X710008545E,	"type descriptor name",	1);
	create_strlit	(0X710008545E,	0X12F);
	set_name	(0X710008545E,	"_ZTSN2nn2sf4cmif6client6detail9CmifProxyINS_4bgtc16ITaskServiceRootENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINS9_18Hipc2ProxyKindBaseILNS8_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEvEE");
	set_cmt	(0X710008558D,	"type descriptor name",	1);
	create_strlit	(0X710008558D,	0X136);
	set_name	(0X710008558D,	"_ZTSN2nn2sf4cmif6client6detail13CmifProxyImplINS_4bgtc16ITaskServiceRootENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINS9_18Hipc2ProxyKindBaseILNS8_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyES6_NS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEEE");
	set_cmt	(0X71000856C3,	"type descriptor name",	1);
	create_strlit	(0X71000856C3,	0X1D);
	set_name	(0X71000856C3,	"_ZTSN2nn4bgtc16ITaskServiceRootE");
	set_cmt	(0X71000856E0,	"type descriptor name",	1);
	create_strlit	(0X71000856E0,	0X16B);
	set_name	(0X71000856E0,	"_ZTSN2nn2sf6detail38ObjectImplFactoryWithStatefulAllocatorINS0_4cmif6client6detail9CmifProxyINS_4bgtc12ITaskServiceENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSB_18Hipc2ProxyKindBaseILNSA_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESJ_E6ObjectE");
	set_cmt	(0X710008584B,	"type descriptor name",	1);
	create_strlit	(0X710008584B,	0X12B);
	set_name	(0X710008584B,	"_ZTSN2nn2sf4cmif6client6detail9CmifProxyINS_4bgtc12ITaskServiceENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINS9_18Hipc2ProxyKindBaseILNS8_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEvEE");
	set_cmt	(0X7100085976,	"type descriptor name",	1);
	create_strlit	(0X7100085976,	0X132);
	set_name	(0X7100085976,	"_ZTSN2nn2sf4cmif6client6detail13CmifProxyImplINS_4bgtc12ITaskServiceENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINS9_18Hipc2ProxyKindBaseILNS8_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyES6_NS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEEE");
	set_cmt	(0X7100085AA8,	"type descriptor name",	1);
	create_strlit	(0X7100085AA8,	0X19);
	set_name	(0X7100085AA8,	"_ZTSN2nn4bgtc12ITaskServiceE");
	set_cmt	(0X7100085AC1,	"type descriptor name",	1);
	create_strlit	(0X7100085AC1,	0X2D);
	set_name	(0X7100085AC1,	"_ZTSN2nn4bgtc12_GLOBAL__N_118InHalfAwakeCheckerE");
	set_cmt	(0X7100085AEE,	"type descriptor name",	1);
	create_strlit	(0X7100085AEE,	0X2D);
	set_name	(0X7100085AEE,	"_ZTSN2nn4bgtc12ClientBroker18InHalfAwakeCheckerE");
	set_cmt	(0X7100085B1B,	"jump table for switch statement",	0);
	create_byte	(0X7100085B1B);
	set_name	(0X7100085B1B,	"jpt_71000364EC");
	create_byte	(0X7100085B1C);
	create_byte	(0X7100085B1D);
	create_byte	(0X7100085B1E);
	create_byte	(0X7100085B1F);
	set_cmt	(0X7100085B20,	"type descriptor name",	1);
	create_strlit	(0X7100085B20,	0X28);
	set_name	(0X7100085B20,	"_ZTSN2nn4bgtc27CompositeEventHandlerThreadE");
	set_cmt	(0X7100085B48,	"type descriptor name",	1);
	create_strlit	(0X7100085B48,	0X28);
	set_name	(0X7100085B48,	"_ZTSN2nn4bgtc27BackgroundStateEventHandlerE");
	set_cmt	(0X7100085B70,	"type descriptor name",	1);
	create_strlit	(0X7100085B70,	0X4B);
	set_name	(0X7100085B70,	"_ZTSN2nn4bgsu14ThreadTemplateINS_4bgtc27CompositeEventHandlerThreadELm65536EEE");
	set_cmt	(0X7100085BC3,	"jump table for switch statement",	0);
	create_byte	(0X7100085BC3);
	set_name	(0X7100085BC3,	"jpt_71000369E8");
	create_byte	(0X7100085BC4);
	create_byte	(0X7100085BC5);
	create_byte	(0X7100085BC6);
	create_byte	(0X7100085BC7);
	create_byte	(0X7100085BC8);
	create_byte	(0X7100085BC9);
	make_array	(0X7100085BCA,	0X2);
	make_array	(0X7100085BCC,	0X4);
	set_cmt	(0X7100085D76,	"jump table for switch statement",	0);
	create_word	(0X7100085D76);
	set_name	(0X7100085D76,	"jpt_7100039888");
	create_word	(0X7100085D78);
	create_word	(0X7100085D7A);
	create_word	(0X7100085D7C);
	create_word	(0X7100085D7E);
	create_word	(0X7100085D80);
	create_word	(0X7100085D82);
	create_word	(0X7100085D84);
	create_word	(0X7100085D86);
	create_word	(0X7100085D88);
	create_word	(0X7100085D8A);
	create_word	(0X7100085D8C);
	create_word	(0X7100085D8E);
	create_word	(0X7100085D90);
	create_word	(0X7100085D92);
	create_word	(0X7100085D94);
	create_word	(0X7100085D96);
	create_word	(0X7100085D98);
	create_word	(0X7100085D9A);
	create_word	(0X7100085D9C);
	create_word	(0X7100085D9E);
	create_word	(0X7100085DA0);
	create_word	(0X7100085DA2);
	create_word	(0X7100085DA4);
	create_word	(0X7100085DA6);
	create_word	(0X7100085DA8);
	create_word	(0X7100085DAA);
	create_word	(0X7100085DAC);
	create_word	(0X7100085DAE);
	create_word	(0X7100085DB0);
	create_word	(0X7100085DB2);
	create_word	(0X7100085DB4);
	create_word	(0X7100085DB6);
	create_word	(0X7100085DB8);
	create_word	(0X7100085DBA);
	create_word	(0X7100085DBC);
	create_word	(0X7100085DBE);
	create_word	(0X7100085DC0);
	create_word	(0X7100085DC2);
	create_word	(0X7100085DC4);
	create_word	(0X7100085DC6);
	create_word	(0X7100085DC8);
	create_word	(0X7100085DCA);
	create_word	(0X7100085DCC);
	create_word	(0X7100085DCE);
	create_word	(0X7100085DD0);
	create_word	(0X7100085DD2);
	create_word	(0X7100085DD4);
	create_word	(0X7100085DD6);
	create_word	(0X7100085DD8);
	create_word	(0X7100085DDA);
	create_word	(0X7100085DDC);
	create_word	(0X7100085DDE);
	create_word	(0X7100085DE0);
	create_word	(0X7100085DE2);
	create_word	(0X7100085DE4);
	create_word	(0X7100085DE6);
	create_word	(0X7100085DE8);
	create_word	(0X7100085DEA);
	create_word	(0X7100085DEC);
	create_word	(0X7100085DEE);
	create_word	(0X7100085DF0);
	create_word	(0X7100085DF2);
	create_word	(0X7100085DF4);
	create_word	(0X7100085DF6);
	create_word	(0X7100085DF8);
	create_word	(0X7100085DFA);
	create_word	(0X7100085DFC);
	create_word	(0X7100085DFE);
	create_word	(0X7100085E00);
	create_word	(0X7100085E02);
	create_word	(0X7100085E04);
	create_word	(0X7100085E06);
	create_word	(0X7100085E08);
	create_word	(0X7100085E0A);
	create_word	(0X7100085E0C);
	create_word	(0X7100085E0E);
	create_word	(0X7100085E10);
	create_word	(0X7100085E12);
	create_word	(0X7100085E14);
	create_word	(0X7100085E16);
	create_word	(0X7100085E18);
	create_word	(0X7100085E1A);
	create_word	(0X7100085E1C);
	create_word	(0X7100085E1E);
	create_word	(0X7100085E20);
	create_word	(0X7100085E22);
	create_word	(0X7100085E24);
	create_word	(0X7100085E26);
	create_word	(0X7100085E28);
	create_word	(0X7100085E2A);
	create_word	(0X7100085E2C);
	create_word	(0X7100085E2E);
	create_word	(0X7100085E30);
	create_word	(0X7100085E32);
	create_word	(0X7100085E34);
	create_word	(0X7100085E36);
	create_word	(0X7100085E38);
	create_word	(0X7100085E3A);
	create_word	(0X7100085E3C);
	create_word	(0X7100085E3E);
	create_word	(0X7100085E40);
	create_word	(0X7100085E42);
	set_cmt	(0X7100085E44,	"jump table for switch statement",	0);
	create_byte	(0X7100085E44);
	set_name	(0X7100085E44,	"jpt_710003AFC4");
	create_byte	(0X7100085E45);
	create_byte	(0X7100085E46);
	create_byte	(0X7100085E47);
	create_byte	(0X7100085E48);
	set_cmt	(0X7100085E49,	"type descriptor name",	1);
	create_strlit	(0X7100085E49,	0X1D);
	set_name	(0X7100085E49,	"_ZTSN2nn4bgtc16IpcServerManagerE");
	set_cmt	(0X7100085E66,	"type descriptor name",	1);
	create_strlit	(0X7100085E66,	0X56);
	set_name	(0X7100085E66,	"_ZTSN2nn2sf31HipcSimpleAllInOneServerManagerILm80ELm2ENS_4bgtc22IpcServerManagerOptionEEE");
	set_cmt	(0X7100085EBC,	"type descriptor name",	1);
	create_strlit	(0X7100085EBC,	0XA1);
	set_name	(0X7100085EBC,	"_ZTSN2nn2sf4hipc6server2v131HipcSimpleAllInOneServerManagerILm80ELm2ENS0_6detail44HipcSimpleAllInOneServerManagerOptionsGetterINS_4bgtc22IpcServerManagerOptionEEEEE");
	set_cmt	(0X7100085F5D,	"type descriptor name",	1);
	create_strlit	(0X7100085F5D,	0X2D);
	set_name	(0X7100085F5D,	"_ZTSN2nn2sf34HipcServerSessionManagerCommonBaseE");
	set_cmt	(0X7100085F8A,	"type descriptor name",	1);
	create_strlit	(0X7100085F8A,	0X111);
	set_name	(0X7100085F8A,	"_ZTSN2nn2sf6detail39ObjectImplFactoryWithStatelessAllocatorINS0_13InterfaceInfoINS_4bgtc16ITaskServiceRootEE4_tABINS6_5_tO2NINS4_19TaskServiceRootImplEE4typeES5_E4typeENS0_25StatelessAllocationPolicyINS0_22ExpHeapStaticAllocatorILm8192ENS4_12_GLOBAL__N_17HipcTagEEEEEE6ObjectE");
	set_cmt	(0X710008609B,	"type descriptor name",	1);
	create_strlit	(0X710008609B,	0X70);
	set_name	(0X710008609B,	"_ZTSN2nn2sf13InterfaceInfoINS_4bgtc16ITaskServiceRootEE4_tABINS4_5_tO2NINS2_19TaskServiceRootImplEE4typeES3_E4typeE");
	set_cmt	(0X710008610B,	"type descriptor name",	1);
	create_strlit	(0X710008610B,	0XA3);
	set_name	(0X710008610B,	"_ZTSN2nn2sf6detail19InterfaceInfoBottomINS0_14IServiceObjectEE4_tABINS0_13InterfaceInfoINS_4bgtc16ITaskServiceRootEE5_tO2NINS7_19TaskServiceRootImplEE4typeES8_E4typeE");
	set_cmt	(0X71000861AE,	"type descriptor name",	1);
	create_strlit	(0X71000861AE,	0X7D);
	set_name	(0X71000861AE,	"_ZTSN2nn2sf6detail16ObjectHolderImplINS0_13InterfaceInfoINS_4bgtc16ITaskServiceRootEE5_tO2NINS4_19TaskServiceRootImplEE4typeEvEE");
	set_cmt	(0X710008622B,	"type descriptor name",	1);
	create_strlit	(0X710008622B,	0X119);
	set_name	(0X710008622B,	"_ZTSN2nn2sf6detail39ObjectImplFactoryWithStatelessAllocatorINS0_13InterfaceInfoINS_4bgtc20IStateControlServiceEE4_tABINS6_5_tO2NINS4_23StateControlServiceImplEE4typeES5_E4typeENS0_25StatelessAllocationPolicyINS0_22ExpHeapStaticAllocatorILm8192ENS4_12_GLOBAL__N_17HipcTagEEEEEE6ObjectE");
	set_cmt	(0X7100086344,	"type descriptor name",	1);
	create_strlit	(0X7100086344,	0X78);
	set_name	(0X7100086344,	"_ZTSN2nn2sf13InterfaceInfoINS_4bgtc20IStateControlServiceEE4_tABINS4_5_tO2NINS2_23StateControlServiceImplEE4typeES3_E4typeE");
	set_cmt	(0X71000863BC,	"type descriptor name",	1);
	create_strlit	(0X71000863BC,	0XAB);
	set_name	(0X71000863BC,	"_ZTSN2nn2sf6detail19InterfaceInfoBottomINS0_14IServiceObjectEE4_tABINS0_13InterfaceInfoINS_4bgtc20IStateControlServiceEE5_tO2NINS7_23StateControlServiceImplEE4typeES8_E4typeE");
	set_cmt	(0X7100086467,	"type descriptor name",	1);
	create_strlit	(0X7100086467,	0X85);
	set_name	(0X7100086467,	"_ZTSN2nn2sf6detail16ObjectHolderImplINS0_13InterfaceInfoINS_4bgtc20IStateControlServiceEE5_tO2NINS4_23StateControlServiceImplEE4typeEvEE");
	set_cmt	(0X71000864EC,	"type descriptor name",	1);
	create_strlit	(0X71000864EC,	0XF4);
	set_name	(0X71000864EC,	"_ZTSN2nn2sf6detail39ObjectImplFactoryWithStatelessAllocatorINS0_13InterfaceInfoINS_4bgtc12ITaskServiceEE4_tABINS6_5_tO2NINS4_15TaskServiceImplEE4typeES5_E4typeENS0_30StatelessTypedAllocationPolicyINS1_32DefaultAllocationPolicyAllocatorEEEE6ObjectE");
	set_cmt	(0X71000865E0,	"type descriptor name",	1);
	create_strlit	(0X71000865E0,	0X68);
	set_name	(0X71000865E0,	"_ZTSN2nn2sf13InterfaceInfoINS_4bgtc12ITaskServiceEE4_tABINS4_5_tO2NINS2_15TaskServiceImplEE4typeES3_E4typeE");
	set_cmt	(0X7100086648,	"type descriptor name",	1);
	create_strlit	(0X7100086648,	0X9B);
	set_name	(0X7100086648,	"_ZTSN2nn2sf6detail19InterfaceInfoBottomINS0_14IServiceObjectEE4_tABINS0_13InterfaceInfoINS_4bgtc12ITaskServiceEE5_tO2NINS7_15TaskServiceImplEE4typeES8_E4typeE");
	set_cmt	(0X71000866E3,	"type descriptor name",	1);
	create_strlit	(0X71000866E3,	0X75);
	set_name	(0X71000866E3,	"_ZTSN2nn2sf6detail16ObjectHolderImplINS0_13InterfaceInfoINS_4bgtc12ITaskServiceEE5_tO2NINS4_15TaskServiceImplEE4typeEvEE");
	set_cmt	(0X7100086768,	"type descriptor name",	1);
	create_strlit	(0X7100086768,	0X1E);
	set_name	(0X7100086768,	"_ZTSN2nn3err6detail11ExpHeapBaseE");
	set_cmt	(0X7100086786,	"type descriptor name",	1);
	create_strlit	(0X7100086786,	0X1F);
	set_name	(0X7100086786,	"_ZTSN2nn3err6detail12NopAllocatorE");
	set_cmt	(0X71000867A5,	"type descriptor name",	1);
	create_strlit	(0X71000867A5,	0X104);
	set_name	(0X71000867A5,	"_ZTSN2nn2sf6detail38ObjectImplFactoryWithStatefulAllocatorINS0_13InterfaceInfoINS_3err7context17IContextRegistrarEE4_tABINS7_5_tO2NINS4_6server16ContextRegistrarINSA_29ContextWriterServiceForSystemEEEE4typeES6_E4typeENS0_30MemoryResourceAllocationPolicyEE6ObjectE");
	set_cmt	(0X71000868A9,	"type descriptor name",	1);
	create_strlit	(0X71000868A9,	0XA2);
	set_name	(0X71000868A9,	"_ZTSN2nn2sf13InterfaceInfoINS_3err7context17IContextRegistrarEE4_tABINS5_5_tO2NINS2_6server16ContextRegistrarINS8_29ContextWriterServiceForSystemEEEE4typeES4_E4typeE");
	set_cmt	(0X710008694B,	"type descriptor name",	1);
	create_strlit	(0X710008694B,	0XD5);
	set_name	(0X710008694B,	"_ZTSN2nn2sf6detail19InterfaceInfoBottomINS0_14IServiceObjectEE4_tABINS0_13InterfaceInfoINS_3err7context17IContextRegistrarEE5_tO2NINS7_6server16ContextRegistrarINSC_29ContextWriterServiceForSystemEEEE4typeES9_E4typeE");
	set_cmt	(0X7100086A20,	"type descriptor name",	1);
	create_strlit	(0X7100086A20,	0X25);
	set_name	(0X7100086A20,	"_ZTSN2nn3err7context17IContextRegistrarE");
	set_cmt	(0X7100086A45,	"type descriptor name",	1);
	create_strlit	(0X7100086A45,	0XAF);
	set_name	(0X7100086A45,	"_ZTSN2nn2sf6detail16ObjectHolderImplINS0_13InterfaceInfoINS_3err7context17IContextRegistrarEE5_tO2NINS4_6server16ContextRegistrarINS9_29ContextWriterServiceForSystemEEEE4typeEvEE");
	set_cmt	(0X7100086AF4,	"type descriptor name",	1);
	create_strlit	(0X7100086AF4,	0X109);
	set_name	(0X7100086AF4,	"_ZTSN2nn2sf6detail38ObjectImplFactoryWithStatefulAllocatorINS0_13InterfaceInfoINS_3err7context17IContextRegistrarEE4_tABINS7_5_tO2NINS4_6server16ContextRegistrarINSA_34ContextWriterServiceForApplicationEEEE4typeES6_E4typeENS0_30MemoryResourceAllocationPolicyEE6ObjectE");
	set_cmt	(0X7100086BFD,	"type descriptor name",	1);
	create_strlit	(0X7100086BFD,	0XA7);
	set_name	(0X7100086BFD,	"_ZTSN2nn2sf13InterfaceInfoINS_3err7context17IContextRegistrarEE4_tABINS5_5_tO2NINS2_6server16ContextRegistrarINS8_34ContextWriterServiceForApplicationEEEE4typeES4_E4typeE");
	set_cmt	(0X7100086CA4,	"type descriptor name",	1);
	create_strlit	(0X7100086CA4,	0XDA);
	set_name	(0X7100086CA4,	"_ZTSN2nn2sf6detail19InterfaceInfoBottomINS0_14IServiceObjectEE4_tABINS0_13InterfaceInfoINS_3err7context17IContextRegistrarEE5_tO2NINS7_6server16ContextRegistrarINSC_34ContextWriterServiceForApplicationEEEE4typeES9_E4typeE");
	set_cmt	(0X7100086D7E,	"type descriptor name",	1);
	create_strlit	(0X7100086D7E,	0XB4);
	set_name	(0X7100086D7E,	"_ZTSN2nn2sf6detail16ObjectHolderImplINS0_13InterfaceInfoINS_3err7context17IContextRegistrarEE5_tO2NINS4_6server16ContextRegistrarINS9_34ContextWriterServiceForApplicationEEEE4typeEvEE");
	create_strlit	(0X7100086E32,	0X8);
	set_name	(0X7100086E32,	"aFatalU");
	set_cmt	(0X7100086E3A,	"type descriptor name",	1);
	create_strlit	(0X7100086E3A,	0X11F);
	set_name	(0X7100086E3A,	"_ZTSN2nn2sf6detail38ObjectImplFactoryWithStatefulAllocatorINS0_4cmif6client6detail9CmifProxyINS_8fatalsrv8IServiceENS0_4hipc6client18Hipc2ProxyKindBaseILNS9_6detail11MessageTypeE6EEENS0_30MemoryResourceAllocationPolicyENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESF_E6ObjectE");
	set_cmt	(0X7100086F59,	"type descriptor name",	1);
	create_strlit	(0X7100086F59,	0XDF);
	set_name	(0X7100086F59,	"_ZTSN2nn2sf4cmif6client6detail9CmifProxyINS_8fatalsrv8IServiceENS0_4hipc6client18Hipc2ProxyKindBaseILNS7_6detail11MessageTypeE6EEENS0_30MemoryResourceAllocationPolicyENS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEvEE");
	set_cmt	(0X7100087038,	"type descriptor name",	1);
	create_strlit	(0X7100087038,	0XE6);
	set_name	(0X7100087038,	"_ZTSN2nn2sf4cmif6client6detail13CmifProxyImplINS_8fatalsrv8IServiceENS0_4hipc6client18Hipc2ProxyKindBaseILNS7_6detail11MessageTypeE6EEENS0_30MemoryResourceAllocationPolicyES6_NS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEEE");
	set_cmt	(0X710008711E,	"type descriptor name",	1);
	create_strlit	(0X710008711E,	0X18);
	set_name	(0X710008711E,	"_ZTSN2nn8fatalsrv8IServiceE");
	set_cmt	(0X7100087136,	"type descriptor name",	1);
	create_strlit	(0X7100087136,	0X31);
	set_name	(0X7100087136,	"_ZTSN2nn2sf4hipc6client26Hipc2ClientProxyBaseObjectE");
	create_qword	(0X7100087168);
	create_strlit	(0X71000871A0,	0X9);
	set_name	(0X71000871A0,	"aHshlSys");
	set_cmt	(0X71000871A9,	"type descriptor name",	1);
	create_strlit	(0X71000871A9,	0X104);
	set_name	(0X71000871A9,	"_ZTSN2nn2sf6detail38ObjectImplFactoryWithStatefulAllocatorINS0_13InterfaceInfoINS_12notification6server35INotificationServicesForApplicationEE4_tABINS7_5_tO2NINS5_34NotificationServicesForApplicationEE4typeES6_E4typeENS0_30MemoryResourceAllocationPolicyEE6ObjectE");
	set_cmt	(0X71000872AD,	"type descriptor name",	1);
	create_strlit	(0X71000872AD,	0XA2);
	set_name	(0X71000872AD,	"_ZTSN2nn2sf13InterfaceInfoINS_12notification6server35INotificationServicesForApplicationEE4_tABINS5_5_tO2NINS3_34NotificationServicesForApplicationEE4typeES4_E4typeE");
	set_cmt	(0X710008734F,	"type descriptor name",	1);
	create_strlit	(0X710008734F,	0XC6);
	set_name	(0X710008734F,	"_ZTSN2nn2sf13InterfaceInfoINS_12notification6server27INotificationServicesCommonEE4_tABINS1_INS3_35INotificationServicesForApplicationEE5_tO2NINS3_34NotificationServicesForApplicationEE4typeES7_E4typeE");
	set_cmt	(0X7100087415,	"type descriptor name",	1);
	create_strlit	(0X7100087415,	0XD5);
	set_name	(0X7100087415,	"_ZTSN2nn2sf6detail19InterfaceInfoBottomINS0_14IServiceObjectEE4_tABINS0_13InterfaceInfoINS_12notification6server35INotificationServicesForApplicationEE5_tO2NINS8_34NotificationServicesForApplicationEE4typeES9_E4typeE");
	set_cmt	(0X71000874EA,	"type descriptor name",	1);
	create_strlit	(0X71000874EA,	0X40);
	set_name	(0X71000874EA,	"_ZTSN2nn12notification6server35INotificationServicesForApplicationE");
	set_cmt	(0X710008752A,	"type descriptor name",	1);
	create_strlit	(0X710008752A,	0X38);
	set_name	(0X710008752A,	"_ZTSN2nn12notification6server27INotificationServicesCommonE");
	set_cmt	(0X7100087562,	"type descriptor name",	1);
	create_strlit	(0X7100087562,	0XAF);
	set_name	(0X7100087562,	"_ZTSN2nn2sf6detail16ObjectHolderImplINS0_13InterfaceInfoINS_12notification6server35INotificationServicesForApplicationEE5_tO2NINS5_34NotificationServicesForApplicationEE4typeEvEE");
	set_cmt	(0X7100087611,	"type descriptor name",	1);
	create_strlit	(0X7100087611,	0XFE);
	set_name	(0X7100087611,	"_ZTSN2nn2sf6detail38ObjectImplFactoryWithStatefulAllocatorINS0_13InterfaceInfoINS_12notification6server32INotificationSystemEventAccessorEE4_tABINS7_5_tO2NINS5_31NotificationSystemEventAccessorEE4typeES6_E4typeENS0_30MemoryResourceAllocationPolicyEE6ObjectE");
	set_cmt	(0X710008770F,	"type descriptor name",	1);
	create_strlit	(0X710008770F,	0X9C);
	set_name	(0X710008770F,	"_ZTSN2nn2sf13InterfaceInfoINS_12notification6server32INotificationSystemEventAccessorEE4_tABINS5_5_tO2NINS3_31NotificationSystemEventAccessorEE4typeES4_E4typeE");
	set_cmt	(0X71000877AB,	"type descriptor name",	1);
	create_strlit	(0X71000877AB,	0XCF);
	set_name	(0X71000877AB,	"_ZTSN2nn2sf6detail19InterfaceInfoBottomINS0_14IServiceObjectEE4_tABINS0_13InterfaceInfoINS_12notification6server32INotificationSystemEventAccessorEE5_tO2NINS8_31NotificationSystemEventAccessorEE4typeES9_E4typeE");
	set_cmt	(0X710008787A,	"type descriptor name",	1);
	create_strlit	(0X710008787A,	0X3D);
	set_name	(0X710008787A,	"_ZTSN2nn12notification6server32INotificationSystemEventAccessorE");
	set_cmt	(0X71000878B7,	"type descriptor name",	1);
	create_strlit	(0X71000878B7,	0XA9);
	set_name	(0X71000878B7,	"_ZTSN2nn2sf6detail16ObjectHolderImplINS0_13InterfaceInfoINS_12notification6server32INotificationSystemEventAccessorEE5_tO2NINS5_31NotificationSystemEventAccessorEE4typeEvEE");
	create_strlit	(0X7100087968,	0X6);
	set_name	(0X7100087968,	"aArpR_0");
	set_cmt	(0X710008796E,	"type descriptor name",	1);
	create_strlit	(0X710008796E,	0X16B);
	set_name	(0X710008796E,	"_ZTSN2nn2sf6detail38ObjectImplFactoryWithStatefulAllocatorINS0_4cmif6client6detail9CmifProxyINS_3arp6detail7IReaderENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSC_18Hipc2ProxyKindBaseILNSB_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESK_E6ObjectE");
	set_cmt	(0X7100087AD9,	"type descriptor name",	1);
	create_strlit	(0X7100087AD9,	0X12B);
	set_name	(0X7100087AD9,	"_ZTSN2nn2sf4cmif6client6detail9CmifProxyINS_3arp6detail7IReaderENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSA_18Hipc2ProxyKindBaseILNS9_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEvEE");
	set_cmt	(0X7100087C04,	"type descriptor name",	1);
	create_strlit	(0X7100087C04,	0X132);
	set_name	(0X7100087C04,	"_ZTSN2nn2sf4cmif6client6detail13CmifProxyImplINS_3arp6detail7IReaderENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSA_18Hipc2ProxyKindBaseILNS9_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyES7_NS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEEE");
	set_cmt	(0X7100087D36,	"type descriptor name",	1);
	create_strlit	(0X7100087D36,	0X19);
	set_name	(0X7100087D36,	"_ZTSN2nn3arp6detail7IReaderE");
	set_cmt	(0X7100087D4F,	"type descriptor name",	1);
	create_strlit	(0X7100087D4F,	0X17C);
	set_name	(0X7100087D4F,	"_ZTSN2nn2sf6detail38ObjectImplFactoryWithStatefulAllocatorINS0_4cmif6client6detail9CmifProxyINS_3arp6detail23IUnregistrationNotifierENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSC_18Hipc2ProxyKindBaseILNSB_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESK_E6ObjectE");
	set_cmt	(0X7100087ECB,	"type descriptor name",	1);
	create_strlit	(0X7100087ECB,	0X13C);
	set_name	(0X7100087ECB,	"_ZTSN2nn2sf4cmif6client6detail9CmifProxyINS_3arp6detail23IUnregistrationNotifierENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSA_18Hipc2ProxyKindBaseILNS9_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEvEE");
	set_cmt	(0X7100088007,	"type descriptor name",	1);
	create_strlit	(0X7100088007,	0X143);
	set_name	(0X7100088007,	"_ZTSN2nn2sf4cmif6client6detail13CmifProxyImplINS_3arp6detail23IUnregistrationNotifierENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSA_18Hipc2ProxyKindBaseILNS9_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyES7_NS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEEE");
	set_cmt	(0X710008814A,	"type descriptor name",	1);
	create_strlit	(0X710008814A,	0X2A);
	set_name	(0X710008814A,	"_ZTSN2nn3arp6detail23IUnregistrationNotifierE");
	set_cmt	(0X7100088174,	"jump table for switch statement",	0);
	create_byte	(0X7100088174);
	set_name	(0X7100088174,	"jpt_7100046D28");
	create_byte	(0X7100088175);
	create_byte	(0X7100088176);
	create_byte	(0X7100088177);
	create_byte	(0X7100088178);
	create_byte	(0X7100088179);
	create_byte	(0X710008817A);
	create_strlit	(0X710008817B,	0X5);
	set_name	(0X710008817B,	"aPlU");
	create_qword	(0X71000881A0);
	make_array	(0X71000881A0,	0X7);
	create_strlit	(0X71000881D8,	0X6);
	set_name	(0X71000881D8,	"aPscM");
	create_strlit	(0X71000881DE,	0X8);
	set_name	(0X71000881DE,	"aSetSys");
	set_cmt	(0X71000881E6,	"type descriptor name",	1);
	create_strlit	(0X71000881E6,	0X12D);
	set_name	(0X71000881E6,	"_ZTSN2nn2sf6detail38ObjectImplFactoryWithStatefulAllocatorINS0_4cmif6client6detail9CmifProxyINS_8settings21ISystemSettingsServerENS0_4hipc6client18Hipc2ProxyKindBaseILNS9_6detail11MessageTypeE6EEENS0_30MemoryResourceAllocationPolicyENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESF_E6ObjectE");
	set_cmt	(0X7100088313,	"type descriptor name",	1);
	create_strlit	(0X7100088313,	0XED);
	set_name	(0X7100088313,	"_ZTSN2nn2sf4cmif6client6detail9CmifProxyINS_8settings21ISystemSettingsServerENS0_4hipc6client18Hipc2ProxyKindBaseILNS7_6detail11MessageTypeE6EEENS0_30MemoryResourceAllocationPolicyENS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEvEE");
	set_cmt	(0X7100088400,	"type descriptor name",	1);
	create_strlit	(0X7100088400,	0XF4);
	set_name	(0X7100088400,	"_ZTSN2nn2sf4cmif6client6detail13CmifProxyImplINS_8settings21ISystemSettingsServerENS0_4hipc6client18Hipc2ProxyKindBaseILNS7_6detail11MessageTypeE6EEENS0_30MemoryResourceAllocationPolicyES6_NS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEEE");
	set_cmt	(0X71000884F4,	"type descriptor name",	1);
	create_strlit	(0X71000884F4,	0X26);
	set_name	(0X71000884F4,	"_ZTSN2nn8settings21ISystemSettingsServerE");
	make_array	(0X710008851A,	0X2);
	create_qword	(0X710008851C);
	set_cmt	(0X7100088554,	"jump table for switch statement",	0);
	create_byte	(0X7100088554);
	set_name	(0X7100088554,	"jpt_7100050790");
	create_byte	(0X7100088555);
	create_byte	(0X7100088556);
	create_byte	(0X7100088557);
	create_byte	(0X7100088558);
	create_byte	(0X7100088559);
	create_byte	(0X710008855A);
	create_byte	(0X710008855B);
	create_byte	(0X710008855C);
	create_byte	(0X710008855D);
	create_byte	(0X710008855E);
	set_cmt	(0X710008855F,	"type descriptor name",	1);
	create_strlit	(0X710008855F,	0X9A);
	set_name	(0X710008855F,	"_ZTSN2nn4util6detail8FunctionIFvvEZNS_5srepo6detail12_GLOBAL__N_110CallerImpl4CallENS_4diag22HashedTraceContextImplEONS0_16VaargTypeErasure7InvokerEEUlvE_vEE");
	set_cmt	(0X71000885F9,	"type descriptor name",	1);
	create_strlit	(0X71000885F9,	0X1B);
	set_name	(0X71000885F9,	"_ZTSN2nn4util9IFunctionIFvvEEE");
	set_cmt	(0X7100088614,	"type descriptor name",	1);
	create_strlit	(0X7100088614,	0X7E);
	set_name	(0X7100088614,	"_ZTSZN2nn5srepo6detail12_GLOBAL__N_110CallerImpl4CallENS_4diag22HashedTraceContextImplEONS_4util16VaargTypeErasure7InvokerEEUlvE_");
	create_strlit	(0X7100088692,	0X8);
	set_name	(0X7100088692,	"aSrepoU");
	create_strlit	(0X710008869A,	0X8);
	set_name	(0X710008869A,	"aSrepoA");
	set_cmt	(0X71000886A2,	"type descriptor name",	1);
	create_strlit	(0X71000886A2,	0X178);
	set_name	(0X71000886A2,	"_ZTSN2nn2sf6detail38ObjectImplFactoryWithStatefulAllocatorINS0_4cmif6client6detail9CmifProxyINS_5srepo6detail3ipc13ISrepoServiceENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSD_18Hipc2ProxyKindBaseILNSC_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESL_E6ObjectE");
	set_cmt	(0X710008881A,	"type descriptor name",	1);
	create_strlit	(0X710008881A,	0X138);
	set_name	(0X710008881A,	"_ZTSN2nn2sf4cmif6client6detail9CmifProxyINS_5srepo6detail3ipc13ISrepoServiceENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSB_18Hipc2ProxyKindBaseILNSA_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEvEE");
	set_cmt	(0X7100088952,	"type descriptor name",	1);
	create_strlit	(0X7100088952,	0X13F);
	set_name	(0X7100088952,	"_ZTSN2nn2sf4cmif6client6detail13CmifProxyImplINS_5srepo6detail3ipc13ISrepoServiceENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSB_18Hipc2ProxyKindBaseILNSA_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyES8_NS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEEE");
	set_cmt	(0X7100088A91,	"type descriptor name",	1);
	create_strlit	(0X7100088A91,	0X26);
	set_name	(0X7100088A91,	"_ZTSN2nn5srepo6detail3ipc13ISrepoServiceE");
	create_qword	(0X7100088AB8);
	create_qword	(0X7100088AF0);
	set_cmt	(0X7100088B28,	"type descriptor name",	1);
	create_strlit	(0X7100088B28,	0X178);
	set_name	(0X7100088B28,	"_ZTSN2nn2sf6detail38ObjectImplFactoryWithStatefulAllocatorINS0_4cmif6client6detail9CmifProxyINS_5srepo6detail3ipc13IAsyncContextENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSD_18Hipc2ProxyKindBaseILNSC_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESL_E6ObjectE");
	set_cmt	(0X7100088CA0,	"type descriptor name",	1);
	create_strlit	(0X7100088CA0,	0X138);
	set_name	(0X7100088CA0,	"_ZTSN2nn2sf4cmif6client6detail9CmifProxyINS_5srepo6detail3ipc13IAsyncContextENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSB_18Hipc2ProxyKindBaseILNSA_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEvEE");
	set_cmt	(0X7100088DD8,	"type descriptor name",	1);
	create_strlit	(0X7100088DD8,	0X13F);
	set_name	(0X7100088DD8,	"_ZTSN2nn2sf4cmif6client6detail13CmifProxyImplINS_5srepo6detail3ipc13IAsyncContextENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSB_18Hipc2ProxyKindBaseILNSA_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyES8_NS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEEE");
	set_cmt	(0X7100088F17,	"type descriptor name",	1);
	create_strlit	(0X7100088F17,	0X26);
	set_name	(0X7100088F17,	"_ZTSN2nn5srepo6detail3ipc13IAsyncContextE");
	make_array	(0X7100088F3D,	0X3);
	create_qword	(0X7100088F40);
	set_cmt	(0X7100088F78,	"type descriptor name",	1);
	create_strlit	(0X7100088F78,	0X178);
	set_name	(0X7100088F78,	"_ZTSN2nn2sf6detail38ObjectImplFactoryWithStatefulAllocatorINS0_4cmif6client6detail9CmifProxyINS_5srepo6detail3ipc13ISyslogLoggerENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSD_18Hipc2ProxyKindBaseILNSC_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESL_E6ObjectE");
	set_cmt	(0X71000890F0,	"type descriptor name",	1);
	create_strlit	(0X71000890F0,	0X138);
	set_name	(0X71000890F0,	"_ZTSN2nn2sf4cmif6client6detail9CmifProxyINS_5srepo6detail3ipc13ISyslogLoggerENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSB_18Hipc2ProxyKindBaseILNSA_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEvEE");
	set_cmt	(0X7100089228,	"type descriptor name",	1);
	create_strlit	(0X7100089228,	0X13F);
	set_name	(0X7100089228,	"_ZTSN2nn2sf4cmif6client6detail13CmifProxyImplINS_5srepo6detail3ipc13ISyslogLoggerENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSB_18Hipc2ProxyKindBaseILNSA_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyES8_NS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEEE");
	set_cmt	(0X7100089367,	"type descriptor name",	1);
	create_strlit	(0X7100089367,	0X26);
	set_name	(0X7100089367,	"_ZTSN2nn5srepo6detail3ipc13ISyslogLoggerE");
	make_array	(0X710008938D,	0X3);
	create_qword	(0X7100089390);
	set_cmt	(0X71000893C8,	"jump table for switch statement",	0);
	create_byte	(0X71000893C8);
	set_name	(0X71000893C8,	"jpt_7100054134");
	create_byte	(0X71000893C9);
	create_byte	(0X71000893CA);
	create_byte	(0X71000893CB);
	create_strlit	(0X71000893CC,	0X7);
	set_name	(0X71000893CC,	"aTimeU");
	create_strlit	(0X71000893D3,	0X7);
	set_name	(0X71000893D3,	"aTimeA");
	create_strlit	(0X71000893DA,	0X7);
	set_name	(0X71000893DA,	"aTimeS");
	create_strlit	(0X71000893E1,	0X7);
	set_name	(0X71000893E1,	"aTimeR");
	create_strlit	(0X71000893E8,	0X8);
	set_name	(0X71000893E8,	"aTimeSu");
	set_cmt	(0X71000893F0,	"type descriptor name",	1);
	create_strlit	(0X71000893F0,	0X17F);
	set_name	(0X71000893F0,	"_ZTSN2nn2sf6detail38ObjectImplFactoryWithStatefulAllocatorINS0_4cmif6client6detail9CmifProxyINS_7timesrv6detail7service14IStaticServiceENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSD_18Hipc2ProxyKindBaseILNSC_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESL_E6ObjectE");
	set_cmt	(0X710008956F,	"type descriptor name",	1);
	create_strlit	(0X710008956F,	0X13F);
	set_name	(0X710008956F,	"_ZTSN2nn2sf4cmif6client6detail9CmifProxyINS_7timesrv6detail7service14IStaticServiceENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSB_18Hipc2ProxyKindBaseILNSA_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEvEE");
	set_cmt	(0X71000896AE,	"type descriptor name",	1);
	create_strlit	(0X71000896AE,	0X146);
	set_name	(0X71000896AE,	"_ZTSN2nn2sf4cmif6client6detail13CmifProxyImplINS_7timesrv6detail7service14IStaticServiceENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSB_18Hipc2ProxyKindBaseILNSA_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyES8_NS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEEE");
	set_cmt	(0X71000897F4,	"type descriptor name",	1);
	create_strlit	(0X71000897F4,	0X2D);
	set_name	(0X71000897F4,	"_ZTSN2nn7timesrv6detail7service14IStaticServiceE");
	set_cmt	(0X7100089821,	"type descriptor name",	1);
	create_strlit	(0X7100089821,	0X17D);
	set_name	(0X7100089821,	"_ZTSN2nn2sf6detail38ObjectImplFactoryWithStatefulAllocatorINS0_4cmif6client6detail9CmifProxyINS_7timesrv6detail7service12ISystemClockENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSD_18Hipc2ProxyKindBaseILNSC_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESL_E6ObjectE");
	set_cmt	(0X710008999E,	"type descriptor name",	1);
	create_strlit	(0X710008999E,	0X13D);
	set_name	(0X710008999E,	"_ZTSN2nn2sf4cmif6client6detail9CmifProxyINS_7timesrv6detail7service12ISystemClockENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSB_18Hipc2ProxyKindBaseILNSA_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEvEE");
	set_cmt	(0X7100089ADB,	"type descriptor name",	1);
	create_strlit	(0X7100089ADB,	0X144);
	set_name	(0X7100089ADB,	"_ZTSN2nn2sf4cmif6client6detail13CmifProxyImplINS_7timesrv6detail7service12ISystemClockENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSB_18Hipc2ProxyKindBaseILNSA_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyES8_NS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEEE");
	set_cmt	(0X7100089C1F,	"type descriptor name",	1);
	create_strlit	(0X7100089C1F,	0X2B);
	set_name	(0X7100089C1F,	"_ZTSN2nn7timesrv6detail7service12ISystemClockE");
	set_cmt	(0X7100089C4A,	"type descriptor name",	1);
	create_strlit	(0X7100089C4A,	0X17D);
	set_name	(0X7100089C4A,	"_ZTSN2nn2sf6detail38ObjectImplFactoryWithStatefulAllocatorINS0_4cmif6client6detail9CmifProxyINS_7timesrv6detail7service12ISteadyClockENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSD_18Hipc2ProxyKindBaseILNSC_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESL_E6ObjectE");
	set_cmt	(0X7100089DC7,	"type descriptor name",	1);
	create_strlit	(0X7100089DC7,	0X13D);
	set_name	(0X7100089DC7,	"_ZTSN2nn2sf4cmif6client6detail9CmifProxyINS_7timesrv6detail7service12ISteadyClockENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSB_18Hipc2ProxyKindBaseILNSA_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEvEE");
	set_cmt	(0X7100089F04,	"type descriptor name",	1);
	create_strlit	(0X7100089F04,	0X144);
	set_name	(0X7100089F04,	"_ZTSN2nn2sf4cmif6client6detail13CmifProxyImplINS_7timesrv6detail7service12ISteadyClockENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSB_18Hipc2ProxyKindBaseILNSA_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyES8_NS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEEE");
	set_cmt	(0X710008A048,	"type descriptor name",	1);
	create_strlit	(0X710008A048,	0X2B);
	set_name	(0X710008A048,	"_ZTSN2nn7timesrv6detail7service12ISteadyClockE");
	set_cmt	(0X710008A073,	"type descriptor name",	1);
	create_strlit	(0X710008A073,	0X181);
	set_name	(0X710008A073,	"_ZTSN2nn2sf6detail38ObjectImplFactoryWithStatefulAllocatorINS0_4cmif6client6detail9CmifProxyINS_7timesrv6detail7service16ITimeZoneServiceENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSD_18Hipc2ProxyKindBaseILNSC_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESL_E6ObjectE");
	set_cmt	(0X710008A1F4,	"type descriptor name",	1);
	create_strlit	(0X710008A1F4,	0X141);
	set_name	(0X710008A1F4,	"_ZTSN2nn2sf4cmif6client6detail9CmifProxyINS_7timesrv6detail7service16ITimeZoneServiceENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSB_18Hipc2ProxyKindBaseILNSA_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEvEE");
	set_cmt	(0X710008A335,	"type descriptor name",	1);
	create_strlit	(0X710008A335,	0X148);
	set_name	(0X710008A335,	"_ZTSN2nn2sf4cmif6client6detail13CmifProxyImplINS_7timesrv6detail7service16ITimeZoneServiceENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSB_18Hipc2ProxyKindBaseILNSA_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyES8_NS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEEE");
	set_cmt	(0X710008A47D,	"type descriptor name",	1);
	create_strlit	(0X710008A47D,	0X2F);
	set_name	(0X710008A47D,	"_ZTSN2nn7timesrv6detail7service16ITimeZoneServiceE");
	create_qword	(0X710008A4AC);
	create_qword	(0X710008A4E4);
	create_qword	(0X710008A51C);
	create_dword	(x=0X710008A554);
	make_array	(x,	0XC);
	op_dec		(x,	0);
	set_name	(0X710008A554,	"gDaysPerMonth");
	create_dword	(x=0X710008A584);
	make_array	(x,	0XC);
	op_dec		(x,	0);
	set_name	(0X710008A584,	"gMonthStartDayofYear");
	create_qword	(0X710008A5B4);
	set_name	(0X710008A5B4,	"gInvalidClockSourceId");
	create_qword	(0X710008A5BC);
	set_cmt	(0X710008A5C4,	"type descriptor name",	1);
	create_strlit	(0X710008A5C4,	0X37);
	set_name	(0X710008A5C4,	"_ZTSN2nn7timemgr6detail4core27StandardSteadyClockResourceE");
	set_cmt	(0X710008A603,	"jump table for switch statement",	0);
	create_byte	(0X710008A603);
	set_name	(0X710008A603,	"jpt_710005A258");
	create_byte	(0X710008A604);
	create_byte	(0X710008A605);
	create_byte	(0X710008A606);
	create_byte	(0X710008A607);
	create_byte	(0X710008A608);
	create_byte	(0X710008A609);
	create_byte	(0X710008A60A);
	create_byte	(0X710008A60B);
	create_byte	(0X710008A60C);
	set_cmt	(0X710008A60D,	"type descriptor name",	1);
	create_strlit	(0X710008A60D,	0X30);
	set_name	(0X710008A60D,	"_ZTSN2nn7timemgr6detail4core20PmStateChangeHandlerE");
	set_cmt	(0X710008A63D,	"type descriptor name",	1);
	create_strlit	(0X710008A63D,	0X31);
	set_name	(0X710008A63D,	"_ZTSN2nn7timemgr6detail4core21PmStateChangeCallbackE");
	set_cmt	(0X710008A66E,	"jump table for switch statement",	0);
	create_byte	(0X710008A66E);
	set_name	(0X710008A66E,	"jpt_710005A8B4");
	create_byte	(0X710008A66F);
	create_byte	(0X710008A670);
	create_byte	(0X710008A671);
	create_byte	(0X710008A672);
	create_byte	(0X710008A673);
	set_cmt	(0X710008A67C,	"jump table for switch statement",	0);
	create_word	(0X710008A67C);
	set_name	(0X710008A67C,	"jpt_710005C410");
	create_word	(0X710008A67E);
	create_word	(0X710008A680);
	create_word	(0X710008A682);
	create_word	(0X710008A684);
	create_word	(0X710008A686);
	create_word	(0X710008A688);
	create_word	(0X710008A68A);
	create_word	(0X710008A68C);
	create_word	(0X710008A68E);
	create_word	(0X710008A690);
	create_word	(0X710008A692);
	create_word	(0X710008A694);
	create_word	(0X710008A696);
	create_word	(0X710008A698);
	create_word	(0X710008A69A);
	create_word	(0X710008A69C);
	create_word	(0X710008A69E);
	create_word	(0X710008A6A0);
	create_word	(0X710008A6A2);
	create_word	(0X710008A6A4);
	create_word	(0X710008A6A6);
	create_word	(0X710008A6A8);
	create_word	(0X710008A6AA);
	create_word	(0X710008A6AC);
	create_word	(0X710008A6AE);
	create_word	(0X710008A6B0);
	create_word	(0X710008A6B2);
	create_word	(0X710008A6B4);
	create_word	(0X710008A6B6);
	create_word	(0X710008A6B8);
	create_word	(0X710008A6BA);
	create_word	(0X710008A6BC);
	create_word	(0X710008A6BE);
	create_word	(0X710008A6C0);
	create_word	(0X710008A6C2);
	create_word	(0X710008A6C4);
	create_word	(0X710008A6C6);
	create_word	(0X710008A6C8);
	create_word	(0X710008A6CA);
	create_word	(0X710008A6CC);
	create_word	(0X710008A6CE);
	create_word	(0X710008A6D0);
	create_word	(0X710008A6D2);
	create_word	(0X710008A6D4);
	create_word	(0X710008A6D6);
	create_word	(0X710008A6D8);
	create_word	(0X710008A6DA);
	create_word	(0X710008A6DC);
	create_word	(0X710008A6DE);
	create_word	(0X710008A6E0);
	create_word	(0X710008A6E2);
	create_word	(0X710008A6E4);
	create_word	(0X710008A6E6);
	create_word	(0X710008A6E8);
	create_word	(0X710008A6EA);
	create_word	(0X710008A6EC);
	create_word	(0X710008A6EE);
	create_word	(0X710008A6F0);
	create_word	(0X710008A6F2);
	create_word	(0X710008A6F4);
	create_word	(0X710008A6F6);
	create_word	(0X710008A6F8);
	create_word	(0X710008A6FA);
	create_word	(0X710008A6FC);
	create_word	(0X710008A6FE);
	create_word	(0X710008A700);
	create_word	(0X710008A702);
	create_word	(0X710008A704);
	create_word	(0X710008A706);
	create_word	(0X710008A708);
	create_word	(0X710008A70A);
	create_word	(0X710008A70C);
	create_word	(0X710008A70E);
	create_word	(0X710008A710);
	create_word	(0X710008A712);
	create_word	(0X710008A714);
	create_word	(0X710008A716);
	create_word	(0X710008A718);
	create_word	(0X710008A71A);
	create_word	(0X710008A71C);
	create_word	(0X710008A71E);
	create_word	(0X710008A720);
	create_word	(0X710008A722);
	create_word	(0X710008A724);
	create_word	(0X710008A726);
	create_word	(0X710008A728);
	create_word	(0X710008A72A);
	create_word	(0X710008A72C);
	create_word	(0X710008A72E);
	create_word	(0X710008A730);
	create_word	(0X710008A732);
	create_word	(0X710008A734);
	create_word	(0X710008A736);
	create_word	(0X710008A738);
	create_word	(0X710008A73A);
	create_word	(0X710008A73C);
	create_word	(0X710008A73E);
	create_word	(0X710008A740);
	create_word	(0X710008A742);
	create_word	(0X710008A744);
	create_word	(0X710008A746);
	create_word	(0X710008A748);
	set_cmt	(0X710008A74A,	"jump table for switch statement",	0);
	create_byte	(0X710008A74A);
	set_name	(0X710008A74A,	"jpt_710005E758");
	create_byte	(0X710008A74B);
	create_byte	(0X710008A74C);
	create_byte	(0X710008A74D);
	create_byte	(0X710008A74E);
	set_cmt	(0X710008A74F,	"jump table for switch statement",	0);
	create_byte	(0X710008A74F);
	set_name	(0X710008A74F,	"jpt_710005FC48");
	create_byte	(0X710008A750);
	create_byte	(0X710008A751);
	create_byte	(0X710008A752);
	create_byte	(0X710008A753);
	create_byte	(0X710008A754);
	create_byte	(0X710008A755);
	create_byte	(0X710008A756);
	create_byte	(0X710008A757);
	create_byte	(0X710008A758);
	create_byte	(0X710008A759);
	create_byte	(0X710008A75A);
	create_byte	(0X710008A75B);
	create_byte	(0X710008A75C);
	create_byte	(0X710008A75D);
	create_byte	(0X710008A75E);
	create_byte	(0X710008A75F);
	create_byte	(0X710008A760);
	create_byte	(0X710008A761);
	create_byte	(0X710008A762);
	create_byte	(0X710008A763);
	create_byte	(0X710008A764);
	create_byte	(0X710008A765);
	create_byte	(0X710008A766);
	create_byte	(0X710008A767);
	create_byte	(0X710008A768);
	create_byte	(0X710008A769);
	create_byte	(0X710008A76A);
	create_byte	(0X710008A76B);
	create_byte	(0X710008A76C);
	create_byte	(0X710008A76D);
	create_byte	(0X710008A76E);
	create_byte	(0X710008A76F);
	create_byte	(0X710008A770);
	create_byte	(0X710008A771);
	create_byte	(0X710008A772);
	create_byte	(0X710008A773);
	create_byte	(0X710008A774);
	create_byte	(0X710008A775);
	create_byte	(0X710008A776);
	create_byte	(0X710008A777);
	create_byte	(0X710008A778);
	create_byte	(0X710008A779);
	create_byte	(0X710008A77A);
	create_byte	(0X710008A77B);
	create_byte	(0X710008A77C);
	create_byte	(0X710008A77D);
	create_byte	(0X710008A77E);
	create_byte	(0X710008A77F);
	create_byte	(0X710008A780);
	create_byte	(0X710008A781);
	create_byte	(0X710008A782);
	create_byte	(0X710008A783);
	create_byte	(0X710008A784);
	create_byte	(0X710008A785);
	create_byte	(0X710008A786);
	create_byte	(0X710008A787);
	create_byte	(0X710008A788);
	create_byte	(0X710008A789);
	create_byte	(0X710008A78A);
	create_byte	(0X710008A78B);
	create_byte	(0X710008A78C);
	create_byte	(0X710008A78D);
	create_byte	(0X710008A78E);
	create_byte	(0X710008A78F);
	create_byte	(0X710008A790);
	create_byte	(0X710008A791);
	create_byte	(0X710008A792);
	create_byte	(0X710008A793);
	create_byte	(0X710008A794);
	create_byte	(0X710008A795);
	create_byte	(0X710008A796);
	create_byte	(0X710008A797);
	create_byte	(0X710008A798);
	create_byte	(0X710008A799);
	create_byte	(0X710008A79A);
	create_byte	(0X710008A79B);
	create_byte	(0X710008A79C);
	create_byte	(0X710008A79D);
	create_byte	(0X710008A79E);
	create_byte	(0X710008A79F);
	create_byte	(0X710008A7A0);
	create_byte	(0X710008A7A1);
	create_byte	(0X710008A7A2);
	create_byte	(0X710008A7A3);
	create_byte	(0X710008A7A4);
	create_byte	(0X710008A7A5);
	create_byte	(0X710008A7A6);
	create_byte	(0X710008A7A7);
	create_byte	(0X710008A7A8);
	create_byte	(0X710008A7A9);
	create_byte	(0X710008A7AA);
	create_byte	(0X710008A7AB);
	create_byte	(0X710008A7AC);
	create_byte	(0X710008A7AD);
	create_byte	(0X710008A7AE);
	create_byte	(0X710008A7AF);
	create_byte	(0X710008A7B0);
	create_byte	(0X710008A7B1);
	create_byte	(0X710008A7B2);
	create_byte	(0X710008A7B3);
	create_byte	(0X710008A7B4);
	MakeStruct	(0X710008A7B5,	"StaticServiceSetupInfo");
	set_name	(0X710008A7B5,	"gStaticServiceSetup_U");
	MakeStruct	(0X710008A7BB,	"StaticServiceSetupInfo");
	set_name	(0X710008A7BB,	"gStaticServiceSetup_A");
	MakeStruct	(0X710008A7C1,	"StaticServiceSetupInfo");
	set_name	(0X710008A7C1,	"gStaticServiceSetup_R");
	create_strlit	(0X710008A7C7,	0X7);
	set_name	(0X710008A7C7,	"aTimeU_0");
	create_strlit	(0X710008A7CE,	0X7);
	set_name	(0X710008A7CE,	"aTimeA_0");
	create_strlit	(0X710008A7D5,	0X7);
	set_name	(0X710008A7D5,	"aTimeR_0");
	set_cmt	(0X710008A7DC,	"type descriptor name",	1);
	create_strlit	(0X710008A7DC,	0X30);
	set_name	(0X710008A7DC,	"_ZTSN2nn7timemgr6detail7service17HipcServerManagerE");
	set_cmt	(0X710008A80C,	"type descriptor name",	1);
	create_strlit	(0X710008A80C,	0X78);
	set_name	(0X710008A80C,	"_ZTSN2nn2sf31HipcSimpleAllInOneServerManagerILm52ELm3ENS_7timemgr6detail7service38HipcSimpleAllInOneServerManagerOptionsEEE");
	set_cmt	(0X710008A884,	"type descriptor name",	1);
	create_strlit	(0X710008A884,	0XC3);
	set_name	(0X710008A884,	"_ZTSN2nn2sf4hipc6server2v131HipcSimpleAllInOneServerManagerILm52ELm3ENS0_6detail44HipcSimpleAllInOneServerManagerOptionsGetterINS_7timemgr6detail7service38HipcSimpleAllInOneServerManagerOptionsEEEEE");
	set_cmt	(0X710008A947,	"type descriptor name",	1);
	create_strlit	(0X710008A947,	0X7E);
	set_name	(0X710008A947,	"_ZTSN2nn2sf22UnmanagedServiceObjectINS_7timesrv6detail7service14IStaticServiceENS_7timemgr6detail7service19StaticServiceServerEEE");
	set_cmt	(0X710008A9C5,	"type descriptor name",	1);
	create_strlit	(0X710008A9C5,	0X96);
	set_name	(0X710008A9C5,	"_ZTSN2nn2sf13InterfaceInfoINS_7timesrv6detail7service14IStaticServiceEE4_tABINS6_5_tO2NINS_7timemgr6detail7service19StaticServiceServerEE4typeES5_E4typeE");
	set_cmt	(0X710008AA5B,	"type descriptor name",	1);
	create_strlit	(0X710008AA5B,	0XC9);
	set_name	(0X710008AA5B,	"_ZTSN2nn2sf6detail19InterfaceInfoBottomINS0_14IServiceObjectEE4_tABINS0_13InterfaceInfoINS_7timesrv6detail7service14IStaticServiceEE5_tO2NINS_7timemgr6detail7service19StaticServiceServerEE4typeESA_E4typeE");
	set_cmt	(0X710008AB24,	"type descriptor name",	1);
	create_strlit	(0X710008AB24,	0XA3);
	set_name	(0X710008AB24,	"_ZTSN2nn2sf6detail16ObjectHolderImplINS0_13InterfaceInfoINS_7timesrv6detail7service14IStaticServiceEE5_tO2NINS_7timemgr6detail7service19StaticServiceServerEE4typeEvEE");
	set_cmt	(0X710008ABC7,	"type descriptor name",	1);
	create_strlit	(0X710008ABC7,	0X10F);
	set_name	(0X710008ABC7,	"_ZTSN2nn2sf6detail38ObjectImplFactoryWithStatefulAllocatorINS0_13InterfaceInfoINS_7timesrv6detail7service16ITimeZoneServiceEE4_tABINS8_5_tO2NINS_7timemgr6detail7service21TimeZoneServiceServerEE4typeES7_E4typeENS0_24StatefulAllocationPolicyINS0_16ExpHeapAllocatorEEEE6ObjectE");
	set_cmt	(0X710008ACD6,	"type descriptor name",	1);
	create_strlit	(0X710008ACD6,	0X9A);
	set_name	(0X710008ACD6,	"_ZTSN2nn2sf13InterfaceInfoINS_7timesrv6detail7service16ITimeZoneServiceEE4_tABINS6_5_tO2NINS_7timemgr6detail7service21TimeZoneServiceServerEE4typeES5_E4typeE");
	set_cmt	(0X710008AD70,	"type descriptor name",	1);
	create_strlit	(0X710008AD70,	0XCD);
	set_name	(0X710008AD70,	"_ZTSN2nn2sf6detail19InterfaceInfoBottomINS0_14IServiceObjectEE4_tABINS0_13InterfaceInfoINS_7timesrv6detail7service16ITimeZoneServiceEE5_tO2NINS_7timemgr6detail7service21TimeZoneServiceServerEE4typeESA_E4typeE");
	set_cmt	(0X710008AE3D,	"type descriptor name",	1);
	create_strlit	(0X710008AE3D,	0XA7);
	set_name	(0X710008AE3D,	"_ZTSN2nn2sf6detail16ObjectHolderImplINS0_13InterfaceInfoINS_7timesrv6detail7service16ITimeZoneServiceEE5_tO2NINS_7timemgr6detail7service21TimeZoneServiceServerEE4typeEvEE");
	create_strlit	(0X710008AEE4,	0X4);
	set_name	(0X710008AEE4,	"aRtc");
	create_strlit	(0X710008AEE8,	0X8);
	set_name	(0X710008AEE8,	"aTimeAl");
	set_cmt	(0X710008AEF0,	"type descriptor name",	1);
	create_strlit	(0X710008AEF0,	0X17E);
	set_name	(0X710008AEF0,	"_ZTSN2nn2sf6detail38ObjectImplFactoryWithStatefulAllocatorINS0_4cmif6client6detail9CmifProxyINS_7timesrv6detail7service13IAlarmServiceENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSD_18Hipc2ProxyKindBaseILNSC_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESL_E6ObjectE");
	set_cmt	(0X710008B06E,	"type descriptor name",	1);
	create_strlit	(0X710008B06E,	0X13E);
	set_name	(0X710008B06E,	"_ZTSN2nn2sf4cmif6client6detail9CmifProxyINS_7timesrv6detail7service13IAlarmServiceENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSB_18Hipc2ProxyKindBaseILNSA_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEvEE");
	set_cmt	(0X710008B1AC,	"type descriptor name",	1);
	create_strlit	(0X710008B1AC,	0X145);
	set_name	(0X710008B1AC,	"_ZTSN2nn2sf4cmif6client6detail13CmifProxyImplINS_7timesrv6detail7service13IAlarmServiceENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSB_18Hipc2ProxyKindBaseILNSA_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyES8_NS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEEE");
	set_cmt	(0X710008B2F1,	"type descriptor name",	1);
	create_strlit	(0X710008B2F1,	0X2C);
	set_name	(0X710008B2F1,	"_ZTSN2nn7timesrv6detail7service13IAlarmServiceE");
	set_cmt	(0X710008B31D,	"type descriptor name",	1);
	create_strlit	(0X710008B31D,	0X182);
	set_name	(0X710008B31D,	"_ZTSN2nn2sf6detail38ObjectImplFactoryWithStatefulAllocatorINS0_4cmif6client6detail9CmifProxyINS_7timesrv6detail7service17ISteadyClockAlarmENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSD_18Hipc2ProxyKindBaseILNSC_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESL_E6ObjectE");
	set_cmt	(0X710008B49F,	"type descriptor name",	1);
	create_strlit	(0X710008B49F,	0X142);
	set_name	(0X710008B49F,	"_ZTSN2nn2sf4cmif6client6detail9CmifProxyINS_7timesrv6detail7service17ISteadyClockAlarmENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSB_18Hipc2ProxyKindBaseILNSA_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEvEE");
	set_cmt	(0X710008B5E1,	"type descriptor name",	1);
	create_strlit	(0X710008B5E1,	0X149);
	set_name	(0X710008B5E1,	"_ZTSN2nn2sf4cmif6client6detail13CmifProxyImplINS_7timesrv6detail7service17ISteadyClockAlarmENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSB_18Hipc2ProxyKindBaseILNSA_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyES8_NS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEEE");
	set_cmt	(0X710008B72A,	"type descriptor name",	1);
	create_strlit	(0X710008B72A,	0X30);
	set_name	(0X710008B72A,	"_ZTSN2nn7timesrv6detail7service17ISteadyClockAlarmE");
	set_cmt	(0X710008B75A,	"type descriptor name",	1);
	create_strlit	(0X710008B75A,	0X16D);
	set_name	(0X710008B75A,	"_ZTSN2nn2sf6detail38ObjectImplFactoryWithStatefulAllocatorINS0_4cmif6client6detail9CmifProxyINS_3psc2sf12IPmStateLockENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSC_18Hipc2ProxyKindBaseILNSB_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESK_E6ObjectE");
	set_cmt	(0X710008B8C7,	"type descriptor name",	1);
	create_strlit	(0X710008B8C7,	0X12D);
	set_name	(0X710008B8C7,	"_ZTSN2nn2sf4cmif6client6detail9CmifProxyINS_3psc2sf12IPmStateLockENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSA_18Hipc2ProxyKindBaseILNS9_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEvEE");
	set_cmt	(0X710008B9F4,	"type descriptor name",	1);
	create_strlit	(0X710008B9F4,	0X134);
	set_name	(0X710008B9F4,	"_ZTSN2nn2sf4cmif6client6detail13CmifProxyImplINS_3psc2sf12IPmStateLockENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSA_18Hipc2ProxyKindBaseILNS9_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyES7_NS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEEE");
	set_cmt	(0X710008BB28,	"type descriptor name",	1);
	create_strlit	(0X710008BB28,	0X1B);
	set_name	(0X710008BB28,	"_ZTSN2nn3psc2sf12IPmStateLockE");
	create_strlit	(0X710008BB43,	0X7);
	set_name	(0X710008BB43,	"aTimeM");
	set_cmt	(0X710008BB4A,	"type descriptor name",	1);
	create_strlit	(0X710008BB4A,	0X184);
	set_name	(0X710008BB4A,	"_ZTSN2nn2sf6detail38ObjectImplFactoryWithStatefulAllocatorINS0_4cmif6client6detail9CmifProxyINS_7timesrv6detail7service19ITimeServiceManagerENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSD_18Hipc2ProxyKindBaseILNSC_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESL_E6ObjectE");
	set_cmt	(0X710008BCCE,	"type descriptor name",	1);
	create_strlit	(0X710008BCCE,	0X144);
	set_name	(0X710008BCCE,	"_ZTSN2nn2sf4cmif6client6detail9CmifProxyINS_7timesrv6detail7service19ITimeServiceManagerENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSB_18Hipc2ProxyKindBaseILNSA_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEvEE");
	set_cmt	(0X710008BE12,	"type descriptor name",	1);
	create_strlit	(0X710008BE12,	0X14B);
	set_name	(0X710008BE12,	"_ZTSN2nn2sf4cmif6client6detail13CmifProxyImplINS_7timesrv6detail7service19ITimeServiceManagerENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSB_18Hipc2ProxyKindBaseILNSA_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyES8_NS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEEE");
	set_cmt	(0X710008BF5D,	"type descriptor name",	1);
	create_strlit	(0X710008BF5D,	0X32);
	set_name	(0X710008BF5D,	"_ZTSN2nn7timesrv6detail7service19ITimeServiceManagerE");
	create_qword	(0X710008BF90);
	set_cmt	(0X710008BFC9,	"type descriptor name",	1);
	create_strlit	(0X710008BFC9,	0X21);
	set_name	(0X710008BFC9,	"_ZTSN10__cxxabiv116__shim_type_infoE");
	set_cmt	(0X710008BFEA,	"type descriptor name",	1);
	create_strlit	(0X710008BFEA,	0X22);
	set_name	(0X710008BFEA,	"_ZTSN10__cxxabiv117__class_type_infoE");
	set_cmt	(0X710008C00C,	"type descriptor name",	1);
	create_strlit	(0X710008C00C,	0X25);
	set_name	(0X710008C00C,	"_ZTSN10__cxxabiv120__si_class_type_infoE");
	set_cmt	(0X710008C031,	"type descriptor name",	1);
	create_strlit	(0X710008C031,	0X26);
	set_name	(0X710008C031,	"_ZTSN10__cxxabiv121__vmi_class_type_infoE");
	set_cmt	(0X710008C057,	"type descriptor name",	1);
	create_strlit	(0X710008C057,	0XD);
	set_name	(0X710008C057,	"_ZTSSt9type_info");
	create_byte	(0X710008C070);
	make_array	(0X710008C070,	0X4);
	set_cmt	(0X710008C074,	"jump table for switch statement",	0);
	create_byte	(0X710008C074);
	set_name	(0X710008C074,	"jpt_7100068E60");
	create_byte	(0X710008C075);
	create_byte	(0X710008C076);
	create_byte	(0X710008C077);
	create_byte	(0X710008C078);
	create_byte	(0X710008C079);
	create_byte	(0X710008C07A);
	create_byte	(0X710008C07B);
	create_byte	(0X710008C07C);
	create_byte	(0X710008C07D);
	create_byte	(0X710008C07E);
	create_byte	(0X710008C07F);
	create_byte	(0X710008C080);
	create_byte	(0X710008C081);
	create_byte	(0X710008C082);
	create_byte	(0X710008C083);
	create_byte	(0X710008C084);
	create_byte	(0X710008C085);
	create_byte	(0X710008C086);
	create_byte	(0X710008C087);
	create_byte	(0X710008C088);
	create_byte	(0X710008C089);
	create_byte	(0X710008C08A);
	create_byte	(0X710008C08B);
	create_byte	(0X710008C08C);
	create_byte	(0X710008C08D);
	create_byte	(0X710008C08E);
	create_byte	(0X710008C08F);
	create_byte	(0X710008C090);
	create_byte	(0X710008C091);
	create_byte	(0X710008C092);
	create_byte	(0X710008C093);
	create_byte	(0X710008C094);
	create_byte	(0X710008C095);
	create_byte	(0X710008C096);
	create_byte	(0X710008C097);
	create_byte	(0X710008C098);
	create_byte	(0X710008C099);
	create_byte	(0X710008C09A);
	create_byte	(0X710008C09B);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_12(void) {
        auto x;
#define id x

	create_byte	(0X710008C09C);
	create_byte	(0X710008C09D);
	create_byte	(0X710008C09E);
	create_byte	(0X710008C09F);
	create_byte	(0X710008C0A0);
	create_byte	(0X710008C0A1);
	create_byte	(0X710008C0A2);
	create_byte	(0X710008C0A3);
	create_byte	(0X710008C0A4);
	create_byte	(0X710008C0A5);
	create_byte	(0X710008C0A6);
	create_byte	(0X710008C0A7);
	create_byte	(0X710008C0A8);
	create_byte	(0X710008C0A9);
	create_byte	(0X710008C0AA);
	create_byte	(0X710008C0AB);
	set_cmt	(0X710008C0AC,	"jump table for switch statement",	0);
	create_word	(0X710008C0AC);
	set_name	(0X710008C0AC,	"jpt_7100068F04");
	create_word	(0X710008C0AE);
	create_word	(0X710008C0B0);
	create_word	(0X710008C0B2);
	create_word	(0X710008C0B4);
	create_word	(0X710008C0B6);
	create_word	(0X710008C0B8);
	create_word	(0X710008C0BA);
	set_cmt	(0X710008C0BC,	"jump table for switch statement",	0);
	create_byte	(0X710008C0BC);
	set_name	(0X710008C0BC,	"jpt_71000697E0");
	create_byte	(0X710008C0BD);
	create_byte	(0X710008C0BE);
	create_byte	(0X710008C0BF);
	create_byte	(0X710008C0C0);
	create_byte	(0X710008C0C1);
	create_byte	(0X710008C0C2);
	create_byte	(0X710008C0C3);
	create_byte	(0X710008C0C4);
	create_byte	(0X710008C0C5);
	create_byte	(0X710008C0C6);
	create_byte	(0X710008C0C7);
	create_byte	(0X710008C0C8);
	create_byte	(0X710008C0C9);
	create_byte	(0X710008C0CA);
	create_byte	(0X710008C0CB);
	create_byte	(0X710008C0CC);
	create_byte	(0X710008C0CD);
	create_strlit	(0X710008C29E,	0X15);
	set_name	(0X710008C29E,	"aNoErrorInforma");
	create_strlit	(0X710008C2B3,	0X16);
	set_name	(0X710008C2B3,	"aIllegalByteSeq");
	create_strlit	(0X710008C2C9,	0XD);
	set_name	(0X710008C2C9,	"aDomainError");
	create_strlit	(0X710008C2D6,	0X19);
	set_name	(0X710008C2D6,	"aResultNotRepre");
	create_strlit	(0X710008C2EF,	0XA);
	set_name	(0X710008C2EF,	"aNotATty");
	create_strlit	(0X710008C2F9,	0X12);
	set_name	(0X710008C2F9,	"aPermissionDeni");
	create_strlit	(0X710008C30B,	0X18);
	set_name	(0X710008C30B,	"aOperationNotPe");
	create_strlit	(0X710008C323,	0X1A);
	set_name	(0X710008C323,	"aNoSuchFileOrDi");
	create_strlit	(0X710008C33D,	0X10);
	set_name	(0X710008C33D,	"aNoSuchProcess");
	create_strlit	(0X710008C34D,	0XC);
	set_name	(0X710008C34D,	"aFileExists");
	create_strlit	(0X710008C359,	0X1E);
	set_name	(0X710008C359,	"aValueTooLargeF");
	create_strlit	(0X710008C377,	0X18);
	set_name	(0X710008C377,	"aNoSpaceLeftOnD");
	create_strlit	(0X710008C38F,	0XE);
	set_name	(0X710008C38F,	"aOutOfMemory");
	create_strlit	(0X710008C39D,	0XE);
	set_name	(0X710008C39D,	"aResourceBusy");
	create_strlit	(0X710008C3AB,	0X18);
	set_name	(0X710008C3AB,	"aInterruptedSys");
	create_strlit	(0X710008C3C3,	0X21);
	set_name	(0X710008C3C3,	"aResourceTempor");
	create_strlit	(0X710008C3E4,	0XD);
	set_name	(0X710008C3E4,	"aInvalidSeek");
	create_strlit	(0X710008C3F1,	0X12);
	set_name	(0X710008C3F1,	"aCrossDeviceLin");
	create_strlit	(0X710008C403,	0X16);
	set_name	(0X710008C403,	"aReadOnlyFileSy");
	create_strlit	(0X710008C419,	0X14);
	set_name	(0X710008C419,	"aDirectoryNotEm");
	create_strlit	(0X710008C42D,	0X19);
	set_name	(0X710008C42D,	"aConnectionRese");
	create_strlit	(0X710008C446,	0X14);
	set_name	(0X710008C446,	"aOperationTimed");
	create_strlit	(0X710008C45A,	0X13);
	set_name	(0X710008C45A,	"aConnectionRefu");
	create_strlit	(0X710008C46D,	0XD);
	set_name	(0X710008C46D,	"aHostIsDown");
	create_strlit	(0X710008C47A,	0X14);
	set_name	(0X710008C47A,	"aHostIsUnreacha");
	create_strlit	(0X710008C48E,	0XF);
	set_name	(0X710008C48E,	"aAddressInUse");
	create_strlit	(0X710008C49D,	0XC);
	set_name	(0X710008C49D,	"aBrokenPipe");
	create_strlit	(0X710008C4A9,	0XA);
	set_name	(0X710008C4A9,	"aIOError");
	create_strlit	(0X710008C4B3,	0X1A);
	set_name	(0X710008C4B3,	"aNoSuchDeviceOr");
	create_strlit	(0X710008C4CD,	0X16);
	set_name	(0X710008C4CD,	"aBlockDeviceReq");
	create_strlit	(0X710008C4E3,	0XF);
	set_name	(0X710008C4E3,	"aNoSuchDevice");
	create_strlit	(0X710008C4F2,	0X10);
	set_name	(0X710008C4F2,	"aNotADirectory");
	create_strlit	(0X710008C502,	0XF);
	set_name	(0X710008C502,	"aIsADirectory");
	create_strlit	(0X710008C511,	0XF);
	set_name	(0X710008C511,	"aTextFileBusy");
	create_strlit	(0X710008C520,	0X12);
	set_name	(0X710008C520,	"aExecFormatErro");
	create_strlit	(0X710008C532,	0X11);
	set_name	(0X710008C532,	"aInvalidArgumen");
	create_strlit	(0X710008C543,	0X17);
	set_name	(0X710008C543,	"aArgumentListTo");
	create_strlit	(0X710008C55A,	0X13);
	set_name	(0X710008C55A,	"aSymbolicLinkLo");
	create_strlit	(0X710008C56D,	0X12);
	set_name	(0X710008C56D,	"aFilenameTooLon");
	create_strlit	(0X710008C57F,	0X1E);
	set_name	(0X710008C57F,	"aTooManyOpenFil");
	create_strlit	(0X710008C59D,	0X1E);
	set_name	(0X710008C59D,	"aNoFileDescript");
	create_strlit	(0X710008C5BB,	0X14);
	set_name	(0X710008C5BB,	"aBadFileDescrip");
	create_strlit	(0X710008C5CF,	0X11);
	set_name	(0X710008C5CF,	"aNoChildProcess");
	create_strlit	(0X710008C5E0,	0XC);
	set_name	(0X710008C5E0,	"aBadAddress");
	create_strlit	(0X710008C5EC,	0XF);
	set_name	(0X710008C5EC,	"aFileTooLarge");
	create_strlit	(0X710008C5FB,	0XF);
	set_name	(0X710008C5FB,	"aTooManyLinks");
	create_strlit	(0X710008C60A,	0X13);
	set_name	(0X710008C60A,	"aNoLocksAvailab");
	create_strlit	(0X710008C61D,	0X1E);
	set_name	(0X710008C61D,	"aResourceDeadlo");
	create_strlit	(0X710008C63B,	0X16);
	set_name	(0X710008C63B,	"aStateNotRecove");
	create_strlit	(0X710008C651,	0X14);
	set_name	(0X710008C651,	"aPreviousOwnerD");
	create_strlit	(0X710008C665,	0X13);
	set_name	(0X710008C665,	"aOperationCance");
	create_strlit	(0X710008C678,	0X19);
	set_name	(0X710008C678,	"aFunctionNotImp");
	create_strlit	(0X710008C691,	0X1B);
	set_name	(0X710008C691,	"aNoMessageOfDes");
	create_strlit	(0X710008C6AC,	0X13);
	set_name	(0X710008C6AC,	"aIdentifierRemo");
	create_strlit	(0X710008C6BF,	0X14);
	set_name	(0X710008C6BF,	"aDeviceNotAStre");
	create_strlit	(0X710008C6D3,	0X12);
	set_name	(0X710008C6D3,	"aNoDataAvailabl");
	create_strlit	(0X710008C6E5,	0XF);
	set_name	(0X710008C6E5,	"aDeviceTimeout");
	create_strlit	(0X710008C6F4,	0X19);
	set_name	(0X710008C6F4,	"aOutOfStreamsRe");
	create_strlit	(0X710008C70D,	0X16);
	set_name	(0X710008C70D,	"aLinkHasBeenSev");
	create_strlit	(0X710008C723,	0XF);
	set_name	(0X710008C723,	"aProtocolError");
	create_strlit	(0X710008C732,	0XC);
	set_name	(0X710008C732,	"aBadMessage");
	create_strlit	(0X710008C73E,	0X1D);
	set_name	(0X710008C73E,	"aFileDescriptor");
	create_strlit	(0X710008C75B,	0XD);
	set_name	(0X710008C75B,	"aNotASocket");
	create_strlit	(0X710008C768,	0X1D);
	set_name	(0X710008C768,	"aDestinationAdd");
	create_strlit	(0X710008C785,	0X12);
	set_name	(0X710008C785,	"aMessageTooLarg");
	create_strlit	(0X710008C797,	0X1F);
	set_name	(0X710008C797,	"aProtocolWrongT");
	create_strlit	(0X710008C7B6,	0X17);
	set_name	(0X710008C7B6,	"aProtocolNotAva");
	create_strlit	(0X710008C7CD,	0X17);
	set_name	(0X710008C7CD,	"aProtocolNotSup");
	create_strlit	(0X710008C7E4,	0X1A);
	set_name	(0X710008C7E4,	"aSocketTypeNotS");
	create_strlit	(0X710008C7FE,	0XE);
	set_name	(0X710008C7FE,	"aNotSupported_0");
	create_strlit	(0X710008C80C,	0X1E);
	set_name	(0X710008C80C,	"aProtocolFamily");
	create_strlit	(0X710008C82A,	0X29);
	set_name	(0X710008C82A,	"aAddressFamilyN");
	create_strlit	(0X710008C853,	0X16);
	set_name	(0X710008C853,	"aAddressNotAvai");
	create_strlit	(0X710008C869,	0X10);
	set_name	(0X710008C869,	"aNetworkIsDown");
	create_strlit	(0X710008C879,	0X14);
	set_name	(0X710008C879,	"aNetworkUnreach");
	create_strlit	(0X710008C88D,	0X1C);
	set_name	(0X710008C88D,	"aConnectionRese_0");
	create_strlit	(0X710008C8A9,	0X13);
	set_name	(0X710008C8A9,	"aConnectionAbor");
	create_strlit	(0X710008C8BC,	0X1A);
	set_name	(0X710008C8BC,	"aNoBufferSpaceA");
	create_strlit	(0X710008C8D6,	0X14);
	set_name	(0X710008C8D6,	"aSocketIsConnec");
	create_strlit	(0X710008C8EA,	0X15);
	set_name	(0X710008C8EA,	"aSocketNotConne");
	create_strlit	(0X710008C8FF,	0X22);
	set_name	(0X710008C8FF,	"aCannotSendAfte");
	create_strlit	(0X710008C921,	0X1E);
	set_name	(0X710008C921,	"aOperationAlrea");
	create_strlit	(0X710008C93F,	0X16);
	set_name	(0X710008C93F,	"aOperationInPro");
	create_strlit	(0X710008C955,	0X12);
	set_name	(0X710008C955,	"aStaleFileHandl");
	create_strlit	(0X710008C967,	0X11);
	set_name	(0X710008C967,	"aRemoteIOError");
	create_strlit	(0X710008C978,	0XF);
	set_name	(0X710008C978,	"aQuotaExceeded");
	create_strlit	(0X710008C987,	0X10);
	set_name	(0X710008C987,	"aNoMediumFound");
	create_strlit	(0X710008C997,	0X12);
	set_name	(0X710008C997,	"aWrongMediumTyp");
	create_strlit	(0X710008C9A9,	0X13);
	set_name	(0X710008C9A9,	"aMultihopAttemp");
	create_strlit	(0X710008C9BC,	0X1B);
	set_name	(0X710008C9BC,	"aRequiredKeyNot");
	create_strlit	(0X710008C9D7,	0X10);
	set_name	(0X710008C9D7,	"aKeyHasExpired");
	create_strlit	(0X710008C9E7,	0X15);
	set_name	(0X710008C9E7,	"aKeyHasBeenRevo");
	create_strlit	(0X710008C9FC,	0X1C);
	set_name	(0X710008C9FC,	"aKeyWasRejected");
	make_array	(0X7100092B4C,	0X4);
	create_qword	(x=0X71000AB010);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB018);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB020);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB028);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB030);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB038);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB040);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB048);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB050);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB058);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB060);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB068);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB070);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB078);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB080);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB088);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB090);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB098);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB0A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB0A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB0B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB0C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB0D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB0E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X71000AB0F0,	0X10);
	create_qword	(x=0X71000AB100);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB108);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB110);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB118);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB120);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB128);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB130);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB138);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB140);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB148);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB150);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB158);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB160);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB168);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB170);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB178);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB180);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB198);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB1A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB1A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB1B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB1B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB1C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB1D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB1E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB1E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB1F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB1F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB200);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB218);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB220);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB238);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB240);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB248);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB250);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB258);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB260);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB278);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB280);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB288);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB290);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB298);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB2A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB2B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB2C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB2C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB2D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB2D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB2E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB2E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB300);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB308);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB320);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB328);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB330);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB338);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB340);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB348);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB350);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB368);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB370);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB388);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB390);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB398);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB3A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB3A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB3B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB3B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB3C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB3C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB3D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB3D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB3E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB3E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB3F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB3F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB400);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB408);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB410);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB418);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB420);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB428);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB440);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB448);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB460);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB478);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB480);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB488);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB490);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB498);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB4A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB4A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB4B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB4B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB4C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB4C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB4D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB4D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB4E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB4E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB4F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB4F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB510);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB518);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB530);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB538);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB540);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB548);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB550);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB558);
	op_hex		(x,	0);
	create_qword	(x=0X71000AB560);
	op_hex		(x,	0);
	create_qword	(x=0X71000AB568);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB570);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB578);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB580);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB588);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB590);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB598);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB5A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB5A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB5B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB5B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB5C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB5C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB5D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB5D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB5E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB5E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB5F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB5F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB600);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB608);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB610);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB618);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB620);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB638);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB640);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB648);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB650);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB658);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB660);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB668);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB670);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB678);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB680);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB688);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB690);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB698);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB6A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB6A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB6B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB6B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB6C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB6C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB6D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB6D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB6E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB6E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB6F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB6F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB700);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB708);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB718);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_byte	(0X71000AB720);
	make_array	(0X71000AB721,	0X7);
	set_cmt	(0X71000AB728,	"offset to this",	0);
	create_qword	(x=0X71000AB728);
	op_dec		(x,	0);
	set_name	(0X71000AB728,	"_ZTVN2nn2sf6detail39ObjectImplFactoryWithStatelessAllocatorINS0_4cmif6client6detail9CmifProxyINS_5fssrv2sf16IFileSystemProxyENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSC_18Hipc2ProxyKindBaseILNSB_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESP_E6ObjectE");
	create_qword	(x=0X71000AB730);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB738);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AB738,	"_ZTVN2nn2sf6detail39ObjectImplFactoryWithStatelessAllocatorINS0_4cmif6client6detail9CmifProxyINS_5fssrv2sf16IFileSystemProxyENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSC_18Hipc2ProxyKindBaseILNSB_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESP_E6ObjectEVtable");
	create_qword	(x=0X71000AB740);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB748);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB750);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB758);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB760);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB768);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB770);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB778);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB780);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB788);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB790);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB798);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB7A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB7A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB7B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB7B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB7C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB7C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB7D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB7D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB7E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB7E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB7F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB7F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB800);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB808);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB810);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB818);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB820);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB828);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB830);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB838);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB840);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB848);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB850);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB858);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB860);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB868);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB870);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB878);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB880);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB888);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB890);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB898);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB8A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB8A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB8B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB8B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB8C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB8C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB8D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB8D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB8E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB8E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB8F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB8F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB900);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB908);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB910);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB918);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB920);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB928);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB930);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB938);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB940);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB948);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB950);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB958);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB960);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB968);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB970);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB978);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB980);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB988);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB990);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB998);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB9A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB9A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB9B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB9B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB9C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB9C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB9D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB9D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB9E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB9E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB9F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AB9F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABA00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABA08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABA10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABA18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABA20);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABA28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABA30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABA38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABA40);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABA48);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABA50);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABA58);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABA60);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABA68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABA70);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABA78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABA80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABA88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABA90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABA98);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABAA0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABAA8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABAB0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABAB8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABAC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABAC8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABAD0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABAD8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABAE0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ABAE8,	"offset to this",	0);
	create_qword	(x=0X71000ABAE8);
	toggle_sign		(x,	0);
	op_dec		(x,	0);
	toggle_sign		(x,	1);
	create_qword	(x=0X71000ABAF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABAF8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ABB00,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000ABB00,	E_PREV + 0,	"; public \x01\b\x01(00000071000ABB00nn::sf::impl::detail::ServiceObjectImplBase2\x02\b");
	create_qword	(x=0X71000ABB00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000ABB00,	"_ZTIN2nn2sf4impl6detail22ServiceObjectImplBase2E");
	set_cmt	(0X71000ABB08,	"reference to type's name",	0);
	create_qword	(x=0X71000ABB08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ABB10,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000ABB10,	E_PREV + 0,	"; public \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b");
	create_qword	(x=0X71000ABB10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000ABB10,	"_ZTIN2nn2sf13ISharedObjectE");
	set_cmt	(0X71000ABB18,	"reference to type's name",	0);
	create_qword	(x=0X71000ABB18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ABB20,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000ABB20,	E_PREV + 0,	"; public \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000ABB20,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b");
	create_qword	(x=0X71000ABB20);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000ABB20,	"_ZTIN2nn2sf14IServiceObjectE");
	set_cmt	(0X71000ABB28,	"reference to type's name",	0);
	create_qword	(x=0X71000ABB28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ABB30,	"reference to parent's type name",	0);
	create_qword	(x=0X71000ABB30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ABB38,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000ABB38,	E_PREV + 0,	"; public \x01\b\x01(00000071000ABB38nn::fssrv::sf::IFileSystemProxy\x02\b :");
	update_extra_cmt		(0X71000ABB38,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000ABB38,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b");
	create_qword	(x=0X71000ABB38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000ABB38,	"_ZTIN2nn5fssrv2sf16IFileSystemProxyE");
	set_cmt	(0X71000ABB40,	"reference to type's name",	0);
	create_qword	(x=0X71000ABB40);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ABB48,	"reference to parent's type name",	0);
	create_qword	(x=0X71000ABB48);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ABB50,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000ABB50,	E_PREV + 0,	"; public \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b");
	create_qword	(x=0X71000ABB50);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000ABB50,	"_ZTIN2nn2sf4cmif6client14CmifBaseObjectE");
	set_cmt	(0X71000ABB58,	"reference to type's name",	0);
	create_qword	(x=0X71000ABB58);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ABB60,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000ABB60,	E_PREV + 0,	"; public \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000ABB60,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b");
	create_qword	(x=0X71000ABB60);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000ABB60,	"_ZTIN2nn2sf4cmif6client23CmifDomainClientMessageINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINS5_18Hipc2ProxyKindBaseILNS4_6detail11MessageTypeE6EEEEEE15ProxyBaseObjectE");
	set_cmt	(0X71000ABB68,	"reference to type's name",	0);
	create_qword	(x=0X71000ABB68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ABB70,	"reference to parent's type name",	0);
	create_qword	(x=0X71000ABB70);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ABB78,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000ABB78,	E_PREV + 0,	"; public \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000ABB78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000ABB78,	"_ZTIN2nn2sf6detail13CmifProxyInfoE");
	set_cmt	(0X71000ABB80,	"reference to type's name",	0);
	create_qword	(x=0X71000ABB80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ABB88,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000ABB88,	E_PREV + 0,	"; public \x01\b\x01(00000071000ABB88nn::sf::cmif::client::detail::CmifProxyImpl<nn::fssrv::sf::IFileSystemProxy,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>,nn::fssrv::sf::IFileSystemProxy,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000ABB88,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000ABB38nn::fssrv::sf::IFileSystemProxy\x02\b :");
	update_extra_cmt		(0X71000ABB88,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000ABB88,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000ABB88,	E_PREV + 4,	";   protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000ABB88,	E_PREV + 5,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000ABB88,	E_PREV + 6,	";   protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000ABB88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000ABB88,	"_ZTIN2nn2sf4cmif6client6detail13CmifProxyImplINS_5fssrv2sf16IFileSystemProxyENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSA_18Hipc2ProxyKindBaseILNS9_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEES7_NS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEEE");
	set_cmt	(0X71000ABB90,	"reference to type's name",	0);
	create_qword	(x=0X71000ABB90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ABB98,	"attribute",	0);
	create_dword	(x=0X71000ABB98);
	op_hex		(x,	0);
	set_cmt	(0X71000ABB9C,	"count of base classes",	0);
	create_dword	(x=0X71000ABB9C);
	op_dec		(x,	0);
	set_cmt	(0X71000ABBA0,	"base class' type descriptor",	0);
	create_qword	(x=0X71000ABBA0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ABBA8,	"base class' attributes",	0);
	create_qword	(x=0X71000ABBA8);
	op_hex		(x,	0);
	set_cmt	(0X71000ABBB0,	"base class' type descriptor",	0);
	create_qword	(x=0X71000ABBB0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ABBB8,	"base class' attributes",	0);
	create_qword	(x=0X71000ABBB8);
	op_hex		(x,	0);
	set_cmt	(0X71000ABBC0,	"base class' type descriptor",	0);
	create_qword	(x=0X71000ABBC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ABBC8,	"base class' attributes",	0);
	create_qword	(x=0X71000ABBC8);
	op_hex		(x,	0);
	set_cmt	(0X71000ABBD0,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000ABBD0,	E_PREV + 0,	"; public \x01\b\x01(00000071000ABBD0nn::sf::cmif::client::detail::CmifProxy<nn::fssrv::sf::IFileSystemProxy,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>\x02\b :");
	update_extra_cmt		(0X71000ABBD0,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000ABB88nn::sf::cmif::client::detail::CmifProxyImpl<nn::fssrv::sf::IFileSystemProxy,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>,nn::fssrv::sf::IFileSystemProxy,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000ABBD0,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB38nn::fssrv::sf::IFileSystemProxy\x02\b :");
	update_extra_cmt		(0X71000ABBD0,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000ABBD0,	E_PREV + 4,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000ABBD0,	E_PREV + 5,	";     protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000ABBD0,	E_PREV + 6,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000ABBD0,	E_PREV + 7,	";     protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000ABBD0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000ABBD0,	"_ZTIN2nn2sf4cmif6client6detail9CmifProxyINS_5fssrv2sf16IFileSystemProxyENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSA_18Hipc2ProxyKindBaseILNS9_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEENS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEvEE");
	set_cmt	(0X71000ABBD8,	"reference to type's name",	0);
	create_qword	(x=0X71000ABBD8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ABBE0,	"reference to parent's type name",	0);
	create_qword	(x=0X71000ABBE0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ABBE8,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000ABBE8,	E_PREV + 0,	"; public \x01\b\x01(00000071000ABBE8nn::sf::detail::ObjectImplFactoryWithStatelessAllocator<nn::sf::cmif::client::detail::CmifProxy<nn::fssrv::sf::IFileSystemProxy,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>>::Object\x02\b :");
	update_extra_cmt		(0X71000ABBE8,	E_PREV + 1,	";   protected /* offset 0x28 */ \x01\b\x01(00000071000ABB00nn::sf::impl::detail::ServiceObjectImplBase2\x02\b,");
	update_extra_cmt		(0X71000ABBE8,	E_PREV + 2,	";   public /* offset 0x0 */ \x01\b\x01(00000071000ABBD0nn::sf::cmif::client::detail::CmifProxy<nn::fssrv::sf::IFileSystemProxy,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>\x02\b :");
	update_extra_cmt		(0X71000ABBE8,	E_PREV + 3,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB88nn::sf::cmif::client::detail::CmifProxyImpl<nn::fssrv::sf::IFileSystemProxy,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>,nn::fssrv::sf::IFileSystemProxy,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000ABBE8,	E_PREV + 4,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB38nn::fssrv::sf::IFileSystemProxy\x02\b :");
	update_extra_cmt		(0X71000ABBE8,	E_PREV + 5,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000ABBE8,	E_PREV + 6,	";           public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000ABBE8,	E_PREV + 7,	";       protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000ABBE8,	E_PREV + 8,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000ABBE8,	E_PREV + 9,	";       protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000ABBE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000ABBE8,	"_ZTIN2nn2sf6detail39ObjectImplFactoryWithStatelessAllocatorINS0_4cmif6client6detail9CmifProxyINS_5fssrv2sf16IFileSystemProxyENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSC_18Hipc2ProxyKindBaseILNSB_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESP_E6ObjectE");
	set_cmt	(0X71000ABBF0,	"reference to type's name",	0);
	create_qword	(x=0X71000ABBF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ABBF8,	"attribute",	0);
	create_dword	(x=0X71000ABBF8);
	op_hex		(x,	0);
	set_cmt	(0X71000ABBFC,	"count of base classes",	0);
	create_dword	(x=0X71000ABBFC);
	op_dec		(x,	0);
	set_cmt	(0X71000ABC00,	"base class' type descriptor",	0);
	create_qword	(x=0X71000ABC00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ABC08,	"base class' attributes",	0);
	create_qword	(x=0X71000ABC08);
	op_hex		(x,	0);
	set_cmt	(0X71000ABC10,	"base class' type descriptor",	0);
	create_qword	(x=0X71000ABC10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ABC18,	"base class' attributes",	0);
	create_qword	(x=0X71000ABC18);
	op_hex		(x,	0);
	set_cmt	(0X71000ABC20,	"offset to this",	0);
	create_qword	(x=0X71000ABC20);
	op_dec		(x,	0);
	set_name	(0X71000ABC20,	"_ZTVN2nn2sf6detail39ObjectImplFactoryWithStatelessAllocatorINS0_4cmif6client6detail9CmifProxyINS_5fssrv2sf11IFileSystemENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSC_18Hipc2ProxyKindBaseILNSB_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESP_E6ObjectE");
	create_qword	(x=0X71000ABC28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABC30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABC38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABC40);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABC48);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABC50);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABC58);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABC60);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABC68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABC70);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABC78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABC80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABC88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABC90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABC98);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABCA0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABCA8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABCB0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABCB8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABCC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABCC8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABCD0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABCD8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABCE0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ABCE8,	"offset to this",	0);
	create_qword	(x=0X71000ABCE8);
	toggle_sign		(x,	0);
	op_dec		(x,	0);
	toggle_sign		(x,	1);
	create_qword	(x=0X71000ABCF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABCF8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ABD00,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000ABD00,	E_PREV + 0,	"; public \x01\b\x01(00000071000ABD00nn::fssrv::sf::IFileSystem\x02\b :");
	update_extra_cmt		(0X71000ABD00,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000ABD00,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b");
	create_qword	(x=0X71000ABD00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000ABD00,	"_ZTIN2nn5fssrv2sf11IFileSystemE");
	set_cmt	(0X71000ABD08,	"reference to type's name",	0);
	create_qword	(x=0X71000ABD08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ABD10,	"reference to parent's type name",	0);
	create_qword	(x=0X71000ABD10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ABD18,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000ABD18,	E_PREV + 0,	"; public \x01\b\x01(00000071000ABD18nn::sf::cmif::client::detail::CmifProxyImpl<nn::fssrv::sf::IFileSystem,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>,nn::fssrv::sf::IFileSystem,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000ABD18,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000ABD00nn::fssrv::sf::IFileSystem\x02\b :");
	update_extra_cmt		(0X71000ABD18,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000ABD18,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000ABD18,	E_PREV + 4,	";   protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000ABD18,	E_PREV + 5,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000ABD18,	E_PREV + 6,	";   protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000ABD18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000ABD18,	"_ZTIN2nn2sf4cmif6client6detail13CmifProxyImplINS_5fssrv2sf11IFileSystemENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSA_18Hipc2ProxyKindBaseILNS9_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEES7_NS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEEE");
	set_cmt	(0X71000ABD20,	"reference to type's name",	0);
	create_qword	(x=0X71000ABD20);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ABD28,	"attribute",	0);
	create_dword	(x=0X71000ABD28);
	op_hex		(x,	0);
	set_cmt	(0X71000ABD2C,	"count of base classes",	0);
	create_dword	(x=0X71000ABD2C);
	op_dec		(x,	0);
	set_cmt	(0X71000ABD30,	"base class' type descriptor",	0);
	create_qword	(x=0X71000ABD30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ABD38,	"base class' attributes",	0);
	create_qword	(x=0X71000ABD38);
	op_hex		(x,	0);
	set_cmt	(0X71000ABD40,	"base class' type descriptor",	0);
	create_qword	(x=0X71000ABD40);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ABD48,	"base class' attributes",	0);
	create_qword	(x=0X71000ABD48);
	op_hex		(x,	0);
	set_cmt	(0X71000ABD50,	"base class' type descriptor",	0);
	create_qword	(x=0X71000ABD50);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ABD58,	"base class' attributes",	0);
	create_qword	(x=0X71000ABD58);
	op_hex		(x,	0);
	set_cmt	(0X71000ABD60,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000ABD60,	E_PREV + 0,	"; public \x01\b\x01(00000071000ABD60nn::sf::cmif::client::detail::CmifProxy<nn::fssrv::sf::IFileSystem,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>\x02\b :");
	update_extra_cmt		(0X71000ABD60,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000ABD18nn::sf::cmif::client::detail::CmifProxyImpl<nn::fssrv::sf::IFileSystem,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>,nn::fssrv::sf::IFileSystem,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000ABD60,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABD00nn::fssrv::sf::IFileSystem\x02\b :");
	update_extra_cmt		(0X71000ABD60,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000ABD60,	E_PREV + 4,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000ABD60,	E_PREV + 5,	";     protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000ABD60,	E_PREV + 6,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000ABD60,	E_PREV + 7,	";     protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000ABD60);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000ABD60,	"_ZTIN2nn2sf4cmif6client6detail9CmifProxyINS_5fssrv2sf11IFileSystemENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSA_18Hipc2ProxyKindBaseILNS9_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEENS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEvEE");
	set_cmt	(0X71000ABD68,	"reference to type's name",	0);
	create_qword	(x=0X71000ABD68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ABD70,	"reference to parent's type name",	0);
	create_qword	(x=0X71000ABD70);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ABD78,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000ABD78,	E_PREV + 0,	"; public \x01\b\x01(00000071000ABD78nn::sf::detail::ObjectImplFactoryWithStatelessAllocator<nn::sf::cmif::client::detail::CmifProxy<nn::fssrv::sf::IFileSystem,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>>::Object\x02\b :");
	update_extra_cmt		(0X71000ABD78,	E_PREV + 1,	";   protected /* offset 0x28 */ \x01\b\x01(00000071000ABB00nn::sf::impl::detail::ServiceObjectImplBase2\x02\b,");
	update_extra_cmt		(0X71000ABD78,	E_PREV + 2,	";   public /* offset 0x0 */ \x01\b\x01(00000071000ABD60nn::sf::cmif::client::detail::CmifProxy<nn::fssrv::sf::IFileSystem,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>\x02\b :");
	update_extra_cmt		(0X71000ABD78,	E_PREV + 3,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABD18nn::sf::cmif::client::detail::CmifProxyImpl<nn::fssrv::sf::IFileSystem,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>,nn::fssrv::sf::IFileSystem,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000ABD78,	E_PREV + 4,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABD00nn::fssrv::sf::IFileSystem\x02\b :");
	update_extra_cmt		(0X71000ABD78,	E_PREV + 5,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000ABD78,	E_PREV + 6,	";           public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000ABD78,	E_PREV + 7,	";       protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000ABD78,	E_PREV + 8,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000ABD78,	E_PREV + 9,	";       protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000ABD78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000ABD78,	"_ZTIN2nn2sf6detail39ObjectImplFactoryWithStatelessAllocatorINS0_4cmif6client6detail9CmifProxyINS_5fssrv2sf11IFileSystemENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSC_18Hipc2ProxyKindBaseILNSB_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESP_E6ObjectE");
	set_cmt	(0X71000ABD80,	"reference to type's name",	0);
	create_qword	(x=0X71000ABD80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ABD88,	"attribute",	0);
	create_dword	(x=0X71000ABD88);
	op_hex		(x,	0);
	set_cmt	(0X71000ABD8C,	"count of base classes",	0);
	create_dword	(x=0X71000ABD8C);
	op_dec		(x,	0);
	set_cmt	(0X71000ABD90,	"base class' type descriptor",	0);
	create_qword	(x=0X71000ABD90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ABD98,	"base class' attributes",	0);
	create_qword	(x=0X71000ABD98);
	op_hex		(x,	0);
	set_cmt	(0X71000ABDA0,	"base class' type descriptor",	0);
	create_qword	(x=0X71000ABDA0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ABDA8,	"base class' attributes",	0);
	create_qword	(x=0X71000ABDA8);
	op_hex		(x,	0);
	set_cmt	(0X71000ABDB0,	"offset to this",	0);
	create_qword	(x=0X71000ABDB0);
	op_dec		(x,	0);
	set_name	(0X71000ABDB0,	"_ZTVN2nn2sf6detail39ObjectImplFactoryWithStatelessAllocatorINS0_4cmif6client6detail9CmifProxyINS_5fssrv2sf5IFileENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSC_18Hipc2ProxyKindBaseILNSB_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESP_E6ObjectE");
	create_qword	(x=0X71000ABDB8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABDC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABDC8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABDD0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABDD8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABDE0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABDE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABDF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABDF8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABE00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABE08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABE10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABE18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ABE20,	"offset to this",	0);
	create_qword	(x=0X71000ABE20);
	toggle_sign		(x,	0);
	op_dec		(x,	0);
	toggle_sign		(x,	1);
	create_qword	(x=0X71000ABE28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABE30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ABE38,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000ABE38,	E_PREV + 0,	"; public \x01\b\x01(00000071000ABE38nn::fssrv::sf::IFile\x02\b :");
	update_extra_cmt		(0X71000ABE38,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000ABE38,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b");
	create_qword	(x=0X71000ABE38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000ABE38,	"_ZTIN2nn5fssrv2sf5IFileE");
	set_cmt	(0X71000ABE40,	"reference to type's name",	0);
	create_qword	(x=0X71000ABE40);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ABE48,	"reference to parent's type name",	0);
	create_qword	(x=0X71000ABE48);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ABE50,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000ABE50,	E_PREV + 0,	"; public \x01\b\x01(00000071000ABE50nn::sf::cmif::client::detail::CmifProxyImpl<nn::fssrv::sf::IFile,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>,nn::fssrv::sf::IFile,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000ABE50,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000ABE38nn::fssrv::sf::IFile\x02\b :");
	update_extra_cmt		(0X71000ABE50,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000ABE50,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000ABE50,	E_PREV + 4,	";   protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000ABE50,	E_PREV + 5,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000ABE50,	E_PREV + 6,	";   protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000ABE50);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000ABE50,	"_ZTIN2nn2sf4cmif6client6detail13CmifProxyImplINS_5fssrv2sf5IFileENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSA_18Hipc2ProxyKindBaseILNS9_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEES7_NS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEEE");
	set_cmt	(0X71000ABE58,	"reference to type's name",	0);
	create_qword	(x=0X71000ABE58);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ABE60,	"attribute",	0);
	create_dword	(x=0X71000ABE60);
	op_hex		(x,	0);
	set_cmt	(0X71000ABE64,	"count of base classes",	0);
	create_dword	(x=0X71000ABE64);
	op_dec		(x,	0);
	set_cmt	(0X71000ABE68,	"base class' type descriptor",	0);
	create_qword	(x=0X71000ABE68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ABE70,	"base class' attributes",	0);
	create_qword	(x=0X71000ABE70);
	op_hex		(x,	0);
	set_cmt	(0X71000ABE78,	"base class' type descriptor",	0);
	create_qword	(x=0X71000ABE78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ABE80,	"base class' attributes",	0);
	create_qword	(x=0X71000ABE80);
	op_hex		(x,	0);
	set_cmt	(0X71000ABE88,	"base class' type descriptor",	0);
	create_qword	(x=0X71000ABE88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ABE90,	"base class' attributes",	0);
	create_qword	(x=0X71000ABE90);
	op_hex		(x,	0);
	set_cmt	(0X71000ABE98,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000ABE98,	E_PREV + 0,	"; public \x01\b\x01(00000071000ABE98nn::sf::cmif::client::detail::CmifProxy<nn::fssrv::sf::IFile,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>\x02\b :");
	update_extra_cmt		(0X71000ABE98,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000ABE50nn::sf::cmif::client::detail::CmifProxyImpl<nn::fssrv::sf::IFile,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>,nn::fssrv::sf::IFile,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000ABE98,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABE38nn::fssrv::sf::IFile\x02\b :");
	update_extra_cmt		(0X71000ABE98,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000ABE98,	E_PREV + 4,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000ABE98,	E_PREV + 5,	";     protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000ABE98,	E_PREV + 6,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000ABE98,	E_PREV + 7,	";     protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000ABE98);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000ABE98,	"_ZTIN2nn2sf4cmif6client6detail9CmifProxyINS_5fssrv2sf5IFileENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSA_18Hipc2ProxyKindBaseILNS9_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEENS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEvEE");
	set_cmt	(0X71000ABEA0,	"reference to type's name",	0);
	create_qword	(x=0X71000ABEA0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ABEA8,	"reference to parent's type name",	0);
	create_qword	(x=0X71000ABEA8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ABEB0,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000ABEB0,	E_PREV + 0,	"; public \x01\b\x01(00000071000ABEB0nn::sf::detail::ObjectImplFactoryWithStatelessAllocator<nn::sf::cmif::client::detail::CmifProxy<nn::fssrv::sf::IFile,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>>::Object\x02\b :");
	update_extra_cmt		(0X71000ABEB0,	E_PREV + 1,	";   protected /* offset 0x28 */ \x01\b\x01(00000071000ABB00nn::sf::impl::detail::ServiceObjectImplBase2\x02\b,");
	update_extra_cmt		(0X71000ABEB0,	E_PREV + 2,	";   public /* offset 0x0 */ \x01\b\x01(00000071000ABE98nn::sf::cmif::client::detail::CmifProxy<nn::fssrv::sf::IFile,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>\x02\b :");
	update_extra_cmt		(0X71000ABEB0,	E_PREV + 3,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABE50nn::sf::cmif::client::detail::CmifProxyImpl<nn::fssrv::sf::IFile,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>,nn::fssrv::sf::IFile,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000ABEB0,	E_PREV + 4,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABE38nn::fssrv::sf::IFile\x02\b :");
	update_extra_cmt		(0X71000ABEB0,	E_PREV + 5,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000ABEB0,	E_PREV + 6,	";           public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000ABEB0,	E_PREV + 7,	";       protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000ABEB0,	E_PREV + 8,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000ABEB0,	E_PREV + 9,	";       protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000ABEB0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000ABEB0,	"_ZTIN2nn2sf6detail39ObjectImplFactoryWithStatelessAllocatorINS0_4cmif6client6detail9CmifProxyINS_5fssrv2sf5IFileENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSC_18Hipc2ProxyKindBaseILNSB_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESP_E6ObjectE");
	set_cmt	(0X71000ABEB8,	"reference to type's name",	0);
	create_qword	(x=0X71000ABEB8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ABEC0,	"attribute",	0);
	create_dword	(x=0X71000ABEC0);
	op_hex		(x,	0);
	set_cmt	(0X71000ABEC4,	"count of base classes",	0);
	create_dword	(x=0X71000ABEC4);
	op_dec		(x,	0);
	set_cmt	(0X71000ABEC8,	"base class' type descriptor",	0);
	create_qword	(x=0X71000ABEC8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ABED0,	"base class' attributes",	0);
	create_qword	(x=0X71000ABED0);
	op_hex		(x,	0);
	set_cmt	(0X71000ABED8,	"base class' type descriptor",	0);
	create_qword	(x=0X71000ABED8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ABEE0,	"base class' attributes",	0);
	create_qword	(x=0X71000ABEE0);
	op_hex		(x,	0);
	set_cmt	(0X71000ABEE8,	"offset to this",	0);
	create_qword	(x=0X71000ABEE8);
	op_dec		(x,	0);
	set_name	(0X71000ABEE8,	"_ZTVN2nn2sf6detail39ObjectImplFactoryWithStatelessAllocatorINS0_4cmif6client6detail9CmifProxyINS_5fssrv2sf10IDirectoryENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSC_18Hipc2ProxyKindBaseILNSB_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESP_E6ObjectE");
	create_qword	(x=0X71000ABEF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABEF8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABF00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABF08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABF10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABF18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABF20);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABF28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ABF30,	"offset to this",	0);
	create_qword	(x=0X71000ABF30);
	toggle_sign		(x,	0);
	op_dec		(x,	0);
	toggle_sign		(x,	1);
	create_qword	(x=0X71000ABF38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ABF40);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ABF48,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000ABF48,	E_PREV + 0,	"; public \x01\b\x01(00000071000ABF48nn::fssrv::sf::IDirectory\x02\b :");
	update_extra_cmt		(0X71000ABF48,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000ABF48,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b");
	create_qword	(x=0X71000ABF48);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000ABF48,	"_ZTIN2nn5fssrv2sf10IDirectoryE");
	set_cmt	(0X71000ABF50,	"reference to type's name",	0);
	create_qword	(x=0X71000ABF50);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ABF58,	"reference to parent's type name",	0);
	create_qword	(x=0X71000ABF58);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ABF60,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000ABF60,	E_PREV + 0,	"; public \x01\b\x01(00000071000ABF60nn::sf::cmif::client::detail::CmifProxyImpl<nn::fssrv::sf::IDirectory,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>,nn::fssrv::sf::IDirectory,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000ABF60,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000ABF48nn::fssrv::sf::IDirectory\x02\b :");
	update_extra_cmt		(0X71000ABF60,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000ABF60,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000ABF60,	E_PREV + 4,	";   protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000ABF60,	E_PREV + 5,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000ABF60,	E_PREV + 6,	";   protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000ABF60);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000ABF60,	"_ZTIN2nn2sf4cmif6client6detail13CmifProxyImplINS_5fssrv2sf10IDirectoryENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSA_18Hipc2ProxyKindBaseILNS9_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEES7_NS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEEE");
	set_cmt	(0X71000ABF68,	"reference to type's name",	0);
	create_qword	(x=0X71000ABF68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ABF70,	"attribute",	0);
	create_dword	(x=0X71000ABF70);
	op_hex		(x,	0);
	set_cmt	(0X71000ABF74,	"count of base classes",	0);
	create_dword	(x=0X71000ABF74);
	op_dec		(x,	0);
	set_cmt	(0X71000ABF78,	"base class' type descriptor",	0);
	create_qword	(x=0X71000ABF78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ABF80,	"base class' attributes",	0);
	create_qword	(x=0X71000ABF80);
	op_hex		(x,	0);
	set_cmt	(0X71000ABF88,	"base class' type descriptor",	0);
	create_qword	(x=0X71000ABF88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ABF90,	"base class' attributes",	0);
	create_qword	(x=0X71000ABF90);
	op_hex		(x,	0);
	set_cmt	(0X71000ABF98,	"base class' type descriptor",	0);
	create_qword	(x=0X71000ABF98);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ABFA0,	"base class' attributes",	0);
	create_qword	(x=0X71000ABFA0);
	op_hex		(x,	0);
	set_cmt	(0X71000ABFA8,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000ABFA8,	E_PREV + 0,	"; public \x01\b\x01(00000071000ABFA8nn::sf::cmif::client::detail::CmifProxy<nn::fssrv::sf::IDirectory,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>\x02\b :");
	update_extra_cmt		(0X71000ABFA8,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000ABF60nn::sf::cmif::client::detail::CmifProxyImpl<nn::fssrv::sf::IDirectory,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>,nn::fssrv::sf::IDirectory,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000ABFA8,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABF48nn::fssrv::sf::IDirectory\x02\b :");
	update_extra_cmt		(0X71000ABFA8,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000ABFA8,	E_PREV + 4,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000ABFA8,	E_PREV + 5,	";     protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000ABFA8,	E_PREV + 6,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000ABFA8,	E_PREV + 7,	";     protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000ABFA8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000ABFA8,	"_ZTIN2nn2sf4cmif6client6detail9CmifProxyINS_5fssrv2sf10IDirectoryENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSA_18Hipc2ProxyKindBaseILNS9_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEENS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEvEE");
	set_cmt	(0X71000ABFB0,	"reference to type's name",	0);
	create_qword	(x=0X71000ABFB0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ABFB8,	"reference to parent's type name",	0);
	create_qword	(x=0X71000ABFB8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ABFC0,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000ABFC0,	E_PREV + 0,	"; public \x01\b\x01(00000071000ABFC0nn::sf::detail::ObjectImplFactoryWithStatelessAllocator<nn::sf::cmif::client::detail::CmifProxy<nn::fssrv::sf::IDirectory,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>>::Object\x02\b :");
	update_extra_cmt		(0X71000ABFC0,	E_PREV + 1,	";   protected /* offset 0x28 */ \x01\b\x01(00000071000ABB00nn::sf::impl::detail::ServiceObjectImplBase2\x02\b,");
	update_extra_cmt		(0X71000ABFC0,	E_PREV + 2,	";   public /* offset 0x0 */ \x01\b\x01(00000071000ABFA8nn::sf::cmif::client::detail::CmifProxy<nn::fssrv::sf::IDirectory,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>\x02\b :");
	update_extra_cmt		(0X71000ABFC0,	E_PREV + 3,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABF60nn::sf::cmif::client::detail::CmifProxyImpl<nn::fssrv::sf::IDirectory,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>,nn::fssrv::sf::IDirectory,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000ABFC0,	E_PREV + 4,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABF48nn::fssrv::sf::IDirectory\x02\b :");
	update_extra_cmt		(0X71000ABFC0,	E_PREV + 5,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000ABFC0,	E_PREV + 6,	";           public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000ABFC0,	E_PREV + 7,	";       protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000ABFC0,	E_PREV + 8,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000ABFC0,	E_PREV + 9,	";       protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000ABFC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000ABFC0,	"_ZTIN2nn2sf6detail39ObjectImplFactoryWithStatelessAllocatorINS0_4cmif6client6detail9CmifProxyINS_5fssrv2sf10IDirectoryENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSC_18Hipc2ProxyKindBaseILNSB_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESP_E6ObjectE");
	set_cmt	(0X71000ABFC8,	"reference to type's name",	0);
	create_qword	(x=0X71000ABFC8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ABFD0,	"attribute",	0);
	create_dword	(x=0X71000ABFD0);
	op_hex		(x,	0);
	set_cmt	(0X71000ABFD4,	"count of base classes",	0);
	create_dword	(x=0X71000ABFD4);
	op_dec		(x,	0);
	set_cmt	(0X71000ABFD8,	"base class' type descriptor",	0);
	create_qword	(x=0X71000ABFD8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ABFE0,	"base class' attributes",	0);
	create_qword	(x=0X71000ABFE0);
	op_hex		(x,	0);
	set_cmt	(0X71000ABFE8,	"base class' type descriptor",	0);
	create_qword	(x=0X71000ABFE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ABFF0,	"base class' attributes",	0);
	create_qword	(x=0X71000ABFF0);
	op_hex		(x,	0);
	set_cmt	(0X71000ABFF8,	"offset to this",	0);
	create_qword	(x=0X71000ABFF8);
	op_dec		(x,	0);
	set_name	(0X71000ABFF8,	"_ZTVN2nn2sf6detail39ObjectImplFactoryWithStatelessAllocatorINS0_4cmif6client6detail9CmifProxyINS_5fssrv2sf8IStorageENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSC_18Hipc2ProxyKindBaseILNSB_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESP_E6ObjectE");
	create_qword	(x=0X71000AC000);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC008);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AC008,	"_ZTVN2nn2sf6detail39ObjectImplFactoryWithStatelessAllocatorINS0_4cmif6client6detail9CmifProxyINS_5fssrv2sf8IStorageENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSC_18Hipc2ProxyKindBaseILNSB_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESP_E6ObjectEPtr");
	create_qword	(x=0X71000AC010);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC018);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC020);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC028);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC030);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC038);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC040);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC048);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC050);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC058);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC060,	"offset to this",	0);
	create_qword	(x=0X71000AC060);
	toggle_sign		(x,	0);
	op_dec		(x,	0);
	toggle_sign		(x,	1);
	create_qword	(x=0X71000AC068);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC070);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC078,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AC078,	E_PREV + 0,	"; public \x01\b\x01(00000071000AC078nn::fssrv::sf::IStorage\x02\b :");
	update_extra_cmt		(0X71000AC078,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000AC078,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b");
	create_qword	(x=0X71000AC078);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AC078,	"_ZTIN2nn5fssrv2sf8IStorageE");
	set_cmt	(0X71000AC080,	"reference to type's name",	0);
	create_qword	(x=0X71000AC080);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC088,	"reference to parent's type name",	0);
	create_qword	(x=0X71000AC088);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC090,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AC090,	E_PREV + 0,	"; public \x01\b\x01(00000071000AC090nn::sf::cmif::client::detail::CmifProxyImpl<nn::fssrv::sf::IStorage,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>,nn::fssrv::sf::IStorage,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000AC090,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AC078nn::fssrv::sf::IStorage\x02\b :");
	update_extra_cmt		(0X71000AC090,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000AC090,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000AC090,	E_PREV + 4,	";   protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000AC090,	E_PREV + 5,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000AC090,	E_PREV + 6,	";   protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000AC090);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AC090,	"_ZTIN2nn2sf4cmif6client6detail13CmifProxyImplINS_5fssrv2sf8IStorageENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSA_18Hipc2ProxyKindBaseILNS9_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEES7_NS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEEE");
	set_cmt	(0X71000AC098,	"reference to type's name",	0);
	create_qword	(x=0X71000AC098);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC0A0,	"attribute",	0);
	create_dword	(x=0X71000AC0A0);
	op_hex		(x,	0);
	set_cmt	(0X71000AC0A4,	"count of base classes",	0);
	create_dword	(x=0X71000AC0A4);
	op_dec		(x,	0);
	set_cmt	(0X71000AC0A8,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AC0A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC0B0,	"base class' attributes",	0);
	create_qword	(x=0X71000AC0B0);
	op_hex		(x,	0);
	set_cmt	(0X71000AC0B8,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AC0B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC0C0,	"base class' attributes",	0);
	create_qword	(x=0X71000AC0C0);
	op_hex		(x,	0);
	set_cmt	(0X71000AC0C8,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AC0C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC0D0,	"base class' attributes",	0);
	create_qword	(x=0X71000AC0D0);
	op_hex		(x,	0);
	set_cmt	(0X71000AC0D8,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AC0D8,	E_PREV + 0,	"; public \x01\b\x01(00000071000AC0D8nn::sf::cmif::client::detail::CmifProxy<nn::fssrv::sf::IStorage,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>\x02\b :");
	update_extra_cmt		(0X71000AC0D8,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AC090nn::sf::cmif::client::detail::CmifProxyImpl<nn::fssrv::sf::IStorage,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>,nn::fssrv::sf::IStorage,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000AC0D8,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000AC078nn::fssrv::sf::IStorage\x02\b :");
	update_extra_cmt		(0X71000AC0D8,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000AC0D8,	E_PREV + 4,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000AC0D8,	E_PREV + 5,	";     protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000AC0D8,	E_PREV + 6,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000AC0D8,	E_PREV + 7,	";     protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000AC0D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AC0D8,	"_ZTIN2nn2sf4cmif6client6detail9CmifProxyINS_5fssrv2sf8IStorageENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSA_18Hipc2ProxyKindBaseILNS9_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEENS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEvEE");
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_13(void) {
        auto x;
#define id x

	set_cmt	(0X71000AC0E0,	"reference to type's name",	0);
	create_qword	(x=0X71000AC0E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC0E8,	"reference to parent's type name",	0);
	create_qword	(x=0X71000AC0E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC0F0,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AC0F0,	E_PREV + 0,	"; public \x01\b\x01(00000071000AC0F0nn::sf::detail::ObjectImplFactoryWithStatelessAllocator<nn::sf::cmif::client::detail::CmifProxy<nn::fssrv::sf::IStorage,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>>::Object\x02\b :");
	update_extra_cmt		(0X71000AC0F0,	E_PREV + 1,	";   protected /* offset 0x28 */ \x01\b\x01(00000071000ABB00nn::sf::impl::detail::ServiceObjectImplBase2\x02\b,");
	update_extra_cmt		(0X71000AC0F0,	E_PREV + 2,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AC0D8nn::sf::cmif::client::detail::CmifProxy<nn::fssrv::sf::IStorage,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>\x02\b :");
	update_extra_cmt		(0X71000AC0F0,	E_PREV + 3,	";     public /* offset 0x0 */ \x01\b\x01(00000071000AC090nn::sf::cmif::client::detail::CmifProxyImpl<nn::fssrv::sf::IStorage,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>,nn::fssrv::sf::IStorage,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000AC0F0,	E_PREV + 4,	";       public /* offset 0x0 */ \x01\b\x01(00000071000AC078nn::fssrv::sf::IStorage\x02\b :");
	update_extra_cmt		(0X71000AC0F0,	E_PREV + 5,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000AC0F0,	E_PREV + 6,	";           public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000AC0F0,	E_PREV + 7,	";       protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000AC0F0,	E_PREV + 8,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000AC0F0,	E_PREV + 9,	";       protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000AC0F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AC0F0,	"_ZTIN2nn2sf6detail39ObjectImplFactoryWithStatelessAllocatorINS0_4cmif6client6detail9CmifProxyINS_5fssrv2sf8IStorageENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSC_18Hipc2ProxyKindBaseILNSB_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESP_E6ObjectE");
	set_cmt	(0X71000AC0F8,	"reference to type's name",	0);
	create_qword	(x=0X71000AC0F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC100,	"attribute",	0);
	create_dword	(x=0X71000AC100);
	op_hex		(x,	0);
	set_cmt	(0X71000AC104,	"count of base classes",	0);
	create_dword	(x=0X71000AC104);
	op_dec		(x,	0);
	set_cmt	(0X71000AC108,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AC108);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC110,	"base class' attributes",	0);
	create_qword	(x=0X71000AC110);
	op_hex		(x,	0);
	set_cmt	(0X71000AC118,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AC118);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC120,	"base class' attributes",	0);
	create_qword	(x=0X71000AC120);
	op_hex		(x,	0);
	set_cmt	(0X71000AC128,	"offset to this",	0);
	create_qword	(x=0X71000AC128);
	op_dec		(x,	0);
	set_name	(0X71000AC128,	"_ZTVN2nn2sf6detail39ObjectImplFactoryWithStatelessAllocatorINS0_4cmif6client6detail9CmifProxyINS_5fssrv2sf19ISaveDataInfoReaderENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSC_18Hipc2ProxyKindBaseILNSB_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESP_E6ObjectE");
	create_qword	(x=0X71000AC130);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC138);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC140);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC148);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC150);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC158);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC160);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC168,	"offset to this",	0);
	create_qword	(x=0X71000AC168);
	toggle_sign		(x,	0);
	op_dec		(x,	0);
	toggle_sign		(x,	1);
	create_qword	(x=0X71000AC170);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC178);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC180,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AC180,	E_PREV + 0,	"; public \x01\b\x01(00000071000AC180nn::fssrv::sf::ISaveDataInfoReader\x02\b :");
	update_extra_cmt		(0X71000AC180,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000AC180,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b");
	create_qword	(x=0X71000AC180);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AC180,	"_ZTIN2nn5fssrv2sf19ISaveDataInfoReaderE");
	set_cmt	(0X71000AC188,	"reference to type's name",	0);
	create_qword	(x=0X71000AC188);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC190,	"reference to parent's type name",	0);
	create_qword	(x=0X71000AC190);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC198,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AC198,	E_PREV + 0,	"; public \x01\b\x01(00000071000AC198nn::sf::cmif::client::detail::CmifProxyImpl<nn::fssrv::sf::ISaveDataInfoReader,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>,nn::fssrv::sf::ISaveDataInfoReader,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000AC198,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AC180nn::fssrv::sf::ISaveDataInfoReader\x02\b :");
	update_extra_cmt		(0X71000AC198,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000AC198,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000AC198,	E_PREV + 4,	";   protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000AC198,	E_PREV + 5,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000AC198,	E_PREV + 6,	";   protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000AC198);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AC198,	"_ZTIN2nn2sf4cmif6client6detail13CmifProxyImplINS_5fssrv2sf19ISaveDataInfoReaderENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSA_18Hipc2ProxyKindBaseILNS9_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEES7_NS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEEE");
	set_cmt	(0X71000AC1A0,	"reference to type's name",	0);
	create_qword	(x=0X71000AC1A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC1A8,	"attribute",	0);
	create_dword	(x=0X71000AC1A8);
	op_hex		(x,	0);
	set_cmt	(0X71000AC1AC,	"count of base classes",	0);
	create_dword	(x=0X71000AC1AC);
	op_dec		(x,	0);
	set_cmt	(0X71000AC1B0,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AC1B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC1B8,	"base class' attributes",	0);
	create_qword	(x=0X71000AC1B8);
	op_hex		(x,	0);
	set_cmt	(0X71000AC1C0,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AC1C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC1C8,	"base class' attributes",	0);
	create_qword	(x=0X71000AC1C8);
	op_hex		(x,	0);
	set_cmt	(0X71000AC1D0,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AC1D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC1D8,	"base class' attributes",	0);
	create_qword	(x=0X71000AC1D8);
	op_hex		(x,	0);
	set_cmt	(0X71000AC1E0,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AC1E0,	E_PREV + 0,	"; public \x01\b\x01(00000071000AC1E0nn::sf::cmif::client::detail::CmifProxy<nn::fssrv::sf::ISaveDataInfoReader,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>\x02\b :");
	update_extra_cmt		(0X71000AC1E0,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AC198nn::sf::cmif::client::detail::CmifProxyImpl<nn::fssrv::sf::ISaveDataInfoReader,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>,nn::fssrv::sf::ISaveDataInfoReader,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000AC1E0,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000AC180nn::fssrv::sf::ISaveDataInfoReader\x02\b :");
	update_extra_cmt		(0X71000AC1E0,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000AC1E0,	E_PREV + 4,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000AC1E0,	E_PREV + 5,	";     protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000AC1E0,	E_PREV + 6,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000AC1E0,	E_PREV + 7,	";     protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000AC1E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AC1E0,	"_ZTIN2nn2sf4cmif6client6detail9CmifProxyINS_5fssrv2sf19ISaveDataInfoReaderENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSA_18Hipc2ProxyKindBaseILNS9_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEENS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEvEE");
	set_cmt	(0X71000AC1E8,	"reference to type's name",	0);
	create_qword	(x=0X71000AC1E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC1F0,	"reference to parent's type name",	0);
	create_qword	(x=0X71000AC1F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC1F8,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AC1F8,	E_PREV + 0,	"; public \x01\b\x01(00000071000AC1F8nn::sf::detail::ObjectImplFactoryWithStatelessAllocator<nn::sf::cmif::client::detail::CmifProxy<nn::fssrv::sf::ISaveDataInfoReader,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>>::Object\x02\b :");
	update_extra_cmt		(0X71000AC1F8,	E_PREV + 1,	";   protected /* offset 0x28 */ \x01\b\x01(00000071000ABB00nn::sf::impl::detail::ServiceObjectImplBase2\x02\b,");
	update_extra_cmt		(0X71000AC1F8,	E_PREV + 2,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AC1E0nn::sf::cmif::client::detail::CmifProxy<nn::fssrv::sf::ISaveDataInfoReader,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>\x02\b :");
	update_extra_cmt		(0X71000AC1F8,	E_PREV + 3,	";     public /* offset 0x0 */ \x01\b\x01(00000071000AC198nn::sf::cmif::client::detail::CmifProxyImpl<nn::fssrv::sf::ISaveDataInfoReader,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>,nn::fssrv::sf::ISaveDataInfoReader,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000AC1F8,	E_PREV + 4,	";       public /* offset 0x0 */ \x01\b\x01(00000071000AC180nn::fssrv::sf::ISaveDataInfoReader\x02\b :");
	update_extra_cmt		(0X71000AC1F8,	E_PREV + 5,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000AC1F8,	E_PREV + 6,	";           public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000AC1F8,	E_PREV + 7,	";       protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000AC1F8,	E_PREV + 8,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000AC1F8,	E_PREV + 9,	";       protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000AC1F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AC1F8,	"_ZTIN2nn2sf6detail39ObjectImplFactoryWithStatelessAllocatorINS0_4cmif6client6detail9CmifProxyINS_5fssrv2sf19ISaveDataInfoReaderENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSC_18Hipc2ProxyKindBaseILNSB_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESP_E6ObjectE");
	set_cmt	(0X71000AC200,	"reference to type's name",	0);
	create_qword	(x=0X71000AC200);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC208,	"attribute",	0);
	create_dword	(x=0X71000AC208);
	op_hex		(x,	0);
	set_cmt	(0X71000AC20C,	"count of base classes",	0);
	create_dword	(x=0X71000AC20C);
	op_dec		(x,	0);
	set_cmt	(0X71000AC210,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AC210);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC218,	"base class' attributes",	0);
	create_qword	(x=0X71000AC218);
	op_hex		(x,	0);
	set_cmt	(0X71000AC220,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AC220);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC228,	"base class' attributes",	0);
	create_qword	(x=0X71000AC228);
	op_hex		(x,	0);
	set_cmt	(0X71000AC230,	"offset to this",	0);
	create_qword	(x=0X71000AC230);
	op_dec		(x,	0);
	set_name	(0X71000AC230,	"_ZTVN2nn2sf6detail39ObjectImplFactoryWithStatelessAllocatorINS0_4cmif6client6detail9CmifProxyINS_5fssrv2sf15IDeviceOperatorENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSC_18Hipc2ProxyKindBaseILNSB_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESP_E6ObjectE");
	create_qword	(x=0X71000AC238);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC240);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC248);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC250);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC258);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC260);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC268);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC270);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC278);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC280);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC288);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC290);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC298);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC2A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC2A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC2B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC2B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC2C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC2C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC2D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC2D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC2E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC2E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC2F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC2F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC300);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC308);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC310);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC318);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC320);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC328);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC330);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC338);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC340);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC348);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC350);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC358);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC360);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC368);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC370);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC378);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC380);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC388);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC390);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC398);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC3A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC3A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC3B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC3B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC3C0,	"offset to this",	0);
	create_qword	(x=0X71000AC3C0);
	toggle_sign		(x,	0);
	op_dec		(x,	0);
	toggle_sign		(x,	1);
	create_qword	(x=0X71000AC3C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC3D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC3D8,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AC3D8,	E_PREV + 0,	"; public \x01\b\x01(00000071000AC3D8nn::fssrv::sf::IDeviceOperator\x02\b :");
	update_extra_cmt		(0X71000AC3D8,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000AC3D8,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b");
	create_qword	(x=0X71000AC3D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AC3D8,	"_ZTIN2nn5fssrv2sf15IDeviceOperatorE");
	set_cmt	(0X71000AC3E0,	"reference to type's name",	0);
	create_qword	(x=0X71000AC3E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC3E8,	"reference to parent's type name",	0);
	create_qword	(x=0X71000AC3E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC3F0,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AC3F0,	E_PREV + 0,	"; public \x01\b\x01(00000071000AC3F0nn::sf::cmif::client::detail::CmifProxyImpl<nn::fssrv::sf::IDeviceOperator,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>,nn::fssrv::sf::IDeviceOperator,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000AC3F0,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AC3D8nn::fssrv::sf::IDeviceOperator\x02\b :");
	update_extra_cmt		(0X71000AC3F0,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000AC3F0,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000AC3F0,	E_PREV + 4,	";   protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000AC3F0,	E_PREV + 5,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000AC3F0,	E_PREV + 6,	";   protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000AC3F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AC3F0,	"_ZTIN2nn2sf4cmif6client6detail13CmifProxyImplINS_5fssrv2sf15IDeviceOperatorENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSA_18Hipc2ProxyKindBaseILNS9_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEES7_NS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEEE");
	set_cmt	(0X71000AC3F8,	"reference to type's name",	0);
	create_qword	(x=0X71000AC3F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC400,	"attribute",	0);
	create_dword	(x=0X71000AC400);
	op_hex		(x,	0);
	set_cmt	(0X71000AC404,	"count of base classes",	0);
	create_dword	(x=0X71000AC404);
	op_dec		(x,	0);
	set_cmt	(0X71000AC408,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AC408);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC410,	"base class' attributes",	0);
	create_qword	(x=0X71000AC410);
	op_hex		(x,	0);
	set_cmt	(0X71000AC418,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AC418);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC420,	"base class' attributes",	0);
	create_qword	(x=0X71000AC420);
	op_hex		(x,	0);
	set_cmt	(0X71000AC428,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AC428);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC430,	"base class' attributes",	0);
	create_qword	(x=0X71000AC430);
	op_hex		(x,	0);
	set_cmt	(0X71000AC438,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AC438,	E_PREV + 0,	"; public \x01\b\x01(00000071000AC438nn::sf::cmif::client::detail::CmifProxy<nn::fssrv::sf::IDeviceOperator,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>\x02\b :");
	update_extra_cmt		(0X71000AC438,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AC3F0nn::sf::cmif::client::detail::CmifProxyImpl<nn::fssrv::sf::IDeviceOperator,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>,nn::fssrv::sf::IDeviceOperator,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000AC438,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000AC3D8nn::fssrv::sf::IDeviceOperator\x02\b :");
	update_extra_cmt		(0X71000AC438,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000AC438,	E_PREV + 4,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000AC438,	E_PREV + 5,	";     protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000AC438,	E_PREV + 6,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000AC438,	E_PREV + 7,	";     protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000AC438);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AC438,	"_ZTIN2nn2sf4cmif6client6detail9CmifProxyINS_5fssrv2sf15IDeviceOperatorENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSA_18Hipc2ProxyKindBaseILNS9_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEENS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEvEE");
	set_cmt	(0X71000AC440,	"reference to type's name",	0);
	create_qword	(x=0X71000AC440);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC448,	"reference to parent's type name",	0);
	create_qword	(x=0X71000AC448);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC450,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AC450,	E_PREV + 0,	"; public \x01\b\x01(00000071000AC450nn::sf::detail::ObjectImplFactoryWithStatelessAllocator<nn::sf::cmif::client::detail::CmifProxy<nn::fssrv::sf::IDeviceOperator,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>>::Object\x02\b :");
	update_extra_cmt		(0X71000AC450,	E_PREV + 1,	";   protected /* offset 0x28 */ \x01\b\x01(00000071000ABB00nn::sf::impl::detail::ServiceObjectImplBase2\x02\b,");
	update_extra_cmt		(0X71000AC450,	E_PREV + 2,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AC438nn::sf::cmif::client::detail::CmifProxy<nn::fssrv::sf::IDeviceOperator,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>\x02\b :");
	update_extra_cmt		(0X71000AC450,	E_PREV + 3,	";     public /* offset 0x0 */ \x01\b\x01(00000071000AC3F0nn::sf::cmif::client::detail::CmifProxyImpl<nn::fssrv::sf::IDeviceOperator,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>,nn::fssrv::sf::IDeviceOperator,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000AC450,	E_PREV + 4,	";       public /* offset 0x0 */ \x01\b\x01(00000071000AC3D8nn::fssrv::sf::IDeviceOperator\x02\b :");
	update_extra_cmt		(0X71000AC450,	E_PREV + 5,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000AC450,	E_PREV + 6,	";           public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000AC450,	E_PREV + 7,	";       protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000AC450,	E_PREV + 8,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000AC450,	E_PREV + 9,	";       protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000AC450);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AC450,	"_ZTIN2nn2sf6detail39ObjectImplFactoryWithStatelessAllocatorINS0_4cmif6client6detail9CmifProxyINS_5fssrv2sf15IDeviceOperatorENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSC_18Hipc2ProxyKindBaseILNSB_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESP_E6ObjectE");
	set_cmt	(0X71000AC458,	"reference to type's name",	0);
	create_qword	(x=0X71000AC458);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC460,	"attribute",	0);
	create_dword	(x=0X71000AC460);
	op_hex		(x,	0);
	set_cmt	(0X71000AC464,	"count of base classes",	0);
	create_dword	(x=0X71000AC464);
	op_dec		(x,	0);
	set_cmt	(0X71000AC468,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AC468);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC470,	"base class' attributes",	0);
	create_qword	(x=0X71000AC470);
	op_hex		(x,	0);
	set_cmt	(0X71000AC478,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AC478);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC480,	"base class' attributes",	0);
	create_qword	(x=0X71000AC480);
	op_hex		(x,	0);
	set_cmt	(0X71000AC488,	"offset to this",	0);
	create_qword	(x=0X71000AC488);
	op_dec		(x,	0);
	set_name	(0X71000AC488,	"_ZTVN2nn2sf6detail39ObjectImplFactoryWithStatelessAllocatorINS0_4cmif6client6detail9CmifProxyINS_5fssrv2sf14IEventNotifierENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSC_18Hipc2ProxyKindBaseILNSB_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESP_E6ObjectE");
	create_qword	(x=0X71000AC490);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC498);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC4A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC4A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC4B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC4B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC4C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC4C8,	"offset to this",	0);
	create_qword	(x=0X71000AC4C8);
	toggle_sign		(x,	0);
	op_dec		(x,	0);
	toggle_sign		(x,	1);
	create_qword	(x=0X71000AC4D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC4D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC4E0,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AC4E0,	E_PREV + 0,	"; public \x01\b\x01(00000071000AC4E0nn::fssrv::sf::IEventNotifier\x02\b :");
	update_extra_cmt		(0X71000AC4E0,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000AC4E0,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b");
	create_qword	(x=0X71000AC4E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AC4E0,	"_ZTIN2nn5fssrv2sf14IEventNotifierE");
	set_cmt	(0X71000AC4E8,	"reference to type's name",	0);
	create_qword	(x=0X71000AC4E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC4F0,	"reference to parent's type name",	0);
	create_qword	(x=0X71000AC4F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC4F8,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AC4F8,	E_PREV + 0,	"; public \x01\b\x01(00000071000AC4F8nn::sf::cmif::client::detail::CmifProxyImpl<nn::fssrv::sf::IEventNotifier,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>,nn::fssrv::sf::IEventNotifier,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000AC4F8,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AC4E0nn::fssrv::sf::IEventNotifier\x02\b :");
	update_extra_cmt		(0X71000AC4F8,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000AC4F8,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000AC4F8,	E_PREV + 4,	";   protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000AC4F8,	E_PREV + 5,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000AC4F8,	E_PREV + 6,	";   protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000AC4F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AC4F8,	"_ZTIN2nn2sf4cmif6client6detail13CmifProxyImplINS_5fssrv2sf14IEventNotifierENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSA_18Hipc2ProxyKindBaseILNS9_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEES7_NS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEEE");
	set_cmt	(0X71000AC500,	"reference to type's name",	0);
	create_qword	(x=0X71000AC500);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC508,	"attribute",	0);
	create_dword	(x=0X71000AC508);
	op_hex		(x,	0);
	set_cmt	(0X71000AC50C,	"count of base classes",	0);
	create_dword	(x=0X71000AC50C);
	op_dec		(x,	0);
	set_cmt	(0X71000AC510,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AC510);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC518,	"base class' attributes",	0);
	create_qword	(x=0X71000AC518);
	op_hex		(x,	0);
	set_cmt	(0X71000AC520,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AC520);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC528,	"base class' attributes",	0);
	create_qword	(x=0X71000AC528);
	op_hex		(x,	0);
	set_cmt	(0X71000AC530,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AC530);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC538,	"base class' attributes",	0);
	create_qword	(x=0X71000AC538);
	op_hex		(x,	0);
	set_cmt	(0X71000AC540,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AC540,	E_PREV + 0,	"; public \x01\b\x01(00000071000AC540nn::sf::cmif::client::detail::CmifProxy<nn::fssrv::sf::IEventNotifier,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>\x02\b :");
	update_extra_cmt		(0X71000AC540,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AC4F8nn::sf::cmif::client::detail::CmifProxyImpl<nn::fssrv::sf::IEventNotifier,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>,nn::fssrv::sf::IEventNotifier,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000AC540,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000AC4E0nn::fssrv::sf::IEventNotifier\x02\b :");
	update_extra_cmt		(0X71000AC540,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000AC540,	E_PREV + 4,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000AC540,	E_PREV + 5,	";     protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000AC540,	E_PREV + 6,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000AC540,	E_PREV + 7,	";     protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000AC540);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AC540,	"_ZTIN2nn2sf4cmif6client6detail9CmifProxyINS_5fssrv2sf14IEventNotifierENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSA_18Hipc2ProxyKindBaseILNS9_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEENS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEvEE");
	set_cmt	(0X71000AC548,	"reference to type's name",	0);
	create_qword	(x=0X71000AC548);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC550,	"reference to parent's type name",	0);
	create_qword	(x=0X71000AC550);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC558,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AC558,	E_PREV + 0,	"; public \x01\b\x01(00000071000AC558nn::sf::detail::ObjectImplFactoryWithStatelessAllocator<nn::sf::cmif::client::detail::CmifProxy<nn::fssrv::sf::IEventNotifier,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>>::Object\x02\b :");
	update_extra_cmt		(0X71000AC558,	E_PREV + 1,	";   protected /* offset 0x28 */ \x01\b\x01(00000071000ABB00nn::sf::impl::detail::ServiceObjectImplBase2\x02\b,");
	update_extra_cmt		(0X71000AC558,	E_PREV + 2,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AC540nn::sf::cmif::client::detail::CmifProxy<nn::fssrv::sf::IEventNotifier,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>\x02\b :");
	update_extra_cmt		(0X71000AC558,	E_PREV + 3,	";     public /* offset 0x0 */ \x01\b\x01(00000071000AC4F8nn::sf::cmif::client::detail::CmifProxyImpl<nn::fssrv::sf::IEventNotifier,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>,nn::fssrv::sf::IEventNotifier,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000AC558,	E_PREV + 4,	";       public /* offset 0x0 */ \x01\b\x01(00000071000AC4E0nn::fssrv::sf::IEventNotifier\x02\b :");
	update_extra_cmt		(0X71000AC558,	E_PREV + 5,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000AC558,	E_PREV + 6,	";           public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000AC558,	E_PREV + 7,	";       protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000AC558,	E_PREV + 8,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000AC558,	E_PREV + 9,	";       protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000AC558);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AC558,	"_ZTIN2nn2sf6detail39ObjectImplFactoryWithStatelessAllocatorINS0_4cmif6client6detail9CmifProxyINS_5fssrv2sf14IEventNotifierENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSC_18Hipc2ProxyKindBaseILNSB_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESP_E6ObjectE");
	set_cmt	(0X71000AC560,	"reference to type's name",	0);
	create_qword	(x=0X71000AC560);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC568,	"attribute",	0);
	create_dword	(x=0X71000AC568);
	op_hex		(x,	0);
	set_cmt	(0X71000AC56C,	"count of base classes",	0);
	create_dword	(x=0X71000AC56C);
	op_dec		(x,	0);
	set_cmt	(0X71000AC570,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AC570);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC578,	"base class' attributes",	0);
	create_qword	(x=0X71000AC578);
	op_hex		(x,	0);
	set_cmt	(0X71000AC580,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AC580);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC588,	"base class' attributes",	0);
	create_qword	(x=0X71000AC588);
	op_hex		(x,	0);
	set_cmt	(0X71000AC590,	"offset to this",	0);
	create_qword	(x=0X71000AC590);
	op_dec		(x,	0);
	set_name	(0X71000AC590,	"_ZTVN2nn2sf6detail39ObjectImplFactoryWithStatelessAllocatorINS0_4cmif6client6detail9CmifProxyINS_5fssrv2sf19IMultiCommitManagerENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSC_18Hipc2ProxyKindBaseILNSB_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESP_E6ObjectE");
	create_qword	(x=0X71000AC598);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC5A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC5A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC5B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC5B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC5C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC5C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC5D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC5D8,	"offset to this",	0);
	create_qword	(x=0X71000AC5D8);
	toggle_sign		(x,	0);
	op_dec		(x,	0);
	toggle_sign		(x,	1);
	create_qword	(x=0X71000AC5E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC5E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC5F0,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AC5F0,	E_PREV + 0,	"; public \x01\b\x01(00000071000AC5F0nn::fssrv::sf::IMultiCommitManager\x02\b :");
	update_extra_cmt		(0X71000AC5F0,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000AC5F0,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b");
	create_qword	(x=0X71000AC5F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AC5F0,	"_ZTIN2nn5fssrv2sf19IMultiCommitManagerE");
	set_cmt	(0X71000AC5F8,	"reference to type's name",	0);
	create_qword	(x=0X71000AC5F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC600,	"reference to parent's type name",	0);
	create_qword	(x=0X71000AC600);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC608,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AC608,	E_PREV + 0,	"; public \x01\b\x01(00000071000AC608nn::sf::cmif::client::detail::CmifProxyImpl<nn::fssrv::sf::IMultiCommitManager,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>,nn::fssrv::sf::IMultiCommitManager,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000AC608,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AC5F0nn::fssrv::sf::IMultiCommitManager\x02\b :");
	update_extra_cmt		(0X71000AC608,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000AC608,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000AC608,	E_PREV + 4,	";   protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000AC608,	E_PREV + 5,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000AC608,	E_PREV + 6,	";   protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000AC608);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AC608,	"_ZTIN2nn2sf4cmif6client6detail13CmifProxyImplINS_5fssrv2sf19IMultiCommitManagerENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSA_18Hipc2ProxyKindBaseILNS9_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEES7_NS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEEE");
	set_cmt	(0X71000AC610,	"reference to type's name",	0);
	create_qword	(x=0X71000AC610);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC618,	"attribute",	0);
	create_dword	(x=0X71000AC618);
	op_hex		(x,	0);
	set_cmt	(0X71000AC61C,	"count of base classes",	0);
	create_dword	(x=0X71000AC61C);
	op_dec		(x,	0);
	set_cmt	(0X71000AC620,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AC620);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC628,	"base class' attributes",	0);
	create_qword	(x=0X71000AC628);
	op_hex		(x,	0);
	set_cmt	(0X71000AC630,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AC630);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC638,	"base class' attributes",	0);
	create_qword	(x=0X71000AC638);
	op_hex		(x,	0);
	set_cmt	(0X71000AC640,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AC640);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC648,	"base class' attributes",	0);
	create_qword	(x=0X71000AC648);
	op_hex		(x,	0);
	set_cmt	(0X71000AC650,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AC650,	E_PREV + 0,	"; public \x01\b\x01(00000071000AC650nn::sf::cmif::client::detail::CmifProxy<nn::fssrv::sf::IMultiCommitManager,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>\x02\b :");
	update_extra_cmt		(0X71000AC650,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AC608nn::sf::cmif::client::detail::CmifProxyImpl<nn::fssrv::sf::IMultiCommitManager,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>,nn::fssrv::sf::IMultiCommitManager,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000AC650,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000AC5F0nn::fssrv::sf::IMultiCommitManager\x02\b :");
	update_extra_cmt		(0X71000AC650,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000AC650,	E_PREV + 4,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000AC650,	E_PREV + 5,	";     protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000AC650,	E_PREV + 6,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000AC650,	E_PREV + 7,	";     protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000AC650);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AC650,	"_ZTIN2nn2sf4cmif6client6detail9CmifProxyINS_5fssrv2sf19IMultiCommitManagerENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSA_18Hipc2ProxyKindBaseILNS9_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEENS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEvEE");
	set_cmt	(0X71000AC658,	"reference to type's name",	0);
	create_qword	(x=0X71000AC658);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC660,	"reference to parent's type name",	0);
	create_qword	(x=0X71000AC660);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC668,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AC668,	E_PREV + 0,	"; public \x01\b\x01(00000071000AC668nn::sf::detail::ObjectImplFactoryWithStatelessAllocator<nn::sf::cmif::client::detail::CmifProxy<nn::fssrv::sf::IMultiCommitManager,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>>::Object\x02\b :");
	update_extra_cmt		(0X71000AC668,	E_PREV + 1,	";   protected /* offset 0x28 */ \x01\b\x01(00000071000ABB00nn::sf::impl::detail::ServiceObjectImplBase2\x02\b,");
	update_extra_cmt		(0X71000AC668,	E_PREV + 2,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AC650nn::sf::cmif::client::detail::CmifProxy<nn::fssrv::sf::IMultiCommitManager,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>\x02\b :");
	update_extra_cmt		(0X71000AC668,	E_PREV + 3,	";     public /* offset 0x0 */ \x01\b\x01(00000071000AC608nn::sf::cmif::client::detail::CmifProxyImpl<nn::fssrv::sf::IMultiCommitManager,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>,nn::fssrv::sf::IMultiCommitManager,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000AC668,	E_PREV + 4,	";       public /* offset 0x0 */ \x01\b\x01(00000071000AC5F0nn::fssrv::sf::IMultiCommitManager\x02\b :");
	update_extra_cmt		(0X71000AC668,	E_PREV + 5,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000AC668,	E_PREV + 6,	";           public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000AC668,	E_PREV + 7,	";       protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000AC668,	E_PREV + 8,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000AC668,	E_PREV + 9,	";       protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000AC668);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AC668,	"_ZTIN2nn2sf6detail39ObjectImplFactoryWithStatelessAllocatorINS0_4cmif6client6detail9CmifProxyINS_5fssrv2sf19IMultiCommitManagerENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSC_18Hipc2ProxyKindBaseILNSB_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESP_E6ObjectE");
	set_cmt	(0X71000AC670,	"reference to type's name",	0);
	create_qword	(x=0X71000AC670);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC678,	"attribute",	0);
	create_dword	(x=0X71000AC678);
	op_hex		(x,	0);
	set_cmt	(0X71000AC67C,	"count of base classes",	0);
	create_dword	(x=0X71000AC67C);
	op_dec		(x,	0);
	set_cmt	(0X71000AC680,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AC680);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC688,	"base class' attributes",	0);
	create_qword	(x=0X71000AC688);
	op_hex		(x,	0);
	set_cmt	(0X71000AC690,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AC690);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC698,	"base class' attributes",	0);
	create_qword	(x=0X71000AC698);
	op_hex		(x,	0);
	set_cmt	(0X71000AC6A0,	"offset to this",	0);
	create_qword	(x=0X71000AC6A0);
	op_dec		(x,	0);
	set_name	(0X71000AC6A0,	"_ZTVN2nn2sf6detail39ObjectImplFactoryWithStatelessAllocatorINS0_4cmif6client6detail9CmifProxyINS_5fssrv2sf6IWiperENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSC_18Hipc2ProxyKindBaseILNSB_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESP_E6ObjectE");
	create_qword	(x=0X71000AC6A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC6B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC6B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC6C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC6C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC6D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC6D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC6E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC6E8,	"offset to this",	0);
	create_qword	(x=0X71000AC6E8);
	toggle_sign		(x,	0);
	op_dec		(x,	0);
	toggle_sign		(x,	1);
	create_qword	(x=0X71000AC6F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC6F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC700,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AC700,	E_PREV + 0,	"; public \x01\b\x01(00000071000AC700nn::fssrv::sf::IWiper\x02\b :");
	update_extra_cmt		(0X71000AC700,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000AC700,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b");
	create_qword	(x=0X71000AC700);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AC700,	"_ZTIN2nn5fssrv2sf6IWiperE");
	set_cmt	(0X71000AC708,	"reference to type's name",	0);
	create_qword	(x=0X71000AC708);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC710,	"reference to parent's type name",	0);
	create_qword	(x=0X71000AC710);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC718,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AC718,	E_PREV + 0,	"; public \x01\b\x01(00000071000AC718nn::sf::cmif::client::detail::CmifProxyImpl<nn::fssrv::sf::IWiper,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>,nn::fssrv::sf::IWiper,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000AC718,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AC700nn::fssrv::sf::IWiper\x02\b :");
	update_extra_cmt		(0X71000AC718,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000AC718,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000AC718,	E_PREV + 4,	";   protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000AC718,	E_PREV + 5,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000AC718,	E_PREV + 6,	";   protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000AC718);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AC718,	"_ZTIN2nn2sf4cmif6client6detail13CmifProxyImplINS_5fssrv2sf6IWiperENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSA_18Hipc2ProxyKindBaseILNS9_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEES7_NS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEEE");
	set_cmt	(0X71000AC720,	"reference to type's name",	0);
	create_qword	(x=0X71000AC720);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC728,	"attribute",	0);
	create_dword	(x=0X71000AC728);
	op_hex		(x,	0);
	set_cmt	(0X71000AC72C,	"count of base classes",	0);
	create_dword	(x=0X71000AC72C);
	op_dec		(x,	0);
	set_cmt	(0X71000AC730,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AC730);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC738,	"base class' attributes",	0);
	create_qword	(x=0X71000AC738);
	op_hex		(x,	0);
	set_cmt	(0X71000AC740,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AC740);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC748,	"base class' attributes",	0);
	create_qword	(x=0X71000AC748);
	op_hex		(x,	0);
	set_cmt	(0X71000AC750,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AC750);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC758,	"base class' attributes",	0);
	create_qword	(x=0X71000AC758);
	op_hex		(x,	0);
	set_cmt	(0X71000AC760,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AC760,	E_PREV + 0,	"; public \x01\b\x01(00000071000AC760nn::sf::cmif::client::detail::CmifProxy<nn::fssrv::sf::IWiper,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>\x02\b :");
	update_extra_cmt		(0X71000AC760,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AC718nn::sf::cmif::client::detail::CmifProxyImpl<nn::fssrv::sf::IWiper,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>,nn::fssrv::sf::IWiper,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000AC760,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000AC700nn::fssrv::sf::IWiper\x02\b :");
	update_extra_cmt		(0X71000AC760,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000AC760,	E_PREV + 4,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000AC760,	E_PREV + 5,	";     protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000AC760,	E_PREV + 6,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000AC760,	E_PREV + 7,	";     protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000AC760);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AC760,	"_ZTIN2nn2sf4cmif6client6detail9CmifProxyINS_5fssrv2sf6IWiperENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSA_18Hipc2ProxyKindBaseILNS9_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEENS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEvEE");
	set_cmt	(0X71000AC768,	"reference to type's name",	0);
	create_qword	(x=0X71000AC768);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC770,	"reference to parent's type name",	0);
	create_qword	(x=0X71000AC770);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC778,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AC778,	E_PREV + 0,	"; public \x01\b\x01(00000071000AC778nn::sf::detail::ObjectImplFactoryWithStatelessAllocator<nn::sf::cmif::client::detail::CmifProxy<nn::fssrv::sf::IWiper,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>>::Object\x02\b :");
	update_extra_cmt		(0X71000AC778,	E_PREV + 1,	";   protected /* offset 0x28 */ \x01\b\x01(00000071000ABB00nn::sf::impl::detail::ServiceObjectImplBase2\x02\b,");
	update_extra_cmt		(0X71000AC778,	E_PREV + 2,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AC760nn::sf::cmif::client::detail::CmifProxy<nn::fssrv::sf::IWiper,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>\x02\b :");
	update_extra_cmt		(0X71000AC778,	E_PREV + 3,	";     public /* offset 0x0 */ \x01\b\x01(00000071000AC718nn::sf::cmif::client::detail::CmifProxyImpl<nn::fssrv::sf::IWiper,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::StatelessAllocationPolicy<nn::fs::detail::`anonymous namespace'::HipcClientAllocator>,nn::fssrv::sf::IWiper,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000AC778,	E_PREV + 4,	";       public /* offset 0x0 */ \x01\b\x01(00000071000AC700nn::fssrv::sf::IWiper\x02\b :");
	update_extra_cmt		(0X71000AC778,	E_PREV + 5,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000AC778,	E_PREV + 6,	";           public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000AC778,	E_PREV + 7,	";       protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000AC778,	E_PREV + 8,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000AC778,	E_PREV + 9,	";       protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000AC778);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AC778,	"_ZTIN2nn2sf6detail39ObjectImplFactoryWithStatelessAllocatorINS0_4cmif6client6detail9CmifProxyINS_5fssrv2sf6IWiperENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSC_18Hipc2ProxyKindBaseILNSB_6detail11MessageTypeE6EEEEEEENS0_25StatelessAllocationPolicyINS_2fs6detail12_GLOBAL__N_119HipcClientAllocatorEEENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESP_E6ObjectE");
	set_cmt	(0X71000AC780,	"reference to type's name",	0);
	create_qword	(x=0X71000AC780);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC788,	"attribute",	0);
	create_dword	(x=0X71000AC788);
	op_hex		(x,	0);
	set_cmt	(0X71000AC78C,	"count of base classes",	0);
	create_dword	(x=0X71000AC78C);
	op_dec		(x,	0);
	set_cmt	(0X71000AC790,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AC790);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC798,	"base class' attributes",	0);
	create_qword	(x=0X71000AC798);
	op_hex		(x,	0);
	set_cmt	(0X71000AC7A0,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AC7A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC7A8,	"base class' attributes",	0);
	create_qword	(x=0X71000AC7A8);
	op_hex		(x,	0);
	set_cmt	(0X71000AC7B0,	"offset to this",	0);
	create_qword	(x=0X71000AC7B0);
	op_dec		(x,	0);
	set_name	(0X71000AC7B0,	"_ZTVN2nn2sf4hipc6client34HipcSimpleClientSessionManagerBaseINS2_29DefaultSessionResourceManagerEE4ImplE");
	create_qword	(x=0X71000AC7B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC7C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC7C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC7D0,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AC7D0,	E_PREV + 0,	"; public \x01\b\x01(00000071000AC7D0nn::sf::hipc::client::HipcClientSessionAllocator\x02\b");
	create_qword	(x=0X71000AC7D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AC7D0,	"_ZTIN2nn2sf4hipc6client26HipcClientSessionAllocatorE");
	set_cmt	(0X71000AC7D8,	"reference to type's name",	0);
	create_qword	(x=0X71000AC7D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC7E0,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AC7E0,	E_PREV + 0,	"; public \x01\b\x01(00000071000AC7E0nn::sf::hipc::client::HipcClientSessionManager\x02\b :");
	update_extra_cmt		(0X71000AC7E0,	E_PREV + 1,	";   protected /* offset 0x0 */ \x01\b\x01(00000071000AC7D0nn::sf::hipc::client::HipcClientSessionAllocator\x02\b");
	create_qword	(x=0X71000AC7E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AC7E0,	"_ZTIN2nn2sf4hipc6client24HipcClientSessionManagerE");
	set_cmt	(0X71000AC7E8,	"reference to type's name",	0);
	create_qword	(x=0X71000AC7E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC7F0,	"attribute",	0);
	create_dword	(x=0X71000AC7F0);
	op_hex		(x,	0);
	set_cmt	(0X71000AC7F4,	"count of base classes",	0);
	create_dword	(x=0X71000AC7F4);
	op_dec		(x,	0);
	set_cmt	(0X71000AC7F8,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AC7F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC800,	"base class' attributes",	0);
	create_qword	(x=0X71000AC800);
	op_hex		(x,	0);
	set_cmt	(0X71000AC808,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AC808,	E_PREV + 0,	"; public \x01\b\x01(00000071000AC808nn::sf::hipc::client::HipcSimpleClientSessionManagerBase<nn::sf::hipc::client::DefaultSessionResourceManager>::Impl\x02\b :");
	update_extra_cmt		(0X71000AC808,	E_PREV + 1,	";   protected /* offset 0x0 */ \x01\b\x01(00000071000AC7E0nn::sf::hipc::client::HipcClientSessionManager\x02\b :");
	update_extra_cmt		(0X71000AC808,	E_PREV + 2,	";     protected /* offset 0x0 */ \x01\b\x01(00000071000AC7D0nn::sf::hipc::client::HipcClientSessionAllocator\x02\b");
	create_qword	(x=0X71000AC808);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AC808,	"_ZTIN2nn2sf4hipc6client34HipcSimpleClientSessionManagerBaseINS2_29DefaultSessionResourceManagerEE4ImplE");
	set_cmt	(0X71000AC810,	"reference to type's name",	0);
	create_qword	(x=0X71000AC810);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC818,	"attribute",	0);
	create_dword	(x=0X71000AC818);
	op_hex		(x,	0);
	set_cmt	(0X71000AC81C,	"count of base classes",	0);
	create_dword	(x=0X71000AC81C);
	op_dec		(x,	0);
	set_cmt	(0X71000AC820,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AC820);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC828,	"base class' attributes",	0);
	create_qword	(x=0X71000AC828);
	op_hex		(x,	0);
	set_cmt	(0X71000AC830,	"offset to this",	0);
	create_qword	(x=0X71000AC830);
	op_dec		(x,	0);
	set_name	(0X71000AC830,	"_ZTVN2nn2sf4hipc6client34HipcSimpleClientSessionManagerBaseINS_2fs6detail12_GLOBAL__N_137FileSystemProxySessionResourceManagerEE4ImplE");
	create_qword	(x=0X71000AC838);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC840);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC848);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC850,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AC850,	E_PREV + 0,	"; public \x01\b\x01(00000071000AC850nn::sf::hipc::client::HipcSimpleClientSessionManagerBase<nn::fs::detail::`anonymous namespace'::FileSystemProxySessionResourceManager>::Impl\x02\b :");
	update_extra_cmt		(0X71000AC850,	E_PREV + 1,	";   protected /* offset 0x0 */ \x01\b\x01(00000071000AC7E0nn::sf::hipc::client::HipcClientSessionManager\x02\b :");
	update_extra_cmt		(0X71000AC850,	E_PREV + 2,	";     protected /* offset 0x0 */ \x01\b\x01(00000071000AC7D0nn::sf::hipc::client::HipcClientSessionAllocator\x02\b");
	create_qword	(x=0X71000AC850);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AC850,	"_ZTIN2nn2sf4hipc6client34HipcSimpleClientSessionManagerBaseINS_2fs6detail12_GLOBAL__N_137FileSystemProxySessionResourceManagerEE4ImplE");
	set_cmt	(0X71000AC858,	"reference to type's name",	0);
	create_qword	(x=0X71000AC858);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC860,	"attribute",	0);
	create_dword	(x=0X71000AC860);
	op_hex		(x,	0);
	set_cmt	(0X71000AC864,	"count of base classes",	0);
	create_dword	(x=0X71000AC864);
	op_dec		(x,	0);
	set_cmt	(0X71000AC868,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AC868);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC870,	"base class' attributes",	0);
	create_qword	(x=0X71000AC870);
	op_hex		(x,	0);
	set_cmt	(0X71000AC878,	"offset to this",	0);
	create_qword	(x=0X71000AC878);
	op_dec		(x,	0);
	set_name	(0X71000AC878,	"_ZTVN2nn2fs12_GLOBAL__N_19AllocatorE");
	create_qword	(x=0X71000AC880);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC888);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC890);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC898);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC8A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC8A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC8B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC8B8,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AC8B8,	E_PREV + 0,	"; public \x01\b\x01(00000071000AC8B8nn::MemoryResource\x02\b");
	create_qword	(x=0X71000AC8B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AC8B8,	"_ZTIN2nn14MemoryResourceE");
	set_cmt	(0X71000AC8C0,	"reference to type's name",	0);
	create_qword	(x=0X71000AC8C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC8C8,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AC8C8,	E_PREV + 0,	"; public \x01\b\x01(00000071000AC8C8nn::fs::`anonymous namespace'::Allocator\x02\b :");
	update_extra_cmt		(0X71000AC8C8,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AC8B8nn::MemoryResource\x02\b");
	create_qword	(x=0X71000AC8C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AC8C8,	"_ZTIN2nn2fs12_GLOBAL__N_19AllocatorE");
	set_cmt	(0X71000AC8D0,	"reference to type's name",	0);
	create_qword	(x=0X71000AC8D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC8D8,	"reference to parent's type name",	0);
	create_qword	(x=0X71000AC8D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC8E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AC8E0,	"SomeKindaAllocator");
	create_qword	(x=0X71000AC8E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_byte	(0X71000AC8F0);
	make_array	(0X71000AC8F1,	0X7);
	create_qword	(x=0X71000AC8F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC900);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X71000AC908,	0X8);
	set_cmt	(0X71000AC910,	"offset to this",	0);
	create_qword	(x=0X71000AC910);
	op_dec		(x,	0);
	set_name	(0X71000AC910,	"_ZTVN2nn2fs6detail18FileSystemAccessorE");
	create_qword	(x=0X71000AC918);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC920);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AC920,	"_ZTVN2nn2fs6detail18FileSystemAccessorEP");
	create_qword	(x=0X71000AC928);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC930,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AC930,	E_PREV + 0,	"; public \x01\b\x01(00000071000AC930nn::fs::detail::Newable\x02\b");
	create_qword	(x=0X71000AC930);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AC930,	"_ZTIN2nn2fs6detail7NewableE");
	set_cmt	(0X71000AC938,	"reference to type's name",	0);
	create_qword	(x=0X71000AC938);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC940,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AC940,	E_PREV + 0,	"; public \x01\b\x01(00000071000AC940nn::fs::detail::FileSystemAccessor\x02\b :");
	update_extra_cmt		(0X71000AC940,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AC930nn::fs::detail::Newable\x02\b");
	create_qword	(x=0X71000AC940);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AC940,	"_ZTIN2nn2fs6detail18FileSystemAccessorE");
	set_cmt	(0X71000AC948,	"reference to type's name",	0);
	create_qword	(x=0X71000AC948);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC950,	"reference to parent's type name",	0);
	create_qword	(x=0X71000AC950);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC958,	"offset to this",	0);
	create_qword	(x=0X71000AC958);
	op_dec		(x,	0);
	set_name	(0X71000AC958,	"_ZTVN2nn2fs6detail24FileServiceObjectAdapterE");
	create_qword	(x=0X71000AC960);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC968);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC970);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC978);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC980);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC988);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC990);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC998);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC9A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC9A8,	"offset to this",	0);
	create_qword	(x=0X71000AC9A8);
	op_dec		(x,	0);
	set_name	(0X71000AC9A8,	"_ZTVN2nn2fs6detail29DirectoryServiceObjectAdapterE");
	create_qword	(x=0X71000AC9B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC9B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC9C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC9C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC9D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AC9D8,	"offset to this",	0);
	create_qword	(x=0X71000AC9D8);
	op_dec		(x,	0);
	set_name	(0X71000AC9D8,	"_ZTVN2nn2fs6detail30FileSystemServiceObjectAdapterE");
	create_qword	(x=0X71000AC9E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC9E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC9F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AC9F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACA00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACA08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACA10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACA18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACA20);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACA28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACA30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACA38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACA40);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACA48);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACA50);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACA58);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACA60);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACA68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACA70);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACA78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACA80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACA88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACA90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACA98);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ACAA0,	"offset to this",	0);
	create_qword	(x=0X71000ACAA0);
	toggle_sign		(x,	0);
	op_dec		(x,	0);
	toggle_sign		(x,	1);
	create_qword	(x=0X71000ACAA8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACAB0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ACAB8,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000ACAB8,	E_PREV + 0,	"; public \x01\b\x01(00000071000ACAB8nn::fs::fsa::IFile\x02\b");
	create_qword	(x=0X71000ACAB8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000ACAB8,	"_ZTIN2nn2fs3fsa5IFileE");
	set_cmt	(0X71000ACAC0,	"reference to type's name",	0);
	create_qword	(x=0X71000ACAC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ACAC8,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000ACAC8,	E_PREV + 0,	"; public \x01\b\x01(00000071000ACAC8nn::fs::detail::FileServiceObjectAdapter\x02\b :");
	update_extra_cmt		(0X71000ACAC8,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AC930nn::fs::detail::Newable\x02\b,");
	update_extra_cmt		(0X71000ACAC8,	E_PREV + 2,	";   public /* offset 0x0 */ \x01\b\x01(00000071000ACAB8nn::fs::fsa::IFile\x02\b");
	create_qword	(x=0X71000ACAC8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000ACAC8,	"_ZTIN2nn2fs6detail24FileServiceObjectAdapterE");
	set_cmt	(0X71000ACAD0,	"reference to type's name",	0);
	create_qword	(x=0X71000ACAD0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ACAD8,	"attribute",	0);
	create_dword	(x=0X71000ACAD8);
	op_hex		(x,	0);
	set_cmt	(0X71000ACADC,	"count of base classes",	0);
	create_dword	(x=0X71000ACADC);
	op_dec		(x,	0);
	set_cmt	(0X71000ACAE0,	"base class' type descriptor",	0);
	create_qword	(x=0X71000ACAE0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ACAE8,	"base class' attributes",	0);
	create_qword	(x=0X71000ACAE8);
	op_hex		(x,	0);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_14(void) {
        auto x;
#define id x

	set_cmt	(0X71000ACAF0,	"base class' type descriptor",	0);
	create_qword	(x=0X71000ACAF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ACAF8,	"base class' attributes",	0);
	create_qword	(x=0X71000ACAF8);
	op_hex		(x,	0);
	set_cmt	(0X71000ACB00,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000ACB00,	E_PREV + 0,	"; public \x01\b\x01(00000071000ACB00nn::fs::fsa::IDirectory\x02\b");
	create_qword	(x=0X71000ACB00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000ACB00,	"_ZTIN2nn2fs3fsa10IDirectoryE");
	set_cmt	(0X71000ACB08,	"reference to type's name",	0);
	create_qword	(x=0X71000ACB08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ACB10,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000ACB10,	E_PREV + 0,	"; public \x01\b\x01(00000071000ACB10nn::fs::detail::DirectoryServiceObjectAdapter\x02\b :");
	update_extra_cmt		(0X71000ACB10,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AC930nn::fs::detail::Newable\x02\b,");
	update_extra_cmt		(0X71000ACB10,	E_PREV + 2,	";   public /* offset 0x0 */ \x01\b\x01(00000071000ACB00nn::fs::fsa::IDirectory\x02\b");
	create_qword	(x=0X71000ACB10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000ACB10,	"_ZTIN2nn2fs6detail29DirectoryServiceObjectAdapterE");
	set_cmt	(0X71000ACB18,	"reference to type's name",	0);
	create_qword	(x=0X71000ACB18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ACB20,	"attribute",	0);
	create_dword	(x=0X71000ACB20);
	op_hex		(x,	0);
	set_cmt	(0X71000ACB24,	"count of base classes",	0);
	create_dword	(x=0X71000ACB24);
	op_dec		(x,	0);
	set_cmt	(0X71000ACB28,	"base class' type descriptor",	0);
	create_qword	(x=0X71000ACB28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ACB30,	"base class' attributes",	0);
	create_qword	(x=0X71000ACB30);
	op_hex		(x,	0);
	set_cmt	(0X71000ACB38,	"base class' type descriptor",	0);
	create_qword	(x=0X71000ACB38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ACB40,	"base class' attributes",	0);
	create_qword	(x=0X71000ACB40);
	op_hex		(x,	0);
	set_cmt	(0X71000ACB48,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000ACB48,	E_PREV + 0,	"; public \x01\b\x01(00000071000ACB48nn::fs::fsa::IFileSystem\x02\b");
	create_qword	(x=0X71000ACB48);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000ACB48,	"_ZTIN2nn2fs3fsa11IFileSystemE");
	set_cmt	(0X71000ACB50,	"reference to type's name",	0);
	create_qword	(x=0X71000ACB50);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ACB58,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000ACB58,	E_PREV + 0,	"; public \x01\b\x01(00000071000ACB58nn::fs::fsa::IMultiCommitTarget\x02\b");
	create_qword	(x=0X71000ACB58);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000ACB58,	"_ZTIN2nn2fs3fsa18IMultiCommitTargetE");
	set_cmt	(0X71000ACB60,	"reference to type's name",	0);
	create_qword	(x=0X71000ACB60);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ACB68,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000ACB68,	E_PREV + 0,	"; public \x01\b\x01(00000071000ACB68nn::fs::detail::FileSystemServiceObjectAdapter\x02\b :");
	update_extra_cmt		(0X71000ACB68,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AC930nn::fs::detail::Newable\x02\b,");
	update_extra_cmt		(0X71000ACB68,	E_PREV + 2,	";   public /* offset 0x0 */ \x01\b\x01(00000071000ACB48nn::fs::fsa::IFileSystem\x02\b,");
	update_extra_cmt		(0X71000ACB68,	E_PREV + 3,	";   public /* offset 0x8 */ \x01\b\x01(00000071000ACB58nn::fs::fsa::IMultiCommitTarget\x02\b");
	create_qword	(x=0X71000ACB68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000ACB68,	"_ZTIN2nn2fs6detail30FileSystemServiceObjectAdapterE");
	set_cmt	(0X71000ACB70,	"reference to type's name",	0);
	create_qword	(x=0X71000ACB70);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ACB78,	"attribute",	0);
	create_dword	(x=0X71000ACB78);
	op_hex		(x,	0);
	set_cmt	(0X71000ACB7C,	"count of base classes",	0);
	create_dword	(x=0X71000ACB7C);
	op_dec		(x,	0);
	set_cmt	(0X71000ACB80,	"base class' type descriptor",	0);
	create_qword	(x=0X71000ACB80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ACB88,	"base class' attributes",	0);
	create_qword	(x=0X71000ACB88);
	op_hex		(x,	0);
	set_cmt	(0X71000ACB90,	"base class' type descriptor",	0);
	create_qword	(x=0X71000ACB90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ACB98,	"base class' attributes",	0);
	create_qword	(x=0X71000ACB98);
	op_hex		(x,	0);
	set_cmt	(0X71000ACBA0,	"base class' type descriptor",	0);
	create_qword	(x=0X71000ACBA0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ACBA8,	"base class' attributes",	0);
	create_qword	(x=0X71000ACBA8);
	op_hex		(x,	0);
	set_cmt	(0X71000ACBB0,	"offset to this",	0);
	create_qword	(x=0X71000ACBB0);
	op_dec		(x,	0);
	set_name	(0X71000ACBB0,	"_ZTVN2nn2fs3fsa12_GLOBAL__N_121UnmountHookFileSystemE");
	create_qword	(x=0X71000ACBB8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACBC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACBC8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACBD0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACBD8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACBE0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACBE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACBF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACBF8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACC00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACC08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACC10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACC18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACC20);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACC28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACC30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACC38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACC40);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACC48);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACC50);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACC58);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACC60);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACC68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ACC70,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000ACC70,	E_PREV + 0,	"; public \x01\b\x01(00000071000ACC70nn::fs::fsa::`anonymous namespace'::UnmountHookFileSystem\x02\b :");
	update_extra_cmt		(0X71000ACC70,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000ACB48nn::fs::fsa::IFileSystem\x02\b,");
	update_extra_cmt		(0X71000ACC70,	E_PREV + 2,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AC930nn::fs::detail::Newable\x02\b");
	create_qword	(x=0X71000ACC70);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000ACC70,	"_ZTIN2nn2fs3fsa12_GLOBAL__N_121UnmountHookFileSystemE");
	set_cmt	(0X71000ACC78,	"reference to type's name",	0);
	create_qword	(x=0X71000ACC78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ACC80,	"attribute",	0);
	create_dword	(x=0X71000ACC80);
	op_hex		(x,	0);
	set_cmt	(0X71000ACC84,	"count of base classes",	0);
	create_dword	(x=0X71000ACC84);
	op_dec		(x,	0);
	set_cmt	(0X71000ACC88,	"base class' type descriptor",	0);
	create_qword	(x=0X71000ACC88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ACC90,	"base class' attributes",	0);
	create_qword	(x=0X71000ACC90);
	op_hex		(x,	0);
	set_cmt	(0X71000ACC98,	"base class' type descriptor",	0);
	create_qword	(x=0X71000ACC98);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ACCA0,	"base class' attributes",	0);
	create_qword	(x=0X71000ACCA0);
	op_hex		(x,	0);
	set_cmt	(0X71000ACCA8,	"offset to this",	0);
	create_qword	(x=0X71000ACCA8);
	op_dec		(x,	0);
	set_name	(0X71000ACCA8,	"_ZTVN2nn2fs6detail27StorageServiceObjectAdapterINS_5fssrv2sf8IStorageEEE");
	create_qword	(x=0X71000ACCB0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACCB8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000ACCB8,	"_ZTVN2nn2fs6detail27StorageServiceObjectAdapterINS_5fssrv2sf8IStorageEEEPtr");
	create_qword	(x=0X71000ACCC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACCC8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACCD0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACCD8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACCE0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACCE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACCF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ACCF8,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000ACCF8,	E_PREV + 0,	"; public \x01\b\x01(00000071000ACCF8nn::fs::IStorage\x02\b");
	create_qword	(x=0X71000ACCF8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000ACCF8,	"_ZTIN2nn2fs8IStorageE");
	set_cmt	(0X71000ACD00,	"reference to type's name",	0);
	create_qword	(x=0X71000ACD00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ACD08,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000ACD08,	E_PREV + 0,	"; public \x01\b\x01(00000071000ACD08nn::fs::detail::StorageServiceObjectAdapter<nn::fssrv::sf::IStorage>\x02\b :");
	update_extra_cmt		(0X71000ACD08,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AC930nn::fs::detail::Newable\x02\b,");
	update_extra_cmt		(0X71000ACD08,	E_PREV + 2,	";   public /* offset 0x0 */ \x01\b\x01(00000071000ACCF8nn::fs::IStorage\x02\b");
	create_qword	(x=0X71000ACD08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000ACD08,	"_ZTIN2nn2fs6detail27StorageServiceObjectAdapterINS_5fssrv2sf8IStorageEEE");
	set_cmt	(0X71000ACD10,	"reference to type's name",	0);
	create_qword	(x=0X71000ACD10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ACD18,	"attribute",	0);
	create_dword	(x=0X71000ACD18);
	op_hex		(x,	0);
	set_cmt	(0X71000ACD1C,	"count of base classes",	0);
	create_dword	(x=0X71000ACD1C);
	op_dec		(x,	0);
	set_cmt	(0X71000ACD20,	"base class' type descriptor",	0);
	create_qword	(x=0X71000ACD20);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ACD28,	"base class' attributes",	0);
	create_qword	(x=0X71000ACD28);
	op_hex		(x,	0);
	set_cmt	(0X71000ACD30,	"base class' type descriptor",	0);
	create_qword	(x=0X71000ACD30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ACD38,	"base class' attributes",	0);
	create_qword	(x=0X71000ACD38);
	op_hex		(x,	0);
	set_cmt	(0X71000ACD40,	"offset to this",	0);
	create_qword	(x=0X71000ACD40);
	op_dec		(x,	0);
	set_name	(0X71000ACD40,	"_ZTVN2nn2fs6detail9RomFsFileE");
	create_qword	(x=0X71000ACD48);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACD50);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACD58);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACD60);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACD68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACD70);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACD78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACD80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACD88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ACD90,	"offset to this",	0);
	create_qword	(x=0X71000ACD90);
	op_dec		(x,	0);
	set_name	(0X71000ACD90,	"_ZTVN2nn2fs15RomFsFileSystemE");
	create_qword	(x=0X71000ACD98);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACDA0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACDA8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACDB0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACDB8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACDC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACDC8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACDD0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACDD8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACDE0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACDE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACDF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACDF8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACE00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACE08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACE10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACE18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACE20);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACE28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACE30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACE38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACE40);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACE48);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ACE50,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000ACE50,	E_PREV + 0,	"; public \x01\b\x01(00000071000ACE50nn::fs::detail::RomFsFile\x02\b :");
	update_extra_cmt		(0X71000ACE50,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000ACAB8nn::fs::fsa::IFile\x02\b,");
	update_extra_cmt		(0X71000ACE50,	E_PREV + 2,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AC930nn::fs::detail::Newable\x02\b");
	create_qword	(x=0X71000ACE50);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000ACE50,	"_ZTIN2nn2fs6detail9RomFsFileE");
	set_cmt	(0X71000ACE58,	"reference to type's name",	0);
	create_qword	(x=0X71000ACE58);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ACE60,	"attribute",	0);
	create_dword	(x=0X71000ACE60);
	op_hex		(x,	0);
	set_cmt	(0X71000ACE64,	"count of base classes",	0);
	create_dword	(x=0X71000ACE64);
	op_dec		(x,	0);
	set_cmt	(0X71000ACE68,	"base class' type descriptor",	0);
	create_qword	(x=0X71000ACE68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ACE70,	"base class' attributes",	0);
	create_qword	(x=0X71000ACE70);
	op_hex		(x,	0);
	set_cmt	(0X71000ACE78,	"base class' type descriptor",	0);
	create_qword	(x=0X71000ACE78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ACE80,	"base class' attributes",	0);
	create_qword	(x=0X71000ACE80);
	op_hex		(x,	0);
	set_cmt	(0X71000ACE88,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000ACE88,	E_PREV + 0,	"; public \x01\b\x01(00000071000ACE88nn::fs::RomFsFileSystem\x02\b :");
	update_extra_cmt		(0X71000ACE88,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000ACB48nn::fs::fsa::IFileSystem\x02\b,");
	update_extra_cmt		(0X71000ACE88,	E_PREV + 2,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AC930nn::fs::detail::Newable\x02\b");
	create_qword	(x=0X71000ACE88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000ACE88,	"_ZTIN2nn2fs15RomFsFileSystemE");
	set_cmt	(0X71000ACE90,	"reference to type's name",	0);
	create_qword	(x=0X71000ACE90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ACE98,	"attribute",	0);
	create_dword	(x=0X71000ACE98);
	op_hex		(x,	0);
	set_cmt	(0X71000ACE9C,	"count of base classes",	0);
	create_dword	(x=0X71000ACE9C);
	op_dec		(x,	0);
	set_cmt	(0X71000ACEA0,	"base class' type descriptor",	0);
	create_qword	(x=0X71000ACEA0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ACEA8,	"base class' attributes",	0);
	create_qword	(x=0X71000ACEA8);
	op_hex		(x,	0);
	set_cmt	(0X71000ACEB0,	"base class' type descriptor",	0);
	create_qword	(x=0X71000ACEB0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ACEB8,	"base class' attributes",	0);
	create_qword	(x=0X71000ACEB8);
	op_hex		(x,	0);
	set_cmt	(0X71000ACEC0,	"offset to this",	0);
	create_qword	(x=0X71000ACEC0);
	op_dec		(x,	0);
	set_name	(0X71000ACEC0,	"_ZTVN2nn2fs13MemoryStorageE");
	create_qword	(x=0X71000ACEC8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACED0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000ACED0,	"_ZTVN2nn2fs13MemoryStorageEPtr");
	create_qword	(x=0X71000ACED8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACEE0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACEE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACEF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACEF8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACF00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACF08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ACF10,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000ACF10,	E_PREV + 0,	"; public \x01\b\x01(00000071000ACF10nn::fs::MemoryStorage\x02\b :");
	update_extra_cmt		(0X71000ACF10,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000ACCF8nn::fs::IStorage\x02\b,");
	update_extra_cmt		(0X71000ACF10,	E_PREV + 2,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AC930nn::fs::detail::Newable\x02\b");
	create_qword	(x=0X71000ACF10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000ACF10,	"_ZTIN2nn2fs13MemoryStorageE");
	set_cmt	(0X71000ACF18,	"reference to type's name",	0);
	create_qword	(x=0X71000ACF18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ACF20,	"attribute",	0);
	create_dword	(x=0X71000ACF20);
	op_hex		(x,	0);
	set_cmt	(0X71000ACF24,	"count of base classes",	0);
	create_dword	(x=0X71000ACF24);
	op_dec		(x,	0);
	set_cmt	(0X71000ACF28,	"base class' type descriptor",	0);
	create_qword	(x=0X71000ACF28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ACF30,	"base class' attributes",	0);
	create_qword	(x=0X71000ACF30);
	op_hex		(x,	0);
	set_cmt	(0X71000ACF38,	"base class' type descriptor",	0);
	create_qword	(x=0X71000ACF38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ACF40,	"base class' attributes",	0);
	create_qword	(x=0X71000ACF40);
	op_hex		(x,	0);
	set_cmt	(0X71000ACF48,	"offset to this",	0);
	create_qword	(x=0X71000ACF48);
	op_dec		(x,	0);
	set_name	(0X71000ACF48,	"_ZTVN2nn2fs10SubStorageE");
	create_qword	(x=0X71000ACF50);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACF58);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000ACF58,	"_ZTVN2nn2fs10SubStorageEPtr");
	create_qword	(x=0X71000ACF60);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACF68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACF70);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACF78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACF80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACF88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACF90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ACF98,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000ACF98,	E_PREV + 0,	"; public \x01\b\x01(00000071000ACF98nn::fs::SubStorage\x02\b :");
	update_extra_cmt		(0X71000ACF98,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000ACCF8nn::fs::IStorage\x02\b,");
	update_extra_cmt		(0X71000ACF98,	E_PREV + 2,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AC930nn::fs::detail::Newable\x02\b");
	create_qword	(x=0X71000ACF98);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000ACF98,	"_ZTIN2nn2fs10SubStorageE");
	set_cmt	(0X71000ACFA0,	"reference to type's name",	0);
	create_qword	(x=0X71000ACFA0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ACFA8,	"attribute",	0);
	create_dword	(x=0X71000ACFA8);
	op_hex		(x,	0);
	set_cmt	(0X71000ACFAC,	"count of base classes",	0);
	create_dword	(x=0X71000ACFAC);
	op_dec		(x,	0);
	set_cmt	(0X71000ACFB0,	"base class' type descriptor",	0);
	create_qword	(x=0X71000ACFB0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ACFB8,	"base class' attributes",	0);
	create_qword	(x=0X71000ACFB8);
	op_hex		(x,	0);
	set_cmt	(0X71000ACFC0,	"base class' type descriptor",	0);
	create_qword	(x=0X71000ACFC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ACFC8,	"base class' attributes",	0);
	create_qword	(x=0X71000ACFC8);
	op_hex		(x,	0);
	set_cmt	(0X71000ACFD0,	"offset to this",	0);
	create_qword	(x=0X71000ACFD0);
	op_dec		(x,	0);
	set_name	(0X71000ACFD0,	"_ZTVN2nn2fs12_GLOBAL__N_114RomFsDirectoryE");
	create_qword	(x=0X71000ACFD8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACFE0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACFE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACFF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ACFF8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD000,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AD000,	E_PREV + 0,	"; public \x01\b\x01(00000071000AD000nn::fs::`anonymous namespace'::RomFsDirectory\x02\b :");
	update_extra_cmt		(0X71000AD000,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000ACB00nn::fs::fsa::IDirectory\x02\b,");
	update_extra_cmt		(0X71000AD000,	E_PREV + 2,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AC930nn::fs::detail::Newable\x02\b");
	create_qword	(x=0X71000AD000);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AD000,	"_ZTIN2nn2fs12_GLOBAL__N_114RomFsDirectoryE");
	set_cmt	(0X71000AD008,	"reference to type's name",	0);
	create_qword	(x=0X71000AD008);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD010,	"attribute",	0);
	create_dword	(x=0X71000AD010);
	op_hex		(x,	0);
	set_cmt	(0X71000AD014,	"count of base classes",	0);
	create_dword	(x=0X71000AD014);
	op_dec		(x,	0);
	set_cmt	(0X71000AD018,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AD018);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD020,	"base class' attributes",	0);
	create_qword	(x=0X71000AD020);
	op_hex		(x,	0);
	set_cmt	(0X71000AD028,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AD028);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD030,	"base class' attributes",	0);
	create_qword	(x=0X71000AD030);
	op_hex		(x,	0);
	set_cmt	(0X71000AD038,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AD038,	E_PREV + 0,	"; public \x01\b\x01(00000071000AD038nn::os::detail::MultiWaitHolderBase\x02\b");
	create_qword	(x=0X71000AD038);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AD038,	"_ZTIN2nn2os6detail19MultiWaitHolderBaseE");
	set_cmt	(0X71000AD040,	"reference to type's name",	0);
	create_qword	(x=0X71000AD040);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD048,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AD048,	E_PREV + 0,	"; public \x01\b\x01(00000071000AD048nn::os::detail::MultiWaitHolderOfUserWaitObject\x02\b :");
	update_extra_cmt		(0X71000AD048,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AD038nn::os::detail::MultiWaitHolderBase\x02\b");
	create_qword	(x=0X71000AD048);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AD048,	"_ZTIN2nn2os6detail31MultiWaitHolderOfUserWaitObjectE");
	set_cmt	(0X71000AD050,	"reference to type's name",	0);
	create_qword	(x=0X71000AD050);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD058,	"reference to parent's type name",	0);
	create_qword	(x=0X71000AD058);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD060,	"offset to this",	0);
	create_qword	(x=0X71000AD060);
	op_dec		(x,	0);
	set_name	(0X71000AD060,	"_ZTVN2nn2os6detail22MultiWaitHolderOfEventE");
	create_qword	(x=0X71000AD068);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD070);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AD070,	"_ZTVN2nn2os6detail22MultiWaitHolderOfEventEPtr2");
	create_qword	(x=0X71000AD078);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD080);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD088);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD090);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD098,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AD098,	E_PREV + 0,	"; public \x01\b\x01(00000071000AD098nn::os::detail::MultiWaitHolderOfEvent\x02\b :");
	update_extra_cmt		(0X71000AD098,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AD048nn::os::detail::MultiWaitHolderOfUserWaitObject\x02\b :");
	update_extra_cmt		(0X71000AD098,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000AD038nn::os::detail::MultiWaitHolderBase\x02\b");
	create_qword	(x=0X71000AD098);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AD098,	"_ZTIN2nn2os6detail22MultiWaitHolderOfEventE");
	set_cmt	(0X71000AD0A0,	"reference to type's name",	0);
	create_qword	(x=0X71000AD0A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD0A8,	"reference to parent's type name",	0);
	create_qword	(x=0X71000AD0A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD0B0,	"offset to this",	0);
	create_qword	(x=0X71000AD0B0);
	op_dec		(x,	0);
	set_name	(0X71000AD0B0,	"_ZTVN2nn2os6detail34MultiWaitHolderOfInterProcessEventE");
	create_qword	(x=0X71000AD0B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD0C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AD0C0,	"_ZTVN2nn2os6detail34MultiWaitHolderOfInterProcessEventEPtr2");
	create_qword	(x=0X71000AD0C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD0D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD0D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD0E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD0E8,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AD0E8,	E_PREV + 0,	"; public \x01\b\x01(00000071000AD0E8nn::os::detail::MultiWaitHolderOfNativeWaitObject\x02\b :");
	update_extra_cmt		(0X71000AD0E8,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AD038nn::os::detail::MultiWaitHolderBase\x02\b");
	create_qword	(x=0X71000AD0E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AD0E8,	"_ZTIN2nn2os6detail33MultiWaitHolderOfNativeWaitObjectE");
	set_cmt	(0X71000AD0F0,	"reference to type's name",	0);
	create_qword	(x=0X71000AD0F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD0F8,	"reference to parent's type name",	0);
	create_qword	(x=0X71000AD0F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD100,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AD100,	E_PREV + 0,	"; public \x01\b\x01(00000071000AD100nn::os::detail::MultiWaitHolderOfInterProcessEvent\x02\b :");
	update_extra_cmt		(0X71000AD100,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AD0E8nn::os::detail::MultiWaitHolderOfNativeWaitObject\x02\b :");
	update_extra_cmt		(0X71000AD100,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000AD038nn::os::detail::MultiWaitHolderBase\x02\b");
	create_qword	(x=0X71000AD100);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AD100,	"_ZTIN2nn2os6detail34MultiWaitHolderOfInterProcessEventE");
	set_cmt	(0X71000AD108,	"reference to type's name",	0);
	create_qword	(x=0X71000AD108);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD110,	"reference to parent's type name",	0);
	create_qword	(x=0X71000AD110);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD118,	"offset to this",	0);
	create_qword	(x=0X71000AD118);
	op_dec		(x,	0);
	set_name	(0X71000AD118,	"_ZTVN2nn2os6detail29MultiWaitHolderOfNativeHandleE");
	create_qword	(x=0X71000AD120);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD128);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD130);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD138);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD140);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD148);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD150,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AD150,	E_PREV + 0,	"; public \x01\b\x01(00000071000AD150nn::os::detail::MultiWaitHolderOfNativeHandle\x02\b :");
	update_extra_cmt		(0X71000AD150,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AD0E8nn::os::detail::MultiWaitHolderOfNativeWaitObject\x02\b :");
	update_extra_cmt		(0X71000AD150,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000AD038nn::os::detail::MultiWaitHolderBase\x02\b");
	create_qword	(x=0X71000AD150);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AD150,	"_ZTIN2nn2os6detail29MultiWaitHolderOfNativeHandleE");
	set_cmt	(0X71000AD158,	"reference to type's name",	0);
	create_qword	(x=0X71000AD158);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD160,	"reference to parent's type name",	0);
	create_qword	(x=0X71000AD160);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD168,	"offset to this",	0);
	create_qword	(x=0X71000AD168);
	op_dec		(x,	0);
	set_name	(0X71000AD168,	"_ZTVN2nn2os6detail25AddressSpaceAllocatorBaseImmEE");
	create_qword	(x=0X71000AD170);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD178);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD180,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AD180,	E_PREV + 0,	"; public \x01\b\x01(00000071000AD180nn::os::detail::AddressSpaceAllocatorBase<unsigned long,unsigned long>\x02\b");
	create_qword	(x=0X71000AD180);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AD180,	"_ZTIN2nn2os6detail25AddressSpaceAllocatorBaseImmEE");
	set_cmt	(0X71000AD188,	"reference to type's name",	0);
	create_qword	(x=0X71000AD188);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD190,	"offset to this",	0);
	create_qword	(x=0X71000AD190);
	op_dec		(x,	0);
	set_name	(0X71000AD190,	"_ZTVN2nn2os6detail21AddressSpaceAllocatorE");
	create_qword	(x=0X71000AD198);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD1A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD1A8,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AD1A8,	E_PREV + 0,	"; public \x01\b\x01(00000071000AD1A8nn::os::detail::AddressSpaceAllocator\x02\b :");
	update_extra_cmt		(0X71000AD1A8,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AD180nn::os::detail::AddressSpaceAllocatorBase<unsigned long,unsigned long>\x02\b");
	create_qword	(x=0X71000AD1A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AD1A8,	"_ZTIN2nn2os6detail21AddressSpaceAllocatorE");
	set_cmt	(0X71000AD1B0,	"reference to type's name",	0);
	create_qword	(x=0X71000AD1B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD1B8,	"reference to parent's type name",	0);
	create_qword	(x=0X71000AD1B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD1C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X71000AD1C8,	0X8);
	create_dword	(0X71000AD1D0);
	make_array	(0X71000AD1D4,	0X4);
	create_qword	(x=0X71000AD1D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD1E0,	"offset to this",	0);
	create_qword	(x=0X71000AD1E0);
	op_dec		(x,	0);
	set_name	(0X71000AD1E0,	"_ZTVN2nn2os6detail27MultiWaitHolderOfTimerEventE");
	create_qword	(x=0X71000AD1E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD1F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AD1F0,	"_ZTVN2nn2os6detail27MultiWaitHolderOfTimerEventE_0");
	create_qword	(x=0X71000AD1F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD200);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD208);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD210);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD218,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AD218,	E_PREV + 0,	"; public \x01\b\x01(00000071000AD218nn::os::detail::MultiWaitHolderOfTimerEvent\x02\b :");
	update_extra_cmt		(0X71000AD218,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AD048nn::os::detail::MultiWaitHolderOfUserWaitObject\x02\b :");
	update_extra_cmt		(0X71000AD218,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000AD038nn::os::detail::MultiWaitHolderBase\x02\b");
	create_qword	(x=0X71000AD218);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AD218,	"_ZTIN2nn2os6detail27MultiWaitHolderOfTimerEventE");
	set_cmt	(0X71000AD220,	"reference to type's name",	0);
	create_qword	(x=0X71000AD220);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD228,	"reference to parent's type name",	0);
	create_qword	(x=0X71000AD228);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD250,	"offset to this",	0);
	create_qword	(x=0X71000AD250);
	op_dec		(x,	0);
	set_name	(0X71000AD250,	"_ZTVN2nn2sf4hipc6server2v16detail29HipcAllInOneServerManagerBaseE");
	create_qword	(x=0X71000AD258);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD260);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD268);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD270);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD278);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD280);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD288);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD290);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD298);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD2A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD2A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD2B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD2B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD2C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD2C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD2D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD2D8,	"offset to this",	0);
	create_qword	(x=0X71000AD2D8);
	toggle_sign		(x,	0);
	op_dec		(x,	0);
	toggle_sign		(x,	1);
	create_qword	(x=0X71000AD2E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD2E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD2F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD2F8,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AD2F8,	E_PREV + 0,	"; public \x01\b\x01(00000071000AD2F8nn::sf::hipc::server::v1::detail::HipcAllInOneServerManagerBase\x02\b :");
	update_extra_cmt		(0X71000AD2F8,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AD640nn::sf::hipc::server::v1::HipcServerSessionManagerWithDomain\x02\b :");
	update_extra_cmt		(0X71000AD2F8,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000AD518nn::sf::hipc::server::v1::HipcServerSessionManager\x02\b :");
	update_extra_cmt		(0X71000AD2F8,	E_PREV + 3,	";       protected /* offset 0x0 */ \x01\b\x01(00000071000AD4F0nn::sf::hipc::server::v1::HipcServerSessionManagerT<nn::sf::cmif::server::CmifServerObjectInfo>\x02\b :");
	update_extra_cmt		(0X71000AD2F8,	E_PREV + 4,	";         public /* offset 0x0 */ \x01\b\x01(00000071000AD4E0nn::sf::hipc::server::v1::HipcServerSessionManagerBase\x02\b,");
	update_extra_cmt		(0X71000AD2F8,	E_PREV + 5,	";       protected /* offset 0x0 */ \x01\b\x01(00000071000AD508nn::sf::hipc::server::HipcServerApiModelHolder\x02\b,");
	update_extra_cmt		(0X71000AD2F8,	E_PREV + 6,	";     protected /* offset 0x10 */ \x01\b\x01(00000071000AD330nn::sf::cmif::server::CmifServerDomainManager\x02\b");
	create_qword	(x=0X71000AD2F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AD2F8,	"_ZTIN2nn2sf4hipc6server2v16detail29HipcAllInOneServerManagerBaseE");
	set_cmt	(0X71000AD300,	"reference to type's name",	0);
	create_qword	(x=0X71000AD300);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD308,	"reference to parent's type name",	0);
	create_qword	(x=0X71000AD308);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD310,	"offset to this",	0);
	create_qword	(x=0X71000AD310);
	op_dec		(x,	0);
	set_name	(0X71000AD310,	"_ZTVN2nn2sf4cmif6server23CmifServerDomainManagerE");
	create_qword	(x=0X71000AD318);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD320);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD328);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD330,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AD330,	E_PREV + 0,	"; public \x01\b\x01(00000071000AD330nn::sf::cmif::server::CmifServerDomainManager\x02\b");
	create_qword	(x=0X71000AD330);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AD330,	"_ZTIN2nn2sf4cmif6server23CmifServerDomainManagerE");
	set_cmt	(0X71000AD338,	"reference to type's name",	0);
	create_qword	(x=0X71000AD338);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD340,	"offset to this",	0);
	create_qword	(x=0X71000AD340);
	op_dec		(x,	0);
	set_name	(0X71000AD340,	"_ZTVN2nn2sf4cmif6server23CmifServerDomainManager6DomainE");
	create_qword	(x=0X71000AD348);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD350);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD358);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD360);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD368);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD370);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD378);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD380);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD388);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD390);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD398);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD3A0,	"offset to this",	0);
	create_qword	(x=0X71000AD3A0);
	toggle_sign		(x,	0);
	op_dec		(x,	0);
	toggle_sign		(x,	1);
	create_qword	(x=0X71000AD3A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD3B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD3B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD3C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD3C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD3D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD3D8,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AD3D8,	E_PREV + 0,	"; public \x01\b\x01(00000071000AD3D8nn::sf::cmif::ICmifDomain\x02\b :");
	update_extra_cmt		(0X71000AD3D8,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000AD3D8,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b");
	create_qword	(x=0X71000AD3D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AD3D8,	"_ZTIN2nn2sf4cmif11ICmifDomainE");
	set_cmt	(0X71000AD3E0,	"reference to type's name",	0);
	create_qword	(x=0X71000AD3E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD3E8,	"reference to parent's type name",	0);
	create_qword	(x=0X71000AD3E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD3F0,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AD3F0,	E_PREV + 0,	"; public \x01\b\x01(00000071000AD3F0nn::sf::cmif::server::CmifServerDomain\x02\b");
	create_qword	(x=0X71000AD3F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AD3F0,	"_ZTIN2nn2sf4cmif6server16CmifServerDomainE");
	set_cmt	(0X71000AD3F8,	"reference to type's name",	0);
	create_qword	(x=0X71000AD3F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD400,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AD400,	E_PREV + 0,	"; public \x01\b\x01(00000071000AD400nn::sf::cmif::server::CmifDomainServerObject\x02\b :");
	update_extra_cmt		(0X71000AD400,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AD3D8nn::sf::cmif::ICmifDomain\x02\b :");
	update_extra_cmt		(0X71000AD400,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000AD400,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000AD400,	E_PREV + 4,	";   public /* offset 0x8 */ \x01\b\x01(00000071000AD3F0nn::sf::cmif::server::CmifServerDomain\x02\b");
	create_qword	(x=0X71000AD400);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AD400,	"_ZTIN2nn2sf4cmif6server22CmifDomainServerObjectE");
	set_cmt	(0X71000AD408,	"reference to type's name",	0);
	create_qword	(x=0X71000AD408);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD410,	"attribute",	0);
	create_dword	(x=0X71000AD410);
	op_hex		(x,	0);
	set_cmt	(0X71000AD414,	"count of base classes",	0);
	create_dword	(x=0X71000AD414);
	op_dec		(x,	0);
	set_cmt	(0X71000AD418,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AD418);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD420,	"base class' attributes",	0);
	create_qword	(x=0X71000AD420);
	op_hex		(x,	0);
	set_cmt	(0X71000AD428,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AD428);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD430,	"base class' attributes",	0);
	create_qword	(x=0X71000AD430);
	op_hex		(x,	0);
	set_cmt	(0X71000AD438,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AD438,	E_PREV + 0,	"; public \x01\b\x01(00000071000AD438nn::sf::cmif::server::CmifServerDomainManager::Domain\x02\b :");
	update_extra_cmt		(0X71000AD438,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AD400nn::sf::cmif::server::CmifDomainServerObject\x02\b :");
	update_extra_cmt		(0X71000AD438,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000AD3D8nn::sf::cmif::ICmifDomain\x02\b :");
	update_extra_cmt		(0X71000AD438,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000AD438,	E_PREV + 4,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000AD438,	E_PREV + 5,	";     public /* offset 0x8 */ \x01\b\x01(00000071000AD3F0nn::sf::cmif::server::CmifServerDomain\x02\b,");
	update_extra_cmt		(0X71000AD438,	E_PREV + 6,	";   protected /* offset 0x10 */ \x01\b\x01(00000071000ABB00nn::sf::impl::detail::ServiceObjectImplBase2\x02\b");
	create_qword	(x=0X71000AD438);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AD438,	"_ZTIN2nn2sf4cmif6server23CmifServerDomainManager6DomainE");
	set_cmt	(0X71000AD440,	"reference to type's name",	0);
	create_qword	(x=0X71000AD440);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD448,	"attribute",	0);
	create_dword	(x=0X71000AD448);
	op_hex		(x,	0);
	set_cmt	(0X71000AD44C,	"count of base classes",	0);
	create_dword	(x=0X71000AD44C);
	op_dec		(x,	0);
	set_cmt	(0X71000AD450,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AD450);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD458,	"base class' attributes",	0);
	create_qword	(x=0X71000AD458);
	op_hex		(x,	0);
	set_cmt	(0X71000AD460,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AD460);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD468,	"base class' attributes",	0);
	create_qword	(x=0X71000AD468);
	op_hex		(x,	0);
	set_cmt	(0X71000AD478,	"offset to this",	0);
	create_qword	(x=0X71000AD478);
	op_dec		(x,	0);
	set_name	(0X71000AD478,	"_ZTVN2nn2sf4hipc6server2v124HipcServerSessionManagerE");
	create_qword	(x=0X71000AD480);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD488);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD490);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD498);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD4A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD4A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD4B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD4B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD4C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD4C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD4D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD4D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD4E0,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AD4E0,	E_PREV + 0,	"; public \x01\b\x01(00000071000AD4E0nn::sf::hipc::server::v1::HipcServerSessionManagerBase\x02\b");
	create_qword	(x=0X71000AD4E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AD4E0,	"_ZTIN2nn2sf4hipc6server2v128HipcServerSessionManagerBaseE");
	set_cmt	(0X71000AD4E8,	"reference to type's name",	0);
	create_qword	(x=0X71000AD4E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD4F0,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AD4F0,	E_PREV + 0,	"; public \x01\b\x01(00000071000AD4F0nn::sf::hipc::server::v1::HipcServerSessionManagerT<nn::sf::cmif::server::CmifServerObjectInfo>\x02\b :");
	update_extra_cmt		(0X71000AD4F0,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AD4E0nn::sf::hipc::server::v1::HipcServerSessionManagerBase\x02\b");
	create_qword	(x=0X71000AD4F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AD4F0,	"_ZTIN2nn2sf4hipc6server2v125HipcServerSessionManagerTINS0_4cmif6server20CmifServerObjectInfoEEE");
	set_cmt	(0X71000AD4F8,	"reference to type's name",	0);
	create_qword	(x=0X71000AD4F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD500,	"reference to parent's type name",	0);
	create_qword	(x=0X71000AD500);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD508,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AD508,	E_PREV + 0,	"; public \x01\b\x01(00000071000AD508nn::sf::hipc::server::HipcServerApiModelHolder\x02\b");
	create_qword	(x=0X71000AD508);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AD508,	"_ZTIN2nn2sf4hipc6server24HipcServerApiModelHolderE");
	set_cmt	(0X71000AD510,	"reference to type's name",	0);
	create_qword	(x=0X71000AD510);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD518,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AD518,	E_PREV + 0,	"; public \x01\b\x01(00000071000AD518nn::sf::hipc::server::v1::HipcServerSessionManager\x02\b :");
	update_extra_cmt		(0X71000AD518,	E_PREV + 1,	";   protected /* offset 0x0 */ \x01\b\x01(00000071000AD4F0nn::sf::hipc::server::v1::HipcServerSessionManagerT<nn::sf::cmif::server::CmifServerObjectInfo>\x02\b :");
	update_extra_cmt		(0X71000AD518,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000AD4E0nn::sf::hipc::server::v1::HipcServerSessionManagerBase\x02\b,");
	update_extra_cmt		(0X71000AD518,	E_PREV + 3,	";   protected /* offset 0x0 */ \x01\b\x01(00000071000AD508nn::sf::hipc::server::HipcServerApiModelHolder\x02\b");
	create_qword	(x=0X71000AD518);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AD518,	"_ZTIN2nn2sf4hipc6server2v124HipcServerSessionManagerE");
	set_cmt	(0X71000AD520,	"reference to type's name",	0);
	create_qword	(x=0X71000AD520);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD528,	"attribute",	0);
	create_dword	(x=0X71000AD528);
	op_hex		(x,	0);
	set_cmt	(0X71000AD52C,	"count of base classes",	0);
	create_dword	(x=0X71000AD52C);
	op_dec		(x,	0);
	set_cmt	(0X71000AD530,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AD530);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD538,	"base class' attributes\noffset to this",	0);
	create_qword	(x=0X71000AD538);
	op_dec		(x,	0);
	set_name	(0X71000AD538,	"_ZTVN2nn2sf4hipc6server24HipcServerApiModelHolderE");
	set_cmt	(0X71000AD540,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AD540);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD548,	"base class' attributes",	0);
	create_qword	(x=0X71000AD548);
	op_hex		(x,	0);
	set_cmt	(0X71000AD550,	"offset to this",	0);
	create_qword	(x=0X71000AD550);
	op_dec		(x,	0);
	set_name	(0X71000AD550,	"_ZTVN2nn2sf4hipc6server2v112_GLOBAL__N_116HipcObjectDomainE");
	create_qword	(x=0X71000AD558);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD560);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD568,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AD568,	E_PREV + 0,	"; public \x01\b\x01(00000071000AD568nn::sf::hipc::server::IHipcObjectDomain\x02\b");
	create_qword	(x=0X71000AD568);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AD568,	"_ZTIN2nn2sf4hipc6server17IHipcObjectDomainE");
	set_cmt	(0X71000AD570,	"reference to type's name",	0);
	create_qword	(x=0X71000AD570);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD578,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AD578,	E_PREV + 0,	"; public \x01\b\x01(00000071000AD578nn::sf::hipc::server::v1::`anonymous namespace'::HipcObjectDomain\x02\b :");
	update_extra_cmt		(0X71000AD578,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AD568nn::sf::hipc::server::IHipcObjectDomain\x02\b");
	create_qword	(x=0X71000AD578);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AD578,	"_ZTIN2nn2sf4hipc6server2v112_GLOBAL__N_116HipcObjectDomainE");
	set_cmt	(0X71000AD580,	"reference to type's name",	0);
	create_qword	(x=0X71000AD580);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD588,	"reference to parent's type name",	0);
	create_qword	(x=0X71000AD588);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD590,	"offset to this",	0);
	create_qword	(x=0X71000AD590);
	op_dec		(x,	0);
	set_name	(0X71000AD590,	"_ZTVN2nn2sf4hipc6server18Hipc2ServerMessageE");
	create_qword	(x=0X71000AD598);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD5A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD5A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD5B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD5B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD5C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD5C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD5D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD5D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD5E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD5E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD5F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD5F8,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AD5F8,	E_PREV + 0,	"; public \x01\b\x01(00000071000AD5F8nn::sf::cmif::server::CmifServerMessage\x02\b");
	create_qword	(x=0X71000AD5F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AD5F8,	"_ZTIN2nn2sf4cmif6server17CmifServerMessageE");
	set_cmt	(0X71000AD600,	"reference to type's name",	0);
	create_qword	(x=0X71000AD600);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD608,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AD608,	E_PREV + 0,	"; public \x01\b\x01(00000071000AD608nn::sf::hipc::server::Hipc2ServerMessage\x02\b :");
	update_extra_cmt		(0X71000AD608,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AD5F8nn::sf::cmif::server::CmifServerMessage\x02\b,");
	update_extra_cmt		(0X71000AD608,	E_PREV + 2,	";   protected /* offset 0x0 */ \x01\b\x01(00000071000AD508nn::sf::hipc::server::HipcServerApiModelHolder\x02\b");
	create_qword	(x=0X71000AD608);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AD608,	"_ZTIN2nn2sf4hipc6server18Hipc2ServerMessageE");
	set_cmt	(0X71000AD610,	"reference to type's name",	0);
	create_qword	(x=0X71000AD610);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD618,	"attribute",	0);
	create_dword	(x=0X71000AD618);
	op_hex		(x,	0);
	set_cmt	(0X71000AD61C,	"count of base classes",	0);
	create_dword	(x=0X71000AD61C);
	op_dec		(x,	0);
	set_cmt	(0X71000AD620,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AD620);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD628,	"base class' attributes",	0);
	create_qword	(x=0X71000AD628);
	op_hex		(x,	0);
	set_cmt	(0X71000AD630,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AD630);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD638,	"base class' attributes",	0);
	create_qword	(x=0X71000AD638);
	op_hex		(x,	0);
	set_cmt	(0X71000AD640,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AD640,	E_PREV + 0,	"; public \x01\b\x01(00000071000AD640nn::sf::hipc::server::v1::HipcServerSessionManagerWithDomain\x02\b :");
	update_extra_cmt		(0X71000AD640,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AD518nn::sf::hipc::server::v1::HipcServerSessionManager\x02\b :");
	update_extra_cmt		(0X71000AD640,	E_PREV + 2,	";     protected /* offset 0x0 */ \x01\b\x01(00000071000AD4F0nn::sf::hipc::server::v1::HipcServerSessionManagerT<nn::sf::cmif::server::CmifServerObjectInfo>\x02\b :");
	update_extra_cmt		(0X71000AD640,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000AD4E0nn::sf::hipc::server::v1::HipcServerSessionManagerBase\x02\b,");
	update_extra_cmt		(0X71000AD640,	E_PREV + 4,	";     protected /* offset 0x0 */ \x01\b\x01(00000071000AD508nn::sf::hipc::server::HipcServerApiModelHolder\x02\b,");
	update_extra_cmt		(0X71000AD640,	E_PREV + 5,	";   protected /* offset 0x10 */ \x01\b\x01(00000071000AD330nn::sf::cmif::server::CmifServerDomainManager\x02\b");
	create_qword	(x=0X71000AD640);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AD640,	"_ZTIN2nn2sf4hipc6server2v134HipcServerSessionManagerWithDomainE");
	set_cmt	(0X71000AD648,	"reference to type's name",	0);
	create_qword	(x=0X71000AD648);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD650,	"attribute",	0);
	create_dword	(x=0X71000AD650);
	op_hex		(x,	0);
	set_cmt	(0X71000AD654,	"count of base classes",	0);
	create_dword	(x=0X71000AD654);
	op_dec		(x,	0);
	set_cmt	(0X71000AD658,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AD658);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD660,	"base class' attributes",	0);
	create_qword	(x=0X71000AD660);
	op_hex		(x,	0);
	set_cmt	(0X71000AD668,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AD668);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD670,	"base class' attributes",	0);
	create_qword	(x=0X71000AD670);
	op_hex		(x,	0);
	set_cmt	(0X71000AD678,	"offset to this",	0);
	create_qword	(x=0X71000AD678);
	op_dec		(x,	0);
	set_name	(0X71000AD678,	"_ZTVN2nn2sf22UnmanagedServiceObjectINS0_4hipc6detail12IHipcManagerENS2_6server2v134HipcServerSessionManagerWithDomain15HipcManagerImplEEE");
	create_qword	(x=0X71000AD680);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD688);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD690);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD698);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD6A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD6A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD6B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD6B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD6C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD6C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD6D0,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AD6D0,	E_PREV + 0,	"; public \x01\b\x01(00000071000AD6D0nn::sf::hipc::detail::IHipcManager\x02\b :");
	update_extra_cmt		(0X71000AD6D0,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000AD6D0,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b");
	create_qword	(x=0X71000AD6D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AD6D0,	"_ZTIN2nn2sf4hipc6detail12IHipcManagerE");
	set_cmt	(0X71000AD6D8,	"reference to type's name",	0);
	create_qword	(x=0X71000AD6D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD6E0,	"reference to parent's type name",	0);
	create_qword	(x=0X71000AD6E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD6E8,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AD6E8,	E_PREV + 0,	"; public \x01\b\x01(00000071000AD6E8nn::sf::detail::ObjectHolderImpl<nn::sf::InterfaceInfo<nn::sf::hipc::detail::IHipcManager>::_tO2N<nn::sf::hipc::server::v1::HipcServerSessionManagerWithDomain::HipcManagerImpl>::type,void>\x02\b");
	create_qword	(x=0X71000AD6E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AD6E8,	"_ZTIN2nn2sf6detail16ObjectHolderImplINS0_13InterfaceInfoINS0_4hipc6detail12IHipcManagerEE5_tO2NINS4_6server2v134HipcServerSessionManagerWithDomain15HipcManagerImplEE4typeEvEE");
	set_cmt	(0X71000AD6F0,	"reference to type's name",	0);
	create_qword	(x=0X71000AD6F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD6F8,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AD6F8,	E_PREV + 0,	"; public \x01\b\x01(00000071000AD6F8nn::sf::detail::InterfaceInfoBottom<nn::sf::IServiceObject>::_tAB<nn::sf::InterfaceInfo<nn::sf::hipc::detail::IHipcManager>::_tO2N<nn::sf::hipc::server::v1::HipcServerSessionManagerWithDomain::HipcManagerImpl>::type,nn::sf::hipc::detail::IHipcManager>::type\x02\b :");
	update_extra_cmt		(0X71000AD6F8,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AD6D0nn::sf::hipc::detail::IHipcManager\x02\b :");
	update_extra_cmt		(0X71000AD6F8,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000AD6F8,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000AD6F8,	E_PREV + 4,	";   public /* offset 0x8 */ \x01\b\x01(00000071000AD6E8nn::sf::detail::ObjectHolderImpl<nn::sf::InterfaceInfo<nn::sf::hipc::detail::IHipcManager>::_tO2N<nn::sf::hipc::server::v1::HipcServerSessionManagerWithDomain::HipcManagerImpl>::type,void>\x02\b");
	create_qword	(x=0X71000AD6F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AD6F8,	"_ZTIN2nn2sf6detail19InterfaceInfoBottomINS0_14IServiceObjectEE4_tABINS0_13InterfaceInfoINS0_4hipc6detail12IHipcManagerEE5_tO2NINS7_6server2v134HipcServerSessionManagerWithDomain15HipcManagerImplEE4typeES9_E4typeE");
	set_cmt	(0X71000AD700,	"reference to type's name",	0);
	create_qword	(x=0X71000AD700);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD708,	"attribute",	0);
	create_dword	(x=0X71000AD708);
	op_hex		(x,	0);
	set_cmt	(0X71000AD70C,	"count of base classes",	0);
	create_dword	(x=0X71000AD70C);
	op_dec		(x,	0);
	set_cmt	(0X71000AD710,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AD710);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD718,	"base class' attributes",	0);
	create_qword	(x=0X71000AD718);
	op_hex		(x,	0);
	set_cmt	(0X71000AD720,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AD720);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD728,	"base class' attributes",	0);
	create_qword	(x=0X71000AD728);
	op_hex		(x,	0);
	set_cmt	(0X71000AD730,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AD730,	E_PREV + 0,	"; public \x01\b\x01(00000071000AD730nn::sf::InterfaceInfo<nn::sf::hipc::detail::IHipcManager>::_tAB<nn::sf::InterfaceInfo<nn::sf::hipc::detail::IHipcManager>::_tO2N<nn::sf::hipc::server::v1::HipcServerSessionManagerWithDomain::HipcManagerImpl>::type,nn::sf::hipc::detail::IHipcManager>::type\x02\b :");
	update_extra_cmt		(0X71000AD730,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AD6F8nn::sf::detail::InterfaceInfoBottom<nn::sf::IServiceObject>::_tAB<nn::sf::InterfaceInfo<nn::sf::hipc::detail::IHipcManager>::_tO2N<nn::sf::hipc::server::v1::HipcServerSessionManagerWithDomain::HipcManagerImpl>::type,nn::sf::hipc::detail::IHipcManager>::type\x02\b :");
	update_extra_cmt		(0X71000AD730,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000AD6D0nn::sf::hipc::detail::IHipcManager\x02\b :");
	update_extra_cmt		(0X71000AD730,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000AD730,	E_PREV + 4,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000AD730,	E_PREV + 5,	";     public /* offset 0x8 */ \x01\b\x01(00000071000AD6E8nn::sf::detail::ObjectHolderImpl<nn::sf::InterfaceInfo<nn::sf::hipc::detail::IHipcManager>::_tO2N<nn::sf::hipc::server::v1::HipcServerSessionManagerWithDomain::HipcManagerImpl>::type,void>\x02\b");
	create_qword	(x=0X71000AD730);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AD730,	"_ZTIN2nn2sf13InterfaceInfoINS0_4hipc6detail12IHipcManagerEE4_tABINS5_5_tO2NINS2_6server2v134HipcServerSessionManagerWithDomain15HipcManagerImplEE4typeES4_E4typeE");
	set_cmt	(0X71000AD738,	"reference to type's name",	0);
	create_qword	(x=0X71000AD738);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD740,	"reference to parent's type name",	0);
	create_qword	(x=0X71000AD740);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD748,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AD748,	E_PREV + 0,	"; public \x01\b\x01(00000071000AD748nn::sf::UnmanagedServiceObject<nn::sf::hipc::detail::IHipcManager,nn::sf::hipc::server::v1::HipcServerSessionManagerWithDomain::HipcManagerImpl>\x02\b :");
	update_extra_cmt		(0X71000AD748,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AD730nn::sf::InterfaceInfo<nn::sf::hipc::detail::IHipcManager>::_tAB<nn::sf::InterfaceInfo<nn::sf::hipc::detail::IHipcManager>::_tO2N<nn::sf::hipc::server::v1::HipcServerSessionManagerWithDomain::HipcManagerImpl>::type,nn::sf::hipc::detail::IHipcManager>::type\x02\b :");
	update_extra_cmt		(0X71000AD748,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000AD6F8nn::sf::detail::InterfaceInfoBottom<nn::sf::IServiceObject>::_tAB<nn::sf::InterfaceInfo<nn::sf::hipc::detail::IHipcManager>::_tO2N<nn::sf::hipc::server::v1::HipcServerSessionManagerWithDomain::HipcManagerImpl>::type,nn::sf::hipc::detail::IHipcManager>::type\x02\b :");
	update_extra_cmt		(0X71000AD748,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000AD6D0nn::sf::hipc::detail::IHipcManager\x02\b :");
	update_extra_cmt		(0X71000AD748,	E_PREV + 4,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000AD748,	E_PREV + 5,	";           public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000AD748,	E_PREV + 6,	";       public /* offset 0x8 */ \x01\b\x01(00000071000AD6E8nn::sf::detail::ObjectHolderImpl<nn::sf::InterfaceInfo<nn::sf::hipc::detail::IHipcManager>::_tO2N<nn::sf::hipc::server::v1::HipcServerSessionManagerWithDomain::HipcManagerImpl>::type,void>\x02\b");
	create_qword	(x=0X71000AD748);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AD748,	"_ZTIN2nn2sf22UnmanagedServiceObjectINS0_4hipc6detail12IHipcManagerENS2_6server2v134HipcServerSessionManagerWithDomain15HipcManagerImplEEE");
	set_cmt	(0X71000AD750,	"reference to type's name",	0);
	create_qword	(x=0X71000AD750);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD758,	"reference to parent's type name",	0);
	create_qword	(x=0X71000AD758);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD760);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD768,	"offset to this",	0);
	create_qword	(x=0X71000AD768);
	op_dec		(x,	0);
	set_name	(0X71000AD768,	"_ZTVN2nn2sf4cmif6server22CmifDomainServerObject23CmifDomainServerMessageE");
	create_qword	(x=0X71000AD770);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD778);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD780);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD788);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD790);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD798);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD7A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD7A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD7B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD7B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD7C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD7C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD7D0,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AD7D0,	E_PREV + 0,	"; public \x01\b\x01(00000071000AD7D0nn::sf::cmif::server::CmifDomainServerObject::CmifDomainServerMessage\x02\b :");
	update_extra_cmt		(0X71000AD7D0,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AD5F8nn::sf::cmif::server::CmifServerMessage\x02\b");
	create_qword	(x=0X71000AD7D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AD7D0,	"_ZTIN2nn2sf4cmif6server22CmifDomainServerObject23CmifDomainServerMessageE");
	set_cmt	(0X71000AD7D8,	"reference to type's name",	0);
	create_qword	(x=0X71000AD7D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD7E0,	"reference to parent's type name",	0);
	create_qword	(x=0X71000AD7E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD7E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD7F0,	"offset to this",	0);
	create_qword	(x=0X71000AD7F0);
	op_dec		(x,	0);
	set_name	(0X71000AD7F0,	"_ZTVN2nn2sf22UnitHeapMemoryResourceE");
	create_qword	(x=0X71000AD7F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD800);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD808);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD810);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD818);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD820);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD828,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AD828,	E_PREV + 0,	"; public \x01\b\x01(00000071000AD828nn::sf::UnitHeapMemoryResource\x02\b :");
	update_extra_cmt		(0X71000AD828,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AC8B8nn::MemoryResource\x02\b");
	create_qword	(x=0X71000AD828);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AD828,	"_ZTIN2nn2sf22UnitHeapMemoryResourceE");
	set_cmt	(0X71000AD830,	"reference to type's name",	0);
	create_qword	(x=0X71000AD830);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD838,	"reference to parent's type name",	0);
	create_qword	(x=0X71000AD838);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD840,	"offset to this",	0);
	create_qword	(x=0X71000AD840);
	op_dec		(x,	0);
	set_name	(0X71000AD840,	"_ZTVN2nn2sf12_GLOBAL__N_123NewDeleteMemoryResourceE");
	create_qword	(x=0X71000AD848);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD850);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD858);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD860);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD868);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD870);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD878,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AD878,	E_PREV + 0,	"; public \x01\b\x01(00000071000AD878nn::sf::`anonymous namespace'::NewDeleteMemoryResource\x02\b :");
	update_extra_cmt		(0X71000AD878,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AC8B8nn::MemoryResource\x02\b");
	create_qword	(x=0X71000AD878);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AD878,	"_ZTIN2nn2sf12_GLOBAL__N_123NewDeleteMemoryResourceE");
	set_cmt	(0X71000AD880,	"reference to type's name",	0);
	create_qword	(x=0X71000AD880);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AD888,	"reference to parent's type name",	0);
	create_qword	(x=0X71000AD888);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD890);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_byte	(0X71000AD8B9);
	make_array	(0X71000AD8BA,	0X2);
	create_dword	(0X71000AD8BC);
	create_qword	(x=0X71000AD8F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD900);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD908);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD910);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD918);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD920);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD928);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD930);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD938);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD940);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD948);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD950);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD958);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD960);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD968);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD970);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD978);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD980);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD988);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD990);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD998);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD9B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD9B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD9D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD9E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD9F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AD9F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADA00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADA08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADA10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADA18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADA20);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADA28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADA30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADA38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADA40);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADA48);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADA50);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADA58);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADA60);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADA68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADA80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADA88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADA90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADA98);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADAA0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADAB8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADAC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADAC8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADAD0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADAD8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADAE0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADAE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADAF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADB08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADB10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADB18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADB20);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADB28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADB30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADB38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADB50);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADB58);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADB60);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADB68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADB70);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADB78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADB80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADB88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADBA0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADBA8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADBB0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADBB8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADBC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADBC8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADBD0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADBD8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADBE0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADBE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADC00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADC08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADC10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADC18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADC20);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADC28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADC30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADC38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADC40);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADC48);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADC50);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADC58);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADC70);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADC78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADC80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADC88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADC90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_strlit	(0X71000ADC98,	0X6);
	set_name	(0X71000ADC98,	"aBgsu");
	create_byte	(0X71000ADC9E);
	create_byte	(0X71000ADC9F);
	create_byte	(0X71000ADCA0);
	create_byte	(0X71000ADCA1);
	create_byte	(0X71000ADCA2);
	create_byte	(0X71000ADCA3);
	create_byte	(0X71000ADCA4);
	create_byte	(0X71000ADCA5);
	create_byte	(0X71000ADCA6);
	create_byte	(0X71000ADCA7);
	set_cmt	(0X71000ADCA8,	"offset to this",	0);
	create_qword	(x=0X71000ADCA8);
	op_dec		(x,	0);
	set_name	(0X71000ADCA8,	"_ZTVN2nn4bgsu22PowerStateEventHandlerE");
	create_qword	(x=0X71000ADCB0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADCB8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000ADCB8,	"nn::bgsu::PowerStateEventHandler__vftable");
	create_qword	(x=0X71000ADCC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADCC8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADCD0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADCD8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ADCE0,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000ADCE0,	E_PREV + 0,	"; public \x01\b\x01(00000071000ADCE0nn::bgsu::PowerStateEventHandler\x02\b");
	create_qword	(x=0X71000ADCE0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000ADCE0,	"_ZTIN2nn4bgsu22PowerStateEventHandlerE");
	set_cmt	(0X71000ADCE8,	"reference to type's name",	0);
	create_qword	(x=0X71000ADCE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ADCF0,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000ADCF0,	E_PREV + 0,	"; public \x01\b\x01(00000071000ADCF0nn::bgtc::IStateControlService\x02\b :");
	update_extra_cmt		(0X71000ADCF0,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000ADCF0,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b");
	create_qword	(x=0X71000ADCF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000ADCF0,	"_ZTIN2nn4bgtc20IStateControlServiceE");
	set_cmt	(0X71000ADCF8,	"reference to type's name",	0);
	create_qword	(x=0X71000ADCF8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ADD00,	"reference to parent's type name",	0);
	create_qword	(x=0X71000ADD00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ADD08,	"offset to this",	0);
	create_qword	(x=0X71000ADD08);
	op_dec		(x,	0);
	set_name	(0X71000ADD08,	"_ZTVN2nn2sf6detail38ObjectImplFactoryWithStatefulAllocatorINS0_4cmif6client6detail9CmifProxyINS_4bgtc16ITaskServiceRootENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSB_18Hipc2ProxyKindBaseILNSA_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESJ_E6ObjectE");
	create_qword	(x=0X71000ADD10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADD18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADD20);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADD28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADD30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADD38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADD40);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ADD48,	"offset to this",	0);
	create_qword	(x=0X71000ADD48);
	toggle_sign		(x,	0);
	op_dec		(x,	0);
	toggle_sign		(x,	1);
	create_qword	(x=0X71000ADD50);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADD58);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ADD60,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000ADD60,	E_PREV + 0,	"; public \x01\b\x01(00000071000ADD60nn::bgtc::ITaskServiceRoot\x02\b :");
	update_extra_cmt		(0X71000ADD60,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000ADD60,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b");
	create_qword	(x=0X71000ADD60);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000ADD60,	"_ZTIN2nn4bgtc16ITaskServiceRootE");
	set_cmt	(0X71000ADD68,	"reference to type's name",	0);
	create_qword	(x=0X71000ADD68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ADD70,	"reference to parent's type name",	0);
	create_qword	(x=0X71000ADD70);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ADD78,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000ADD78,	E_PREV + 0,	"; public \x01\b\x01(00000071000ADD78nn::sf::cmif::client::detail::CmifProxyImpl<nn::bgtc::ITaskServiceRoot,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::bgtc::ITaskServiceRoot,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000ADD78,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000ADD60nn::bgtc::ITaskServiceRoot\x02\b :");
	update_extra_cmt		(0X71000ADD78,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000ADD78,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000ADD78,	E_PREV + 4,	";   protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000ADD78,	E_PREV + 5,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000ADD78,	E_PREV + 6,	";   protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000ADD78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000ADD78,	"_ZTIN2nn2sf4cmif6client6detail13CmifProxyImplINS_4bgtc16ITaskServiceRootENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINS9_18Hipc2ProxyKindBaseILNS8_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyES6_NS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEEE");
	set_cmt	(0X71000ADD80,	"reference to type's name",	0);
	create_qword	(x=0X71000ADD80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ADD88,	"attribute",	0);
	create_dword	(x=0X71000ADD88);
	op_hex		(x,	0);
	set_cmt	(0X71000ADD8C,	"count of base classes",	0);
	create_dword	(x=0X71000ADD8C);
	op_dec		(x,	0);
	set_cmt	(0X71000ADD90,	"base class' type descriptor",	0);
	create_qword	(x=0X71000ADD90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ADD98,	"base class' attributes",	0);
	create_qword	(x=0X71000ADD98);
	op_hex		(x,	0);
	set_cmt	(0X71000ADDA0,	"base class' type descriptor",	0);
	create_qword	(x=0X71000ADDA0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ADDA8,	"base class' attributes",	0);
	create_qword	(x=0X71000ADDA8);
	op_hex		(x,	0);
	set_cmt	(0X71000ADDB0,	"base class' type descriptor",	0);
	create_qword	(x=0X71000ADDB0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ADDB8,	"base class' attributes",	0);
	create_qword	(x=0X71000ADDB8);
	op_hex		(x,	0);
	set_cmt	(0X71000ADDC0,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000ADDC0,	E_PREV + 0,	"; public \x01\b\x01(00000071000ADDC0nn::sf::cmif::client::detail::CmifProxy<nn::bgtc::ITaskServiceRoot,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>\x02\b :");
	update_extra_cmt		(0X71000ADDC0,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000ADD78nn::sf::cmif::client::detail::CmifProxyImpl<nn::bgtc::ITaskServiceRoot,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::bgtc::ITaskServiceRoot,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000ADDC0,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ADD60nn::bgtc::ITaskServiceRoot\x02\b :");
	update_extra_cmt		(0X71000ADDC0,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000ADDC0,	E_PREV + 4,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000ADDC0,	E_PREV + 5,	";     protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000ADDC0,	E_PREV + 6,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000ADDC0,	E_PREV + 7,	";     protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000ADDC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000ADDC0,	"_ZTIN2nn2sf4cmif6client6detail9CmifProxyINS_4bgtc16ITaskServiceRootENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINS9_18Hipc2ProxyKindBaseILNS8_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEvEE");
	set_cmt	(0X71000ADDC8,	"reference to type's name",	0);
	create_qword	(x=0X71000ADDC8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ADDD0,	"reference to parent's type name",	0);
	create_qword	(x=0X71000ADDD0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ADDD8,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000ADDD8,	E_PREV + 0,	"; public \x01\b\x01(00000071000ADDD8nn::sf::detail::ObjectImplFactoryWithStatefulAllocator<nn::sf::cmif::client::detail::CmifProxy<nn::bgtc::ITaskServiceRoot,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>,nn::sf::MemoryResourceAllocationPolicy>::Object\x02\b :");
	update_extra_cmt		(0X71000ADDD8,	E_PREV + 1,	";   protected /* offset 0x28 */ \x01\b\x01(00000071000ABB00nn::sf::impl::detail::ServiceObjectImplBase2\x02\b,");
	update_extra_cmt		(0X71000ADDD8,	E_PREV + 2,	";   public /* offset 0x0 */ \x01\b\x01(00000071000ADDC0nn::sf::cmif::client::detail::CmifProxy<nn::bgtc::ITaskServiceRoot,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>\x02\b :");
	update_extra_cmt		(0X71000ADDD8,	E_PREV + 3,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ADD78nn::sf::cmif::client::detail::CmifProxyImpl<nn::bgtc::ITaskServiceRoot,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::bgtc::ITaskServiceRoot,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000ADDD8,	E_PREV + 4,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ADD60nn::bgtc::ITaskServiceRoot\x02\b :");
	update_extra_cmt		(0X71000ADDD8,	E_PREV + 5,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000ADDD8,	E_PREV + 6,	";           public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000ADDD8,	E_PREV + 7,	";       protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000ADDD8,	E_PREV + 8,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000ADDD8,	E_PREV + 9,	";       protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000ADDD8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000ADDD8,	"_ZTIN2nn2sf6detail38ObjectImplFactoryWithStatefulAllocatorINS0_4cmif6client6detail9CmifProxyINS_4bgtc16ITaskServiceRootENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSB_18Hipc2ProxyKindBaseILNSA_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESJ_E6ObjectE");
	set_cmt	(0X71000ADDE0,	"reference to type's name",	0);
	create_qword	(x=0X71000ADDE0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ADDE8,	"attribute",	0);
	create_dword	(x=0X71000ADDE8);
	op_hex		(x,	0);
	set_cmt	(0X71000ADDEC,	"count of base classes",	0);
	create_dword	(x=0X71000ADDEC);
	op_dec		(x,	0);
	set_cmt	(0X71000ADDF0,	"base class' type descriptor",	0);
	create_qword	(x=0X71000ADDF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ADDF8,	"base class' attributes",	0);
	create_qword	(x=0X71000ADDF8);
	op_hex		(x,	0);
	set_cmt	(0X71000ADE00,	"base class' type descriptor",	0);
	create_qword	(x=0X71000ADE00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ADE08,	"base class' attributes",	0);
	create_qword	(x=0X71000ADE08);
	op_hex		(x,	0);
	set_cmt	(0X71000ADE10,	"offset to this",	0);
	create_qword	(x=0X71000ADE10);
	op_dec		(x,	0);
	set_name	(0X71000ADE10,	"_ZTVN2nn2sf6detail38ObjectImplFactoryWithStatefulAllocatorINS0_4cmif6client6detail9CmifProxyINS_4bgtc12ITaskServiceENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSB_18Hipc2ProxyKindBaseILNSA_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESJ_E6ObjectE");
	create_qword	(x=0X71000ADE18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADE20);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADE28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADE30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADE38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADE40);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADE48);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADE50);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADE58);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADE60);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADE68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADE70);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADE78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADE80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADE88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADE90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADE98);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADEA0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADEA8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADEB0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADEB8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADEC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ADEC8,	"offset to this",	0);
	create_qword	(x=0X71000ADEC8);
	toggle_sign		(x,	0);
	op_dec		(x,	0);
	toggle_sign		(x,	1);
	create_qword	(x=0X71000ADED0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000ADED8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ADEE0,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000ADEE0,	E_PREV + 0,	"; public \x01\b\x01(00000071000ADEE0nn::bgtc::ITaskService\x02\b :");
	update_extra_cmt		(0X71000ADEE0,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000ADEE0,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b");
	create_qword	(x=0X71000ADEE0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000ADEE0,	"_ZTIN2nn4bgtc12ITaskServiceE");
	set_cmt	(0X71000ADEE8,	"reference to type's name",	0);
	create_qword	(x=0X71000ADEE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ADEF0,	"reference to parent's type name",	0);
	create_qword	(x=0X71000ADEF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ADEF8,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000ADEF8,	E_PREV + 0,	"; public \x01\b\x01(00000071000ADEF8nn::sf::cmif::client::detail::CmifProxyImpl<nn::bgtc::ITaskService,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::bgtc::ITaskService,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000ADEF8,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000ADEE0nn::bgtc::ITaskService\x02\b :");
	update_extra_cmt		(0X71000ADEF8,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000ADEF8,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000ADEF8,	E_PREV + 4,	";   protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000ADEF8,	E_PREV + 5,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000ADEF8,	E_PREV + 6,	";   protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000ADEF8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000ADEF8,	"_ZTIN2nn2sf4cmif6client6detail13CmifProxyImplINS_4bgtc12ITaskServiceENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINS9_18Hipc2ProxyKindBaseILNS8_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyES6_NS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEEE");
	set_cmt	(0X71000ADF00,	"reference to type's name",	0);
	create_qword	(x=0X71000ADF00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ADF08,	"attribute",	0);
	create_dword	(x=0X71000ADF08);
	op_hex		(x,	0);
	set_cmt	(0X71000ADF0C,	"count of base classes",	0);
	create_dword	(x=0X71000ADF0C);
	op_dec		(x,	0);
	set_cmt	(0X71000ADF10,	"base class' type descriptor",	0);
	create_qword	(x=0X71000ADF10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ADF18,	"base class' attributes",	0);
	create_qword	(x=0X71000ADF18);
	op_hex		(x,	0);
	set_cmt	(0X71000ADF20,	"base class' type descriptor",	0);
	create_qword	(x=0X71000ADF20);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ADF28,	"base class' attributes",	0);
	create_qword	(x=0X71000ADF28);
	op_hex		(x,	0);
	set_cmt	(0X71000ADF30,	"base class' type descriptor",	0);
	create_qword	(x=0X71000ADF30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ADF38,	"base class' attributes",	0);
	create_qword	(x=0X71000ADF38);
	op_hex		(x,	0);
	set_cmt	(0X71000ADF40,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000ADF40,	E_PREV + 0,	"; public \x01\b\x01(00000071000ADF40nn::sf::cmif::client::detail::CmifProxy<nn::bgtc::ITaskService,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>\x02\b :");
	update_extra_cmt		(0X71000ADF40,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000ADEF8nn::sf::cmif::client::detail::CmifProxyImpl<nn::bgtc::ITaskService,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::bgtc::ITaskService,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000ADF40,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ADEE0nn::bgtc::ITaskService\x02\b :");
	update_extra_cmt		(0X71000ADF40,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000ADF40,	E_PREV + 4,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000ADF40,	E_PREV + 5,	";     protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000ADF40,	E_PREV + 6,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000ADF40,	E_PREV + 7,	";     protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000ADF40);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000ADF40,	"_ZTIN2nn2sf4cmif6client6detail9CmifProxyINS_4bgtc12ITaskServiceENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINS9_18Hipc2ProxyKindBaseILNS8_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEvEE");
	set_cmt	(0X71000ADF48,	"reference to type's name",	0);
	create_qword	(x=0X71000ADF48);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ADF50,	"reference to parent's type name",	0);
	create_qword	(x=0X71000ADF50);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ADF58,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000ADF58,	E_PREV + 0,	"; public \x01\b\x01(00000071000ADF58nn::sf::detail::ObjectImplFactoryWithStatefulAllocator<nn::sf::cmif::client::detail::CmifProxy<nn::bgtc::ITaskService,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>,nn::sf::MemoryResourceAllocationPolicy>::Object\x02\b :");
	update_extra_cmt		(0X71000ADF58,	E_PREV + 1,	";   protected /* offset 0x28 */ \x01\b\x01(00000071000ABB00nn::sf::impl::detail::ServiceObjectImplBase2\x02\b,");
	update_extra_cmt		(0X71000ADF58,	E_PREV + 2,	";   public /* offset 0x0 */ \x01\b\x01(00000071000ADF40nn::sf::cmif::client::detail::CmifProxy<nn::bgtc::ITaskService,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>\x02\b :");
	update_extra_cmt		(0X71000ADF58,	E_PREV + 3,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ADEF8nn::sf::cmif::client::detail::CmifProxyImpl<nn::bgtc::ITaskService,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::bgtc::ITaskService,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000ADF58,	E_PREV + 4,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ADEE0nn::bgtc::ITaskService\x02\b :");
	update_extra_cmt		(0X71000ADF58,	E_PREV + 5,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000ADF58,	E_PREV + 6,	";           public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000ADF58,	E_PREV + 7,	";       protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000ADF58,	E_PREV + 8,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000ADF58,	E_PREV + 9,	";       protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000ADF58);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000ADF58,	"_ZTIN2nn2sf6detail38ObjectImplFactoryWithStatefulAllocatorINS0_4cmif6client6detail9CmifProxyINS_4bgtc12ITaskServiceENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSB_18Hipc2ProxyKindBaseILNSA_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESJ_E6ObjectE");
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_15(void) {
        auto x;
#define id x

	set_cmt	(0X71000ADF60,	"reference to type's name",	0);
	create_qword	(x=0X71000ADF60);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ADF68,	"attribute",	0);
	create_dword	(x=0X71000ADF68);
	op_hex		(x,	0);
	set_cmt	(0X71000ADF6C,	"count of base classes",	0);
	create_dword	(x=0X71000ADF6C);
	op_dec		(x,	0);
	set_cmt	(0X71000ADF70,	"base class' type descriptor",	0);
	create_qword	(x=0X71000ADF70);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ADF78,	"base class' attributes",	0);
	create_qword	(x=0X71000ADF78);
	op_hex		(x,	0);
	set_cmt	(0X71000ADF80,	"base class' type descriptor",	0);
	create_qword	(x=0X71000ADF80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000ADF88,	"base class' attributes",	0);
	create_qword	(x=0X71000ADF88);
	op_hex		(x,	0);
	create_qword	(x=0X71000ADF90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AE4C0,	"offset to this",	0);
	create_qword	(x=0X71000AE4C0);
	op_dec		(x,	0);
	set_name	(0X71000AE4C0,	"_ZTVN2nn4bgtc12_GLOBAL__N_118InHalfAwakeCheckerE");
	create_qword	(x=0X71000AE4C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE4D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE4D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE4E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE4E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE4F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AE4F8,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AE4F8,	E_PREV + 0,	"; public \x01\b\x01(00000071000AE4F8nn::bgtc::ClientBroker::InHalfAwakeChecker\x02\b");
	create_qword	(x=0X71000AE4F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AE4F8,	"_ZTIN2nn4bgtc12ClientBroker18InHalfAwakeCheckerE");
	set_cmt	(0X71000AE500,	"reference to type's name",	0);
	create_qword	(x=0X71000AE500);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AE508,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AE508,	E_PREV + 0,	"; public \x01\b\x01(00000071000AE508nn::bgtc::`anonymous namespace'::InHalfAwakeChecker\x02\b :");
	update_extra_cmt		(0X71000AE508,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AE4F8nn::bgtc::ClientBroker::InHalfAwakeChecker\x02\b");
	create_qword	(x=0X71000AE508);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AE508,	"_ZTIN2nn4bgtc12_GLOBAL__N_118InHalfAwakeCheckerE");
	set_cmt	(0X71000AE510,	"reference to type's name",	0);
	create_qword	(x=0X71000AE510);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AE518,	"reference to parent's type name",	0);
	create_qword	(x=0X71000AE518);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AE520,	"offset to this",	0);
	create_qword	(x=0X71000AE520);
	op_dec		(x,	0);
	set_name	(0X71000AE520,	"_ZTVN2nn4bgtc27CompositeEventHandlerThreadE");
	create_qword	(x=0X71000AE528);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE530);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE538);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE540);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE548);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE550);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE558);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE560);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AE568,	"offset to this",	0);
	create_qword	(x=0X71000AE568);
	toggle_sign		(x,	0);
	op_dec		(x,	0);
	toggle_sign		(x,	1);
	create_qword	(x=0X71000AE570);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE578);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE580);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE588);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE590);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE598);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AE5A0,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AE5A0,	E_PREV + 0,	"; public \x01\b\x01(00000071000AE5A0nn::bgtc::BackgroundStateEventHandler\x02\b");
	create_qword	(x=0X71000AE5A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AE5A0,	"_ZTIN2nn4bgtc27BackgroundStateEventHandlerE");
	set_cmt	(0X71000AE5A8,	"reference to type's name",	0);
	create_qword	(x=0X71000AE5A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AE5B0,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AE5B0,	E_PREV + 0,	"; public \x01\b\x01(00000071000AE5B0nn::bgsu::ThreadTemplate<nn::bgtc::CompositeEventHandlerThread,65536ul>\x02\b");
	create_qword	(x=0X71000AE5B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AE5B0,	"_ZTIN2nn4bgsu14ThreadTemplateINS_4bgtc27CompositeEventHandlerThreadELm65536EEE");
	set_cmt	(0X71000AE5B8,	"reference to type's name",	0);
	create_qword	(x=0X71000AE5B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AE5C0,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AE5C0,	E_PREV + 0,	"; public \x01\b\x01(00000071000AE5C0nn::bgtc::CompositeEventHandlerThread\x02\b :");
	update_extra_cmt		(0X71000AE5C0,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000ADCE0nn::bgsu::PowerStateEventHandler\x02\b,");
	update_extra_cmt		(0X71000AE5C0,	E_PREV + 2,	";   public /* offset 0x68 */ \x01\b\x01(00000071000AE5A0nn::bgtc::BackgroundStateEventHandler\x02\b,");
	update_extra_cmt		(0X71000AE5C0,	E_PREV + 3,	";   public /* offset 0x1000 */ \x01\b\x01(00000071000AE5B0nn::bgsu::ThreadTemplate<nn::bgtc::CompositeEventHandlerThread,65536ul>\x02\b");
	create_qword	(x=0X71000AE5C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AE5C0,	"_ZTIN2nn4bgtc27CompositeEventHandlerThreadE");
	set_cmt	(0X71000AE5C8,	"reference to type's name",	0);
	create_qword	(x=0X71000AE5C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AE5D0,	"attribute",	0);
	create_dword	(x=0X71000AE5D0);
	op_hex		(x,	0);
	set_cmt	(0X71000AE5D4,	"count of base classes",	0);
	create_dword	(x=0X71000AE5D4);
	op_dec		(x,	0);
	set_cmt	(0X71000AE5D8,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AE5D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AE5E0,	"base class' attributes",	0);
	create_qword	(x=0X71000AE5E0);
	op_hex		(x,	0);
	set_cmt	(0X71000AE5E8,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AE5E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AE5F0,	"base class' attributes",	0);
	create_qword	(x=0X71000AE5F0);
	op_hex		(x,	0);
	set_cmt	(0X71000AE5F8,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AE5F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AE600,	"base class' attributes",	0);
	create_qword	(x=0X71000AE600);
	op_hex		(x,	0);
	set_cmt	(0X71000AE608,	"offset to this",	0);
	create_qword	(x=0X71000AE608);
	op_dec		(x,	0);
	set_name	(0X71000AE608,	"_ZTVN2nn4bgtc16IpcServerManagerE");
	create_qword	(x=0X71000AE610);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE618);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE620);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE628);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE630);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE638);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE640);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE648);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE650);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE658);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE660);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE668);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE670);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE678);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE680);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE688);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE690);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE698);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE6A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE6A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE6B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE6B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AE6C0,	"offset to this",	0);
	create_qword	(x=0X71000AE6C0);
	toggle_sign		(x,	0);
	op_dec		(x,	0);
	toggle_sign		(x,	1);
	create_qword	(x=0X71000AE6C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE6D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE6D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AE6E0,	"offset to this",	0);
	create_qword	(x=0X71000AE6E0);
	toggle_sign		(x,	0);
	op_dec		(x,	0);
	toggle_sign		(x,	1);
	create_qword	(x=0X71000AE6E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE6F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AE6F8,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AE6F8,	E_PREV + 0,	"; public \x01\b\x01(00000071000AE6F8nn::sf::hipc::server::v1::HipcSimpleAllInOneServerManager<80ul,2ul,nn::sf::detail::HipcSimpleAllInOneServerManagerOptionsGetter<nn::bgtc::IpcServerManagerOption>>\x02\b :");
	update_extra_cmt		(0X71000AE6F8,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AD2F8nn::sf::hipc::server::v1::detail::HipcAllInOneServerManagerBase\x02\b :");
	update_extra_cmt		(0X71000AE6F8,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000AD640nn::sf::hipc::server::v1::HipcServerSessionManagerWithDomain\x02\b :");
	update_extra_cmt		(0X71000AE6F8,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000AD518nn::sf::hipc::server::v1::HipcServerSessionManager\x02\b :");
	update_extra_cmt		(0X71000AE6F8,	E_PREV + 4,	";         protected /* offset 0x0 */ \x01\b\x01(00000071000AD4F0nn::sf::hipc::server::v1::HipcServerSessionManagerT<nn::sf::cmif::server::CmifServerObjectInfo>\x02\b :");
	update_extra_cmt		(0X71000AE6F8,	E_PREV + 5,	";           public /* offset 0x0 */ \x01\b\x01(00000071000AD4E0nn::sf::hipc::server::v1::HipcServerSessionManagerBase\x02\b,");
	update_extra_cmt		(0X71000AE6F8,	E_PREV + 6,	";         protected /* offset 0x0 */ \x01\b\x01(00000071000AD508nn::sf::hipc::server::HipcServerApiModelHolder\x02\b,");
	update_extra_cmt		(0X71000AE6F8,	E_PREV + 7,	";       protected /* offset 0x10 */ \x01\b\x01(00000071000AD330nn::sf::cmif::server::CmifServerDomainManager\x02\b");
	create_qword	(x=0X71000AE6F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AE6F8,	"_ZTIN2nn2sf4hipc6server2v131HipcSimpleAllInOneServerManagerILm80ELm2ENS0_6detail44HipcSimpleAllInOneServerManagerOptionsGetterINS_4bgtc22IpcServerManagerOptionEEEEE");
	set_cmt	(0X71000AE700,	"reference to type's name",	0);
	create_qword	(x=0X71000AE700);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AE708,	"reference to parent's type name",	0);
	create_qword	(x=0X71000AE708);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AE710,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AE710,	E_PREV + 0,	"; public \x01\b\x01(00000071000AE710nn::sf::HipcServerSessionManagerCommonBase\x02\b");
	create_qword	(x=0X71000AE710);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AE710,	"_ZTIN2nn2sf34HipcServerSessionManagerCommonBaseE");
	set_cmt	(0X71000AE718,	"reference to type's name",	0);
	create_qword	(x=0X71000AE718);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AE720,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AE720,	E_PREV + 0,	"; public \x01\b\x01(00000071000AE720nn::sf::HipcSimpleAllInOneServerManager<80ul,2ul,nn::bgtc::IpcServerManagerOption>\x02\b :");
	update_extra_cmt		(0X71000AE720,	E_PREV + 1,	";   protected /* offset 0x0 */ \x01\b\x01(00000071000AE6F8nn::sf::hipc::server::v1::HipcSimpleAllInOneServerManager<80ul,2ul,nn::sf::detail::HipcSimpleAllInOneServerManagerOptionsGetter<nn::bgtc::IpcServerManagerOption>>\x02\b :");
	update_extra_cmt		(0X71000AE720,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000AD2F8nn::sf::hipc::server::v1::detail::HipcAllInOneServerManagerBase\x02\b :");
	update_extra_cmt		(0X71000AE720,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000AD640nn::sf::hipc::server::v1::HipcServerSessionManagerWithDomain\x02\b :");
	update_extra_cmt		(0X71000AE720,	E_PREV + 4,	";         public /* offset 0x0 */ \x01\b\x01(00000071000AD518nn::sf::hipc::server::v1::HipcServerSessionManager\x02\b :");
	update_extra_cmt		(0X71000AE720,	E_PREV + 5,	";           protected /* offset 0x0 */ \x01\b\x01(00000071000AD4F0nn::sf::hipc::server::v1::HipcServerSessionManagerT<nn::sf::cmif::server::CmifServerObjectInfo>\x02\b :");
	update_extra_cmt		(0X71000AE720,	E_PREV + 6,	";             public /* offset 0x0 */ \x01\b\x01(00000071000AD4E0nn::sf::hipc::server::v1::HipcServerSessionManagerBase\x02\b,");
	update_extra_cmt		(0X71000AE720,	E_PREV + 7,	";           protected /* offset 0x0 */ \x01\b\x01(00000071000AD508nn::sf::hipc::server::HipcServerApiModelHolder\x02\b,");
	update_extra_cmt		(0X71000AE720,	E_PREV + 8,	";         protected /* offset 0x10 */ \x01\b\x01(00000071000AD330nn::sf::cmif::server::CmifServerDomainManager\x02\b,");
	update_extra_cmt		(0X71000AE720,	E_PREV + 9,	";   public /* offset 0x13370 */ \x01\b\x01(00000071000AE710nn::sf::HipcServerSessionManagerCommonBase\x02\b");
	create_qword	(x=0X71000AE720);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AE720,	"_ZTIN2nn2sf31HipcSimpleAllInOneServerManagerILm80ELm2ENS_4bgtc22IpcServerManagerOptionEEE");
	set_cmt	(0X71000AE728,	"reference to type's name",	0);
	create_qword	(x=0X71000AE728);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AE730,	"attribute",	0);
	create_dword	(x=0X71000AE730);
	op_hex		(x,	0);
	set_cmt	(0X71000AE734,	"count of base classes",	0);
	create_dword	(x=0X71000AE734);
	op_dec		(x,	0);
	set_cmt	(0X71000AE738,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AE738);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AE740,	"base class' attributes\noffset to this",	0);
	create_qword	(x=0X71000AE740);
	op_dec		(x,	0);
	set_name	(0X71000AE740,	"_ZTVN2nn2sf34HipcServerSessionManagerCommonBaseE");
	set_cmt	(0X71000AE748,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AE748);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AE750,	"base class' attributes",	0);
	create_qword	(x=0X71000AE750);
	op_hex		(x,	0);
	set_cmt	(0X71000AE758,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AE758,	E_PREV + 0,	"; public \x01\b\x01(00000071000AE758nn::bgtc::IpcServerManager\x02\b :");
	update_extra_cmt		(0X71000AE758,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AE720nn::sf::HipcSimpleAllInOneServerManager<80ul,2ul,nn::bgtc::IpcServerManagerOption>\x02\b :");
	update_extra_cmt		(0X71000AE758,	E_PREV + 2,	";     protected /* offset 0x0 */ \x01\b\x01(00000071000AE6F8nn::sf::hipc::server::v1::HipcSimpleAllInOneServerManager<80ul,2ul,nn::sf::detail::HipcSimpleAllInOneServerManagerOptionsGetter<nn::bgtc::IpcServerManagerOption>>\x02\b :");
	update_extra_cmt		(0X71000AE758,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000AD2F8nn::sf::hipc::server::v1::detail::HipcAllInOneServerManagerBase\x02\b :");
	update_extra_cmt		(0X71000AE758,	E_PREV + 4,	";         public /* offset 0x0 */ \x01\b\x01(00000071000AD640nn::sf::hipc::server::v1::HipcServerSessionManagerWithDomain\x02\b :");
	update_extra_cmt		(0X71000AE758,	E_PREV + 5,	";           public /* offset 0x0 */ \x01\b\x01(00000071000AD518nn::sf::hipc::server::v1::HipcServerSessionManager\x02\b :");
	update_extra_cmt		(0X71000AE758,	E_PREV + 6,	";             protected /* offset 0x0 */ \x01\b\x01(00000071000AD4F0nn::sf::hipc::server::v1::HipcServerSessionManagerT<nn::sf::cmif::server::CmifServerObjectInfo>\x02\b :");
	update_extra_cmt		(0X71000AE758,	E_PREV + 7,	";               public /* offset 0x0 */ \x01\b\x01(00000071000AD4E0nn::sf::hipc::server::v1::HipcServerSessionManagerBase\x02\b,");
	update_extra_cmt		(0X71000AE758,	E_PREV + 8,	";             protected /* offset 0x0 */ \x01\b\x01(00000071000AD508nn::sf::hipc::server::HipcServerApiModelHolder\x02\b,");
	update_extra_cmt		(0X71000AE758,	E_PREV + 9,	";           protected /* offset 0x10 */ \x01\b\x01(00000071000AD330nn::sf::cmif::server::CmifServerDomainManager\x02\b,");
	update_extra_cmt		(0X71000AE758,	E_PREV + 10,	";     public /* offset 0x13370 */ \x01\b\x01(00000071000AE710nn::sf::HipcServerSessionManagerCommonBase\x02\b");
	create_qword	(x=0X71000AE758);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AE758,	"_ZTIN2nn4bgtc16IpcServerManagerE");
	set_cmt	(0X71000AE760,	"reference to type's name",	0);
	create_qword	(x=0X71000AE760);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AE768,	"reference to parent's type name",	0);
	create_qword	(x=0X71000AE768);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AE770,	"offset to this",	0);
	create_qword	(x=0X71000AE770);
	op_dec		(x,	0);
	set_name	(0X71000AE770,	"_ZTVN2nn2sf4hipc6server2v131HipcSimpleAllInOneServerManagerILm80ELm2ENS0_6detail44HipcSimpleAllInOneServerManagerOptionsGetterINS_4bgtc22IpcServerManagerOptionEEEEE");
	create_qword	(x=0X71000AE778);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE780);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE788);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE790);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE798);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE7A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE7A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE7B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE7B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE7C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE7C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE7D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE7D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE7E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE7E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE7F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE7F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE800);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AE808,	"offset to this",	0);
	create_qword	(x=0X71000AE808);
	toggle_sign		(x,	0);
	op_dec		(x,	0);
	toggle_sign		(x,	1);
	create_qword	(x=0X71000AE810);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE818);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE820);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AE828,	"offset to this",	0);
	create_qword	(x=0X71000AE828);
	op_dec		(x,	0);
	set_name	(0X71000AE828,	"_ZTVN2nn2sf6detail39ObjectImplFactoryWithStatelessAllocatorINS0_13InterfaceInfoINS_4bgtc16ITaskServiceRootEE4_tABINS6_5_tO2NINS4_19TaskServiceRootImplEE4typeES5_E4typeENS0_25StatelessAllocationPolicyINS0_22ExpHeapStaticAllocatorILm8192ENS4_12_GLOBAL__N_17HipcTagEEEEEE6ObjectE");
	create_qword	(x=0X71000AE830);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE838);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE840);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE848);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE850);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE858);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AE860,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AE860,	E_PREV + 0,	"; public \x01\b\x01(00000071000AE860nn::sf::detail::ObjectHolderImpl<nn::sf::InterfaceInfo<nn::bgtc::ITaskServiceRoot>::_tO2N<nn::bgtc::TaskServiceRootImpl>::type,void>\x02\b");
	create_qword	(x=0X71000AE860);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AE860,	"_ZTIN2nn2sf6detail16ObjectHolderImplINS0_13InterfaceInfoINS_4bgtc16ITaskServiceRootEE5_tO2NINS4_19TaskServiceRootImplEE4typeEvEE");
	set_cmt	(0X71000AE868,	"reference to type's name",	0);
	create_qword	(x=0X71000AE868);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AE870,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AE870,	E_PREV + 0,	"; public \x01\b\x01(00000071000AE870nn::sf::detail::InterfaceInfoBottom<nn::sf::IServiceObject>::_tAB<nn::sf::InterfaceInfo<nn::bgtc::ITaskServiceRoot>::_tO2N<nn::bgtc::TaskServiceRootImpl>::type,nn::bgtc::ITaskServiceRoot>::type\x02\b :");
	update_extra_cmt		(0X71000AE870,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000ADD60nn::bgtc::ITaskServiceRoot\x02\b :");
	update_extra_cmt		(0X71000AE870,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000AE870,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000AE870,	E_PREV + 4,	";   public /* offset 0x8 */ \x01\b\x01(00000071000AE860nn::sf::detail::ObjectHolderImpl<nn::sf::InterfaceInfo<nn::bgtc::ITaskServiceRoot>::_tO2N<nn::bgtc::TaskServiceRootImpl>::type,void>\x02\b");
	create_qword	(x=0X71000AE870);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AE870,	"_ZTIN2nn2sf6detail19InterfaceInfoBottomINS0_14IServiceObjectEE4_tABINS0_13InterfaceInfoINS_4bgtc16ITaskServiceRootEE5_tO2NINS7_19TaskServiceRootImplEE4typeES8_E4typeE");
	set_cmt	(0X71000AE878,	"reference to type's name",	0);
	create_qword	(x=0X71000AE878);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AE880,	"attribute",	0);
	create_dword	(x=0X71000AE880);
	op_hex		(x,	0);
	set_cmt	(0X71000AE884,	"count of base classes",	0);
	create_dword	(x=0X71000AE884);
	op_dec		(x,	0);
	set_cmt	(0X71000AE888,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AE888);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AE890,	"base class' attributes",	0);
	create_qword	(x=0X71000AE890);
	op_hex		(x,	0);
	set_cmt	(0X71000AE898,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AE898);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AE8A0,	"base class' attributes",	0);
	create_qword	(x=0X71000AE8A0);
	op_hex		(x,	0);
	set_cmt	(0X71000AE8A8,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AE8A8,	E_PREV + 0,	"; public \x01\b\x01(00000071000AE8A8nn::sf::InterfaceInfo<nn::bgtc::ITaskServiceRoot>::_tAB<nn::sf::InterfaceInfo<nn::bgtc::ITaskServiceRoot>::_tO2N<nn::bgtc::TaskServiceRootImpl>::type,nn::bgtc::ITaskServiceRoot>::type\x02\b :");
	update_extra_cmt		(0X71000AE8A8,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AE870nn::sf::detail::InterfaceInfoBottom<nn::sf::IServiceObject>::_tAB<nn::sf::InterfaceInfo<nn::bgtc::ITaskServiceRoot>::_tO2N<nn::bgtc::TaskServiceRootImpl>::type,nn::bgtc::ITaskServiceRoot>::type\x02\b :");
	update_extra_cmt		(0X71000AE8A8,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ADD60nn::bgtc::ITaskServiceRoot\x02\b :");
	update_extra_cmt		(0X71000AE8A8,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000AE8A8,	E_PREV + 4,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000AE8A8,	E_PREV + 5,	";     public /* offset 0x8 */ \x01\b\x01(00000071000AE860nn::sf::detail::ObjectHolderImpl<nn::sf::InterfaceInfo<nn::bgtc::ITaskServiceRoot>::_tO2N<nn::bgtc::TaskServiceRootImpl>::type,void>\x02\b");
	create_qword	(x=0X71000AE8A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AE8A8,	"_ZTIN2nn2sf13InterfaceInfoINS_4bgtc16ITaskServiceRootEE4_tABINS4_5_tO2NINS2_19TaskServiceRootImplEE4typeES3_E4typeE");
	set_cmt	(0X71000AE8B0,	"reference to type's name",	0);
	create_qword	(x=0X71000AE8B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AE8B8,	"reference to parent's type name",	0);
	create_qword	(x=0X71000AE8B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AE8C0,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AE8C0,	E_PREV + 0,	"; public \x01\b\x01(00000071000AE8C0nn::sf::detail::ObjectImplFactoryWithStatelessAllocator<nn::sf::InterfaceInfo<nn::bgtc::ITaskServiceRoot>::_tAB<nn::sf::InterfaceInfo<nn::bgtc::ITaskServiceRoot>::_tO2N<nn::bgtc::TaskServiceRootImpl>::type,nn::bgtc::ITaskServiceRoot>::type,nn::sf::StatelessAllocationPolicy<nn::sf::ExpHeapStaticAllocator<8192ul,nn::bgtc::`anonymous namespace'::HipcTag>>>::Object\x02\b :");
	update_extra_cmt		(0X71000AE8C0,	E_PREV + 1,	";   protected /* offset 0xc */ \x01\b\x01(00000071000ABB00nn::sf::impl::detail::ServiceObjectImplBase2\x02\b,");
	update_extra_cmt		(0X71000AE8C0,	E_PREV + 2,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AE8A8nn::sf::InterfaceInfo<nn::bgtc::ITaskServiceRoot>::_tAB<nn::sf::InterfaceInfo<nn::bgtc::ITaskServiceRoot>::_tO2N<nn::bgtc::TaskServiceRootImpl>::type,nn::bgtc::ITaskServiceRoot>::type\x02\b :");
	update_extra_cmt		(0X71000AE8C0,	E_PREV + 3,	";     public /* offset 0x0 */ \x01\b\x01(00000071000AE870nn::sf::detail::InterfaceInfoBottom<nn::sf::IServiceObject>::_tAB<nn::sf::InterfaceInfo<nn::bgtc::ITaskServiceRoot>::_tO2N<nn::bgtc::TaskServiceRootImpl>::type,nn::bgtc::ITaskServiceRoot>::type\x02\b :");
	update_extra_cmt		(0X71000AE8C0,	E_PREV + 4,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ADD60nn::bgtc::ITaskServiceRoot\x02\b :");
	update_extra_cmt		(0X71000AE8C0,	E_PREV + 5,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000AE8C0,	E_PREV + 6,	";           public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000AE8C0,	E_PREV + 7,	";       public /* offset 0x8 */ \x01\b\x01(00000071000AE860nn::sf::detail::ObjectHolderImpl<nn::sf::InterfaceInfo<nn::bgtc::ITaskServiceRoot>::_tO2N<nn::bgtc::TaskServiceRootImpl>::type,void>\x02\b");
	create_qword	(x=0X71000AE8C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AE8C0,	"_ZTIN2nn2sf6detail39ObjectImplFactoryWithStatelessAllocatorINS0_13InterfaceInfoINS_4bgtc16ITaskServiceRootEE4_tABINS6_5_tO2NINS4_19TaskServiceRootImplEE4typeES5_E4typeENS0_25StatelessAllocationPolicyINS0_22ExpHeapStaticAllocatorILm8192ENS4_12_GLOBAL__N_17HipcTagEEEEEE6ObjectE");
	set_cmt	(0X71000AE8C8,	"reference to type's name",	0);
	create_qword	(x=0X71000AE8C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AE8D0,	"attribute",	0);
	create_dword	(x=0X71000AE8D0);
	op_hex		(x,	0);
	set_cmt	(0X71000AE8D4,	"count of base classes",	0);
	create_dword	(x=0X71000AE8D4);
	op_dec		(x,	0);
	set_cmt	(0X71000AE8D8,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AE8D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AE8E0,	"base class' attributes",	0);
	create_qword	(x=0X71000AE8E0);
	op_hex		(x,	0);
	set_cmt	(0X71000AE8E8,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AE8E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AE8F0,	"base class' attributes",	0);
	create_qword	(x=0X71000AE8F0);
	op_hex		(x,	0);
	create_qword	(x=0X71000AE8F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE900);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AE908,	"offset to this",	0);
	create_qword	(x=0X71000AE908);
	op_dec		(x,	0);
	set_name	(0X71000AE908,	"_ZTVN2nn2sf6detail39ObjectImplFactoryWithStatelessAllocatorINS0_13InterfaceInfoINS_4bgtc20IStateControlServiceEE4_tABINS6_5_tO2NINS4_23StateControlServiceImplEE4typeES5_E4typeENS0_25StatelessAllocationPolicyINS0_22ExpHeapStaticAllocatorILm8192ENS4_12_GLOBAL__N_17HipcTagEEEEEE6ObjectE");
	create_qword	(x=0X71000AE910);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE918);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE920);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE928);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE930);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE938);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE940);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE948);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE950);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AE958);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AE960,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AE960,	E_PREV + 0,	"; public \x01\b\x01(00000071000AE960nn::sf::detail::ObjectHolderImpl<nn::sf::InterfaceInfo<nn::bgtc::IStateControlService>::_tO2N<nn::bgtc::StateControlServiceImpl>::type,void>\x02\b");
	create_qword	(x=0X71000AE960);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AE960,	"_ZTIN2nn2sf6detail16ObjectHolderImplINS0_13InterfaceInfoINS_4bgtc20IStateControlServiceEE5_tO2NINS4_23StateControlServiceImplEE4typeEvEE");
	set_cmt	(0X71000AE968,	"reference to type's name",	0);
	create_qword	(x=0X71000AE968);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AE970,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AE970,	E_PREV + 0,	"; public \x01\b\x01(00000071000AE970nn::sf::detail::InterfaceInfoBottom<nn::sf::IServiceObject>::_tAB<nn::sf::InterfaceInfo<nn::bgtc::IStateControlService>::_tO2N<nn::bgtc::StateControlServiceImpl>::type,nn::bgtc::IStateControlService>::type\x02\b :");
	update_extra_cmt		(0X71000AE970,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000ADCF0nn::bgtc::IStateControlService\x02\b :");
	update_extra_cmt		(0X71000AE970,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000AE970,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000AE970,	E_PREV + 4,	";   public /* offset 0x8 */ \x01\b\x01(00000071000AE960nn::sf::detail::ObjectHolderImpl<nn::sf::InterfaceInfo<nn::bgtc::IStateControlService>::_tO2N<nn::bgtc::StateControlServiceImpl>::type,void>\x02\b");
	create_qword	(x=0X71000AE970);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AE970,	"_ZTIN2nn2sf6detail19InterfaceInfoBottomINS0_14IServiceObjectEE4_tABINS0_13InterfaceInfoINS_4bgtc20IStateControlServiceEE5_tO2NINS7_23StateControlServiceImplEE4typeES8_E4typeE");
	set_cmt	(0X71000AE978,	"reference to type's name",	0);
	create_qword	(x=0X71000AE978);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AE980,	"attribute",	0);
	create_dword	(x=0X71000AE980);
	op_hex		(x,	0);
	set_cmt	(0X71000AE984,	"count of base classes",	0);
	create_dword	(x=0X71000AE984);
	op_dec		(x,	0);
	set_cmt	(0X71000AE988,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AE988);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AE990,	"base class' attributes",	0);
	create_qword	(x=0X71000AE990);
	op_hex		(x,	0);
	set_cmt	(0X71000AE998,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AE998);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AE9A0,	"base class' attributes",	0);
	create_qword	(x=0X71000AE9A0);
	op_hex		(x,	0);
	set_cmt	(0X71000AE9A8,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AE9A8,	E_PREV + 0,	"; public \x01\b\x01(00000071000AE9A8nn::sf::InterfaceInfo<nn::bgtc::IStateControlService>::_tAB<nn::sf::InterfaceInfo<nn::bgtc::IStateControlService>::_tO2N<nn::bgtc::StateControlServiceImpl>::type,nn::bgtc::IStateControlService>::type\x02\b :");
	update_extra_cmt		(0X71000AE9A8,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AE970nn::sf::detail::InterfaceInfoBottom<nn::sf::IServiceObject>::_tAB<nn::sf::InterfaceInfo<nn::bgtc::IStateControlService>::_tO2N<nn::bgtc::StateControlServiceImpl>::type,nn::bgtc::IStateControlService>::type\x02\b :");
	update_extra_cmt		(0X71000AE9A8,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ADCF0nn::bgtc::IStateControlService\x02\b :");
	update_extra_cmt		(0X71000AE9A8,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000AE9A8,	E_PREV + 4,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000AE9A8,	E_PREV + 5,	";     public /* offset 0x8 */ \x01\b\x01(00000071000AE960nn::sf::detail::ObjectHolderImpl<nn::sf::InterfaceInfo<nn::bgtc::IStateControlService>::_tO2N<nn::bgtc::StateControlServiceImpl>::type,void>\x02\b");
	create_qword	(x=0X71000AE9A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AE9A8,	"_ZTIN2nn2sf13InterfaceInfoINS_4bgtc20IStateControlServiceEE4_tABINS4_5_tO2NINS2_23StateControlServiceImplEE4typeES3_E4typeE");
	set_cmt	(0X71000AE9B0,	"reference to type's name",	0);
	create_qword	(x=0X71000AE9B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AE9B8,	"reference to parent's type name",	0);
	create_qword	(x=0X71000AE9B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AE9C0,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AE9C0,	E_PREV + 0,	"; public \x01\b\x01(00000071000AE9C0nn::sf::detail::ObjectImplFactoryWithStatelessAllocator<nn::sf::InterfaceInfo<nn::bgtc::IStateControlService>::_tAB<nn::sf::InterfaceInfo<nn::bgtc::IStateControlService>::_tO2N<nn::bgtc::StateControlServiceImpl>::type,nn::bgtc::IStateControlService>::type,nn::sf::StatelessAllocationPolicy<nn::sf::ExpHeapStaticAllocator<8192ul,nn::bgtc::`anonymous namespace'::HipcTag>>>::Object\x02\b :");
	update_extra_cmt		(0X71000AE9C0,	E_PREV + 1,	";   protected /* offset 0x48 */ \x01\b\x01(00000071000ABB00nn::sf::impl::detail::ServiceObjectImplBase2\x02\b,");
	update_extra_cmt		(0X71000AE9C0,	E_PREV + 2,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AE9A8nn::sf::InterfaceInfo<nn::bgtc::IStateControlService>::_tAB<nn::sf::InterfaceInfo<nn::bgtc::IStateControlService>::_tO2N<nn::bgtc::StateControlServiceImpl>::type,nn::bgtc::IStateControlService>::type\x02\b :");
	update_extra_cmt		(0X71000AE9C0,	E_PREV + 3,	";     public /* offset 0x0 */ \x01\b\x01(00000071000AE970nn::sf::detail::InterfaceInfoBottom<nn::sf::IServiceObject>::_tAB<nn::sf::InterfaceInfo<nn::bgtc::IStateControlService>::_tO2N<nn::bgtc::StateControlServiceImpl>::type,nn::bgtc::IStateControlService>::type\x02\b :");
	update_extra_cmt		(0X71000AE9C0,	E_PREV + 4,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ADCF0nn::bgtc::IStateControlService\x02\b :");
	update_extra_cmt		(0X71000AE9C0,	E_PREV + 5,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000AE9C0,	E_PREV + 6,	";           public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000AE9C0,	E_PREV + 7,	";       public /* offset 0x8 */ \x01\b\x01(00000071000AE960nn::sf::detail::ObjectHolderImpl<nn::sf::InterfaceInfo<nn::bgtc::IStateControlService>::_tO2N<nn::bgtc::StateControlServiceImpl>::type,void>\x02\b");
	create_qword	(x=0X71000AE9C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AE9C0,	"_ZTIN2nn2sf6detail39ObjectImplFactoryWithStatelessAllocatorINS0_13InterfaceInfoINS_4bgtc20IStateControlServiceEE4_tABINS6_5_tO2NINS4_23StateControlServiceImplEE4typeES5_E4typeENS0_25StatelessAllocationPolicyINS0_22ExpHeapStaticAllocatorILm8192ENS4_12_GLOBAL__N_17HipcTagEEEEEE6ObjectE");
	set_cmt	(0X71000AE9C8,	"reference to type's name",	0);
	create_qword	(x=0X71000AE9C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AE9D0,	"attribute",	0);
	create_dword	(x=0X71000AE9D0);
	op_hex		(x,	0);
	set_cmt	(0X71000AE9D4,	"count of base classes",	0);
	create_dword	(x=0X71000AE9D4);
	op_dec		(x,	0);
	set_cmt	(0X71000AE9D8,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AE9D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AE9E0,	"base class' attributes",	0);
	create_qword	(x=0X71000AE9E0);
	op_hex		(x,	0);
	set_cmt	(0X71000AE9E8,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AE9E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AE9F0,	"base class' attributes",	0);
	create_qword	(x=0X71000AE9F0);
	op_hex		(x,	0);
	set_cmt	(0X71000AE9F8,	"offset to this",	0);
	create_qword	(x=0X71000AE9F8);
	op_dec		(x,	0);
	set_name	(0X71000AE9F8,	"_ZTVN2nn4bgtc20IStateControlServiceE");
	create_qword	(x=0X71000AEA00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEA08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEA10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEA18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEA20);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEA28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEA30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEA38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEA40);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEA48);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEA50);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AEA58,	"offset to this",	0);
	create_qword	(x=0X71000AEA58);
	op_dec		(x,	0);
	set_name	(0X71000AEA58,	"_ZTVN2nn2sf6detail39ObjectImplFactoryWithStatelessAllocatorINS0_13InterfaceInfoINS_4bgtc12ITaskServiceEE4_tABINS6_5_tO2NINS4_15TaskServiceImplEE4typeES5_E4typeENS0_30StatelessTypedAllocationPolicyINS1_32DefaultAllocationPolicyAllocatorEEEE6ObjectE");
	create_qword	(x=0X71000AEA60);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEA68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEA70);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEA78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEA80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEA88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEA90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEA98);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEAA0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEAA8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEAB0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEAB8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEAC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEAC8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEAD0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEAD8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEAE0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEAE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEAF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEAF8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEB00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AEB08,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AEB08,	E_PREV + 0,	"; public \x01\b\x01(00000071000AEB08nn::sf::detail::ObjectHolderImpl<nn::sf::InterfaceInfo<nn::bgtc::ITaskService>::_tO2N<nn::bgtc::TaskServiceImpl>::type,void>\x02\b");
	create_qword	(x=0X71000AEB08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AEB08,	"_ZTIN2nn2sf6detail16ObjectHolderImplINS0_13InterfaceInfoINS_4bgtc12ITaskServiceEE5_tO2NINS4_15TaskServiceImplEE4typeEvEE");
	set_cmt	(0X71000AEB10,	"reference to type's name",	0);
	create_qword	(x=0X71000AEB10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AEB18,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AEB18,	E_PREV + 0,	"; public \x01\b\x01(00000071000AEB18nn::sf::detail::InterfaceInfoBottom<nn::sf::IServiceObject>::_tAB<nn::sf::InterfaceInfo<nn::bgtc::ITaskService>::_tO2N<nn::bgtc::TaskServiceImpl>::type,nn::bgtc::ITaskService>::type\x02\b :");
	update_extra_cmt		(0X71000AEB18,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000ADEE0nn::bgtc::ITaskService\x02\b :");
	update_extra_cmt		(0X71000AEB18,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000AEB18,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000AEB18,	E_PREV + 4,	";   public /* offset 0x8 */ \x01\b\x01(00000071000AEB08nn::sf::detail::ObjectHolderImpl<nn::sf::InterfaceInfo<nn::bgtc::ITaskService>::_tO2N<nn::bgtc::TaskServiceImpl>::type,void>\x02\b");
	create_qword	(x=0X71000AEB18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AEB18,	"_ZTIN2nn2sf6detail19InterfaceInfoBottomINS0_14IServiceObjectEE4_tABINS0_13InterfaceInfoINS_4bgtc12ITaskServiceEE5_tO2NINS7_15TaskServiceImplEE4typeES8_E4typeE");
	set_cmt	(0X71000AEB20,	"reference to type's name",	0);
	create_qword	(x=0X71000AEB20);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AEB28,	"attribute",	0);
	create_dword	(x=0X71000AEB28);
	op_hex		(x,	0);
	set_cmt	(0X71000AEB2C,	"count of base classes",	0);
	create_dword	(x=0X71000AEB2C);
	op_dec		(x,	0);
	set_cmt	(0X71000AEB30,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AEB30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AEB38,	"base class' attributes",	0);
	create_qword	(x=0X71000AEB38);
	op_hex		(x,	0);
	set_cmt	(0X71000AEB40,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AEB40);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AEB48,	"base class' attributes",	0);
	create_qword	(x=0X71000AEB48);
	op_hex		(x,	0);
	set_cmt	(0X71000AEB50,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AEB50,	E_PREV + 0,	"; public \x01\b\x01(00000071000AEB50nn::sf::InterfaceInfo<nn::bgtc::ITaskService>::_tAB<nn::sf::InterfaceInfo<nn::bgtc::ITaskService>::_tO2N<nn::bgtc::TaskServiceImpl>::type,nn::bgtc::ITaskService>::type\x02\b :");
	update_extra_cmt		(0X71000AEB50,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AEB18nn::sf::detail::InterfaceInfoBottom<nn::sf::IServiceObject>::_tAB<nn::sf::InterfaceInfo<nn::bgtc::ITaskService>::_tO2N<nn::bgtc::TaskServiceImpl>::type,nn::bgtc::ITaskService>::type\x02\b :");
	update_extra_cmt		(0X71000AEB50,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ADEE0nn::bgtc::ITaskService\x02\b :");
	update_extra_cmt		(0X71000AEB50,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000AEB50,	E_PREV + 4,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000AEB50,	E_PREV + 5,	";     public /* offset 0x8 */ \x01\b\x01(00000071000AEB08nn::sf::detail::ObjectHolderImpl<nn::sf::InterfaceInfo<nn::bgtc::ITaskService>::_tO2N<nn::bgtc::TaskServiceImpl>::type,void>\x02\b");
	create_qword	(x=0X71000AEB50);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AEB50,	"_ZTIN2nn2sf13InterfaceInfoINS_4bgtc12ITaskServiceEE4_tABINS4_5_tO2NINS2_15TaskServiceImplEE4typeES3_E4typeE");
	set_cmt	(0X71000AEB58,	"reference to type's name",	0);
	create_qword	(x=0X71000AEB58);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AEB60,	"reference to parent's type name",	0);
	create_qword	(x=0X71000AEB60);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AEB68,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AEB68,	E_PREV + 0,	"; public \x01\b\x01(00000071000AEB68nn::sf::detail::ObjectImplFactoryWithStatelessAllocator<nn::sf::InterfaceInfo<nn::bgtc::ITaskService>::_tAB<nn::sf::InterfaceInfo<nn::bgtc::ITaskService>::_tO2N<nn::bgtc::TaskServiceImpl>::type,nn::bgtc::ITaskService>::type,nn::sf::StatelessTypedAllocationPolicy<nn::sf::detail::DefaultAllocationPolicyAllocator>>::Object\x02\b :");
	update_extra_cmt		(0X71000AEB68,	E_PREV + 1,	";   protected /* offset 0xc8 */ \x01\b\x01(00000071000ABB00nn::sf::impl::detail::ServiceObjectImplBase2\x02\b,");
	update_extra_cmt		(0X71000AEB68,	E_PREV + 2,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AEB50nn::sf::InterfaceInfo<nn::bgtc::ITaskService>::_tAB<nn::sf::InterfaceInfo<nn::bgtc::ITaskService>::_tO2N<nn::bgtc::TaskServiceImpl>::type,nn::bgtc::ITaskService>::type\x02\b :");
	update_extra_cmt		(0X71000AEB68,	E_PREV + 3,	";     public /* offset 0x0 */ \x01\b\x01(00000071000AEB18nn::sf::detail::InterfaceInfoBottom<nn::sf::IServiceObject>::_tAB<nn::sf::InterfaceInfo<nn::bgtc::ITaskService>::_tO2N<nn::bgtc::TaskServiceImpl>::type,nn::bgtc::ITaskService>::type\x02\b :");
	update_extra_cmt		(0X71000AEB68,	E_PREV + 4,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ADEE0nn::bgtc::ITaskService\x02\b :");
	update_extra_cmt		(0X71000AEB68,	E_PREV + 5,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000AEB68,	E_PREV + 6,	";           public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000AEB68,	E_PREV + 7,	";       public /* offset 0x8 */ \x01\b\x01(00000071000AEB08nn::sf::detail::ObjectHolderImpl<nn::sf::InterfaceInfo<nn::bgtc::ITaskService>::_tO2N<nn::bgtc::TaskServiceImpl>::type,void>\x02\b");
	create_qword	(x=0X71000AEB68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AEB68,	"_ZTIN2nn2sf6detail39ObjectImplFactoryWithStatelessAllocatorINS0_13InterfaceInfoINS_4bgtc12ITaskServiceEE4_tABINS6_5_tO2NINS4_15TaskServiceImplEE4typeES5_E4typeENS0_30StatelessTypedAllocationPolicyINS1_32DefaultAllocationPolicyAllocatorEEEE6ObjectE");
	set_cmt	(0X71000AEB70,	"reference to type's name",	0);
	create_qword	(x=0X71000AEB70);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AEB78,	"attribute",	0);
	create_dword	(x=0X71000AEB78);
	op_hex		(x,	0);
	set_cmt	(0X71000AEB7C,	"count of base classes",	0);
	create_dword	(x=0X71000AEB7C);
	op_dec		(x,	0);
	set_cmt	(0X71000AEB80,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AEB80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AEB88,	"base class' attributes",	0);
	create_qword	(x=0X71000AEB88);
	op_hex		(x,	0);
	set_cmt	(0X71000AEB90,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AEB90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AEB98,	"base class' attributes",	0);
	create_qword	(x=0X71000AEB98);
	op_hex		(x,	0);
	set_cmt	(0X71000AEBA0,	"offset to this",	0);
	create_qword	(x=0X71000AEBA0);
	op_dec		(x,	0);
	set_name	(0X71000AEBA0,	"_ZTVN2nn4bgtc12ITaskServiceE");
	create_qword	(x=0X71000AEBA8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEBB0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEBB8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEBC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEBC8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEBD0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEBD8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEBE0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEBE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEBF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEBF8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEC00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEC08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEC10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEC18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEC20);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEC28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEC30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEC38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEC40);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEC48);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEC50);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEC58);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEC60);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEC68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AEC70,	"offset to this",	0);
	create_qword	(x=0X71000AEC70);
	op_dec		(x,	0);
	set_name	(0X71000AEC70,	"_ZTVN2nn3err6detail11ExpHeapBaseE");
	create_qword	(x=0X71000AEC78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEC80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEC88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEC90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEC98);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AECA0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AECA8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AECB0,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AECB0,	E_PREV + 0,	"; public \x01\b\x01(00000071000AECB0nn::err::detail::ExpHeapBase\x02\b :");
	update_extra_cmt		(0X71000AECB0,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AC8B8nn::MemoryResource\x02\b");
	create_qword	(x=0X71000AECB0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AECB0,	"_ZTIN2nn3err6detail11ExpHeapBaseE");
	set_cmt	(0X71000AECB8,	"reference to type's name",	0);
	create_qword	(x=0X71000AECB8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AECC0,	"reference to parent's type name",	0);
	create_qword	(x=0X71000AECC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AECC8,	"offset to this",	0);
	create_qword	(x=0X71000AECC8);
	op_dec		(x,	0);
	set_name	(0X71000AECC8,	"_ZTVN2nn3err6detail12NopAllocatorE");
	create_qword	(x=0X71000AECD0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AECD8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AECE0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AECE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AECF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AECF8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AED00,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AED00,	E_PREV + 0,	"; public \x01\b\x01(00000071000AED00nn::err::detail::NopAllocator\x02\b :");
	update_extra_cmt		(0X71000AED00,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AC8B8nn::MemoryResource\x02\b");
	create_qword	(x=0X71000AED00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AED00,	"_ZTIN2nn3err6detail12NopAllocatorE");
	set_cmt	(0X71000AED08,	"reference to type's name",	0);
	create_qword	(x=0X71000AED08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AED10,	"reference to parent's type name",	0);
	create_qword	(x=0X71000AED10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AED18,	"offset to this",	0);
	create_qword	(x=0X71000AED18);
	op_dec		(x,	0);
	set_name	(0X71000AED18,	"_ZTVN2nn2sf6detail38ObjectImplFactoryWithStatefulAllocatorINS0_13InterfaceInfoINS_3err7context17IContextRegistrarEE4_tABINS7_5_tO2NINS4_6server16ContextRegistrarINSA_29ContextWriterServiceForSystemEEEE4typeES6_E4typeENS0_30MemoryResourceAllocationPolicyEE6ObjectE");
	create_qword	(x=0X71000AED20);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AED28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AED30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AED38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AED40);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AED48);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AED50,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AED50,	E_PREV + 0,	"; public \x01\b\x01(00000071000AED50nn::err::context::IContextRegistrar\x02\b :");
	update_extra_cmt		(0X71000AED50,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000AED50,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b");
	create_qword	(x=0X71000AED50);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AED50,	"_ZTIN2nn3err7context17IContextRegistrarE");
	set_cmt	(0X71000AED58,	"reference to type's name",	0);
	create_qword	(x=0X71000AED58);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AED60,	"reference to parent's type name",	0);
	create_qword	(x=0X71000AED60);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AED68,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AED68,	E_PREV + 0,	"; public \x01\b\x01(00000071000AED68nn::sf::detail::ObjectHolderImpl<nn::sf::InterfaceInfo<nn::err::context::IContextRegistrar>::_tO2N<nn::err::server::ContextRegistrar<nn::err::server::ContextWriterServiceForSystem>>::type,void>\x02\b");
	create_qword	(x=0X71000AED68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AED68,	"_ZTIN2nn2sf6detail16ObjectHolderImplINS0_13InterfaceInfoINS_3err7context17IContextRegistrarEE5_tO2NINS4_6server16ContextRegistrarINS9_29ContextWriterServiceForSystemEEEE4typeEvEE");
	set_cmt	(0X71000AED70,	"reference to type's name",	0);
	create_qword	(x=0X71000AED70);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AED78,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AED78,	E_PREV + 0,	"; public \x01\b\x01(00000071000AED78nn::sf::detail::InterfaceInfoBottom<nn::sf::IServiceObject>::_tAB<nn::sf::InterfaceInfo<nn::err::context::IContextRegistrar>::_tO2N<nn::err::server::ContextRegistrar<nn::err::server::ContextWriterServiceForSystem>>::type,nn::err::context::IContextRegistrar>::type\x02\b :");
	update_extra_cmt		(0X71000AED78,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AED50nn::err::context::IContextRegistrar\x02\b :");
	update_extra_cmt		(0X71000AED78,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000AED78,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000AED78,	E_PREV + 4,	";   public /* offset 0x8 */ \x01\b\x01(00000071000AED68nn::sf::detail::ObjectHolderImpl<nn::sf::InterfaceInfo<nn::err::context::IContextRegistrar>::_tO2N<nn::err::server::ContextRegistrar<nn::err::server::ContextWriterServiceForSystem>>::type,void>\x02\b");
	create_qword	(x=0X71000AED78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AED78,	"_ZTIN2nn2sf6detail19InterfaceInfoBottomINS0_14IServiceObjectEE4_tABINS0_13InterfaceInfoINS_3err7context17IContextRegistrarEE5_tO2NINS7_6server16ContextRegistrarINSC_29ContextWriterServiceForSystemEEEE4typeES9_E4typeE");
	set_cmt	(0X71000AED80,	"reference to type's name",	0);
	create_qword	(x=0X71000AED80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AED88,	"attribute",	0);
	create_dword	(x=0X71000AED88);
	op_hex		(x,	0);
	set_cmt	(0X71000AED8C,	"count of base classes",	0);
	create_dword	(x=0X71000AED8C);
	op_dec		(x,	0);
	set_cmt	(0X71000AED90,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AED90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AED98,	"base class' attributes",	0);
	create_qword	(x=0X71000AED98);
	op_hex		(x,	0);
	set_cmt	(0X71000AEDA0,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AEDA0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AEDA8,	"base class' attributes",	0);
	create_qword	(x=0X71000AEDA8);
	op_hex		(x,	0);
	set_cmt	(0X71000AEDB0,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AEDB0,	E_PREV + 0,	"; public \x01\b\x01(00000071000AEDB0nn::sf::InterfaceInfo<nn::err::context::IContextRegistrar>::_tAB<nn::sf::InterfaceInfo<nn::err::context::IContextRegistrar>::_tO2N<nn::err::server::ContextRegistrar<nn::err::server::ContextWriterServiceForSystem>>::type,nn::err::context::IContextRegistrar>::type\x02\b :");
	update_extra_cmt		(0X71000AEDB0,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AED78nn::sf::detail::InterfaceInfoBottom<nn::sf::IServiceObject>::_tAB<nn::sf::InterfaceInfo<nn::err::context::IContextRegistrar>::_tO2N<nn::err::server::ContextRegistrar<nn::err::server::ContextWriterServiceForSystem>>::type,nn::err::context::IContextRegistrar>::type\x02\b :");
	update_extra_cmt		(0X71000AEDB0,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000AED50nn::err::context::IContextRegistrar\x02\b :");
	update_extra_cmt		(0X71000AEDB0,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000AEDB0,	E_PREV + 4,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000AEDB0,	E_PREV + 5,	";     public /* offset 0x8 */ \x01\b\x01(00000071000AED68nn::sf::detail::ObjectHolderImpl<nn::sf::InterfaceInfo<nn::err::context::IContextRegistrar>::_tO2N<nn::err::server::ContextRegistrar<nn::err::server::ContextWriterServiceForSystem>>::type,void>\x02\b");
	create_qword	(x=0X71000AEDB0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AEDB0,	"_ZTIN2nn2sf13InterfaceInfoINS_3err7context17IContextRegistrarEE4_tABINS5_5_tO2NINS2_6server16ContextRegistrarINS8_29ContextWriterServiceForSystemEEEE4typeES4_E4typeE");
	set_cmt	(0X71000AEDB8,	"reference to type's name",	0);
	create_qword	(x=0X71000AEDB8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AEDC0,	"reference to parent's type name",	0);
	create_qword	(x=0X71000AEDC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AEDC8,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AEDC8,	E_PREV + 0,	"; public \x01\b\x01(00000071000AEDC8nn::sf::detail::ObjectImplFactoryWithStatefulAllocator<nn::sf::InterfaceInfo<nn::err::context::IContextRegistrar>::_tAB<nn::sf::InterfaceInfo<nn::err::context::IContextRegistrar>::_tO2N<nn::err::server::ContextRegistrar<nn::err::server::ContextWriterServiceForSystem>>::type,nn::err::context::IContextRegistrar>::type,nn::sf::MemoryResourceAllocationPolicy>::Object\x02\b :");
	update_extra_cmt		(0X71000AEDC8,	E_PREV + 1,	";   protected /* offset 0x10 */ \x01\b\x01(00000071000ABB00nn::sf::impl::detail::ServiceObjectImplBase2\x02\b,");
	update_extra_cmt		(0X71000AEDC8,	E_PREV + 2,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AEDB0nn::sf::InterfaceInfo<nn::err::context::IContextRegistrar>::_tAB<nn::sf::InterfaceInfo<nn::err::context::IContextRegistrar>::_tO2N<nn::err::server::ContextRegistrar<nn::err::server::ContextWriterServiceForSystem>>::type,nn::err::context::IContextRegistrar>::type\x02\b :");
	update_extra_cmt		(0X71000AEDC8,	E_PREV + 3,	";     public /* offset 0x0 */ \x01\b\x01(00000071000AED78nn::sf::detail::InterfaceInfoBottom<nn::sf::IServiceObject>::_tAB<nn::sf::InterfaceInfo<nn::err::context::IContextRegistrar>::_tO2N<nn::err::server::ContextRegistrar<nn::err::server::ContextWriterServiceForSystem>>::type,nn::err::context::IContextRegistrar>::type\x02\b :");
	update_extra_cmt		(0X71000AEDC8,	E_PREV + 4,	";       public /* offset 0x0 */ \x01\b\x01(00000071000AED50nn::err::context::IContextRegistrar\x02\b :");
	update_extra_cmt		(0X71000AEDC8,	E_PREV + 5,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000AEDC8,	E_PREV + 6,	";           public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000AEDC8,	E_PREV + 7,	";       public /* offset 0x8 */ \x01\b\x01(00000071000AED68nn::sf::detail::ObjectHolderImpl<nn::sf::InterfaceInfo<nn::err::context::IContextRegistrar>::_tO2N<nn::err::server::ContextRegistrar<nn::err::server::ContextWriterServiceForSystem>>::type,void>\x02\b");
	create_qword	(x=0X71000AEDC8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AEDC8,	"_ZTIN2nn2sf6detail38ObjectImplFactoryWithStatefulAllocatorINS0_13InterfaceInfoINS_3err7context17IContextRegistrarEE4_tABINS7_5_tO2NINS4_6server16ContextRegistrarINSA_29ContextWriterServiceForSystemEEEE4typeES6_E4typeENS0_30MemoryResourceAllocationPolicyEE6ObjectE");
	set_cmt	(0X71000AEDD0,	"reference to type's name",	0);
	create_qword	(x=0X71000AEDD0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AEDD8,	"attribute",	0);
	create_dword	(x=0X71000AEDD8);
	op_hex		(x,	0);
	set_cmt	(0X71000AEDDC,	"count of base classes",	0);
	create_dword	(x=0X71000AEDDC);
	op_dec		(x,	0);
	set_cmt	(0X71000AEDE0,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AEDE0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AEDE8,	"base class' attributes",	0);
	create_qword	(x=0X71000AEDE8);
	op_hex		(x,	0);
	set_cmt	(0X71000AEDF0,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AEDF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AEDF8,	"base class' attributes",	0);
	create_qword	(x=0X71000AEDF8);
	op_hex		(x,	0);
	set_cmt	(0X71000AEE00,	"offset to this",	0);
	create_qword	(x=0X71000AEE00);
	op_dec		(x,	0);
	set_name	(0X71000AEE00,	"_ZTVN2nn2sf6detail38ObjectImplFactoryWithStatefulAllocatorINS0_13InterfaceInfoINS_3err7context17IContextRegistrarEE4_tABINS7_5_tO2NINS4_6server16ContextRegistrarINSA_34ContextWriterServiceForApplicationEEEE4typeES6_E4typeENS0_30MemoryResourceAllocationPolicyEE6ObjectE");
	create_qword	(x=0X71000AEE08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEE10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEE18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEE20);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEE28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEE30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AEE38,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AEE38,	E_PREV + 0,	"; public \x01\b\x01(00000071000AEE38nn::sf::detail::ObjectHolderImpl<nn::sf::InterfaceInfo<nn::err::context::IContextRegistrar>::_tO2N<nn::err::server::ContextRegistrar<nn::err::server::ContextWriterServiceForApplication>>::type,void>\x02\b");
	create_qword	(x=0X71000AEE38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AEE38,	"_ZTIN2nn2sf6detail16ObjectHolderImplINS0_13InterfaceInfoINS_3err7context17IContextRegistrarEE5_tO2NINS4_6server16ContextRegistrarINS9_34ContextWriterServiceForApplicationEEEE4typeEvEE");
	set_cmt	(0X71000AEE40,	"reference to type's name",	0);
	create_qword	(x=0X71000AEE40);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AEE48,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AEE48,	E_PREV + 0,	"; public \x01\b\x01(00000071000AEE48nn::sf::detail::InterfaceInfoBottom<nn::sf::IServiceObject>::_tAB<nn::sf::InterfaceInfo<nn::err::context::IContextRegistrar>::_tO2N<nn::err::server::ContextRegistrar<nn::err::server::ContextWriterServiceForApplication>>::type,nn::err::context::IContextRegistrar>::type\x02\b :");
	update_extra_cmt		(0X71000AEE48,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AED50nn::err::context::IContextRegistrar\x02\b :");
	update_extra_cmt		(0X71000AEE48,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000AEE48,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000AEE48,	E_PREV + 4,	";   public /* offset 0x8 */ \x01\b\x01(00000071000AEE38nn::sf::detail::ObjectHolderImpl<nn::sf::InterfaceInfo<nn::err::context::IContextRegistrar>::_tO2N<nn::err::server::ContextRegistrar<nn::err::server::ContextWriterServiceForApplication>>::type,void>\x02\b");
	create_qword	(x=0X71000AEE48);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AEE48,	"_ZTIN2nn2sf6detail19InterfaceInfoBottomINS0_14IServiceObjectEE4_tABINS0_13InterfaceInfoINS_3err7context17IContextRegistrarEE5_tO2NINS7_6server16ContextRegistrarINSC_34ContextWriterServiceForApplicationEEEE4typeES9_E4typeE");
	set_cmt	(0X71000AEE50,	"reference to type's name",	0);
	create_qword	(x=0X71000AEE50);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AEE58,	"attribute",	0);
	create_dword	(x=0X71000AEE58);
	op_hex		(x,	0);
	set_cmt	(0X71000AEE5C,	"count of base classes",	0);
	create_dword	(x=0X71000AEE5C);
	op_dec		(x,	0);
	set_cmt	(0X71000AEE60,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AEE60);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AEE68,	"base class' attributes",	0);
	create_qword	(x=0X71000AEE68);
	op_hex		(x,	0);
	set_cmt	(0X71000AEE70,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AEE70);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AEE78,	"base class' attributes",	0);
	create_qword	(x=0X71000AEE78);
	op_hex		(x,	0);
	set_cmt	(0X71000AEE80,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AEE80,	E_PREV + 0,	"; public \x01\b\x01(00000071000AEE80nn::sf::InterfaceInfo<nn::err::context::IContextRegistrar>::_tAB<nn::sf::InterfaceInfo<nn::err::context::IContextRegistrar>::_tO2N<nn::err::server::ContextRegistrar<nn::err::server::ContextWriterServiceForApplication>>::type,nn::err::context::IContextRegistrar>::type\x02\b :");
	update_extra_cmt		(0X71000AEE80,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AEE48nn::sf::detail::InterfaceInfoBottom<nn::sf::IServiceObject>::_tAB<nn::sf::InterfaceInfo<nn::err::context::IContextRegistrar>::_tO2N<nn::err::server::ContextRegistrar<nn::err::server::ContextWriterServiceForApplication>>::type,nn::err::context::IContextRegistrar>::type\x02\b :");
	update_extra_cmt		(0X71000AEE80,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000AED50nn::err::context::IContextRegistrar\x02\b :");
	update_extra_cmt		(0X71000AEE80,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000AEE80,	E_PREV + 4,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000AEE80,	E_PREV + 5,	";     public /* offset 0x8 */ \x01\b\x01(00000071000AEE38nn::sf::detail::ObjectHolderImpl<nn::sf::InterfaceInfo<nn::err::context::IContextRegistrar>::_tO2N<nn::err::server::ContextRegistrar<nn::err::server::ContextWriterServiceForApplication>>::type,void>\x02\b");
	create_qword	(x=0X71000AEE80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AEE80,	"_ZTIN2nn2sf13InterfaceInfoINS_3err7context17IContextRegistrarEE4_tABINS5_5_tO2NINS2_6server16ContextRegistrarINS8_34ContextWriterServiceForApplicationEEEE4typeES4_E4typeE");
	set_cmt	(0X71000AEE88,	"reference to type's name",	0);
	create_qword	(x=0X71000AEE88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AEE90,	"reference to parent's type name",	0);
	create_qword	(x=0X71000AEE90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AEE98,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AEE98,	E_PREV + 0,	"; public \x01\b\x01(00000071000AEE98nn::sf::detail::ObjectImplFactoryWithStatefulAllocator<nn::sf::InterfaceInfo<nn::err::context::IContextRegistrar>::_tAB<nn::sf::InterfaceInfo<nn::err::context::IContextRegistrar>::_tO2N<nn::err::server::ContextRegistrar<nn::err::server::ContextWriterServiceForApplication>>::type,nn::err::context::IContextRegistrar>::type,nn::sf::MemoryResourceAllocationPolicy>::Object\x02\b :");
	update_extra_cmt		(0X71000AEE98,	E_PREV + 1,	";   protected /* offset 0x10 */ \x01\b\x01(00000071000ABB00nn::sf::impl::detail::ServiceObjectImplBase2\x02\b,");
	update_extra_cmt		(0X71000AEE98,	E_PREV + 2,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AEE80nn::sf::InterfaceInfo<nn::err::context::IContextRegistrar>::_tAB<nn::sf::InterfaceInfo<nn::err::context::IContextRegistrar>::_tO2N<nn::err::server::ContextRegistrar<nn::err::server::ContextWriterServiceForApplication>>::type,nn::err::context::IContextRegistrar>::type\x02\b :");
	update_extra_cmt		(0X71000AEE98,	E_PREV + 3,	";     public /* offset 0x0 */ \x01\b\x01(00000071000AEE48nn::sf::detail::InterfaceInfoBottom<nn::sf::IServiceObject>::_tAB<nn::sf::InterfaceInfo<nn::err::context::IContextRegistrar>::_tO2N<nn::err::server::ContextRegistrar<nn::err::server::ContextWriterServiceForApplication>>::type,nn::err::context::IContextRegistrar>::type\x02\b :");
	update_extra_cmt		(0X71000AEE98,	E_PREV + 4,	";       public /* offset 0x0 */ \x01\b\x01(00000071000AED50nn::err::context::IContextRegistrar\x02\b :");
	update_extra_cmt		(0X71000AEE98,	E_PREV + 5,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000AEE98,	E_PREV + 6,	";           public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000AEE98,	E_PREV + 7,	";       public /* offset 0x8 */ \x01\b\x01(00000071000AEE38nn::sf::detail::ObjectHolderImpl<nn::sf::InterfaceInfo<nn::err::context::IContextRegistrar>::_tO2N<nn::err::server::ContextRegistrar<nn::err::server::ContextWriterServiceForApplication>>::type,void>\x02\b");
	create_qword	(x=0X71000AEE98);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AEE98,	"_ZTIN2nn2sf6detail38ObjectImplFactoryWithStatefulAllocatorINS0_13InterfaceInfoINS_3err7context17IContextRegistrarEE4_tABINS7_5_tO2NINS4_6server16ContextRegistrarINSA_34ContextWriterServiceForApplicationEEEE4typeES6_E4typeENS0_30MemoryResourceAllocationPolicyEE6ObjectE");
	set_cmt	(0X71000AEEA0,	"reference to type's name",	0);
	create_qword	(x=0X71000AEEA0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AEEA8,	"attribute",	0);
	create_dword	(x=0X71000AEEA8);
	op_hex		(x,	0);
	set_cmt	(0X71000AEEAC,	"count of base classes",	0);
	create_dword	(x=0X71000AEEAC);
	op_dec		(x,	0);
	set_cmt	(0X71000AEEB0,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AEEB0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AEEB8,	"base class' attributes",	0);
	create_qword	(x=0X71000AEEB8);
	op_hex		(x,	0);
	set_cmt	(0X71000AEEC0,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AEEC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AEEC8,	"base class' attributes",	0);
	create_qword	(x=0X71000AEEC8);
	op_hex		(x,	0);
	set_cmt	(0X71000AEED0,	"offset to this",	0);
	create_qword	(x=0X71000AEED0);
	op_dec		(x,	0);
	set_name	(0X71000AEED0,	"_ZTVN2nn2sf6detail38ObjectImplFactoryWithStatefulAllocatorINS0_4cmif6client6detail9CmifProxyINS_8fatalsrv8IServiceENS0_4hipc6client18Hipc2ProxyKindBaseILNS9_6detail11MessageTypeE6EEENS0_30MemoryResourceAllocationPolicyENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESF_E6ObjectE");
	create_qword	(x=0X71000AEED8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEEE0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEEE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEEF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEEF8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEF00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEF08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEF10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEF18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AEF20,	"offset to this",	0);
	create_qword	(x=0X71000AEF20);
	toggle_sign		(x,	0);
	op_dec		(x,	0);
	toggle_sign		(x,	1);
	create_qword	(x=0X71000AEF28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AEF30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AEF38,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AEF38,	E_PREV + 0,	"; public \x01\b\x01(00000071000AEF38nn::fatalsrv::IService\x02\b :");
	update_extra_cmt		(0X71000AEF38,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000AEF38,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b");
	create_qword	(x=0X71000AEF38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AEF38,	"_ZTIN2nn8fatalsrv8IServiceE");
	set_cmt	(0X71000AEF40,	"reference to type's name",	0);
	create_qword	(x=0X71000AEF40);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AEF48,	"reference to parent's type name",	0);
	create_qword	(x=0X71000AEF48);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AEF50,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AEF50,	E_PREV + 0,	"; public \x01\b\x01(00000071000AEF50nn::sf::hipc::client::Hipc2ClientProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000AEF50,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b");
	create_qword	(x=0X71000AEF50);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AEF50,	"_ZTIN2nn2sf4hipc6client26Hipc2ClientProxyBaseObjectE");
	set_cmt	(0X71000AEF58,	"reference to type's name",	0);
	create_qword	(x=0X71000AEF58);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AEF60,	"reference to parent's type name",	0);
	create_qword	(x=0X71000AEF60);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AEF68,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AEF68,	E_PREV + 0,	"; public \x01\b\x01(00000071000AEF68nn::sf::cmif::client::detail::CmifProxyImpl<nn::fatalsrv::IService,nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>,nn::sf::MemoryResourceAllocationPolicy,nn::fatalsrv::IService,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000AEF68,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AEF38nn::fatalsrv::IService\x02\b :");
	update_extra_cmt		(0X71000AEF68,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000AEF68,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000AEF68,	E_PREV + 4,	";   protected /* offset 0x8 */ \x01\b\x01(00000071000AEF50nn::sf::hipc::client::Hipc2ClientProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000AEF68,	E_PREV + 5,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000AEF68,	E_PREV + 6,	";   protected /* offset 0x10 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000AEF68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AEF68,	"_ZTIN2nn2sf4cmif6client6detail13CmifProxyImplINS_8fatalsrv8IServiceENS0_4hipc6client18Hipc2ProxyKindBaseILNS7_6detail11MessageTypeE6EEENS0_30MemoryResourceAllocationPolicyES6_NS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEEE");
	set_cmt	(0X71000AEF70,	"reference to type's name",	0);
	create_qword	(x=0X71000AEF70);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AEF78,	"attribute",	0);
	create_dword	(x=0X71000AEF78);
	op_hex		(x,	0);
	set_cmt	(0X71000AEF7C,	"count of base classes",	0);
	create_dword	(x=0X71000AEF7C);
	op_dec		(x,	0);
	set_cmt	(0X71000AEF80,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AEF80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AEF88,	"base class' attributes",	0);
	create_qword	(x=0X71000AEF88);
	op_hex		(x,	0);
	set_cmt	(0X71000AEF90,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AEF90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AEF98,	"base class' attributes",	0);
	create_qword	(x=0X71000AEF98);
	op_hex		(x,	0);
	set_cmt	(0X71000AEFA0,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AEFA0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AEFA8,	"base class' attributes",	0);
	create_qword	(x=0X71000AEFA8);
	op_hex		(x,	0);
	set_cmt	(0X71000AEFB0,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AEFB0,	E_PREV + 0,	"; public \x01\b\x01(00000071000AEFB0nn::sf::cmif::client::detail::CmifProxy<nn::fatalsrv::IService,nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>,nn::sf::MemoryResourceAllocationPolicy,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>\x02\b :");
	update_extra_cmt		(0X71000AEFB0,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AEF68nn::sf::cmif::client::detail::CmifProxyImpl<nn::fatalsrv::IService,nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>,nn::sf::MemoryResourceAllocationPolicy,nn::fatalsrv::IService,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000AEFB0,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000AEF38nn::fatalsrv::IService\x02\b :");
	update_extra_cmt		(0X71000AEFB0,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000AEFB0,	E_PREV + 4,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000AEFB0,	E_PREV + 5,	";     protected /* offset 0x8 */ \x01\b\x01(00000071000AEF50nn::sf::hipc::client::Hipc2ClientProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000AEFB0,	E_PREV + 6,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000AEFB0,	E_PREV + 7,	";     protected /* offset 0x10 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000AEFB0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AEFB0,	"_ZTIN2nn2sf4cmif6client6detail9CmifProxyINS_8fatalsrv8IServiceENS0_4hipc6client18Hipc2ProxyKindBaseILNS7_6detail11MessageTypeE6EEENS0_30MemoryResourceAllocationPolicyENS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEvEE");
	set_cmt	(0X71000AEFB8,	"reference to type's name",	0);
	create_qword	(x=0X71000AEFB8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AEFC0,	"reference to parent's type name",	0);
	create_qword	(x=0X71000AEFC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AEFC8,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AEFC8,	E_PREV + 0,	"; public \x01\b\x01(00000071000AEFC8nn::sf::detail::ObjectImplFactoryWithStatefulAllocator<nn::sf::cmif::client::detail::CmifProxy<nn::fatalsrv::IService,nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>,nn::sf::MemoryResourceAllocationPolicy,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>,nn::sf::MemoryResourceAllocationPolicy>::Object\x02\b :");
	update_extra_cmt		(0X71000AEFC8,	E_PREV + 1,	";   protected /* offset 0x18 */ \x01\b\x01(00000071000ABB00nn::sf::impl::detail::ServiceObjectImplBase2\x02\b,");
	update_extra_cmt		(0X71000AEFC8,	E_PREV + 2,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AEFB0nn::sf::cmif::client::detail::CmifProxy<nn::fatalsrv::IService,nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>,nn::sf::MemoryResourceAllocationPolicy,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>\x02\b :");
	update_extra_cmt		(0X71000AEFC8,	E_PREV + 3,	";     public /* offset 0x0 */ \x01\b\x01(00000071000AEF68nn::sf::cmif::client::detail::CmifProxyImpl<nn::fatalsrv::IService,nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>,nn::sf::MemoryResourceAllocationPolicy,nn::fatalsrv::IService,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000AEFC8,	E_PREV + 4,	";       public /* offset 0x0 */ \x01\b\x01(00000071000AEF38nn::fatalsrv::IService\x02\b :");
	update_extra_cmt		(0X71000AEFC8,	E_PREV + 5,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000AEFC8,	E_PREV + 6,	";           public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000AEFC8,	E_PREV + 7,	";       protected /* offset 0x8 */ \x01\b\x01(00000071000AEF50nn::sf::hipc::client::Hipc2ClientProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000AEFC8,	E_PREV + 8,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000AEFC8,	E_PREV + 9,	";       protected /* offset 0x10 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000AEFC8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AEFC8,	"_ZTIN2nn2sf6detail38ObjectImplFactoryWithStatefulAllocatorINS0_4cmif6client6detail9CmifProxyINS_8fatalsrv8IServiceENS0_4hipc6client18Hipc2ProxyKindBaseILNS9_6detail11MessageTypeE6EEENS0_30MemoryResourceAllocationPolicyENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESF_E6ObjectE");
	set_cmt	(0X71000AEFD0,	"reference to type's name",	0);
	create_qword	(x=0X71000AEFD0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AEFD8,	"attribute",	0);
	create_dword	(x=0X71000AEFD8);
	op_hex		(x,	0);
	set_cmt	(0X71000AEFDC,	"count of base classes",	0);
	create_dword	(x=0X71000AEFDC);
	op_dec		(x,	0);
	set_cmt	(0X71000AEFE0,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AEFE0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AEFE8,	"base class' attributes",	0);
	create_qword	(x=0X71000AEFE8);
	op_hex		(x,	0);
	set_cmt	(0X71000AEFF0,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AEFF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AEFF8,	"base class' attributes",	0);
	create_qword	(x=0X71000AEFF8);
	op_hex		(x,	0);
	create_qword	(x=0X71000AF048);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X71000AF070);
	make_array	(0X71000AF074,	0X4);
	create_qword	(0X71000AF078);
	create_qword	(0X71000AF080);
	create_qword	(x=0X71000AF360);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AF368);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AF370);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AF378);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AF380);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AF388);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AF390);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AF398);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AF3A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AF3A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AF3B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AF3B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AF3C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AF3C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AF3E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AF3F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AF400);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AF408);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AF410);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AF418);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AF420);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AF428);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AF440);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AF458);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AF460);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AF468);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AF470);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AF478);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AF480);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AF488);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AF4A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AF4B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AF4C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AF4C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AF4D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AF4D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AF4E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AF4F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(0X71000AF500);
	create_dword	(0X71000AF528);
	make_array	(0X71000AF52C,	0X4);
	create_qword	(0X71000AF530);
	make_array	(0X71000AF538,	0X8);
	set_cmt	(0X71000AF770,	"offset to this",	0);
	create_qword	(x=0X71000AF770);
	op_dec		(x,	0);
	set_name	(0X71000AF770,	"_ZTVN2nn2sf6detail38ObjectImplFactoryWithStatefulAllocatorINS0_13InterfaceInfoINS_12notification6server35INotificationServicesForApplicationEE4_tABINS7_5_tO2NINS5_34NotificationServicesForApplicationEE4typeES6_E4typeENS0_30MemoryResourceAllocationPolicyEE6ObjectE");
	create_qword	(x=0X71000AF778);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AF780);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AF788);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AF790);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AF798);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AF7A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AF7A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AF7B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AF7B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AF7C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AF7C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AF7D0,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AF7D0,	E_PREV + 0,	"; public \x01\b\x01(00000071000AF7D0nn::notification::server::INotificationServicesCommon\x02\b :");
	update_extra_cmt		(0X71000AF7D0,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000AF7D0,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b");
	create_qword	(x=0X71000AF7D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AF7D0,	"_ZTIN2nn12notification6server27INotificationServicesCommonE");
	set_cmt	(0X71000AF7D8,	"reference to type's name",	0);
	create_qword	(x=0X71000AF7D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AF7E0,	"reference to parent's type name",	0);
	create_qword	(x=0X71000AF7E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AF7E8,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AF7E8,	E_PREV + 0,	"; public \x01\b\x01(00000071000AF7E8nn::notification::server::INotificationServicesForApplication\x02\b :");
	update_extra_cmt		(0X71000AF7E8,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AF7D0nn::notification::server::INotificationServicesCommon\x02\b :");
	update_extra_cmt		(0X71000AF7E8,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000AF7E8,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b");
	create_qword	(x=0X71000AF7E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AF7E8,	"_ZTIN2nn12notification6server35INotificationServicesForApplicationE");
	set_cmt	(0X71000AF7F0,	"reference to type's name",	0);
	create_qword	(x=0X71000AF7F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AF7F8,	"reference to parent's type name",	0);
	create_qword	(x=0X71000AF7F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AF800,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AF800,	E_PREV + 0,	"; public \x01\b\x01(00000071000AF800nn::sf::detail::ObjectHolderImpl<nn::sf::InterfaceInfo<nn::notification::server::INotificationServicesForApplication>::_tO2N<nn::notification::server::NotificationServicesForApplication>::type,void>\x02\b");
	create_qword	(x=0X71000AF800);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AF800,	"_ZTIN2nn2sf6detail16ObjectHolderImplINS0_13InterfaceInfoINS_12notification6server35INotificationServicesForApplicationEE5_tO2NINS5_34NotificationServicesForApplicationEE4typeEvEE");
	set_cmt	(0X71000AF808,	"reference to type's name",	0);
	create_qword	(x=0X71000AF808);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AF810,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AF810,	E_PREV + 0,	"; public \x01\b\x01(00000071000AF810nn::sf::detail::InterfaceInfoBottom<nn::sf::IServiceObject>::_tAB<nn::sf::InterfaceInfo<nn::notification::server::INotificationServicesForApplication>::_tO2N<nn::notification::server::NotificationServicesForApplication>::type,nn::notification::server::INotificationServicesForApplication>::type\x02\b :");
	update_extra_cmt		(0X71000AF810,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AF7E8nn::notification::server::INotificationServicesForApplication\x02\b :");
	update_extra_cmt		(0X71000AF810,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000AF7D0nn::notification::server::INotificationServicesCommon\x02\b :");
	update_extra_cmt		(0X71000AF810,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000AF810,	E_PREV + 4,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000AF810,	E_PREV + 5,	";   public /* offset 0x8 */ \x01\b\x01(00000071000AF800nn::sf::detail::ObjectHolderImpl<nn::sf::InterfaceInfo<nn::notification::server::INotificationServicesForApplication>::_tO2N<nn::notification::server::NotificationServicesForApplication>::type,void>\x02\b");
	create_qword	(x=0X71000AF810);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AF810,	"_ZTIN2nn2sf6detail19InterfaceInfoBottomINS0_14IServiceObjectEE4_tABINS0_13InterfaceInfoINS_12notification6server35INotificationServicesForApplicationEE5_tO2NINS8_34NotificationServicesForApplicationEE4typeES9_E4typeE");
	set_cmt	(0X71000AF818,	"reference to type's name",	0);
	create_qword	(x=0X71000AF818);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AF820,	"attribute",	0);
	create_dword	(x=0X71000AF820);
	op_hex		(x,	0);
	set_cmt	(0X71000AF824,	"count of base classes",	0);
	create_dword	(x=0X71000AF824);
	op_dec		(x,	0);
	set_cmt	(0X71000AF828,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AF828);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AF830,	"base class' attributes",	0);
	create_qword	(x=0X71000AF830);
	op_hex		(x,	0);
	set_cmt	(0X71000AF838,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AF838);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AF840,	"base class' attributes",	0);
	create_qword	(x=0X71000AF840);
	op_hex		(x,	0);
	set_cmt	(0X71000AF848,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AF848,	E_PREV + 0,	"; public \x01\b\x01(00000071000AF848nn::sf::InterfaceInfo<nn::notification::server::INotificationServicesCommon>::_tAB<nn::sf::InterfaceInfo<nn::notification::server::INotificationServicesForApplication>::_tO2N<nn::notification::server::NotificationServicesForApplication>::type,nn::notification::server::INotificationServicesForApplication>::type\x02\b :");
	update_extra_cmt		(0X71000AF848,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AF810nn::sf::detail::InterfaceInfoBottom<nn::sf::IServiceObject>::_tAB<nn::sf::InterfaceInfo<nn::notification::server::INotificationServicesForApplication>::_tO2N<nn::notification::server::NotificationServicesForApplication>::type,nn::notification::server::INotificationServicesForApplication>::type\x02\b :");
	update_extra_cmt		(0X71000AF848,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000AF7E8nn::notification::server::INotificationServicesForApplication\x02\b :");
	update_extra_cmt		(0X71000AF848,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000AF7D0nn::notification::server::INotificationServicesCommon\x02\b :");
	update_extra_cmt		(0X71000AF848,	E_PREV + 4,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000AF848,	E_PREV + 5,	";           public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000AF848,	E_PREV + 6,	";     public /* offset 0x8 */ \x01\b\x01(00000071000AF800nn::sf::detail::ObjectHolderImpl<nn::sf::InterfaceInfo<nn::notification::server::INotificationServicesForApplication>::_tO2N<nn::notification::server::NotificationServicesForApplication>::type,void>\x02\b");
	create_qword	(x=0X71000AF848);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AF848,	"_ZTIN2nn2sf13InterfaceInfoINS_12notification6server27INotificationServicesCommonEE4_tABINS1_INS3_35INotificationServicesForApplicationEE5_tO2NINS3_34NotificationServicesForApplicationEE4typeES7_E4typeE");
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_16(void) {
        auto x;
#define id x

	set_cmt	(0X71000AF850,	"reference to type's name",	0);
	create_qword	(x=0X71000AF850);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AF858,	"reference to parent's type name",	0);
	create_qword	(x=0X71000AF858);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AF860,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AF860,	E_PREV + 0,	"; public \x01\b\x01(00000071000AF860nn::sf::InterfaceInfo<nn::notification::server::INotificationServicesForApplication>::_tAB<nn::sf::InterfaceInfo<nn::notification::server::INotificationServicesForApplication>::_tO2N<nn::notification::server::NotificationServicesForApplication>::type,nn::notification::server::INotificationServicesForApplication>::type\x02\b :");
	update_extra_cmt		(0X71000AF860,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AF848nn::sf::InterfaceInfo<nn::notification::server::INotificationServicesCommon>::_tAB<nn::sf::InterfaceInfo<nn::notification::server::INotificationServicesForApplication>::_tO2N<nn::notification::server::NotificationServicesForApplication>::type,nn::notification::server::INotificationServicesForApplication>::type\x02\b :");
	update_extra_cmt		(0X71000AF860,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000AF810nn::sf::detail::InterfaceInfoBottom<nn::sf::IServiceObject>::_tAB<nn::sf::InterfaceInfo<nn::notification::server::INotificationServicesForApplication>::_tO2N<nn::notification::server::NotificationServicesForApplication>::type,nn::notification::server::INotificationServicesForApplication>::type\x02\b :");
	update_extra_cmt		(0X71000AF860,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000AF7E8nn::notification::server::INotificationServicesForApplication\x02\b :");
	update_extra_cmt		(0X71000AF860,	E_PREV + 4,	";         public /* offset 0x0 */ \x01\b\x01(00000071000AF7D0nn::notification::server::INotificationServicesCommon\x02\b :");
	update_extra_cmt		(0X71000AF860,	E_PREV + 5,	";           public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000AF860,	E_PREV + 6,	";             public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000AF860,	E_PREV + 7,	";       public /* offset 0x8 */ \x01\b\x01(00000071000AF800nn::sf::detail::ObjectHolderImpl<nn::sf::InterfaceInfo<nn::notification::server::INotificationServicesForApplication>::_tO2N<nn::notification::server::NotificationServicesForApplication>::type,void>\x02\b");
	create_qword	(x=0X71000AF860);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AF860,	"_ZTIN2nn2sf13InterfaceInfoINS_12notification6server35INotificationServicesForApplicationEE4_tABINS5_5_tO2NINS3_34NotificationServicesForApplicationEE4typeES4_E4typeE");
	set_cmt	(0X71000AF868,	"reference to type's name",	0);
	create_qword	(x=0X71000AF868);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AF870,	"reference to parent's type name",	0);
	create_qword	(x=0X71000AF870);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AF878,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AF878,	E_PREV + 0,	"; public \x01\b\x01(00000071000AF878nn::sf::detail::ObjectImplFactoryWithStatefulAllocator<nn::sf::InterfaceInfo<nn::notification::server::INotificationServicesForApplication>::_tAB<nn::sf::InterfaceInfo<nn::notification::server::INotificationServicesForApplication>::_tO2N<nn::notification::server::NotificationServicesForApplication>::type,nn::notification::server::INotificationServicesForApplication>::type,nn::sf::MemoryResourceAllocationPolicy>::Object\x02\b :");
	update_extra_cmt		(0X71000AF878,	E_PREV + 1,	";   protected /* offset 0x38 */ \x01\b\x01(00000071000ABB00nn::sf::impl::detail::ServiceObjectImplBase2\x02\b,");
	update_extra_cmt		(0X71000AF878,	E_PREV + 2,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AF860nn::sf::InterfaceInfo<nn::notification::server::INotificationServicesForApplication>::_tAB<nn::sf::InterfaceInfo<nn::notification::server::INotificationServicesForApplication>::_tO2N<nn::notification::server::NotificationServicesForApplication>::type,nn::notification::server::INotificationServicesForApplication>::type\x02\b :");
	update_extra_cmt		(0X71000AF878,	E_PREV + 3,	";     public /* offset 0x0 */ \x01\b\x01(00000071000AF848nn::sf::InterfaceInfo<nn::notification::server::INotificationServicesCommon>::_tAB<nn::sf::InterfaceInfo<nn::notification::server::INotificationServicesForApplication>::_tO2N<nn::notification::server::NotificationServicesForApplication>::type,nn::notification::server::INotificationServicesForApplication>::type\x02\b :");
	update_extra_cmt		(0X71000AF878,	E_PREV + 4,	";       public /* offset 0x0 */ \x01\b\x01(00000071000AF810nn::sf::detail::InterfaceInfoBottom<nn::sf::IServiceObject>::_tAB<nn::sf::InterfaceInfo<nn::notification::server::INotificationServicesForApplication>::_tO2N<nn::notification::server::NotificationServicesForApplication>::type,nn::notification::server::INotificationServicesForApplication>::type\x02\b :");
	update_extra_cmt		(0X71000AF878,	E_PREV + 5,	";         public /* offset 0x0 */ \x01\b\x01(00000071000AF7E8nn::notification::server::INotificationServicesForApplication\x02\b :");
	update_extra_cmt		(0X71000AF878,	E_PREV + 6,	";           public /* offset 0x0 */ \x01\b\x01(00000071000AF7D0nn::notification::server::INotificationServicesCommon\x02\b :");
	update_extra_cmt		(0X71000AF878,	E_PREV + 7,	";             public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000AF878,	E_PREV + 8,	";               public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000AF878,	E_PREV + 9,	";         public /* offset 0x8 */ \x01\b\x01(00000071000AF800nn::sf::detail::ObjectHolderImpl<nn::sf::InterfaceInfo<nn::notification::server::INotificationServicesForApplication>::_tO2N<nn::notification::server::NotificationServicesForApplication>::type,void>\x02\b");
	create_qword	(x=0X71000AF878);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AF878,	"_ZTIN2nn2sf6detail38ObjectImplFactoryWithStatefulAllocatorINS0_13InterfaceInfoINS_12notification6server35INotificationServicesForApplicationEE4_tABINS7_5_tO2NINS5_34NotificationServicesForApplicationEE4typeES6_E4typeENS0_30MemoryResourceAllocationPolicyEE6ObjectE");
	set_cmt	(0X71000AF880,	"reference to type's name",	0);
	create_qword	(x=0X71000AF880);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AF888,	"attribute",	0);
	create_dword	(x=0X71000AF888);
	op_hex		(x,	0);
	set_cmt	(0X71000AF88C,	"count of base classes",	0);
	create_dword	(x=0X71000AF88C);
	op_dec		(x,	0);
	set_cmt	(0X71000AF890,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AF890);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AF898,	"base class' attributes",	0);
	create_qword	(x=0X71000AF898);
	op_hex		(x,	0);
	set_cmt	(0X71000AF8A0,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AF8A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AF8A8,	"base class' attributes",	0);
	create_qword	(x=0X71000AF8A8);
	op_hex		(x,	0);
	set_cmt	(0X71000AF8B0,	"offset to this",	0);
	create_qword	(x=0X71000AF8B0);
	op_dec		(x,	0);
	set_name	(0X71000AF8B0,	"_ZTVN2nn12notification6server35INotificationServicesForApplicationE");
	create_qword	(x=0X71000AF8B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AF8C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AF8C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AF8D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AF8D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AF8E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AF8E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AF8F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AF8F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AF900);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AF908);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AF910,	"offset to this",	0);
	create_qword	(x=0X71000AF910);
	op_dec		(x,	0);
	set_name	(0X71000AF910,	"_ZTVN2nn2sf6detail38ObjectImplFactoryWithStatefulAllocatorINS0_13InterfaceInfoINS_12notification6server32INotificationSystemEventAccessorEE4_tABINS7_5_tO2NINS5_31NotificationSystemEventAccessorEE4typeES6_E4typeENS0_30MemoryResourceAllocationPolicyEE6ObjectE");
	create_qword	(x=0X71000AF918);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AF920);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AF928);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AF930);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AF938);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AF940);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AF948,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AF948,	E_PREV + 0,	"; public \x01\b\x01(00000071000AF948nn::notification::server::INotificationSystemEventAccessor\x02\b :");
	update_extra_cmt		(0X71000AF948,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000AF948,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b");
	create_qword	(x=0X71000AF948);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AF948,	"_ZTIN2nn12notification6server32INotificationSystemEventAccessorE");
	set_cmt	(0X71000AF950,	"reference to type's name",	0);
	create_qword	(x=0X71000AF950);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AF958,	"reference to parent's type name",	0);
	create_qword	(x=0X71000AF958);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AF960,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AF960,	E_PREV + 0,	"; public \x01\b\x01(00000071000AF960nn::sf::detail::ObjectHolderImpl<nn::sf::InterfaceInfo<nn::notification::server::INotificationSystemEventAccessor>::_tO2N<nn::notification::server::NotificationSystemEventAccessor>::type,void>\x02\b");
	create_qword	(x=0X71000AF960);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AF960,	"_ZTIN2nn2sf6detail16ObjectHolderImplINS0_13InterfaceInfoINS_12notification6server32INotificationSystemEventAccessorEE5_tO2NINS5_31NotificationSystemEventAccessorEE4typeEvEE");
	set_cmt	(0X71000AF968,	"reference to type's name",	0);
	create_qword	(x=0X71000AF968);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AF970,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AF970,	E_PREV + 0,	"; public \x01\b\x01(00000071000AF970nn::sf::detail::InterfaceInfoBottom<nn::sf::IServiceObject>::_tAB<nn::sf::InterfaceInfo<nn::notification::server::INotificationSystemEventAccessor>::_tO2N<nn::notification::server::NotificationSystemEventAccessor>::type,nn::notification::server::INotificationSystemEventAccessor>::type\x02\b :");
	update_extra_cmt		(0X71000AF970,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AF948nn::notification::server::INotificationSystemEventAccessor\x02\b :");
	update_extra_cmt		(0X71000AF970,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000AF970,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000AF970,	E_PREV + 4,	";   public /* offset 0x8 */ \x01\b\x01(00000071000AF960nn::sf::detail::ObjectHolderImpl<nn::sf::InterfaceInfo<nn::notification::server::INotificationSystemEventAccessor>::_tO2N<nn::notification::server::NotificationSystemEventAccessor>::type,void>\x02\b");
	create_qword	(x=0X71000AF970);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AF970,	"_ZTIN2nn2sf6detail19InterfaceInfoBottomINS0_14IServiceObjectEE4_tABINS0_13InterfaceInfoINS_12notification6server32INotificationSystemEventAccessorEE5_tO2NINS8_31NotificationSystemEventAccessorEE4typeES9_E4typeE");
	set_cmt	(0X71000AF978,	"reference to type's name",	0);
	create_qword	(x=0X71000AF978);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AF980,	"attribute",	0);
	create_dword	(x=0X71000AF980);
	op_hex		(x,	0);
	set_cmt	(0X71000AF984,	"count of base classes",	0);
	create_dword	(x=0X71000AF984);
	op_dec		(x,	0);
	set_cmt	(0X71000AF988,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AF988);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AF990,	"base class' attributes",	0);
	create_qword	(x=0X71000AF990);
	op_hex		(x,	0);
	set_cmt	(0X71000AF998,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AF998);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AF9A0,	"base class' attributes",	0);
	create_qword	(x=0X71000AF9A0);
	op_hex		(x,	0);
	set_cmt	(0X71000AF9A8,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AF9A8,	E_PREV + 0,	"; public \x01\b\x01(00000071000AF9A8nn::sf::InterfaceInfo<nn::notification::server::INotificationSystemEventAccessor>::_tAB<nn::sf::InterfaceInfo<nn::notification::server::INotificationSystemEventAccessor>::_tO2N<nn::notification::server::NotificationSystemEventAccessor>::type,nn::notification::server::INotificationSystemEventAccessor>::type\x02\b :");
	update_extra_cmt		(0X71000AF9A8,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AF970nn::sf::detail::InterfaceInfoBottom<nn::sf::IServiceObject>::_tAB<nn::sf::InterfaceInfo<nn::notification::server::INotificationSystemEventAccessor>::_tO2N<nn::notification::server::NotificationSystemEventAccessor>::type,nn::notification::server::INotificationSystemEventAccessor>::type\x02\b :");
	update_extra_cmt		(0X71000AF9A8,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000AF948nn::notification::server::INotificationSystemEventAccessor\x02\b :");
	update_extra_cmt		(0X71000AF9A8,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000AF9A8,	E_PREV + 4,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000AF9A8,	E_PREV + 5,	";     public /* offset 0x8 */ \x01\b\x01(00000071000AF960nn::sf::detail::ObjectHolderImpl<nn::sf::InterfaceInfo<nn::notification::server::INotificationSystemEventAccessor>::_tO2N<nn::notification::server::NotificationSystemEventAccessor>::type,void>\x02\b");
	create_qword	(x=0X71000AF9A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AF9A8,	"_ZTIN2nn2sf13InterfaceInfoINS_12notification6server32INotificationSystemEventAccessorEE4_tABINS5_5_tO2NINS3_31NotificationSystemEventAccessorEE4typeES4_E4typeE");
	set_cmt	(0X71000AF9B0,	"reference to type's name",	0);
	create_qword	(x=0X71000AF9B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AF9B8,	"reference to parent's type name",	0);
	create_qword	(x=0X71000AF9B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AF9C0,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AF9C0,	E_PREV + 0,	"; public \x01\b\x01(00000071000AF9C0nn::sf::detail::ObjectImplFactoryWithStatefulAllocator<nn::sf::InterfaceInfo<nn::notification::server::INotificationSystemEventAccessor>::_tAB<nn::sf::InterfaceInfo<nn::notification::server::INotificationSystemEventAccessor>::_tO2N<nn::notification::server::NotificationSystemEventAccessor>::type,nn::notification::server::INotificationSystemEventAccessor>::type,nn::sf::MemoryResourceAllocationPolicy>::Object\x02\b :");
	update_extra_cmt		(0X71000AF9C0,	E_PREV + 1,	";   protected /* offset 0x18 */ \x01\b\x01(00000071000ABB00nn::sf::impl::detail::ServiceObjectImplBase2\x02\b,");
	update_extra_cmt		(0X71000AF9C0,	E_PREV + 2,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AF9A8nn::sf::InterfaceInfo<nn::notification::server::INotificationSystemEventAccessor>::_tAB<nn::sf::InterfaceInfo<nn::notification::server::INotificationSystemEventAccessor>::_tO2N<nn::notification::server::NotificationSystemEventAccessor>::type,nn::notification::server::INotificationSystemEventAccessor>::type\x02\b :");
	update_extra_cmt		(0X71000AF9C0,	E_PREV + 3,	";     public /* offset 0x0 */ \x01\b\x01(00000071000AF970nn::sf::detail::InterfaceInfoBottom<nn::sf::IServiceObject>::_tAB<nn::sf::InterfaceInfo<nn::notification::server::INotificationSystemEventAccessor>::_tO2N<nn::notification::server::NotificationSystemEventAccessor>::type,nn::notification::server::INotificationSystemEventAccessor>::type\x02\b :");
	update_extra_cmt		(0X71000AF9C0,	E_PREV + 4,	";       public /* offset 0x0 */ \x01\b\x01(00000071000AF948nn::notification::server::INotificationSystemEventAccessor\x02\b :");
	update_extra_cmt		(0X71000AF9C0,	E_PREV + 5,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000AF9C0,	E_PREV + 6,	";           public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000AF9C0,	E_PREV + 7,	";       public /* offset 0x8 */ \x01\b\x01(00000071000AF960nn::sf::detail::ObjectHolderImpl<nn::sf::InterfaceInfo<nn::notification::server::INotificationSystemEventAccessor>::_tO2N<nn::notification::server::NotificationSystemEventAccessor>::type,void>\x02\b");
	create_qword	(x=0X71000AF9C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AF9C0,	"_ZTIN2nn2sf6detail38ObjectImplFactoryWithStatefulAllocatorINS0_13InterfaceInfoINS_12notification6server32INotificationSystemEventAccessorEE4_tABINS7_5_tO2NINS5_31NotificationSystemEventAccessorEE4typeES6_E4typeENS0_30MemoryResourceAllocationPolicyEE6ObjectE");
	set_cmt	(0X71000AF9C8,	"reference to type's name",	0);
	create_qword	(x=0X71000AF9C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AF9D0,	"attribute",	0);
	create_dword	(x=0X71000AF9D0);
	op_hex		(x,	0);
	set_cmt	(0X71000AF9D4,	"count of base classes",	0);
	create_dword	(x=0X71000AF9D4);
	op_dec		(x,	0);
	set_cmt	(0X71000AF9D8,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AF9D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AF9E0,	"base class' attributes",	0);
	create_qword	(x=0X71000AF9E0);
	op_hex		(x,	0);
	set_cmt	(0X71000AF9E8,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AF9E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AF9F0,	"base class' attributes",	0);
	create_qword	(x=0X71000AF9F0);
	op_hex		(x,	0);
	set_cmt	(0X71000AF9F8,	"offset to this",	0);
	create_qword	(x=0X71000AF9F8);
	op_dec		(x,	0);
	set_name	(0X71000AF9F8,	"_ZTVN2nn12notification6server32INotificationSystemEventAccessorE");
	create_qword	(x=0X71000AFA00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AFA08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AFA10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AFA18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AFA20);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AFA28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AFA30,	"offset to this",	0);
	create_qword	(x=0X71000AFA30);
	op_dec		(x,	0);
	set_name	(0X71000AFA30,	"_ZTVN2nn2sf6detail38ObjectImplFactoryWithStatefulAllocatorINS0_4cmif6client6detail9CmifProxyINS_3arp6detail7IReaderENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSC_18Hipc2ProxyKindBaseILNSB_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESK_E6ObjectE");
	create_qword	(x=0X71000AFA38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AFA40);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AFA48);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AFA50);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AFA58);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AFA60);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AFA68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AFA70);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AFA78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AFA80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AFA88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AFA90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AFA98);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AFAA0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AFAA8,	"offset to this",	0);
	create_qword	(x=0X71000AFAA8);
	toggle_sign		(x,	0);
	op_dec		(x,	0);
	toggle_sign		(x,	1);
	create_qword	(x=0X71000AFAB0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AFAB8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AFAC0,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AFAC0,	E_PREV + 0,	"; public \x01\b\x01(00000071000AFAC0nn::arp::detail::IReader\x02\b :");
	update_extra_cmt		(0X71000AFAC0,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000AFAC0,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b");
	create_qword	(x=0X71000AFAC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AFAC0,	"_ZTIN2nn3arp6detail7IReaderE");
	set_cmt	(0X71000AFAC8,	"reference to type's name",	0);
	create_qword	(x=0X71000AFAC8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AFAD0,	"reference to parent's type name",	0);
	create_qword	(x=0X71000AFAD0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AFAD8,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AFAD8,	E_PREV + 0,	"; public \x01\b\x01(00000071000AFAD8nn::sf::cmif::client::detail::CmifProxyImpl<nn::arp::detail::IReader,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::arp::detail::IReader,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000AFAD8,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AFAC0nn::arp::detail::IReader\x02\b :");
	update_extra_cmt		(0X71000AFAD8,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000AFAD8,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000AFAD8,	E_PREV + 4,	";   protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000AFAD8,	E_PREV + 5,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000AFAD8,	E_PREV + 6,	";   protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000AFAD8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AFAD8,	"_ZTIN2nn2sf4cmif6client6detail13CmifProxyImplINS_3arp6detail7IReaderENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSA_18Hipc2ProxyKindBaseILNS9_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyES7_NS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEEE");
	set_cmt	(0X71000AFAE0,	"reference to type's name",	0);
	create_qword	(x=0X71000AFAE0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AFAE8,	"attribute",	0);
	create_dword	(x=0X71000AFAE8);
	op_hex		(x,	0);
	set_cmt	(0X71000AFAEC,	"count of base classes",	0);
	create_dword	(x=0X71000AFAEC);
	op_dec		(x,	0);
	set_cmt	(0X71000AFAF0,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AFAF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AFAF8,	"base class' attributes",	0);
	create_qword	(x=0X71000AFAF8);
	op_hex		(x,	0);
	set_cmt	(0X71000AFB00,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AFB00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AFB08,	"base class' attributes",	0);
	create_qword	(x=0X71000AFB08);
	op_hex		(x,	0);
	set_cmt	(0X71000AFB10,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AFB10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AFB18,	"base class' attributes",	0);
	create_qword	(x=0X71000AFB18);
	op_hex		(x,	0);
	set_cmt	(0X71000AFB20,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AFB20,	E_PREV + 0,	"; public \x01\b\x01(00000071000AFB20nn::sf::cmif::client::detail::CmifProxy<nn::arp::detail::IReader,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>\x02\b :");
	update_extra_cmt		(0X71000AFB20,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AFAD8nn::sf::cmif::client::detail::CmifProxyImpl<nn::arp::detail::IReader,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::arp::detail::IReader,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000AFB20,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000AFAC0nn::arp::detail::IReader\x02\b :");
	update_extra_cmt		(0X71000AFB20,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000AFB20,	E_PREV + 4,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000AFB20,	E_PREV + 5,	";     protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000AFB20,	E_PREV + 6,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000AFB20,	E_PREV + 7,	";     protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000AFB20);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AFB20,	"_ZTIN2nn2sf4cmif6client6detail9CmifProxyINS_3arp6detail7IReaderENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSA_18Hipc2ProxyKindBaseILNS9_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEvEE");
	set_cmt	(0X71000AFB28,	"reference to type's name",	0);
	create_qword	(x=0X71000AFB28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AFB30,	"reference to parent's type name",	0);
	create_qword	(x=0X71000AFB30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AFB38,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AFB38,	E_PREV + 0,	"; public \x01\b\x01(00000071000AFB38nn::sf::detail::ObjectImplFactoryWithStatefulAllocator<nn::sf::cmif::client::detail::CmifProxy<nn::arp::detail::IReader,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>,nn::sf::MemoryResourceAllocationPolicy>::Object\x02\b :");
	update_extra_cmt		(0X71000AFB38,	E_PREV + 1,	";   protected /* offset 0x28 */ \x01\b\x01(00000071000ABB00nn::sf::impl::detail::ServiceObjectImplBase2\x02\b,");
	update_extra_cmt		(0X71000AFB38,	E_PREV + 2,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AFB20nn::sf::cmif::client::detail::CmifProxy<nn::arp::detail::IReader,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>\x02\b :");
	update_extra_cmt		(0X71000AFB38,	E_PREV + 3,	";     public /* offset 0x0 */ \x01\b\x01(00000071000AFAD8nn::sf::cmif::client::detail::CmifProxyImpl<nn::arp::detail::IReader,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::arp::detail::IReader,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000AFB38,	E_PREV + 4,	";       public /* offset 0x0 */ \x01\b\x01(00000071000AFAC0nn::arp::detail::IReader\x02\b :");
	update_extra_cmt		(0X71000AFB38,	E_PREV + 5,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000AFB38,	E_PREV + 6,	";           public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000AFB38,	E_PREV + 7,	";       protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000AFB38,	E_PREV + 8,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000AFB38,	E_PREV + 9,	";       protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000AFB38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AFB38,	"_ZTIN2nn2sf6detail38ObjectImplFactoryWithStatefulAllocatorINS0_4cmif6client6detail9CmifProxyINS_3arp6detail7IReaderENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSC_18Hipc2ProxyKindBaseILNSB_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESK_E6ObjectE");
	set_cmt	(0X71000AFB40,	"reference to type's name",	0);
	create_qword	(x=0X71000AFB40);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AFB48,	"attribute",	0);
	create_dword	(x=0X71000AFB48);
	op_hex		(x,	0);
	set_cmt	(0X71000AFB4C,	"count of base classes",	0);
	create_dword	(x=0X71000AFB4C);
	op_dec		(x,	0);
	set_cmt	(0X71000AFB50,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AFB50);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AFB58,	"base class' attributes",	0);
	create_qword	(x=0X71000AFB58);
	op_hex		(x,	0);
	set_cmt	(0X71000AFB60,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AFB60);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AFB68,	"base class' attributes",	0);
	create_qword	(x=0X71000AFB68);
	op_hex		(x,	0);
	set_cmt	(0X71000AFB70,	"offset to this",	0);
	create_qword	(x=0X71000AFB70);
	op_dec		(x,	0);
	set_name	(0X71000AFB70,	"_ZTVN2nn2sf6detail38ObjectImplFactoryWithStatefulAllocatorINS0_4cmif6client6detail9CmifProxyINS_3arp6detail23IUnregistrationNotifierENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSC_18Hipc2ProxyKindBaseILNSB_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESK_E6ObjectE");
	create_qword	(x=0X71000AFB78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AFB80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AFB88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AFB90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AFB98);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AFBA0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AFBA8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AFBB0,	"offset to this",	0);
	create_qword	(x=0X71000AFBB0);
	toggle_sign		(x,	0);
	op_dec		(x,	0);
	toggle_sign		(x,	1);
	create_qword	(x=0X71000AFBB8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000AFBC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AFBC8,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AFBC8,	E_PREV + 0,	"; public \x01\b\x01(00000071000AFBC8nn::arp::detail::IUnregistrationNotifier\x02\b :");
	update_extra_cmt		(0X71000AFBC8,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000AFBC8,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b");
	create_qword	(x=0X71000AFBC8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AFBC8,	"_ZTIN2nn3arp6detail23IUnregistrationNotifierE");
	set_cmt	(0X71000AFBD0,	"reference to type's name",	0);
	create_qword	(x=0X71000AFBD0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AFBD8,	"reference to parent's type name",	0);
	create_qword	(x=0X71000AFBD8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AFBE0,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AFBE0,	E_PREV + 0,	"; public \x01\b\x01(00000071000AFBE0nn::sf::cmif::client::detail::CmifProxyImpl<nn::arp::detail::IUnregistrationNotifier,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::arp::detail::IUnregistrationNotifier,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000AFBE0,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AFBC8nn::arp::detail::IUnregistrationNotifier\x02\b :");
	update_extra_cmt		(0X71000AFBE0,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000AFBE0,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000AFBE0,	E_PREV + 4,	";   protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000AFBE0,	E_PREV + 5,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000AFBE0,	E_PREV + 6,	";   protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000AFBE0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AFBE0,	"_ZTIN2nn2sf4cmif6client6detail13CmifProxyImplINS_3arp6detail23IUnregistrationNotifierENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSA_18Hipc2ProxyKindBaseILNS9_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyES7_NS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEEE");
	set_cmt	(0X71000AFBE8,	"reference to type's name",	0);
	create_qword	(x=0X71000AFBE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AFBF0,	"attribute",	0);
	create_dword	(x=0X71000AFBF0);
	op_hex		(x,	0);
	set_cmt	(0X71000AFBF4,	"count of base classes",	0);
	create_dword	(x=0X71000AFBF4);
	op_dec		(x,	0);
	set_cmt	(0X71000AFBF8,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AFBF8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AFC00,	"base class' attributes",	0);
	create_qword	(x=0X71000AFC00);
	op_hex		(x,	0);
	set_cmt	(0X71000AFC08,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AFC08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AFC10,	"base class' attributes",	0);
	create_qword	(x=0X71000AFC10);
	op_hex		(x,	0);
	set_cmt	(0X71000AFC18,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AFC18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AFC20,	"base class' attributes",	0);
	create_qword	(x=0X71000AFC20);
	op_hex		(x,	0);
	set_cmt	(0X71000AFC28,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AFC28,	E_PREV + 0,	"; public \x01\b\x01(00000071000AFC28nn::sf::cmif::client::detail::CmifProxy<nn::arp::detail::IUnregistrationNotifier,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>\x02\b :");
	update_extra_cmt		(0X71000AFC28,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AFBE0nn::sf::cmif::client::detail::CmifProxyImpl<nn::arp::detail::IUnregistrationNotifier,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::arp::detail::IUnregistrationNotifier,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000AFC28,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000AFBC8nn::arp::detail::IUnregistrationNotifier\x02\b :");
	update_extra_cmt		(0X71000AFC28,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000AFC28,	E_PREV + 4,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000AFC28,	E_PREV + 5,	";     protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000AFC28,	E_PREV + 6,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000AFC28,	E_PREV + 7,	";     protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000AFC28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AFC28,	"_ZTIN2nn2sf4cmif6client6detail9CmifProxyINS_3arp6detail23IUnregistrationNotifierENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSA_18Hipc2ProxyKindBaseILNS9_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEvEE");
	set_cmt	(0X71000AFC30,	"reference to type's name",	0);
	create_qword	(x=0X71000AFC30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AFC38,	"reference to parent's type name",	0);
	create_qword	(x=0X71000AFC38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AFC40,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000AFC40,	E_PREV + 0,	"; public \x01\b\x01(00000071000AFC40nn::sf::detail::ObjectImplFactoryWithStatefulAllocator<nn::sf::cmif::client::detail::CmifProxy<nn::arp::detail::IUnregistrationNotifier,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>,nn::sf::MemoryResourceAllocationPolicy>::Object\x02\b :");
	update_extra_cmt		(0X71000AFC40,	E_PREV + 1,	";   protected /* offset 0x28 */ \x01\b\x01(00000071000ABB00nn::sf::impl::detail::ServiceObjectImplBase2\x02\b,");
	update_extra_cmt		(0X71000AFC40,	E_PREV + 2,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AFC28nn::sf::cmif::client::detail::CmifProxy<nn::arp::detail::IUnregistrationNotifier,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>\x02\b :");
	update_extra_cmt		(0X71000AFC40,	E_PREV + 3,	";     public /* offset 0x0 */ \x01\b\x01(00000071000AFBE0nn::sf::cmif::client::detail::CmifProxyImpl<nn::arp::detail::IUnregistrationNotifier,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::arp::detail::IUnregistrationNotifier,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000AFC40,	E_PREV + 4,	";       public /* offset 0x0 */ \x01\b\x01(00000071000AFBC8nn::arp::detail::IUnregistrationNotifier\x02\b :");
	update_extra_cmt		(0X71000AFC40,	E_PREV + 5,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000AFC40,	E_PREV + 6,	";           public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000AFC40,	E_PREV + 7,	";       protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000AFC40,	E_PREV + 8,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000AFC40,	E_PREV + 9,	";       protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000AFC40);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000AFC40,	"_ZTIN2nn2sf6detail38ObjectImplFactoryWithStatefulAllocatorINS0_4cmif6client6detail9CmifProxyINS_3arp6detail23IUnregistrationNotifierENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSC_18Hipc2ProxyKindBaseILNSB_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESK_E6ObjectE");
	set_cmt	(0X71000AFC48,	"reference to type's name",	0);
	create_qword	(x=0X71000AFC48);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AFC50,	"attribute",	0);
	create_dword	(x=0X71000AFC50);
	op_hex		(x,	0);
	set_cmt	(0X71000AFC54,	"count of base classes",	0);
	create_dword	(x=0X71000AFC54);
	op_dec		(x,	0);
	set_cmt	(0X71000AFC58,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AFC58);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AFC60,	"base class' attributes",	0);
	create_qword	(x=0X71000AFC60);
	op_hex		(x,	0);
	set_cmt	(0X71000AFC68,	"base class' type descriptor",	0);
	create_qword	(x=0X71000AFC68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000AFC70,	"base class' attributes",	0);
	create_qword	(x=0X71000AFC70);
	op_hex		(x,	0);
	create_qword	(x=0X71000AFCC8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X71000AFCF0);
	make_array	(0X71000AFCF4,	0X4);
	create_qword	(0X71000AFCF8);
	create_qword	(x=0X71000B04E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B04E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B04F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B04F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0500);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0508);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0510);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0518);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0520);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0528);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0530);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0548);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0550);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0558);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0560);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0568);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0570);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0578);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0580);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0588);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0590);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0598);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B05B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B05B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B05C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B05C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B05D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B05D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B05E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B05E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B05F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B05F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0600);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0608);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0610);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0618);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0620);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0628);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0630);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0638);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0640);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0648);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0650);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0668);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0670);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0688);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B06A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B06A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B06B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B06B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B06C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B06C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B06D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B06D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B06E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B06E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B06F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B06F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0700);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0708);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0710);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0718);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0720);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0738);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0740);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0748);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0760);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0768);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0770);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0778);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0780);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0788);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B07A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B07B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B07C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B07C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B07D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B07D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B07E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B07E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B07F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B07F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0800);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0818);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(0X71000B0820);
	create_dword	(0X71000B0848);
	set_cmt	(0X71000B0930,	"offset to this",	0);
	create_qword	(x=0X71000B0930);
	op_dec		(x,	0);
	set_name	(0X71000B0930,	"_ZTVN2nn2sf6detail38ObjectImplFactoryWithStatefulAllocatorINS0_4cmif6client6detail9CmifProxyINS_8settings21ISystemSettingsServerENS0_4hipc6client18Hipc2ProxyKindBaseILNS9_6detail11MessageTypeE6EEENS0_30MemoryResourceAllocationPolicyENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESF_E6ObjectE");
	create_qword	(x=0X71000B0938);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0940);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B0940,	"_ZTVN2nn2sf6detail38ObjectImplFactoryWithStatefulAllocatorINS0_4cmif6client6detail9CmifProxyINS_8settings21ISystemSettingsServerENS0_4hipc6client18Hipc2ProxyKindBaseILNS9_6detail11MessageTypeE6EEENS0_30MemoryResourceAllocationPolicyENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESF_E6ObjectEP");
	create_qword	(x=0X71000B0948);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0950);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0958);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0960);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0968);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0970);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0978);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0980);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0988);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0990);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0998);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B09A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B09A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B09B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B09B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B09C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B09C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B09D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B09D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B09E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B09E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B09F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B09F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0A00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0A08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0A10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0A18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0A20);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0A28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0A30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0A38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0A40);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0A48);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0A50);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0A58);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0A60);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0A68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0A70);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0A78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0A80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0A88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0A90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0A98);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0AA0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0AA8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0AB0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0AB8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0AC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0AC8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0AD0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0AD8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0AE0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0AE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0AF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0AF8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0B00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0B08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0B10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0B18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0B20);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0B28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0B30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0B38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0B40);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0B48);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0B50);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0B58);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0B60);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0B68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0B70);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0B78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0B80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0B88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0B90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0B98);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0BA0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0BA8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0BB0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0BB8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0BC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0BC8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0BD0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0BD8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0BE0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0BE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0BF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0BF8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0C00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0C08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0C10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0C18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0C20);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0C28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0C30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0C38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0C40);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0C48);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0C50);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0C58);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0C60);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0C68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0C70);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0C78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0C80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0C88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0C90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0C98);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0CA0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0CA8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0CB0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0CB8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0CC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0CC8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0CD0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0CD8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0CE0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0CE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0CF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0CF8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0D00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0D08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0D10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0D18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0D20);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0D28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0D30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0D38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0D40);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0D48);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0D50);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0D58);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0D60);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0D68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0D70);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0D78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0D80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0D88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0D90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0D98);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0DA0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0DA8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0DB0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0DB8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0DC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0DC8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0DD0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0DD8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0DE0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0DE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0DF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0DF8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0E00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0E08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0E10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0E18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0E20);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0E28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0E30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0E38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0E40);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0E48);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0E50);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0E58);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0E60);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0E68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0E70);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0E78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0E80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0E88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0E90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0E98);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0EA0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0EA8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0EB0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0EB8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0EC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0EC8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0ED0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0ED8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0EE0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0EE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0EF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0EF8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0F00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0F08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0F10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0F18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0F20);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0F28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0F30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0F38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0F40);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0F48);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0F50);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0F58);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0F60);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0F68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0F70);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0F78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0F80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0F88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0F90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0F98);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0FA0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0FA8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0FB0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0FB8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0FC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0FC8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0FD0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0FD8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B0FE0,	"offset to this",	0);
	create_qword	(x=0X71000B0FE0);
	toggle_sign		(x,	0);
	op_dec		(x,	0);
	toggle_sign		(x,	1);
	create_qword	(x=0X71000B0FE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B0FF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B0FF8,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B0FF8,	E_PREV + 0,	"; public \x01\b\x01(00000071000B0FF8nn::settings::ISystemSettingsServer\x02\b :");
	update_extra_cmt		(0X71000B0FF8,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000B0FF8,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b");
	create_qword	(x=0X71000B0FF8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B0FF8,	"_ZTIN2nn8settings21ISystemSettingsServerE");
	set_cmt	(0X71000B1000,	"reference to type's name",	0);
	create_qword	(x=0X71000B1000);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1008,	"reference to parent's type name",	0);
	create_qword	(x=0X71000B1008);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1010,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B1010,	E_PREV + 0,	"; public \x01\b\x01(00000071000B1010nn::sf::cmif::client::detail::CmifProxyImpl<nn::settings::ISystemSettingsServer,nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>,nn::sf::MemoryResourceAllocationPolicy,nn::settings::ISystemSettingsServer,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000B1010,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000B0FF8nn::settings::ISystemSettingsServer\x02\b :");
	update_extra_cmt		(0X71000B1010,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000B1010,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000B1010,	E_PREV + 4,	";   protected /* offset 0x8 */ \x01\b\x01(00000071000AEF50nn::sf::hipc::client::Hipc2ClientProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000B1010,	E_PREV + 5,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000B1010,	E_PREV + 6,	";   protected /* offset 0x10 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000B1010);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B1010,	"_ZTIN2nn2sf4cmif6client6detail13CmifProxyImplINS_8settings21ISystemSettingsServerENS0_4hipc6client18Hipc2ProxyKindBaseILNS7_6detail11MessageTypeE6EEENS0_30MemoryResourceAllocationPolicyES6_NS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEEE");
	set_cmt	(0X71000B1018,	"reference to type's name",	0);
	create_qword	(x=0X71000B1018);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1020,	"attribute",	0);
	create_dword	(x=0X71000B1020);
	op_hex		(x,	0);
	set_cmt	(0X71000B1024,	"count of base classes",	0);
	create_dword	(x=0X71000B1024);
	op_dec		(x,	0);
	set_cmt	(0X71000B1028,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B1028);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1030,	"base class' attributes",	0);
	create_qword	(x=0X71000B1030);
	op_hex		(x,	0);
	set_cmt	(0X71000B1038,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B1038);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1040,	"base class' attributes",	0);
	create_qword	(x=0X71000B1040);
	op_hex		(x,	0);
	set_cmt	(0X71000B1048,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B1048);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1050,	"base class' attributes",	0);
	create_qword	(x=0X71000B1050);
	op_hex		(x,	0);
	set_cmt	(0X71000B1058,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B1058,	E_PREV + 0,	"; public \x01\b\x01(00000071000B1058nn::sf::cmif::client::detail::CmifProxy<nn::settings::ISystemSettingsServer,nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>,nn::sf::MemoryResourceAllocationPolicy,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>\x02\b :");
	update_extra_cmt		(0X71000B1058,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000B1010nn::sf::cmif::client::detail::CmifProxyImpl<nn::settings::ISystemSettingsServer,nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>,nn::sf::MemoryResourceAllocationPolicy,nn::settings::ISystemSettingsServer,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000B1058,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000B0FF8nn::settings::ISystemSettingsServer\x02\b :");
	update_extra_cmt		(0X71000B1058,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000B1058,	E_PREV + 4,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000B1058,	E_PREV + 5,	";     protected /* offset 0x8 */ \x01\b\x01(00000071000AEF50nn::sf::hipc::client::Hipc2ClientProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000B1058,	E_PREV + 6,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000B1058,	E_PREV + 7,	";     protected /* offset 0x10 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000B1058);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B1058,	"_ZTIN2nn2sf4cmif6client6detail9CmifProxyINS_8settings21ISystemSettingsServerENS0_4hipc6client18Hipc2ProxyKindBaseILNS7_6detail11MessageTypeE6EEENS0_30MemoryResourceAllocationPolicyENS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEvEE");
	set_cmt	(0X71000B1060,	"reference to type's name",	0);
	create_qword	(x=0X71000B1060);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1068,	"reference to parent's type name",	0);
	create_qword	(x=0X71000B1068);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1070,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B1070,	E_PREV + 0,	"; public \x01\b\x01(00000071000B1070nn::sf::detail::ObjectImplFactoryWithStatefulAllocator<nn::sf::cmif::client::detail::CmifProxy<nn::settings::ISystemSettingsServer,nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>,nn::sf::MemoryResourceAllocationPolicy,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>,nn::sf::MemoryResourceAllocationPolicy>::Object\x02\b :");
	update_extra_cmt		(0X71000B1070,	E_PREV + 1,	";   protected /* offset 0x18 */ \x01\b\x01(00000071000ABB00nn::sf::impl::detail::ServiceObjectImplBase2\x02\b,");
	update_extra_cmt		(0X71000B1070,	E_PREV + 2,	";   public /* offset 0x0 */ \x01\b\x01(00000071000B1058nn::sf::cmif::client::detail::CmifProxy<nn::settings::ISystemSettingsServer,nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>,nn::sf::MemoryResourceAllocationPolicy,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>\x02\b :");
	update_extra_cmt		(0X71000B1070,	E_PREV + 3,	";     public /* offset 0x0 */ \x01\b\x01(00000071000B1010nn::sf::cmif::client::detail::CmifProxyImpl<nn::settings::ISystemSettingsServer,nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>,nn::sf::MemoryResourceAllocationPolicy,nn::settings::ISystemSettingsServer,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000B1070,	E_PREV + 4,	";       public /* offset 0x0 */ \x01\b\x01(00000071000B0FF8nn::settings::ISystemSettingsServer\x02\b :");
	update_extra_cmt		(0X71000B1070,	E_PREV + 5,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000B1070,	E_PREV + 6,	";           public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000B1070,	E_PREV + 7,	";       protected /* offset 0x8 */ \x01\b\x01(00000071000AEF50nn::sf::hipc::client::Hipc2ClientProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000B1070,	E_PREV + 8,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000B1070,	E_PREV + 9,	";       protected /* offset 0x10 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000B1070);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B1070,	"_ZTIN2nn2sf6detail38ObjectImplFactoryWithStatefulAllocatorINS0_4cmif6client6detail9CmifProxyINS_8settings21ISystemSettingsServerENS0_4hipc6client18Hipc2ProxyKindBaseILNS9_6detail11MessageTypeE6EEENS0_30MemoryResourceAllocationPolicyENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESF_E6ObjectE");
	set_cmt	(0X71000B1078,	"reference to type's name",	0);
	create_qword	(x=0X71000B1078);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1080,	"attribute",	0);
	create_dword	(x=0X71000B1080);
	op_hex		(x,	0);
	set_cmt	(0X71000B1084,	"count of base classes",	0);
	create_dword	(x=0X71000B1084);
	op_dec		(x,	0);
	set_cmt	(0X71000B1088,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B1088);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1090,	"base class' attributes",	0);
	create_qword	(x=0X71000B1090);
	op_hex		(x,	0);
	set_cmt	(0X71000B1098,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B1098);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B10A0,	"base class' attributes",	0);
	create_qword	(x=0X71000B10A0);
	op_hex		(x,	0);
	set_cmt	(0X71000B10A8,	"offset to this",	0);
	create_qword	(x=0X71000B10A8);
	op_dec		(x,	0);
	set_name	(0X71000B10A8,	"_ZTVN2nn4util6detail8FunctionIFvvEZNS_5srepo6detail12_GLOBAL__N_110CallerImpl4CallENS_4diag22HashedTraceContextImplEONS0_16VaargTypeErasure7InvokerEEUlvE_vEE");
	create_qword	(x=0X71000B10B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B10B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B10C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B10C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B10D0,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B10D0,	E_PREV + 0,	"; public \x01\b\x01(00000071000B10D0nn::util::IFunction<void ()(void)>\x02\b");
	create_qword	(x=0X71000B10D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B10D0,	"_ZTIN2nn4util9IFunctionIFvvEEE");
	set_cmt	(0X71000B10D8,	"reference to type's name",	0);
	create_qword	(x=0X71000B10D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B10E0,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B10E0,	E_PREV + 0,	"; public \x01\b\x01(00000071000B10E0nn::srepo::detail::`anonymous namespace'::CallerImpl::Call(nn::diag::HashedTraceContextImpl,nn::util::VaargTypeErasure::Invoker &&)::{lambda(void)#1}\x02\b");
	create_qword	(x=0X71000B10E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B10E0,	"_ZTIZN2nn5srepo6detail12_GLOBAL__N_110CallerImpl4CallENS_4diag22HashedTraceContextImplEONS_4util16VaargTypeErasure7InvokerEEUlvE_");
	set_cmt	(0X71000B10E8,	"reference to type's name",	0);
	create_qword	(x=0X71000B10E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B10F0,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B10F0,	E_PREV + 0,	"; public \x01\b\x01(00000071000B10F0nn::util::detail::Function<void ()(void),nn::srepo::detail::`anonymous namespace'::CallerImpl::Call(nn::diag::HashedTraceContextImpl,nn::util::VaargTypeErasure::Invoker &&)::{lambda(void)#1},void>\x02\b :");
	update_extra_cmt		(0X71000B10F0,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000B10D0nn::util::IFunction<void ()(void)>\x02\b,");
	update_extra_cmt		(0X71000B10F0,	E_PREV + 2,	";   protected /* offset 0x8 */ \x01\b\x01(00000071000B10E0nn::srepo::detail::`anonymous namespace'::CallerImpl::Call(nn::diag::HashedTraceContextImpl,nn::util::VaargTypeErasure::Invoker &&)::{lambda(void)#1}\x02\b");
	create_qword	(x=0X71000B10F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B10F0,	"_ZTIN2nn4util6detail8FunctionIFvvEZNS_5srepo6detail12_GLOBAL__N_110CallerImpl4CallENS_4diag22HashedTraceContextImplEONS0_16VaargTypeErasure7InvokerEEUlvE_vEE");
	set_cmt	(0X71000B10F8,	"reference to type's name",	0);
	create_qword	(x=0X71000B10F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1100,	"attribute",	0);
	create_dword	(x=0X71000B1100);
	op_hex		(x,	0);
	set_cmt	(0X71000B1104,	"count of base classes",	0);
	create_dword	(x=0X71000B1104);
	op_dec		(x,	0);
	set_cmt	(0X71000B1108,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B1108);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1110,	"base class' attributes",	0);
	create_qword	(x=0X71000B1110);
	op_hex		(x,	0);
	set_cmt	(0X71000B1118,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B1118);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1120,	"base class' attributes",	0);
	create_qword	(x=0X71000B1120);
	op_hex		(x,	0);
	create_byte	(0X71000B112C);
	create_qword	(0X71000B1188);
	create_qword	(x=0X71000B1190);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(0X71000B11A0);
	set_cmt	(0X71000B11A8,	"offset to this",	0);
	create_qword	(x=0X71000B11A8);
	op_dec		(x,	0);
	set_name	(0X71000B11A8,	"_ZTVN2nn2sf6detail38ObjectImplFactoryWithStatefulAllocatorINS0_4cmif6client6detail9CmifProxyINS_5srepo6detail3ipc13ISrepoServiceENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSD_18Hipc2ProxyKindBaseILNSC_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESL_E6ObjectE");
	create_qword	(x=0X71000B11B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B11B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B11B8,	"nn::srepo::detail::ipc::ISrepoService__vftable");
	create_qword	(x=0X71000B11C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B11C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B11D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B11D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B11E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B11E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B11F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B11F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1200);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1208);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1210);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1218);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1220);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1228);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1230);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1238);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1240);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1248);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1250);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1258);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1260);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1268);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1270);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1278);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1280);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1288);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1290);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1298);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B12A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B12A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B12B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B12B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B12C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B12C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B12D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B12D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B12E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B12E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B12F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B12F8,	"offset to this",	0);
	create_qword	(x=0X71000B12F8);
	toggle_sign		(x,	0);
	op_dec		(x,	0);
	toggle_sign		(x,	1);
	create_qword	(x=0X71000B1300);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1308);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1310,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B1310,	E_PREV + 0,	"; public \x01\b\x01(00000071000B1310nn::srepo::detail::ipc::ISrepoService\x02\b :");
	update_extra_cmt		(0X71000B1310,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000B1310,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b");
	create_qword	(x=0X71000B1310);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B1310,	"_ZTIN2nn5srepo6detail3ipc13ISrepoServiceE");
	set_cmt	(0X71000B1318,	"reference to type's name",	0);
	create_qword	(x=0X71000B1318);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1320,	"reference to parent's type name",	0);
	create_qword	(x=0X71000B1320);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1328,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B1328,	E_PREV + 0,	"; public \x01\b\x01(00000071000B1328nn::sf::cmif::client::detail::CmifProxyImpl<nn::srepo::detail::ipc::ISrepoService,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::srepo::detail::ipc::ISrepoService,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000B1328,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000B1310nn::srepo::detail::ipc::ISrepoService\x02\b :");
	update_extra_cmt		(0X71000B1328,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000B1328,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000B1328,	E_PREV + 4,	";   protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000B1328,	E_PREV + 5,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000B1328,	E_PREV + 6,	";   protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000B1328);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B1328,	"_ZTIN2nn2sf4cmif6client6detail13CmifProxyImplINS_5srepo6detail3ipc13ISrepoServiceENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSB_18Hipc2ProxyKindBaseILNSA_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyES8_NS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEEE");
	set_cmt	(0X71000B1330,	"reference to type's name",	0);
	create_qword	(x=0X71000B1330);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1338,	"attribute",	0);
	create_dword	(x=0X71000B1338);
	op_hex		(x,	0);
	set_cmt	(0X71000B133C,	"count of base classes",	0);
	create_dword	(x=0X71000B133C);
	op_dec		(x,	0);
	set_cmt	(0X71000B1340,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B1340);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1348,	"base class' attributes",	0);
	create_qword	(x=0X71000B1348);
	op_hex		(x,	0);
	set_cmt	(0X71000B1350,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B1350);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1358,	"base class' attributes",	0);
	create_qword	(x=0X71000B1358);
	op_hex		(x,	0);
	set_cmt	(0X71000B1360,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B1360);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1368,	"base class' attributes",	0);
	create_qword	(x=0X71000B1368);
	op_hex		(x,	0);
	set_cmt	(0X71000B1370,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B1370,	E_PREV + 0,	"; public \x01\b\x01(00000071000B1370nn::sf::cmif::client::detail::CmifProxy<nn::srepo::detail::ipc::ISrepoService,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>\x02\b :");
	update_extra_cmt		(0X71000B1370,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000B1328nn::sf::cmif::client::detail::CmifProxyImpl<nn::srepo::detail::ipc::ISrepoService,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::srepo::detail::ipc::ISrepoService,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000B1370,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000B1310nn::srepo::detail::ipc::ISrepoService\x02\b :");
	update_extra_cmt		(0X71000B1370,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000B1370,	E_PREV + 4,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000B1370,	E_PREV + 5,	";     protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000B1370,	E_PREV + 6,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000B1370,	E_PREV + 7,	";     protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000B1370);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B1370,	"_ZTIN2nn2sf4cmif6client6detail9CmifProxyINS_5srepo6detail3ipc13ISrepoServiceENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSB_18Hipc2ProxyKindBaseILNSA_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEvEE");
	set_cmt	(0X71000B1378,	"reference to type's name",	0);
	create_qword	(x=0X71000B1378);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1380,	"reference to parent's type name",	0);
	create_qword	(x=0X71000B1380);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1388,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B1388,	E_PREV + 0,	"; public \x01\b\x01(00000071000B1388nn::sf::detail::ObjectImplFactoryWithStatefulAllocator<nn::sf::cmif::client::detail::CmifProxy<nn::srepo::detail::ipc::ISrepoService,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>,nn::sf::MemoryResourceAllocationPolicy>::Object\x02\b :");
	update_extra_cmt		(0X71000B1388,	E_PREV + 1,	";   protected /* offset 0x28 */ \x01\b\x01(00000071000ABB00nn::sf::impl::detail::ServiceObjectImplBase2\x02\b,");
	update_extra_cmt		(0X71000B1388,	E_PREV + 2,	";   public /* offset 0x0 */ \x01\b\x01(00000071000B1370nn::sf::cmif::client::detail::CmifProxy<nn::srepo::detail::ipc::ISrepoService,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>\x02\b :");
	update_extra_cmt		(0X71000B1388,	E_PREV + 3,	";     public /* offset 0x0 */ \x01\b\x01(00000071000B1328nn::sf::cmif::client::detail::CmifProxyImpl<nn::srepo::detail::ipc::ISrepoService,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::srepo::detail::ipc::ISrepoService,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000B1388,	E_PREV + 4,	";       public /* offset 0x0 */ \x01\b\x01(00000071000B1310nn::srepo::detail::ipc::ISrepoService\x02\b :");
	update_extra_cmt		(0X71000B1388,	E_PREV + 5,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000B1388,	E_PREV + 6,	";           public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000B1388,	E_PREV + 7,	";       protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000B1388,	E_PREV + 8,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000B1388,	E_PREV + 9,	";       protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000B1388);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B1388,	"_ZTIN2nn2sf6detail38ObjectImplFactoryWithStatefulAllocatorINS0_4cmif6client6detail9CmifProxyINS_5srepo6detail3ipc13ISrepoServiceENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSD_18Hipc2ProxyKindBaseILNSC_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESL_E6ObjectE");
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_17(void) {
        auto x;
#define id x

	set_cmt	(0X71000B1390,	"reference to type's name",	0);
	create_qword	(x=0X71000B1390);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1398,	"attribute",	0);
	create_dword	(x=0X71000B1398);
	op_hex		(x,	0);
	set_cmt	(0X71000B139C,	"count of base classes",	0);
	create_dword	(x=0X71000B139C);
	op_dec		(x,	0);
	set_cmt	(0X71000B13A0,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B13A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B13A8,	"base class' attributes",	0);
	create_qword	(x=0X71000B13A8);
	op_hex		(x,	0);
	set_cmt	(0X71000B13B0,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B13B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B13B8,	"base class' attributes",	0);
	create_qword	(x=0X71000B13B8);
	op_hex		(x,	0);
	set_cmt	(0X71000B13C0,	"offset to this",	0);
	create_qword	(x=0X71000B13C0);
	op_dec		(x,	0);
	set_name	(0X71000B13C0,	"_ZTVN2nn2sf6detail38ObjectImplFactoryWithStatefulAllocatorINS0_4cmif6client6detail9CmifProxyINS_5srepo6detail3ipc13IAsyncContextENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSD_18Hipc2ProxyKindBaseILNSC_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESL_E6ObjectE");
	create_qword	(x=0X71000B13C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B13D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B13D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B13E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B13E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B13F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B13F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1400);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1408);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1410,	"offset to this",	0);
	create_qword	(x=0X71000B1410);
	toggle_sign		(x,	0);
	op_dec		(x,	0);
	toggle_sign		(x,	1);
	create_qword	(x=0X71000B1418);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1420);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1428,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B1428,	E_PREV + 0,	"; public \x01\b\x01(00000071000B1428nn::srepo::detail::ipc::IAsyncContext\x02\b :");
	update_extra_cmt		(0X71000B1428,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000B1428,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b");
	create_qword	(x=0X71000B1428);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B1428,	"_ZTIN2nn5srepo6detail3ipc13IAsyncContextE");
	set_cmt	(0X71000B1430,	"reference to type's name",	0);
	create_qword	(x=0X71000B1430);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1438,	"reference to parent's type name",	0);
	create_qword	(x=0X71000B1438);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1440,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B1440,	E_PREV + 0,	"; public \x01\b\x01(00000071000B1440nn::sf::cmif::client::detail::CmifProxyImpl<nn::srepo::detail::ipc::IAsyncContext,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::srepo::detail::ipc::IAsyncContext,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000B1440,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000B1428nn::srepo::detail::ipc::IAsyncContext\x02\b :");
	update_extra_cmt		(0X71000B1440,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000B1440,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000B1440,	E_PREV + 4,	";   protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000B1440,	E_PREV + 5,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000B1440,	E_PREV + 6,	";   protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000B1440);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B1440,	"_ZTIN2nn2sf4cmif6client6detail13CmifProxyImplINS_5srepo6detail3ipc13IAsyncContextENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSB_18Hipc2ProxyKindBaseILNSA_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyES8_NS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEEE");
	set_cmt	(0X71000B1448,	"reference to type's name",	0);
	create_qword	(x=0X71000B1448);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1450,	"attribute",	0);
	create_dword	(x=0X71000B1450);
	op_hex		(x,	0);
	set_cmt	(0X71000B1454,	"count of base classes",	0);
	create_dword	(x=0X71000B1454);
	op_dec		(x,	0);
	set_cmt	(0X71000B1458,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B1458);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1460,	"base class' attributes",	0);
	create_qword	(x=0X71000B1460);
	op_hex		(x,	0);
	set_cmt	(0X71000B1468,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B1468);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1470,	"base class' attributes",	0);
	create_qword	(x=0X71000B1470);
	op_hex		(x,	0);
	set_cmt	(0X71000B1478,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B1478);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1480,	"base class' attributes",	0);
	create_qword	(x=0X71000B1480);
	op_hex		(x,	0);
	set_cmt	(0X71000B1488,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B1488,	E_PREV + 0,	"; public \x01\b\x01(00000071000B1488nn::sf::cmif::client::detail::CmifProxy<nn::srepo::detail::ipc::IAsyncContext,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>\x02\b :");
	update_extra_cmt		(0X71000B1488,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000B1440nn::sf::cmif::client::detail::CmifProxyImpl<nn::srepo::detail::ipc::IAsyncContext,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::srepo::detail::ipc::IAsyncContext,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000B1488,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000B1428nn::srepo::detail::ipc::IAsyncContext\x02\b :");
	update_extra_cmt		(0X71000B1488,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000B1488,	E_PREV + 4,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000B1488,	E_PREV + 5,	";     protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000B1488,	E_PREV + 6,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000B1488,	E_PREV + 7,	";     protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000B1488);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B1488,	"_ZTIN2nn2sf4cmif6client6detail9CmifProxyINS_5srepo6detail3ipc13IAsyncContextENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSB_18Hipc2ProxyKindBaseILNSA_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEvEE");
	set_cmt	(0X71000B1490,	"reference to type's name",	0);
	create_qword	(x=0X71000B1490);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1498,	"reference to parent's type name",	0);
	create_qword	(x=0X71000B1498);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B14A0,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B14A0,	E_PREV + 0,	"; public \x01\b\x01(00000071000B14A0nn::sf::detail::ObjectImplFactoryWithStatefulAllocator<nn::sf::cmif::client::detail::CmifProxy<nn::srepo::detail::ipc::IAsyncContext,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>,nn::sf::MemoryResourceAllocationPolicy>::Object\x02\b :");
	update_extra_cmt		(0X71000B14A0,	E_PREV + 1,	";   protected /* offset 0x28 */ \x01\b\x01(00000071000ABB00nn::sf::impl::detail::ServiceObjectImplBase2\x02\b,");
	update_extra_cmt		(0X71000B14A0,	E_PREV + 2,	";   public /* offset 0x0 */ \x01\b\x01(00000071000B1488nn::sf::cmif::client::detail::CmifProxy<nn::srepo::detail::ipc::IAsyncContext,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>\x02\b :");
	update_extra_cmt		(0X71000B14A0,	E_PREV + 3,	";     public /* offset 0x0 */ \x01\b\x01(00000071000B1440nn::sf::cmif::client::detail::CmifProxyImpl<nn::srepo::detail::ipc::IAsyncContext,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::srepo::detail::ipc::IAsyncContext,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000B14A0,	E_PREV + 4,	";       public /* offset 0x0 */ \x01\b\x01(00000071000B1428nn::srepo::detail::ipc::IAsyncContext\x02\b :");
	update_extra_cmt		(0X71000B14A0,	E_PREV + 5,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000B14A0,	E_PREV + 6,	";           public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000B14A0,	E_PREV + 7,	";       protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000B14A0,	E_PREV + 8,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000B14A0,	E_PREV + 9,	";       protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000B14A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B14A0,	"_ZTIN2nn2sf6detail38ObjectImplFactoryWithStatefulAllocatorINS0_4cmif6client6detail9CmifProxyINS_5srepo6detail3ipc13IAsyncContextENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSD_18Hipc2ProxyKindBaseILNSC_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESL_E6ObjectE");
	set_cmt	(0X71000B14A8,	"reference to type's name",	0);
	create_qword	(x=0X71000B14A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B14B0,	"attribute",	0);
	create_dword	(x=0X71000B14B0);
	op_hex		(x,	0);
	set_cmt	(0X71000B14B4,	"count of base classes",	0);
	create_dword	(x=0X71000B14B4);
	op_dec		(x,	0);
	set_cmt	(0X71000B14B8,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B14B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B14C0,	"base class' attributes",	0);
	create_qword	(x=0X71000B14C0);
	op_hex		(x,	0);
	set_cmt	(0X71000B14C8,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B14C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B14D0,	"base class' attributes",	0);
	create_qword	(x=0X71000B14D0);
	op_hex		(x,	0);
	set_cmt	(0X71000B14D8,	"offset to this",	0);
	create_qword	(x=0X71000B14D8);
	op_dec		(x,	0);
	set_name	(0X71000B14D8,	"_ZTVN2nn2sf6detail38ObjectImplFactoryWithStatefulAllocatorINS0_4cmif6client6detail9CmifProxyINS_5srepo6detail3ipc13ISyslogLoggerENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSD_18Hipc2ProxyKindBaseILNSC_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESL_E6ObjectE");
	create_qword	(x=0X71000B14E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B14E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B14F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B14F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1500);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1508);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1510);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1518,	"offset to this",	0);
	create_qword	(x=0X71000B1518);
	toggle_sign		(x,	0);
	op_dec		(x,	0);
	toggle_sign		(x,	1);
	create_qword	(x=0X71000B1520);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1528);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1530,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B1530,	E_PREV + 0,	"; public \x01\b\x01(00000071000B1530nn::srepo::detail::ipc::ISyslogLogger\x02\b :");
	update_extra_cmt		(0X71000B1530,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000B1530,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b");
	create_qword	(x=0X71000B1530);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B1530,	"_ZTIN2nn5srepo6detail3ipc13ISyslogLoggerE");
	set_cmt	(0X71000B1538,	"reference to type's name",	0);
	create_qword	(x=0X71000B1538);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1540,	"reference to parent's type name",	0);
	create_qword	(x=0X71000B1540);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1548,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B1548,	E_PREV + 0,	"; public \x01\b\x01(00000071000B1548nn::sf::cmif::client::detail::CmifProxyImpl<nn::srepo::detail::ipc::ISyslogLogger,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::srepo::detail::ipc::ISyslogLogger,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000B1548,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000B1530nn::srepo::detail::ipc::ISyslogLogger\x02\b :");
	update_extra_cmt		(0X71000B1548,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000B1548,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000B1548,	E_PREV + 4,	";   protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000B1548,	E_PREV + 5,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000B1548,	E_PREV + 6,	";   protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000B1548);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B1548,	"_ZTIN2nn2sf4cmif6client6detail13CmifProxyImplINS_5srepo6detail3ipc13ISyslogLoggerENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSB_18Hipc2ProxyKindBaseILNSA_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyES8_NS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEEE");
	set_cmt	(0X71000B1550,	"reference to type's name",	0);
	create_qword	(x=0X71000B1550);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1558,	"attribute",	0);
	create_dword	(x=0X71000B1558);
	op_hex		(x,	0);
	set_cmt	(0X71000B155C,	"count of base classes",	0);
	create_dword	(x=0X71000B155C);
	op_dec		(x,	0);
	set_cmt	(0X71000B1560,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B1560);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1568,	"base class' attributes",	0);
	create_qword	(x=0X71000B1568);
	op_hex		(x,	0);
	set_cmt	(0X71000B1570,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B1570);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1578,	"base class' attributes",	0);
	create_qword	(x=0X71000B1578);
	op_hex		(x,	0);
	set_cmt	(0X71000B1580,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B1580);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1588,	"base class' attributes",	0);
	create_qword	(x=0X71000B1588);
	op_hex		(x,	0);
	set_cmt	(0X71000B1590,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B1590,	E_PREV + 0,	"; public \x01\b\x01(00000071000B1590nn::sf::cmif::client::detail::CmifProxy<nn::srepo::detail::ipc::ISyslogLogger,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>\x02\b :");
	update_extra_cmt		(0X71000B1590,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000B1548nn::sf::cmif::client::detail::CmifProxyImpl<nn::srepo::detail::ipc::ISyslogLogger,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::srepo::detail::ipc::ISyslogLogger,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000B1590,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000B1530nn::srepo::detail::ipc::ISyslogLogger\x02\b :");
	update_extra_cmt		(0X71000B1590,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000B1590,	E_PREV + 4,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000B1590,	E_PREV + 5,	";     protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000B1590,	E_PREV + 6,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000B1590,	E_PREV + 7,	";     protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000B1590);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B1590,	"_ZTIN2nn2sf4cmif6client6detail9CmifProxyINS_5srepo6detail3ipc13ISyslogLoggerENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSB_18Hipc2ProxyKindBaseILNSA_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEvEE");
	set_cmt	(0X71000B1598,	"reference to type's name",	0);
	create_qword	(x=0X71000B1598);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B15A0,	"reference to parent's type name",	0);
	create_qword	(x=0X71000B15A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B15A8,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B15A8,	E_PREV + 0,	"; public \x01\b\x01(00000071000B15A8nn::sf::detail::ObjectImplFactoryWithStatefulAllocator<nn::sf::cmif::client::detail::CmifProxy<nn::srepo::detail::ipc::ISyslogLogger,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>,nn::sf::MemoryResourceAllocationPolicy>::Object\x02\b :");
	update_extra_cmt		(0X71000B15A8,	E_PREV + 1,	";   protected /* offset 0x28 */ \x01\b\x01(00000071000ABB00nn::sf::impl::detail::ServiceObjectImplBase2\x02\b,");
	update_extra_cmt		(0X71000B15A8,	E_PREV + 2,	";   public /* offset 0x0 */ \x01\b\x01(00000071000B1590nn::sf::cmif::client::detail::CmifProxy<nn::srepo::detail::ipc::ISyslogLogger,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>\x02\b :");
	update_extra_cmt		(0X71000B15A8,	E_PREV + 3,	";     public /* offset 0x0 */ \x01\b\x01(00000071000B1548nn::sf::cmif::client::detail::CmifProxyImpl<nn::srepo::detail::ipc::ISyslogLogger,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::srepo::detail::ipc::ISyslogLogger,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000B15A8,	E_PREV + 4,	";       public /* offset 0x0 */ \x01\b\x01(00000071000B1530nn::srepo::detail::ipc::ISyslogLogger\x02\b :");
	update_extra_cmt		(0X71000B15A8,	E_PREV + 5,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000B15A8,	E_PREV + 6,	";           public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000B15A8,	E_PREV + 7,	";       protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000B15A8,	E_PREV + 8,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000B15A8,	E_PREV + 9,	";       protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000B15A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B15A8,	"_ZTIN2nn2sf6detail38ObjectImplFactoryWithStatefulAllocatorINS0_4cmif6client6detail9CmifProxyINS_5srepo6detail3ipc13ISyslogLoggerENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSD_18Hipc2ProxyKindBaseILNSC_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESL_E6ObjectE");
	set_cmt	(0X71000B15B0,	"reference to type's name",	0);
	create_qword	(x=0X71000B15B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B15B8,	"attribute",	0);
	create_dword	(x=0X71000B15B8);
	op_hex		(x,	0);
	set_cmt	(0X71000B15BC,	"count of base classes",	0);
	create_dword	(x=0X71000B15BC);
	op_dec		(x,	0);
	set_cmt	(0X71000B15C0,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B15C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B15C8,	"base class' attributes",	0);
	create_qword	(x=0X71000B15C8);
	op_hex		(x,	0);
	set_cmt	(0X71000B15D0,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B15D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B15D8,	"base class' attributes",	0);
	create_qword	(x=0X71000B15D8);
	op_hex		(x,	0);
	create_qword	(x=0X71000B15E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B15E0,	"gSRepo");
	create_dword	(0X71000B1608);
	make_array	(0X71000B160C,	0X4);
	create_qword	(0X71000B1610);
	make_array	(0X71000B1618,	0X8);
	create_dword	(0X71000B18D8);
	make_array	(0X71000B18DC,	0X124);
	set_cmt	(0X71000B1A10,	"offset to this",	0);
	create_qword	(x=0X71000B1A10);
	op_dec		(x,	0);
	set_name	(0X71000B1A10,	"_ZTVN2nn2sf6detail38ObjectImplFactoryWithStatefulAllocatorINS0_4cmif6client6detail9CmifProxyINS_7timesrv6detail7service14IStaticServiceENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSD_18Hipc2ProxyKindBaseILNSC_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESL_E6ObjectE");
	create_qword	(x=0X71000B1A18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1A20);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B1A20,	"IStaticService__vftable");
	create_qword	(x=0X71000B1A28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1A30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1A38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1A40);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1A48);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1A50);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1A58);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1A60);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1A68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1A70);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1A78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1A80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1A88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1A90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1A98);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1AA0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1AA8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1AB0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1AB8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1AC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1AC8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1AD0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1AD8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1AE0,	"offset to this",	0);
	create_qword	(x=0X71000B1AE0);
	toggle_sign		(x,	0);
	op_dec		(x,	0);
	toggle_sign		(x,	1);
	create_qword	(x=0X71000B1AE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1AF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1AF8,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B1AF8,	E_PREV + 0,	"; public \x01\b\x01(00000071000B1AF8nn::timesrv::detail::service::IStaticService\x02\b :");
	update_extra_cmt		(0X71000B1AF8,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000B1AF8,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b");
	create_qword	(x=0X71000B1AF8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B1AF8,	"_ZTIN2nn7timesrv6detail7service14IStaticServiceE");
	set_cmt	(0X71000B1B00,	"reference to type's name",	0);
	create_qword	(x=0X71000B1B00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1B08,	"reference to parent's type name",	0);
	create_qword	(x=0X71000B1B08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1B10,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B1B10,	E_PREV + 0,	"; public \x01\b\x01(00000071000B1B10nn::sf::cmif::client::detail::CmifProxyImpl<nn::timesrv::detail::service::IStaticService,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::timesrv::detail::service::IStaticService,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000B1B10,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000B1AF8nn::timesrv::detail::service::IStaticService\x02\b :");
	update_extra_cmt		(0X71000B1B10,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000B1B10,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000B1B10,	E_PREV + 4,	";   protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000B1B10,	E_PREV + 5,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000B1B10,	E_PREV + 6,	";   protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000B1B10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B1B10,	"_ZTIN2nn2sf4cmif6client6detail13CmifProxyImplINS_7timesrv6detail7service14IStaticServiceENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSB_18Hipc2ProxyKindBaseILNSA_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyES8_NS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEEE");
	set_cmt	(0X71000B1B18,	"reference to type's name",	0);
	create_qword	(x=0X71000B1B18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1B20,	"attribute",	0);
	create_dword	(x=0X71000B1B20);
	op_hex		(x,	0);
	set_cmt	(0X71000B1B24,	"count of base classes",	0);
	create_dword	(x=0X71000B1B24);
	op_dec		(x,	0);
	set_cmt	(0X71000B1B28,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B1B28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1B30,	"base class' attributes",	0);
	create_qword	(x=0X71000B1B30);
	op_hex		(x,	0);
	set_cmt	(0X71000B1B38,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B1B38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1B40,	"base class' attributes",	0);
	create_qword	(x=0X71000B1B40);
	op_hex		(x,	0);
	set_cmt	(0X71000B1B48,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B1B48);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1B50,	"base class' attributes",	0);
	create_qword	(x=0X71000B1B50);
	op_hex		(x,	0);
	set_cmt	(0X71000B1B58,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B1B58,	E_PREV + 0,	"; public \x01\b\x01(00000071000B1B58nn::sf::cmif::client::detail::CmifProxy<nn::timesrv::detail::service::IStaticService,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>\x02\b :");
	update_extra_cmt		(0X71000B1B58,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000B1B10nn::sf::cmif::client::detail::CmifProxyImpl<nn::timesrv::detail::service::IStaticService,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::timesrv::detail::service::IStaticService,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000B1B58,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000B1AF8nn::timesrv::detail::service::IStaticService\x02\b :");
	update_extra_cmt		(0X71000B1B58,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000B1B58,	E_PREV + 4,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000B1B58,	E_PREV + 5,	";     protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000B1B58,	E_PREV + 6,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000B1B58,	E_PREV + 7,	";     protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000B1B58);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B1B58,	"_ZTIN2nn2sf4cmif6client6detail9CmifProxyINS_7timesrv6detail7service14IStaticServiceENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSB_18Hipc2ProxyKindBaseILNSA_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEvEE");
	set_cmt	(0X71000B1B60,	"reference to type's name",	0);
	create_qword	(x=0X71000B1B60);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1B68,	"reference to parent's type name",	0);
	create_qword	(x=0X71000B1B68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1B70,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B1B70,	E_PREV + 0,	"; public \x01\b\x01(00000071000B1B70nn::sf::detail::ObjectImplFactoryWithStatefulAllocator<nn::sf::cmif::client::detail::CmifProxy<nn::timesrv::detail::service::IStaticService,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>,nn::sf::MemoryResourceAllocationPolicy>::Object\x02\b :");
	update_extra_cmt		(0X71000B1B70,	E_PREV + 1,	";   protected /* offset 0x28 */ \x01\b\x01(00000071000ABB00nn::sf::impl::detail::ServiceObjectImplBase2\x02\b,");
	update_extra_cmt		(0X71000B1B70,	E_PREV + 2,	";   public /* offset 0x0 */ \x01\b\x01(00000071000B1B58nn::sf::cmif::client::detail::CmifProxy<nn::timesrv::detail::service::IStaticService,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>\x02\b :");
	update_extra_cmt		(0X71000B1B70,	E_PREV + 3,	";     public /* offset 0x0 */ \x01\b\x01(00000071000B1B10nn::sf::cmif::client::detail::CmifProxyImpl<nn::timesrv::detail::service::IStaticService,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::timesrv::detail::service::IStaticService,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000B1B70,	E_PREV + 4,	";       public /* offset 0x0 */ \x01\b\x01(00000071000B1AF8nn::timesrv::detail::service::IStaticService\x02\b :");
	update_extra_cmt		(0X71000B1B70,	E_PREV + 5,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000B1B70,	E_PREV + 6,	";           public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000B1B70,	E_PREV + 7,	";       protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000B1B70,	E_PREV + 8,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000B1B70,	E_PREV + 9,	";       protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000B1B70);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B1B70,	"_ZTIN2nn2sf6detail38ObjectImplFactoryWithStatefulAllocatorINS0_4cmif6client6detail9CmifProxyINS_7timesrv6detail7service14IStaticServiceENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSD_18Hipc2ProxyKindBaseILNSC_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESL_E6ObjectE");
	set_cmt	(0X71000B1B78,	"reference to type's name",	0);
	create_qword	(x=0X71000B1B78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1B80,	"attribute",	0);
	create_dword	(x=0X71000B1B80);
	op_hex		(x,	0);
	set_cmt	(0X71000B1B84,	"count of base classes",	0);
	create_dword	(x=0X71000B1B84);
	op_dec		(x,	0);
	set_cmt	(0X71000B1B88,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B1B88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1B90,	"base class' attributes",	0);
	create_qword	(x=0X71000B1B90);
	op_hex		(x,	0);
	set_cmt	(0X71000B1B98,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B1B98);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1BA0,	"base class' attributes",	0);
	create_qword	(x=0X71000B1BA0);
	op_hex		(x,	0);
	set_cmt	(0X71000B1BA8,	"offset to this",	0);
	create_qword	(x=0X71000B1BA8);
	op_dec		(x,	0);
	set_name	(0X71000B1BA8,	"_ZTVN2nn2sf6detail38ObjectImplFactoryWithStatefulAllocatorINS0_4cmif6client6detail9CmifProxyINS_7timesrv6detail7service12ISystemClockENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSD_18Hipc2ProxyKindBaseILNSC_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESL_E6ObjectE");
	create_qword	(x=0X71000B1BB0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1BB8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B1BB8,	"nn::timesrv::detail::service::ISystemClock__vftable");
	create_qword	(x=0X71000B1BC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1BC8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1BD0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1BD8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1BE0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1BE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1BF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1BF8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1C00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1C08,	"offset to this",	0);
	create_qword	(x=0X71000B1C08);
	toggle_sign		(x,	0);
	op_dec		(x,	0);
	toggle_sign		(x,	1);
	create_qword	(x=0X71000B1C10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1C18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1C20,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B1C20,	E_PREV + 0,	"; public \x01\b\x01(00000071000B1C20nn::timesrv::detail::service::ISystemClock\x02\b :");
	update_extra_cmt		(0X71000B1C20,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000B1C20,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b");
	create_qword	(x=0X71000B1C20);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B1C20,	"_ZTIN2nn7timesrv6detail7service12ISystemClockE");
	set_cmt	(0X71000B1C28,	"reference to type's name",	0);
	create_qword	(x=0X71000B1C28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1C30,	"reference to parent's type name",	0);
	create_qword	(x=0X71000B1C30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1C38,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B1C38,	E_PREV + 0,	"; public \x01\b\x01(00000071000B1C38nn::sf::cmif::client::detail::CmifProxyImpl<nn::timesrv::detail::service::ISystemClock,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::timesrv::detail::service::ISystemClock,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000B1C38,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000B1C20nn::timesrv::detail::service::ISystemClock\x02\b :");
	update_extra_cmt		(0X71000B1C38,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000B1C38,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000B1C38,	E_PREV + 4,	";   protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000B1C38,	E_PREV + 5,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000B1C38,	E_PREV + 6,	";   protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000B1C38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B1C38,	"_ZTIN2nn2sf4cmif6client6detail13CmifProxyImplINS_7timesrv6detail7service12ISystemClockENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSB_18Hipc2ProxyKindBaseILNSA_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyES8_NS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEEE");
	set_cmt	(0X71000B1C40,	"reference to type's name",	0);
	create_qword	(x=0X71000B1C40);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1C48,	"attribute",	0);
	create_dword	(x=0X71000B1C48);
	op_hex		(x,	0);
	set_cmt	(0X71000B1C4C,	"count of base classes",	0);
	create_dword	(x=0X71000B1C4C);
	op_dec		(x,	0);
	set_cmt	(0X71000B1C50,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B1C50);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1C58,	"base class' attributes",	0);
	create_qword	(x=0X71000B1C58);
	op_hex		(x,	0);
	set_cmt	(0X71000B1C60,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B1C60);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1C68,	"base class' attributes",	0);
	create_qword	(x=0X71000B1C68);
	op_hex		(x,	0);
	set_cmt	(0X71000B1C70,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B1C70);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1C78,	"base class' attributes",	0);
	create_qword	(x=0X71000B1C78);
	op_hex		(x,	0);
	set_cmt	(0X71000B1C80,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B1C80,	E_PREV + 0,	"; public \x01\b\x01(00000071000B1C80nn::sf::cmif::client::detail::CmifProxy<nn::timesrv::detail::service::ISystemClock,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>\x02\b :");
	update_extra_cmt		(0X71000B1C80,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000B1C38nn::sf::cmif::client::detail::CmifProxyImpl<nn::timesrv::detail::service::ISystemClock,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::timesrv::detail::service::ISystemClock,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000B1C80,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000B1C20nn::timesrv::detail::service::ISystemClock\x02\b :");
	update_extra_cmt		(0X71000B1C80,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000B1C80,	E_PREV + 4,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000B1C80,	E_PREV + 5,	";     protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000B1C80,	E_PREV + 6,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000B1C80,	E_PREV + 7,	";     protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000B1C80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B1C80,	"_ZTIN2nn2sf4cmif6client6detail9CmifProxyINS_7timesrv6detail7service12ISystemClockENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSB_18Hipc2ProxyKindBaseILNSA_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEvEE");
	set_cmt	(0X71000B1C88,	"reference to type's name",	0);
	create_qword	(x=0X71000B1C88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1C90,	"reference to parent's type name",	0);
	create_qword	(x=0X71000B1C90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1C98,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B1C98,	E_PREV + 0,	"; public \x01\b\x01(00000071000B1C98nn::sf::detail::ObjectImplFactoryWithStatefulAllocator<nn::sf::cmif::client::detail::CmifProxy<nn::timesrv::detail::service::ISystemClock,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>,nn::sf::MemoryResourceAllocationPolicy>::Object\x02\b :");
	update_extra_cmt		(0X71000B1C98,	E_PREV + 1,	";   protected /* offset 0x28 */ \x01\b\x01(00000071000ABB00nn::sf::impl::detail::ServiceObjectImplBase2\x02\b,");
	update_extra_cmt		(0X71000B1C98,	E_PREV + 2,	";   public /* offset 0x0 */ \x01\b\x01(00000071000B1C80nn::sf::cmif::client::detail::CmifProxy<nn::timesrv::detail::service::ISystemClock,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>\x02\b :");
	update_extra_cmt		(0X71000B1C98,	E_PREV + 3,	";     public /* offset 0x0 */ \x01\b\x01(00000071000B1C38nn::sf::cmif::client::detail::CmifProxyImpl<nn::timesrv::detail::service::ISystemClock,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::timesrv::detail::service::ISystemClock,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000B1C98,	E_PREV + 4,	";       public /* offset 0x0 */ \x01\b\x01(00000071000B1C20nn::timesrv::detail::service::ISystemClock\x02\b :");
	update_extra_cmt		(0X71000B1C98,	E_PREV + 5,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000B1C98,	E_PREV + 6,	";           public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000B1C98,	E_PREV + 7,	";       protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000B1C98,	E_PREV + 8,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000B1C98,	E_PREV + 9,	";       protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000B1C98);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B1C98,	"_ZTIN2nn2sf6detail38ObjectImplFactoryWithStatefulAllocatorINS0_4cmif6client6detail9CmifProxyINS_7timesrv6detail7service12ISystemClockENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSD_18Hipc2ProxyKindBaseILNSC_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESL_E6ObjectE");
	set_cmt	(0X71000B1CA0,	"reference to type's name",	0);
	create_qword	(x=0X71000B1CA0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1CA8,	"attribute",	0);
	create_dword	(x=0X71000B1CA8);
	op_hex		(x,	0);
	set_cmt	(0X71000B1CAC,	"count of base classes",	0);
	create_dword	(x=0X71000B1CAC);
	op_dec		(x,	0);
	set_cmt	(0X71000B1CB0,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B1CB0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1CB8,	"base class' attributes",	0);
	create_qword	(x=0X71000B1CB8);
	op_hex		(x,	0);
	set_cmt	(0X71000B1CC0,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B1CC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1CC8,	"base class' attributes",	0);
	create_qword	(x=0X71000B1CC8);
	op_hex		(x,	0);
	set_cmt	(0X71000B1CD0,	"offset to this",	0);
	create_qword	(x=0X71000B1CD0);
	op_dec		(x,	0);
	set_name	(0X71000B1CD0,	"_ZTVN2nn2sf6detail38ObjectImplFactoryWithStatefulAllocatorINS0_4cmif6client6detail9CmifProxyINS_7timesrv6detail7service12ISteadyClockENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSD_18Hipc2ProxyKindBaseILNSC_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESL_E6ObjectE");
	create_qword	(x=0X71000B1CD8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1CE0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1CE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1CF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1CF8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1D00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1D08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1D10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1D18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1D20);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1D28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1D30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1D38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1D40,	"offset to this",	0);
	create_qword	(x=0X71000B1D40);
	toggle_sign		(x,	0);
	op_dec		(x,	0);
	toggle_sign		(x,	1);
	create_qword	(x=0X71000B1D48);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1D50);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1D58,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B1D58,	E_PREV + 0,	"; public \x01\b\x01(00000071000B1D58nn::timesrv::detail::service::ISteadyClock\x02\b :");
	update_extra_cmt		(0X71000B1D58,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000B1D58,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b");
	create_qword	(x=0X71000B1D58);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B1D58,	"_ZTIN2nn7timesrv6detail7service12ISteadyClockE");
	set_cmt	(0X71000B1D60,	"reference to type's name",	0);
	create_qword	(x=0X71000B1D60);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1D68,	"reference to parent's type name",	0);
	create_qword	(x=0X71000B1D68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1D70,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B1D70,	E_PREV + 0,	"; public \x01\b\x01(00000071000B1D70nn::sf::cmif::client::detail::CmifProxyImpl<nn::timesrv::detail::service::ISteadyClock,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::timesrv::detail::service::ISteadyClock,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000B1D70,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000B1D58nn::timesrv::detail::service::ISteadyClock\x02\b :");
	update_extra_cmt		(0X71000B1D70,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000B1D70,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000B1D70,	E_PREV + 4,	";   protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000B1D70,	E_PREV + 5,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000B1D70,	E_PREV + 6,	";   protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000B1D70);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B1D70,	"_ZTIN2nn2sf4cmif6client6detail13CmifProxyImplINS_7timesrv6detail7service12ISteadyClockENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSB_18Hipc2ProxyKindBaseILNSA_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyES8_NS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEEE");
	set_cmt	(0X71000B1D78,	"reference to type's name",	0);
	create_qword	(x=0X71000B1D78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1D80,	"attribute",	0);
	create_dword	(x=0X71000B1D80);
	op_hex		(x,	0);
	set_cmt	(0X71000B1D84,	"count of base classes",	0);
	create_dword	(x=0X71000B1D84);
	op_dec		(x,	0);
	set_cmt	(0X71000B1D88,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B1D88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1D90,	"base class' attributes",	0);
	create_qword	(x=0X71000B1D90);
	op_hex		(x,	0);
	set_cmt	(0X71000B1D98,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B1D98);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1DA0,	"base class' attributes",	0);
	create_qword	(x=0X71000B1DA0);
	op_hex		(x,	0);
	set_cmt	(0X71000B1DA8,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B1DA8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1DB0,	"base class' attributes",	0);
	create_qword	(x=0X71000B1DB0);
	op_hex		(x,	0);
	set_cmt	(0X71000B1DB8,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B1DB8,	E_PREV + 0,	"; public \x01\b\x01(00000071000B1DB8nn::sf::cmif::client::detail::CmifProxy<nn::timesrv::detail::service::ISteadyClock,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>\x02\b :");
	update_extra_cmt		(0X71000B1DB8,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000B1D70nn::sf::cmif::client::detail::CmifProxyImpl<nn::timesrv::detail::service::ISteadyClock,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::timesrv::detail::service::ISteadyClock,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000B1DB8,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000B1D58nn::timesrv::detail::service::ISteadyClock\x02\b :");
	update_extra_cmt		(0X71000B1DB8,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000B1DB8,	E_PREV + 4,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000B1DB8,	E_PREV + 5,	";     protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000B1DB8,	E_PREV + 6,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000B1DB8,	E_PREV + 7,	";     protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000B1DB8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B1DB8,	"_ZTIN2nn2sf4cmif6client6detail9CmifProxyINS_7timesrv6detail7service12ISteadyClockENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSB_18Hipc2ProxyKindBaseILNSA_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEvEE");
	set_cmt	(0X71000B1DC0,	"reference to type's name",	0);
	create_qword	(x=0X71000B1DC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1DC8,	"reference to parent's type name",	0);
	create_qword	(x=0X71000B1DC8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1DD0,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B1DD0,	E_PREV + 0,	"; public \x01\b\x01(00000071000B1DD0nn::sf::detail::ObjectImplFactoryWithStatefulAllocator<nn::sf::cmif::client::detail::CmifProxy<nn::timesrv::detail::service::ISteadyClock,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>,nn::sf::MemoryResourceAllocationPolicy>::Object\x02\b :");
	update_extra_cmt		(0X71000B1DD0,	E_PREV + 1,	";   protected /* offset 0x28 */ \x01\b\x01(00000071000ABB00nn::sf::impl::detail::ServiceObjectImplBase2\x02\b,");
	update_extra_cmt		(0X71000B1DD0,	E_PREV + 2,	";   public /* offset 0x0 */ \x01\b\x01(00000071000B1DB8nn::sf::cmif::client::detail::CmifProxy<nn::timesrv::detail::service::ISteadyClock,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>\x02\b :");
	update_extra_cmt		(0X71000B1DD0,	E_PREV + 3,	";     public /* offset 0x0 */ \x01\b\x01(00000071000B1D70nn::sf::cmif::client::detail::CmifProxyImpl<nn::timesrv::detail::service::ISteadyClock,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::timesrv::detail::service::ISteadyClock,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000B1DD0,	E_PREV + 4,	";       public /* offset 0x0 */ \x01\b\x01(00000071000B1D58nn::timesrv::detail::service::ISteadyClock\x02\b :");
	update_extra_cmt		(0X71000B1DD0,	E_PREV + 5,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000B1DD0,	E_PREV + 6,	";           public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000B1DD0,	E_PREV + 7,	";       protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000B1DD0,	E_PREV + 8,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000B1DD0,	E_PREV + 9,	";       protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000B1DD0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B1DD0,	"_ZTIN2nn2sf6detail38ObjectImplFactoryWithStatefulAllocatorINS0_4cmif6client6detail9CmifProxyINS_7timesrv6detail7service12ISteadyClockENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSD_18Hipc2ProxyKindBaseILNSC_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESL_E6ObjectE");
	set_cmt	(0X71000B1DD8,	"reference to type's name",	0);
	create_qword	(x=0X71000B1DD8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1DE0,	"attribute",	0);
	create_dword	(x=0X71000B1DE0);
	op_hex		(x,	0);
	set_cmt	(0X71000B1DE4,	"count of base classes",	0);
	create_dword	(x=0X71000B1DE4);
	op_dec		(x,	0);
	set_cmt	(0X71000B1DE8,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B1DE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1DF0,	"base class' attributes",	0);
	create_qword	(x=0X71000B1DF0);
	op_hex		(x,	0);
	set_cmt	(0X71000B1DF8,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B1DF8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1E00,	"base class' attributes",	0);
	create_qword	(x=0X71000B1E00);
	op_hex		(x,	0);
	set_cmt	(0X71000B1E08,	"offset to this",	0);
	create_qword	(x=0X71000B1E08);
	op_dec		(x,	0);
	set_name	(0X71000B1E08,	"_ZTVN2nn2sf6detail38ObjectImplFactoryWithStatefulAllocatorINS0_4cmif6client6detail9CmifProxyINS_7timesrv6detail7service16ITimeZoneServiceENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSD_18Hipc2ProxyKindBaseILNSC_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESL_E6ObjectE");
	create_qword	(x=0X71000B1E10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1E18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1E20);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1E28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1E30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1E38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1E40);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1E48);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1E50);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1E58);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1E60);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1E68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1E70);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1E78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1E80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1E88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1E90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1E98);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1EA0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1EA8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1EB0,	"offset to this",	0);
	create_qword	(x=0X71000B1EB0);
	toggle_sign		(x,	0);
	op_dec		(x,	0);
	toggle_sign		(x,	1);
	create_qword	(x=0X71000B1EB8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B1EC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1EC8,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B1EC8,	E_PREV + 0,	"; public \x01\b\x01(00000071000B1EC8nn::timesrv::detail::service::ITimeZoneService\x02\b :");
	update_extra_cmt		(0X71000B1EC8,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000B1EC8,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b");
	create_qword	(x=0X71000B1EC8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B1EC8,	"_ZTIN2nn7timesrv6detail7service16ITimeZoneServiceE");
	set_cmt	(0X71000B1ED0,	"reference to type's name",	0);
	create_qword	(x=0X71000B1ED0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1ED8,	"reference to parent's type name",	0);
	create_qword	(x=0X71000B1ED8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1EE0,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B1EE0,	E_PREV + 0,	"; public \x01\b\x01(00000071000B1EE0nn::sf::cmif::client::detail::CmifProxyImpl<nn::timesrv::detail::service::ITimeZoneService,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::timesrv::detail::service::ITimeZoneService,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000B1EE0,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000B1EC8nn::timesrv::detail::service::ITimeZoneService\x02\b :");
	update_extra_cmt		(0X71000B1EE0,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000B1EE0,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000B1EE0,	E_PREV + 4,	";   protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000B1EE0,	E_PREV + 5,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000B1EE0,	E_PREV + 6,	";   protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000B1EE0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B1EE0,	"_ZTIN2nn2sf4cmif6client6detail13CmifProxyImplINS_7timesrv6detail7service16ITimeZoneServiceENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSB_18Hipc2ProxyKindBaseILNSA_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyES8_NS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEEE");
	set_cmt	(0X71000B1EE8,	"reference to type's name",	0);
	create_qword	(x=0X71000B1EE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1EF0,	"attribute",	0);
	create_dword	(x=0X71000B1EF0);
	op_hex		(x,	0);
	set_cmt	(0X71000B1EF4,	"count of base classes",	0);
	create_dword	(x=0X71000B1EF4);
	op_dec		(x,	0);
	set_cmt	(0X71000B1EF8,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B1EF8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1F00,	"base class' attributes",	0);
	create_qword	(x=0X71000B1F00);
	op_hex		(x,	0);
	set_cmt	(0X71000B1F08,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B1F08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1F10,	"base class' attributes",	0);
	create_qword	(x=0X71000B1F10);
	op_hex		(x,	0);
	set_cmt	(0X71000B1F18,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B1F18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1F20,	"base class' attributes",	0);
	create_qword	(x=0X71000B1F20);
	op_hex		(x,	0);
	set_cmt	(0X71000B1F28,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B1F28,	E_PREV + 0,	"; public \x01\b\x01(00000071000B1F28nn::sf::cmif::client::detail::CmifProxy<nn::timesrv::detail::service::ITimeZoneService,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>\x02\b :");
	update_extra_cmt		(0X71000B1F28,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000B1EE0nn::sf::cmif::client::detail::CmifProxyImpl<nn::timesrv::detail::service::ITimeZoneService,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::timesrv::detail::service::ITimeZoneService,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000B1F28,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000B1EC8nn::timesrv::detail::service::ITimeZoneService\x02\b :");
	update_extra_cmt		(0X71000B1F28,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000B1F28,	E_PREV + 4,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000B1F28,	E_PREV + 5,	";     protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000B1F28,	E_PREV + 6,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000B1F28,	E_PREV + 7,	";     protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000B1F28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B1F28,	"_ZTIN2nn2sf4cmif6client6detail9CmifProxyINS_7timesrv6detail7service16ITimeZoneServiceENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSB_18Hipc2ProxyKindBaseILNSA_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEvEE");
	set_cmt	(0X71000B1F30,	"reference to type's name",	0);
	create_qword	(x=0X71000B1F30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1F38,	"reference to parent's type name",	0);
	create_qword	(x=0X71000B1F38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1F40,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B1F40,	E_PREV + 0,	"; public \x01\b\x01(00000071000B1F40nn::sf::detail::ObjectImplFactoryWithStatefulAllocator<nn::sf::cmif::client::detail::CmifProxy<nn::timesrv::detail::service::ITimeZoneService,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>,nn::sf::MemoryResourceAllocationPolicy>::Object\x02\b :");
	update_extra_cmt		(0X71000B1F40,	E_PREV + 1,	";   protected /* offset 0x28 */ \x01\b\x01(00000071000ABB00nn::sf::impl::detail::ServiceObjectImplBase2\x02\b,");
	update_extra_cmt		(0X71000B1F40,	E_PREV + 2,	";   public /* offset 0x0 */ \x01\b\x01(00000071000B1F28nn::sf::cmif::client::detail::CmifProxy<nn::timesrv::detail::service::ITimeZoneService,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>\x02\b :");
	update_extra_cmt		(0X71000B1F40,	E_PREV + 3,	";     public /* offset 0x0 */ \x01\b\x01(00000071000B1EE0nn::sf::cmif::client::detail::CmifProxyImpl<nn::timesrv::detail::service::ITimeZoneService,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::timesrv::detail::service::ITimeZoneService,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000B1F40,	E_PREV + 4,	";       public /* offset 0x0 */ \x01\b\x01(00000071000B1EC8nn::timesrv::detail::service::ITimeZoneService\x02\b :");
	update_extra_cmt		(0X71000B1F40,	E_PREV + 5,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000B1F40,	E_PREV + 6,	";           public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000B1F40,	E_PREV + 7,	";       protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000B1F40,	E_PREV + 8,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000B1F40,	E_PREV + 9,	";       protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000B1F40);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B1F40,	"_ZTIN2nn2sf6detail38ObjectImplFactoryWithStatefulAllocatorINS0_4cmif6client6detail9CmifProxyINS_7timesrv6detail7service16ITimeZoneServiceENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSD_18Hipc2ProxyKindBaseILNSC_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESL_E6ObjectE");
	set_cmt	(0X71000B1F48,	"reference to type's name",	0);
	create_qword	(x=0X71000B1F48);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1F50,	"attribute",	0);
	create_dword	(x=0X71000B1F50);
	op_hex		(x,	0);
	set_cmt	(0X71000B1F54,	"count of base classes",	0);
	create_dword	(x=0X71000B1F54);
	op_dec		(x,	0);
	set_cmt	(0X71000B1F58,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B1F58);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1F60,	"base class' attributes",	0);
	create_qword	(x=0X71000B1F60);
	op_hex		(x,	0);
	set_cmt	(0X71000B1F68,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B1F68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B1F70,	"base class' attributes",	0);
	create_qword	(x=0X71000B1F70);
	op_hex		(x,	0);
	make_array	(0X71000B1F78,	0X8);
	create_qword	(x=0X71000B1F80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X71000B1FA8);
	make_array	(0X71000B1FAC,	0X4);
	create_qword	(0X71000B1FB0);
	create_qword	(0X71000B1FB8);
	create_dword	(0X71000B2370);
	set_name	(0X71000B2370,	"gTimeZoneMountResult");
	make_array	(0X71000B2374,	0X4);
	set_cmt	(0X71000B2378,	"offset to this",	0);
	create_qword	(x=0X71000B2378);
	op_dec		(x,	0);
	set_name	(0X71000B2378,	"_ZTVN2nn7timemgr6detail4core27StandardSteadyClockResourceE");
	create_qword	(x=0X71000B2380);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2388);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B2388,	"nn::timemgr::detail::core::StandardSteadyClockResource__vftable");
	create_qword	(x=0X71000B2390);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2398,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B2398,	E_PREV + 0,	"; public \x01\b\x01(00000071000B2398nn::timemgr::detail::core::StandardSteadyClockResource\x02\b");
	create_qword	(x=0X71000B2398);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B2398,	"_ZTIN2nn7timemgr6detail4core27StandardSteadyClockResourceE");
	set_cmt	(0X71000B23A0,	"reference to type's name",	0);
	create_qword	(x=0X71000B23A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B23A8,	"offset to this",	0);
	create_qword	(x=0X71000B23A8);
	op_dec		(x,	0);
	set_name	(0X71000B23A8,	"_ZTVN2nn7timemgr6detail4core20PmStateChangeHandlerE");
	create_qword	(x=0X71000B23B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B23B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B23B8,	"_ZTVN2nn7timemgr6detail4core20PmStateChangeHandlerEP");
	create_qword	(x=0X71000B23C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B23C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B23D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B23D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B23E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B23E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B23F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B23F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2400);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2408);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2410);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2418,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B2418,	E_PREV + 0,	"; public \x01\b\x01(00000071000B2418nn::timemgr::detail::core::PmStateChangeCallback\x02\b");
	create_qword	(x=0X71000B2418);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B2418,	"_ZTIN2nn7timemgr6detail4core21PmStateChangeCallbackE");
	set_cmt	(0X71000B2420,	"reference to type's name",	0);
	create_qword	(x=0X71000B2420);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2428,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B2428,	E_PREV + 0,	"; public \x01\b\x01(00000071000B2428nn::timemgr::detail::core::PmStateChangeHandler\x02\b :");
	update_extra_cmt		(0X71000B2428,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000B2418nn::timemgr::detail::core::PmStateChangeCallback\x02\b");
	create_qword	(x=0X71000B2428);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B2428,	"_ZTIN2nn7timemgr6detail4core20PmStateChangeHandlerE");
	set_cmt	(0X71000B2430,	"reference to type's name",	0);
	create_qword	(x=0X71000B2430);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2438,	"reference to parent's type name",	0);
	create_qword	(x=0X71000B2438);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2440,	"offset to this",	0);
	create_qword	(x=0X71000B2440);
	op_dec		(x,	0);
	set_name	(0X71000B2440,	"_ZTVN2nn7timemgr6detail7service17HipcServerManagerE");
	create_qword	(x=0X71000B2448);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2450);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B2450,	"_ZTVN2nn7timemgr6detail7service17HipcServerManagerEP");
	create_qword	(x=0X71000B2458);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2460);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2468);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2470);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2478);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2480);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2488);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2490);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2498);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B24A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B24A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B24B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B24B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B24C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B24C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B24D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B24D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B24E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B24E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B24F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B24F8,	"offset to this",	0);
	create_qword	(x=0X71000B24F8);
	toggle_sign		(x,	0);
	op_dec		(x,	0);
	toggle_sign		(x,	1);
	create_qword	(x=0X71000B2500);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2508);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2510);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2518,	"offset to this",	0);
	create_qword	(x=0X71000B2518);
	toggle_sign		(x,	0);
	op_dec		(x,	0);
	toggle_sign		(x,	1);
	create_qword	(x=0X71000B2520);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2528);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B2528,	"nn::timesrv::detail::service::HipcServerManager_vftablePtr");
	set_cmt	(0X71000B2530,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B2530,	E_PREV + 0,	"; public \x01\b\x01(00000071000B2530nn::sf::hipc::server::v1::HipcSimpleAllInOneServerManager<52ul,3ul,nn::sf::detail::HipcSimpleAllInOneServerManagerOptionsGetter<nn::timemgr::detail::service::HipcSimpleAllInOneServerManagerOptions>>\x02\b :");
	update_extra_cmt		(0X71000B2530,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000AD2F8nn::sf::hipc::server::v1::detail::HipcAllInOneServerManagerBase\x02\b :");
	update_extra_cmt		(0X71000B2530,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000AD640nn::sf::hipc::server::v1::HipcServerSessionManagerWithDomain\x02\b :");
	update_extra_cmt		(0X71000B2530,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000AD518nn::sf::hipc::server::v1::HipcServerSessionManager\x02\b :");
	update_extra_cmt		(0X71000B2530,	E_PREV + 4,	";         protected /* offset 0x0 */ \x01\b\x01(00000071000AD4F0nn::sf::hipc::server::v1::HipcServerSessionManagerT<nn::sf::cmif::server::CmifServerObjectInfo>\x02\b :");
	update_extra_cmt		(0X71000B2530,	E_PREV + 5,	";           public /* offset 0x0 */ \x01\b\x01(00000071000AD4E0nn::sf::hipc::server::v1::HipcServerSessionManagerBase\x02\b,");
	update_extra_cmt		(0X71000B2530,	E_PREV + 6,	";         protected /* offset 0x0 */ \x01\b\x01(00000071000AD508nn::sf::hipc::server::HipcServerApiModelHolder\x02\b,");
	update_extra_cmt		(0X71000B2530,	E_PREV + 7,	";       protected /* offset 0x10 */ \x01\b\x01(00000071000AD330nn::sf::cmif::server::CmifServerDomainManager\x02\b");
	create_qword	(x=0X71000B2530);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B2530,	"_ZTIN2nn2sf4hipc6server2v131HipcSimpleAllInOneServerManagerILm52ELm3ENS0_6detail44HipcSimpleAllInOneServerManagerOptionsGetterINS_7timemgr6detail7service38HipcSimpleAllInOneServerManagerOptionsEEEEE");
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_18(void) {
        auto x;
#define id x

	set_cmt	(0X71000B2538,	"reference to type's name",	0);
	create_qword	(x=0X71000B2538);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2540,	"reference to parent's type name",	0);
	create_qword	(x=0X71000B2540);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2548,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B2548,	E_PREV + 0,	"; public \x01\b\x01(00000071000B2548nn::sf::HipcSimpleAllInOneServerManager<52ul,3ul,nn::timemgr::detail::service::HipcSimpleAllInOneServerManagerOptions>\x02\b :");
	update_extra_cmt		(0X71000B2548,	E_PREV + 1,	";   protected /* offset 0x0 */ \x01\b\x01(00000071000B2530nn::sf::hipc::server::v1::HipcSimpleAllInOneServerManager<52ul,3ul,nn::sf::detail::HipcSimpleAllInOneServerManagerOptionsGetter<nn::timemgr::detail::service::HipcSimpleAllInOneServerManagerOptions>>\x02\b :");
	update_extra_cmt		(0X71000B2548,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000AD2F8nn::sf::hipc::server::v1::detail::HipcAllInOneServerManagerBase\x02\b :");
	update_extra_cmt		(0X71000B2548,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000AD640nn::sf::hipc::server::v1::HipcServerSessionManagerWithDomain\x02\b :");
	update_extra_cmt		(0X71000B2548,	E_PREV + 4,	";         public /* offset 0x0 */ \x01\b\x01(00000071000AD518nn::sf::hipc::server::v1::HipcServerSessionManager\x02\b :");
	update_extra_cmt		(0X71000B2548,	E_PREV + 5,	";           protected /* offset 0x0 */ \x01\b\x01(00000071000AD4F0nn::sf::hipc::server::v1::HipcServerSessionManagerT<nn::sf::cmif::server::CmifServerObjectInfo>\x02\b :");
	update_extra_cmt		(0X71000B2548,	E_PREV + 6,	";             public /* offset 0x0 */ \x01\b\x01(00000071000AD4E0nn::sf::hipc::server::v1::HipcServerSessionManagerBase\x02\b,");
	update_extra_cmt		(0X71000B2548,	E_PREV + 7,	";           protected /* offset 0x0 */ \x01\b\x01(00000071000AD508nn::sf::hipc::server::HipcServerApiModelHolder\x02\b,");
	update_extra_cmt		(0X71000B2548,	E_PREV + 8,	";         protected /* offset 0x10 */ \x01\b\x01(00000071000AD330nn::sf::cmif::server::CmifServerDomainManager\x02\b,");
	update_extra_cmt		(0X71000B2548,	E_PREV + 9,	";   public /* offset 0x9b28 */ \x01\b\x01(00000071000AE710nn::sf::HipcServerSessionManagerCommonBase\x02\b");
	create_qword	(x=0X71000B2548);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B2548,	"_ZTIN2nn2sf31HipcSimpleAllInOneServerManagerILm52ELm3ENS_7timemgr6detail7service38HipcSimpleAllInOneServerManagerOptionsEEE");
	set_cmt	(0X71000B2550,	"reference to type's name",	0);
	create_qword	(x=0X71000B2550);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2558,	"attribute",	0);
	create_dword	(x=0X71000B2558);
	op_hex		(x,	0);
	set_cmt	(0X71000B255C,	"count of base classes",	0);
	create_dword	(x=0X71000B255C);
	op_dec		(x,	0);
	set_cmt	(0X71000B2560,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B2560);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2568,	"base class' attributes\noffset to this",	0);
	create_qword	(x=0X71000B2568);
	op_dec		(x,	0);
	set_name	(0X71000B2568,	"_ZTVN2nn2sf34HipcServerSessionManagerCommonBaseE_0");
	set_cmt	(0X71000B2570,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B2570);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2578,	"base class' attributes",	0);
	create_qword	(x=0X71000B2578);
	op_hex		(x,	0);
	set_cmt	(0X71000B2580,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B2580,	E_PREV + 0,	"; public \x01\b\x01(00000071000B2580nn::timemgr::detail::service::HipcServerManager\x02\b :");
	update_extra_cmt		(0X71000B2580,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000B2548nn::sf::HipcSimpleAllInOneServerManager<52ul,3ul,nn::timemgr::detail::service::HipcSimpleAllInOneServerManagerOptions>\x02\b :");
	update_extra_cmt		(0X71000B2580,	E_PREV + 2,	";     protected /* offset 0x0 */ \x01\b\x01(00000071000B2530nn::sf::hipc::server::v1::HipcSimpleAllInOneServerManager<52ul,3ul,nn::sf::detail::HipcSimpleAllInOneServerManagerOptionsGetter<nn::timemgr::detail::service::HipcSimpleAllInOneServerManagerOptions>>\x02\b :");
	update_extra_cmt		(0X71000B2580,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000AD2F8nn::sf::hipc::server::v1::detail::HipcAllInOneServerManagerBase\x02\b :");
	update_extra_cmt		(0X71000B2580,	E_PREV + 4,	";         public /* offset 0x0 */ \x01\b\x01(00000071000AD640nn::sf::hipc::server::v1::HipcServerSessionManagerWithDomain\x02\b :");
	update_extra_cmt		(0X71000B2580,	E_PREV + 5,	";           public /* offset 0x0 */ \x01\b\x01(00000071000AD518nn::sf::hipc::server::v1::HipcServerSessionManager\x02\b :");
	update_extra_cmt		(0X71000B2580,	E_PREV + 6,	";             protected /* offset 0x0 */ \x01\b\x01(00000071000AD4F0nn::sf::hipc::server::v1::HipcServerSessionManagerT<nn::sf::cmif::server::CmifServerObjectInfo>\x02\b :");
	update_extra_cmt		(0X71000B2580,	E_PREV + 7,	";               public /* offset 0x0 */ \x01\b\x01(00000071000AD4E0nn::sf::hipc::server::v1::HipcServerSessionManagerBase\x02\b,");
	update_extra_cmt		(0X71000B2580,	E_PREV + 8,	";             protected /* offset 0x0 */ \x01\b\x01(00000071000AD508nn::sf::hipc::server::HipcServerApiModelHolder\x02\b,");
	update_extra_cmt		(0X71000B2580,	E_PREV + 9,	";           protected /* offset 0x10 */ \x01\b\x01(00000071000AD330nn::sf::cmif::server::CmifServerDomainManager\x02\b,");
	update_extra_cmt		(0X71000B2580,	E_PREV + 10,	";     public /* offset 0x9b28 */ \x01\b\x01(00000071000AE710nn::sf::HipcServerSessionManagerCommonBase\x02\b");
	create_qword	(x=0X71000B2580);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B2580,	"_ZTIN2nn7timemgr6detail7service17HipcServerManagerE");
	set_cmt	(0X71000B2588,	"reference to type's name",	0);
	create_qword	(x=0X71000B2588);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2590,	"reference to parent's type name",	0);
	create_qword	(x=0X71000B2590);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2598,	"offset to this",	0);
	create_qword	(x=0X71000B2598);
	op_dec		(x,	0);
	set_name	(0X71000B2598,	"_ZTVN2nn2sf4hipc6server2v131HipcSimpleAllInOneServerManagerILm52ELm3ENS0_6detail44HipcSimpleAllInOneServerManagerOptionsGetterINS_7timemgr6detail7service38HipcSimpleAllInOneServerManagerOptionsEEEEE");
	create_qword	(x=0X71000B25A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B25A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B25B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B25B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B25C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B25C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B25D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B25D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B25E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B25E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B25F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B25F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2600);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2608);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2610);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2618);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2620);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2628);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2630,	"offset to this",	0);
	create_qword	(x=0X71000B2630);
	toggle_sign		(x,	0);
	op_dec		(x,	0);
	toggle_sign		(x,	1);
	create_qword	(x=0X71000B2638);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2640);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2648);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2650,	"offset to this",	0);
	create_qword	(x=0X71000B2650);
	op_dec		(x,	0);
	set_name	(0X71000B2650,	"_ZTVN2nn2sf22UnmanagedServiceObjectINS_7timesrv6detail7service14IStaticServiceENS_7timemgr6detail7service19StaticServiceServerEEE");
	create_qword	(x=0X71000B2658);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2660);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B2660,	"nn::timesrv::detail::service::IStaticServiceUAR_vftable");
	create_qword	(x=0X71000B2668);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2670);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2678);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2680);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2688);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2690);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2698);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B26A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B26A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B26B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B26B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B26C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B26C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B26D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B26D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B26E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B26E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B26F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B26F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2700);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2708);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2710);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2718,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B2718,	E_PREV + 0,	"; public \x01\b\x01(00000071000B2718nn::sf::detail::ObjectHolderImpl<nn::sf::InterfaceInfo<nn::timesrv::detail::service::IStaticService>::_tO2N<nn::timemgr::detail::service::StaticServiceServer>::type,void>\x02\b");
	create_qword	(x=0X71000B2718);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B2718,	"_ZTIN2nn2sf6detail16ObjectHolderImplINS0_13InterfaceInfoINS_7timesrv6detail7service14IStaticServiceEE5_tO2NINS_7timemgr6detail7service19StaticServiceServerEE4typeEvEE");
	set_cmt	(0X71000B2720,	"reference to type's name",	0);
	create_qword	(x=0X71000B2720);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2728,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B2728,	E_PREV + 0,	"; public \x01\b\x01(00000071000B2728nn::sf::detail::InterfaceInfoBottom<nn::sf::IServiceObject>::_tAB<nn::sf::InterfaceInfo<nn::timesrv::detail::service::IStaticService>::_tO2N<nn::timemgr::detail::service::StaticServiceServer>::type,nn::timesrv::detail::service::IStaticService>::type\x02\b :");
	update_extra_cmt		(0X71000B2728,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000B1AF8nn::timesrv::detail::service::IStaticService\x02\b :");
	update_extra_cmt		(0X71000B2728,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000B2728,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000B2728,	E_PREV + 4,	";   public /* offset 0x8 */ \x01\b\x01(00000071000B2718nn::sf::detail::ObjectHolderImpl<nn::sf::InterfaceInfo<nn::timesrv::detail::service::IStaticService>::_tO2N<nn::timemgr::detail::service::StaticServiceServer>::type,void>\x02\b");
	create_qword	(x=0X71000B2728);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B2728,	"_ZTIN2nn2sf6detail19InterfaceInfoBottomINS0_14IServiceObjectEE4_tABINS0_13InterfaceInfoINS_7timesrv6detail7service14IStaticServiceEE5_tO2NINS_7timemgr6detail7service19StaticServiceServerEE4typeESA_E4typeE");
	set_cmt	(0X71000B2730,	"reference to type's name",	0);
	create_qword	(x=0X71000B2730);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2738,	"attribute",	0);
	create_dword	(x=0X71000B2738);
	op_hex		(x,	0);
	set_cmt	(0X71000B273C,	"count of base classes",	0);
	create_dword	(x=0X71000B273C);
	op_dec		(x,	0);
	set_cmt	(0X71000B2740,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B2740);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2748,	"base class' attributes",	0);
	create_qword	(x=0X71000B2748);
	op_hex		(x,	0);
	set_cmt	(0X71000B2750,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B2750);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2758,	"base class' attributes",	0);
	create_qword	(x=0X71000B2758);
	op_hex		(x,	0);
	set_cmt	(0X71000B2760,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B2760,	E_PREV + 0,	"; public \x01\b\x01(00000071000B2760nn::sf::InterfaceInfo<nn::timesrv::detail::service::IStaticService>::_tAB<nn::sf::InterfaceInfo<nn::timesrv::detail::service::IStaticService>::_tO2N<nn::timemgr::detail::service::StaticServiceServer>::type,nn::timesrv::detail::service::IStaticService>::type\x02\b :");
	update_extra_cmt		(0X71000B2760,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000B2728nn::sf::detail::InterfaceInfoBottom<nn::sf::IServiceObject>::_tAB<nn::sf::InterfaceInfo<nn::timesrv::detail::service::IStaticService>::_tO2N<nn::timemgr::detail::service::StaticServiceServer>::type,nn::timesrv::detail::service::IStaticService>::type\x02\b :");
	update_extra_cmt		(0X71000B2760,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000B1AF8nn::timesrv::detail::service::IStaticService\x02\b :");
	update_extra_cmt		(0X71000B2760,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000B2760,	E_PREV + 4,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000B2760,	E_PREV + 5,	";     public /* offset 0x8 */ \x01\b\x01(00000071000B2718nn::sf::detail::ObjectHolderImpl<nn::sf::InterfaceInfo<nn::timesrv::detail::service::IStaticService>::_tO2N<nn::timemgr::detail::service::StaticServiceServer>::type,void>\x02\b");
	create_qword	(x=0X71000B2760);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B2760,	"_ZTIN2nn2sf13InterfaceInfoINS_7timesrv6detail7service14IStaticServiceEE4_tABINS6_5_tO2NINS_7timemgr6detail7service19StaticServiceServerEE4typeES5_E4typeE");
	set_cmt	(0X71000B2768,	"reference to type's name",	0);
	create_qword	(x=0X71000B2768);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2770,	"reference to parent's type name",	0);
	create_qword	(x=0X71000B2770);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2778,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B2778,	E_PREV + 0,	"; public \x01\b\x01(00000071000B2778nn::sf::UnmanagedServiceObject<nn::timesrv::detail::service::IStaticService,nn::timemgr::detail::service::StaticServiceServer>\x02\b :");
	update_extra_cmt		(0X71000B2778,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000B2760nn::sf::InterfaceInfo<nn::timesrv::detail::service::IStaticService>::_tAB<nn::sf::InterfaceInfo<nn::timesrv::detail::service::IStaticService>::_tO2N<nn::timemgr::detail::service::StaticServiceServer>::type,nn::timesrv::detail::service::IStaticService>::type\x02\b :");
	update_extra_cmt		(0X71000B2778,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000B2728nn::sf::detail::InterfaceInfoBottom<nn::sf::IServiceObject>::_tAB<nn::sf::InterfaceInfo<nn::timesrv::detail::service::IStaticService>::_tO2N<nn::timemgr::detail::service::StaticServiceServer>::type,nn::timesrv::detail::service::IStaticService>::type\x02\b :");
	update_extra_cmt		(0X71000B2778,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000B1AF8nn::timesrv::detail::service::IStaticService\x02\b :");
	update_extra_cmt		(0X71000B2778,	E_PREV + 4,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000B2778,	E_PREV + 5,	";           public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000B2778,	E_PREV + 6,	";       public /* offset 0x8 */ \x01\b\x01(00000071000B2718nn::sf::detail::ObjectHolderImpl<nn::sf::InterfaceInfo<nn::timesrv::detail::service::IStaticService>::_tO2N<nn::timemgr::detail::service::StaticServiceServer>::type,void>\x02\b");
	create_qword	(x=0X71000B2778);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B2778,	"_ZTIN2nn2sf22UnmanagedServiceObjectINS_7timesrv6detail7service14IStaticServiceENS_7timemgr6detail7service19StaticServiceServerEEE");
	set_cmt	(0X71000B2780,	"reference to type's name",	0);
	create_qword	(x=0X71000B2780);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2788,	"reference to parent's type name",	0);
	create_qword	(x=0X71000B2788);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2790,	"offset to this",	0);
	create_qword	(x=0X71000B2790);
	op_dec		(x,	0);
	set_name	(0X71000B2790,	"_ZTVN2nn7timesrv6detail7service14IStaticServiceE");
	create_qword	(x=0X71000B2798);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B27A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B27A0,	"nn::timesrv::detail::service::IStaticService_base_vtable");
	create_qword	(x=0X71000B27A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B27B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B27B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B27C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B27C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B27D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B27D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B27E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B27E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B27F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B27F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2800);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2808);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2810);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2818);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2820);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2828);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2830);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2838);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2840);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2848);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2850);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2858);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B2858,	"ServiceHandler_timePtr");
	create_qword	(x=0X71000B2860);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2868);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2870);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2878,	"offset to this",	0);
	create_qword	(x=0X71000B2878);
	op_dec		(x,	0);
	set_name	(0X71000B2878,	"_ZTVN2nn2sf6detail38ObjectImplFactoryWithStatefulAllocatorINS0_13InterfaceInfoINS_7timesrv6detail7service16ITimeZoneServiceEE4_tABINS8_5_tO2NINS_7timemgr6detail7service21TimeZoneServiceServerEE4typeES7_E4typeENS0_24StatefulAllocationPolicyINS0_16ExpHeapAllocatorEEEE6ObjectE");
	create_qword	(x=0X71000B2880);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2888);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B2888,	"nn::timesrv::detail::service::ITimeZoneService_vftablePtr");
	create_qword	(x=0X71000B2890);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2898);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B28A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B28A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B28B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B28B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B28C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B28C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B28D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B28D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B28E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B28E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B28F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B28F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2900);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2908);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2910);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2918,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B2918,	E_PREV + 0,	"; public \x01\b\x01(00000071000B2918nn::sf::detail::ObjectHolderImpl<nn::sf::InterfaceInfo<nn::timesrv::detail::service::ITimeZoneService>::_tO2N<nn::timemgr::detail::service::TimeZoneServiceServer>::type,void>\x02\b");
	create_qword	(x=0X71000B2918);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B2918,	"_ZTIN2nn2sf6detail16ObjectHolderImplINS0_13InterfaceInfoINS_7timesrv6detail7service16ITimeZoneServiceEE5_tO2NINS_7timemgr6detail7service21TimeZoneServiceServerEE4typeEvEE");
	set_cmt	(0X71000B2920,	"reference to type's name",	0);
	create_qword	(x=0X71000B2920);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2928,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B2928,	E_PREV + 0,	"; public \x01\b\x01(00000071000B2928nn::sf::detail::InterfaceInfoBottom<nn::sf::IServiceObject>::_tAB<nn::sf::InterfaceInfo<nn::timesrv::detail::service::ITimeZoneService>::_tO2N<nn::timemgr::detail::service::TimeZoneServiceServer>::type,nn::timesrv::detail::service::ITimeZoneService>::type\x02\b :");
	update_extra_cmt		(0X71000B2928,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000B1EC8nn::timesrv::detail::service::ITimeZoneService\x02\b :");
	update_extra_cmt		(0X71000B2928,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000B2928,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000B2928,	E_PREV + 4,	";   public /* offset 0x8 */ \x01\b\x01(00000071000B2918nn::sf::detail::ObjectHolderImpl<nn::sf::InterfaceInfo<nn::timesrv::detail::service::ITimeZoneService>::_tO2N<nn::timemgr::detail::service::TimeZoneServiceServer>::type,void>\x02\b");
	create_qword	(x=0X71000B2928);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B2928,	"_ZTIN2nn2sf6detail19InterfaceInfoBottomINS0_14IServiceObjectEE4_tABINS0_13InterfaceInfoINS_7timesrv6detail7service16ITimeZoneServiceEE5_tO2NINS_7timemgr6detail7service21TimeZoneServiceServerEE4typeESA_E4typeE");
	set_cmt	(0X71000B2930,	"reference to type's name",	0);
	create_qword	(x=0X71000B2930);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2938,	"attribute",	0);
	create_dword	(x=0X71000B2938);
	op_hex		(x,	0);
	set_cmt	(0X71000B293C,	"count of base classes",	0);
	create_dword	(x=0X71000B293C);
	op_dec		(x,	0);
	set_cmt	(0X71000B2940,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B2940);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2948,	"base class' attributes",	0);
	create_qword	(x=0X71000B2948);
	op_hex		(x,	0);
	set_cmt	(0X71000B2950,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B2950);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2958,	"base class' attributes",	0);
	create_qword	(x=0X71000B2958);
	op_hex		(x,	0);
	set_cmt	(0X71000B2960,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B2960,	E_PREV + 0,	"; public \x01\b\x01(00000071000B2960nn::sf::InterfaceInfo<nn::timesrv::detail::service::ITimeZoneService>::_tAB<nn::sf::InterfaceInfo<nn::timesrv::detail::service::ITimeZoneService>::_tO2N<nn::timemgr::detail::service::TimeZoneServiceServer>::type,nn::timesrv::detail::service::ITimeZoneService>::type\x02\b :");
	update_extra_cmt		(0X71000B2960,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000B2928nn::sf::detail::InterfaceInfoBottom<nn::sf::IServiceObject>::_tAB<nn::sf::InterfaceInfo<nn::timesrv::detail::service::ITimeZoneService>::_tO2N<nn::timemgr::detail::service::TimeZoneServiceServer>::type,nn::timesrv::detail::service::ITimeZoneService>::type\x02\b :");
	update_extra_cmt		(0X71000B2960,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000B1EC8nn::timesrv::detail::service::ITimeZoneService\x02\b :");
	update_extra_cmt		(0X71000B2960,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000B2960,	E_PREV + 4,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000B2960,	E_PREV + 5,	";     public /* offset 0x8 */ \x01\b\x01(00000071000B2918nn::sf::detail::ObjectHolderImpl<nn::sf::InterfaceInfo<nn::timesrv::detail::service::ITimeZoneService>::_tO2N<nn::timemgr::detail::service::TimeZoneServiceServer>::type,void>\x02\b");
	create_qword	(x=0X71000B2960);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B2960,	"_ZTIN2nn2sf13InterfaceInfoINS_7timesrv6detail7service16ITimeZoneServiceEE4_tABINS6_5_tO2NINS_7timemgr6detail7service21TimeZoneServiceServerEE4typeES5_E4typeE");
	set_cmt	(0X71000B2968,	"reference to type's name",	0);
	create_qword	(x=0X71000B2968);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2970,	"reference to parent's type name",	0);
	create_qword	(x=0X71000B2970);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2978,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B2978,	E_PREV + 0,	"; public \x01\b\x01(00000071000B2978nn::sf::detail::ObjectImplFactoryWithStatefulAllocator<nn::sf::InterfaceInfo<nn::timesrv::detail::service::ITimeZoneService>::_tAB<nn::sf::InterfaceInfo<nn::timesrv::detail::service::ITimeZoneService>::_tO2N<nn::timemgr::detail::service::TimeZoneServiceServer>::type,nn::timesrv::detail::service::ITimeZoneService>::type,nn::sf::StatefulAllocationPolicy<nn::sf::ExpHeapAllocator>>::Object\x02\b :");
	update_extra_cmt		(0X71000B2978,	E_PREV + 1,	";   protected /* offset 0x70 */ \x01\b\x01(00000071000ABB00nn::sf::impl::detail::ServiceObjectImplBase2\x02\b,");
	update_extra_cmt		(0X71000B2978,	E_PREV + 2,	";   public /* offset 0x0 */ \x01\b\x01(00000071000B2960nn::sf::InterfaceInfo<nn::timesrv::detail::service::ITimeZoneService>::_tAB<nn::sf::InterfaceInfo<nn::timesrv::detail::service::ITimeZoneService>::_tO2N<nn::timemgr::detail::service::TimeZoneServiceServer>::type,nn::timesrv::detail::service::ITimeZoneService>::type\x02\b :");
	update_extra_cmt		(0X71000B2978,	E_PREV + 3,	";     public /* offset 0x0 */ \x01\b\x01(00000071000B2928nn::sf::detail::InterfaceInfoBottom<nn::sf::IServiceObject>::_tAB<nn::sf::InterfaceInfo<nn::timesrv::detail::service::ITimeZoneService>::_tO2N<nn::timemgr::detail::service::TimeZoneServiceServer>::type,nn::timesrv::detail::service::ITimeZoneService>::type\x02\b :");
	update_extra_cmt		(0X71000B2978,	E_PREV + 4,	";       public /* offset 0x0 */ \x01\b\x01(00000071000B1EC8nn::timesrv::detail::service::ITimeZoneService\x02\b :");
	update_extra_cmt		(0X71000B2978,	E_PREV + 5,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000B2978,	E_PREV + 6,	";           public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000B2978,	E_PREV + 7,	";       public /* offset 0x8 */ \x01\b\x01(00000071000B2918nn::sf::detail::ObjectHolderImpl<nn::sf::InterfaceInfo<nn::timesrv::detail::service::ITimeZoneService>::_tO2N<nn::timemgr::detail::service::TimeZoneServiceServer>::type,void>\x02\b");
	create_qword	(x=0X71000B2978);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B2978,	"_ZTIN2nn2sf6detail38ObjectImplFactoryWithStatefulAllocatorINS0_13InterfaceInfoINS_7timesrv6detail7service16ITimeZoneServiceEE4_tABINS8_5_tO2NINS_7timemgr6detail7service21TimeZoneServiceServerEE4typeES7_E4typeENS0_24StatefulAllocationPolicyINS0_16ExpHeapAllocatorEEEE6ObjectE");
	set_cmt	(0X71000B2980,	"reference to type's name",	0);
	create_qword	(x=0X71000B2980);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2988,	"attribute",	0);
	create_dword	(x=0X71000B2988);
	op_hex		(x,	0);
	set_cmt	(0X71000B298C,	"count of base classes",	0);
	create_dword	(x=0X71000B298C);
	op_dec		(x,	0);
	set_cmt	(0X71000B2990,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B2990);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2998,	"base class' attributes",	0);
	create_qword	(x=0X71000B2998);
	op_hex		(x,	0);
	set_cmt	(0X71000B29A0,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B29A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B29A8,	"base class' attributes",	0);
	create_qword	(x=0X71000B29A8);
	op_hex		(x,	0);
	set_cmt	(0X71000B29B0,	"offset to this",	0);
	create_qword	(x=0X71000B29B0);
	op_dec		(x,	0);
	set_name	(0X71000B29B0,	"_ZTVN2nn7timesrv6detail7service16ITimeZoneServiceE");
	create_qword	(x=0X71000B29B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B29C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B29C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B29D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B29D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B29E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B29E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B29F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B29F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2A00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2A08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2A10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2A18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2A20);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2A28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2A30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2A38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2A40);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2A48);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2A50);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B2A50,	"gTimeZoneListNodes");
	create_qword	(x=0X71000B2A58);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	MakeStruct	(0X71000B2A60,	"nn::os::SdkMutexType");
	set_name	(0X71000B2A60,	"gTimeZoneListMutex");
	create_qword	(x=0X71000B2A78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2A80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2A88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2A90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2A98);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2AA0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2AA8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2AB0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2AB8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2AC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2AC8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2AD0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2AE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2AF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B2AF0,	"gRtcManager");
	create_dword	(0X71000B2B18);
	make_array	(0X71000B2B1C,	0X4);
	create_qword	(0X71000B2B20);
	make_array	(0X71000B2B28,	0X8);
	set_cmt	(0X71000B2C60,	"offset to this",	0);
	create_qword	(x=0X71000B2C60);
	op_dec		(x,	0);
	set_name	(0X71000B2C60,	"_ZTVN2nn2sf6detail38ObjectImplFactoryWithStatefulAllocatorINS0_4cmif6client6detail9CmifProxyINS_7timesrv6detail7service13IAlarmServiceENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSD_18Hipc2ProxyKindBaseILNSC_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESL_E6ObjectE");
	create_qword	(x=0X71000B2C68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2C70);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2C78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2C80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2C88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2C90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2C98);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2CA0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2CA8,	"offset to this",	0);
	create_qword	(x=0X71000B2CA8);
	toggle_sign		(x,	0);
	op_dec		(x,	0);
	toggle_sign		(x,	1);
	create_qword	(x=0X71000B2CB0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2CB8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2CC0,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B2CC0,	E_PREV + 0,	"; public \x01\b\x01(00000071000B2CC0nn::timesrv::detail::service::IAlarmService\x02\b :");
	update_extra_cmt		(0X71000B2CC0,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000B2CC0,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b");
	create_qword	(x=0X71000B2CC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B2CC0,	"_ZTIN2nn7timesrv6detail7service13IAlarmServiceE");
	set_cmt	(0X71000B2CC8,	"reference to type's name",	0);
	create_qword	(x=0X71000B2CC8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2CD0,	"reference to parent's type name",	0);
	create_qword	(x=0X71000B2CD0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2CD8,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B2CD8,	E_PREV + 0,	"; public \x01\b\x01(00000071000B2CD8nn::sf::cmif::client::detail::CmifProxyImpl<nn::timesrv::detail::service::IAlarmService,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::timesrv::detail::service::IAlarmService,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000B2CD8,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000B2CC0nn::timesrv::detail::service::IAlarmService\x02\b :");
	update_extra_cmt		(0X71000B2CD8,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000B2CD8,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000B2CD8,	E_PREV + 4,	";   protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000B2CD8,	E_PREV + 5,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000B2CD8,	E_PREV + 6,	";   protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000B2CD8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B2CD8,	"_ZTIN2nn2sf4cmif6client6detail13CmifProxyImplINS_7timesrv6detail7service13IAlarmServiceENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSB_18Hipc2ProxyKindBaseILNSA_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyES8_NS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEEE");
	set_cmt	(0X71000B2CE0,	"reference to type's name",	0);
	create_qword	(x=0X71000B2CE0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2CE8,	"attribute",	0);
	create_dword	(x=0X71000B2CE8);
	op_hex		(x,	0);
	set_cmt	(0X71000B2CEC,	"count of base classes",	0);
	create_dword	(x=0X71000B2CEC);
	op_dec		(x,	0);
	set_cmt	(0X71000B2CF0,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B2CF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2CF8,	"base class' attributes",	0);
	create_qword	(x=0X71000B2CF8);
	op_hex		(x,	0);
	set_cmt	(0X71000B2D00,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B2D00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2D08,	"base class' attributes",	0);
	create_qword	(x=0X71000B2D08);
	op_hex		(x,	0);
	set_cmt	(0X71000B2D10,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B2D10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2D18,	"base class' attributes",	0);
	create_qword	(x=0X71000B2D18);
	op_hex		(x,	0);
	set_cmt	(0X71000B2D20,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B2D20,	E_PREV + 0,	"; public \x01\b\x01(00000071000B2D20nn::sf::cmif::client::detail::CmifProxy<nn::timesrv::detail::service::IAlarmService,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>\x02\b :");
	update_extra_cmt		(0X71000B2D20,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000B2CD8nn::sf::cmif::client::detail::CmifProxyImpl<nn::timesrv::detail::service::IAlarmService,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::timesrv::detail::service::IAlarmService,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000B2D20,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000B2CC0nn::timesrv::detail::service::IAlarmService\x02\b :");
	update_extra_cmt		(0X71000B2D20,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000B2D20,	E_PREV + 4,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000B2D20,	E_PREV + 5,	";     protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000B2D20,	E_PREV + 6,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000B2D20,	E_PREV + 7,	";     protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000B2D20);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B2D20,	"_ZTIN2nn2sf4cmif6client6detail9CmifProxyINS_7timesrv6detail7service13IAlarmServiceENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSB_18Hipc2ProxyKindBaseILNSA_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEvEE");
	set_cmt	(0X71000B2D28,	"reference to type's name",	0);
	create_qword	(x=0X71000B2D28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2D30,	"reference to parent's type name",	0);
	create_qword	(x=0X71000B2D30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2D38,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B2D38,	E_PREV + 0,	"; public \x01\b\x01(00000071000B2D38nn::sf::detail::ObjectImplFactoryWithStatefulAllocator<nn::sf::cmif::client::detail::CmifProxy<nn::timesrv::detail::service::IAlarmService,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>,nn::sf::MemoryResourceAllocationPolicy>::Object\x02\b :");
	update_extra_cmt		(0X71000B2D38,	E_PREV + 1,	";   protected /* offset 0x28 */ \x01\b\x01(00000071000ABB00nn::sf::impl::detail::ServiceObjectImplBase2\x02\b,");
	update_extra_cmt		(0X71000B2D38,	E_PREV + 2,	";   public /* offset 0x0 */ \x01\b\x01(00000071000B2D20nn::sf::cmif::client::detail::CmifProxy<nn::timesrv::detail::service::IAlarmService,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>\x02\b :");
	update_extra_cmt		(0X71000B2D38,	E_PREV + 3,	";     public /* offset 0x0 */ \x01\b\x01(00000071000B2CD8nn::sf::cmif::client::detail::CmifProxyImpl<nn::timesrv::detail::service::IAlarmService,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::timesrv::detail::service::IAlarmService,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000B2D38,	E_PREV + 4,	";       public /* offset 0x0 */ \x01\b\x01(00000071000B2CC0nn::timesrv::detail::service::IAlarmService\x02\b :");
	update_extra_cmt		(0X71000B2D38,	E_PREV + 5,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000B2D38,	E_PREV + 6,	";           public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000B2D38,	E_PREV + 7,	";       protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000B2D38,	E_PREV + 8,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000B2D38,	E_PREV + 9,	";       protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000B2D38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B2D38,	"_ZTIN2nn2sf6detail38ObjectImplFactoryWithStatefulAllocatorINS0_4cmif6client6detail9CmifProxyINS_7timesrv6detail7service13IAlarmServiceENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSD_18Hipc2ProxyKindBaseILNSC_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESL_E6ObjectE");
	set_cmt	(0X71000B2D40,	"reference to type's name",	0);
	create_qword	(x=0X71000B2D40);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2D48,	"attribute",	0);
	create_dword	(x=0X71000B2D48);
	op_hex		(x,	0);
	set_cmt	(0X71000B2D4C,	"count of base classes",	0);
	create_dword	(x=0X71000B2D4C);
	op_dec		(x,	0);
	set_cmt	(0X71000B2D50,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B2D50);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2D58,	"base class' attributes",	0);
	create_qword	(x=0X71000B2D58);
	op_hex		(x,	0);
	set_cmt	(0X71000B2D60,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B2D60);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2D68,	"base class' attributes",	0);
	create_qword	(x=0X71000B2D68);
	op_hex		(x,	0);
	set_cmt	(0X71000B2D70,	"offset to this",	0);
	create_qword	(x=0X71000B2D70);
	op_dec		(x,	0);
	set_name	(0X71000B2D70,	"_ZTVN2nn2sf6detail38ObjectImplFactoryWithStatefulAllocatorINS0_4cmif6client6detail9CmifProxyINS_7timesrv6detail7service17ISteadyClockAlarmENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSD_18Hipc2ProxyKindBaseILNSC_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESL_E6ObjectE");
	create_qword	(x=0X71000B2D78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2D80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2D88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2D90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2D98);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2DA0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2DA8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2DB0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2DB8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2DC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2DC8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2DD0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2DD8,	"offset to this",	0);
	create_qword	(x=0X71000B2DD8);
	toggle_sign		(x,	0);
	op_dec		(x,	0);
	toggle_sign		(x,	1);
	create_qword	(x=0X71000B2DE0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2DE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2DF0,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B2DF0,	E_PREV + 0,	"; public \x01\b\x01(00000071000B2DF0nn::timesrv::detail::service::ISteadyClockAlarm\x02\b :");
	update_extra_cmt		(0X71000B2DF0,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000B2DF0,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b");
	create_qword	(x=0X71000B2DF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B2DF0,	"_ZTIN2nn7timesrv6detail7service17ISteadyClockAlarmE");
	set_cmt	(0X71000B2DF8,	"reference to type's name",	0);
	create_qword	(x=0X71000B2DF8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2E00,	"reference to parent's type name",	0);
	create_qword	(x=0X71000B2E00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2E08,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B2E08,	E_PREV + 0,	"; public \x01\b\x01(00000071000B2E08nn::sf::cmif::client::detail::CmifProxyImpl<nn::timesrv::detail::service::ISteadyClockAlarm,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::timesrv::detail::service::ISteadyClockAlarm,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000B2E08,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000B2DF0nn::timesrv::detail::service::ISteadyClockAlarm\x02\b :");
	update_extra_cmt		(0X71000B2E08,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000B2E08,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000B2E08,	E_PREV + 4,	";   protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000B2E08,	E_PREV + 5,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000B2E08,	E_PREV + 6,	";   protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000B2E08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B2E08,	"_ZTIN2nn2sf4cmif6client6detail13CmifProxyImplINS_7timesrv6detail7service17ISteadyClockAlarmENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSB_18Hipc2ProxyKindBaseILNSA_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyES8_NS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEEE");
	set_cmt	(0X71000B2E10,	"reference to type's name",	0);
	create_qword	(x=0X71000B2E10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2E18,	"attribute",	0);
	create_dword	(x=0X71000B2E18);
	op_hex		(x,	0);
	set_cmt	(0X71000B2E1C,	"count of base classes",	0);
	create_dword	(x=0X71000B2E1C);
	op_dec		(x,	0);
	set_cmt	(0X71000B2E20,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B2E20);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2E28,	"base class' attributes",	0);
	create_qword	(x=0X71000B2E28);
	op_hex		(x,	0);
	set_cmt	(0X71000B2E30,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B2E30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2E38,	"base class' attributes",	0);
	create_qword	(x=0X71000B2E38);
	op_hex		(x,	0);
	set_cmt	(0X71000B2E40,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B2E40);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2E48,	"base class' attributes",	0);
	create_qword	(x=0X71000B2E48);
	op_hex		(x,	0);
	set_cmt	(0X71000B2E50,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B2E50,	E_PREV + 0,	"; public \x01\b\x01(00000071000B2E50nn::sf::cmif::client::detail::CmifProxy<nn::timesrv::detail::service::ISteadyClockAlarm,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>\x02\b :");
	update_extra_cmt		(0X71000B2E50,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000B2E08nn::sf::cmif::client::detail::CmifProxyImpl<nn::timesrv::detail::service::ISteadyClockAlarm,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::timesrv::detail::service::ISteadyClockAlarm,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000B2E50,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000B2DF0nn::timesrv::detail::service::ISteadyClockAlarm\x02\b :");
	update_extra_cmt		(0X71000B2E50,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000B2E50,	E_PREV + 4,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000B2E50,	E_PREV + 5,	";     protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000B2E50,	E_PREV + 6,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000B2E50,	E_PREV + 7,	";     protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000B2E50);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B2E50,	"_ZTIN2nn2sf4cmif6client6detail9CmifProxyINS_7timesrv6detail7service17ISteadyClockAlarmENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSB_18Hipc2ProxyKindBaseILNSA_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEvEE");
	set_cmt	(0X71000B2E58,	"reference to type's name",	0);
	create_qword	(x=0X71000B2E58);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2E60,	"reference to parent's type name",	0);
	create_qword	(x=0X71000B2E60);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2E68,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B2E68,	E_PREV + 0,	"; public \x01\b\x01(00000071000B2E68nn::sf::detail::ObjectImplFactoryWithStatefulAllocator<nn::sf::cmif::client::detail::CmifProxy<nn::timesrv::detail::service::ISteadyClockAlarm,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>,nn::sf::MemoryResourceAllocationPolicy>::Object\x02\b :");
	update_extra_cmt		(0X71000B2E68,	E_PREV + 1,	";   protected /* offset 0x28 */ \x01\b\x01(00000071000ABB00nn::sf::impl::detail::ServiceObjectImplBase2\x02\b,");
	update_extra_cmt		(0X71000B2E68,	E_PREV + 2,	";   public /* offset 0x0 */ \x01\b\x01(00000071000B2E50nn::sf::cmif::client::detail::CmifProxy<nn::timesrv::detail::service::ISteadyClockAlarm,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>\x02\b :");
	update_extra_cmt		(0X71000B2E68,	E_PREV + 3,	";     public /* offset 0x0 */ \x01\b\x01(00000071000B2E08nn::sf::cmif::client::detail::CmifProxyImpl<nn::timesrv::detail::service::ISteadyClockAlarm,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::timesrv::detail::service::ISteadyClockAlarm,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000B2E68,	E_PREV + 4,	";       public /* offset 0x0 */ \x01\b\x01(00000071000B2DF0nn::timesrv::detail::service::ISteadyClockAlarm\x02\b :");
	update_extra_cmt		(0X71000B2E68,	E_PREV + 5,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000B2E68,	E_PREV + 6,	";           public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000B2E68,	E_PREV + 7,	";       protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000B2E68,	E_PREV + 8,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000B2E68,	E_PREV + 9,	";       protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000B2E68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B2E68,	"_ZTIN2nn2sf6detail38ObjectImplFactoryWithStatefulAllocatorINS0_4cmif6client6detail9CmifProxyINS_7timesrv6detail7service17ISteadyClockAlarmENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSD_18Hipc2ProxyKindBaseILNSC_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESL_E6ObjectE");
	set_cmt	(0X71000B2E70,	"reference to type's name",	0);
	create_qword	(x=0X71000B2E70);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2E78,	"attribute",	0);
	create_dword	(x=0X71000B2E78);
	op_hex		(x,	0);
	set_cmt	(0X71000B2E7C,	"count of base classes",	0);
	create_dword	(x=0X71000B2E7C);
	op_dec		(x,	0);
	set_cmt	(0X71000B2E80,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B2E80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2E88,	"base class' attributes",	0);
	create_qword	(x=0X71000B2E88);
	op_hex		(x,	0);
	set_cmt	(0X71000B2E90,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B2E90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2E98,	"base class' attributes",	0);
	create_qword	(x=0X71000B2E98);
	op_hex		(x,	0);
	set_cmt	(0X71000B2EA0,	"offset to this",	0);
	create_qword	(x=0X71000B2EA0);
	op_dec		(x,	0);
	set_name	(0X71000B2EA0,	"_ZTVN2nn2sf6detail38ObjectImplFactoryWithStatefulAllocatorINS0_4cmif6client6detail9CmifProxyINS_3psc2sf12IPmStateLockENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSC_18Hipc2ProxyKindBaseILNSB_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESK_E6ObjectE");
	create_qword	(x=0X71000B2EA8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2EB0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2EB8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2EC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2EC8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2ED0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2ED8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2EE0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2EE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2EF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2EF8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2F00,	"offset to this",	0);
	create_qword	(x=0X71000B2F00);
	toggle_sign		(x,	0);
	op_dec		(x,	0);
	toggle_sign		(x,	1);
	create_qword	(x=0X71000B2F08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B2F10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2F18,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B2F18,	E_PREV + 0,	"; public \x01\b\x01(00000071000B2F18nn::psc::sf::IPmStateLock\x02\b :");
	update_extra_cmt		(0X71000B2F18,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000B2F18,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b");
	create_qword	(x=0X71000B2F18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B2F18,	"_ZTIN2nn3psc2sf12IPmStateLockE");
	set_cmt	(0X71000B2F20,	"reference to type's name",	0);
	create_qword	(x=0X71000B2F20);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2F28,	"reference to parent's type name",	0);
	create_qword	(x=0X71000B2F28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2F30,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B2F30,	E_PREV + 0,	"; public \x01\b\x01(00000071000B2F30nn::sf::cmif::client::detail::CmifProxyImpl<nn::psc::sf::IPmStateLock,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::psc::sf::IPmStateLock,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000B2F30,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000B2F18nn::psc::sf::IPmStateLock\x02\b :");
	update_extra_cmt		(0X71000B2F30,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000B2F30,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000B2F30,	E_PREV + 4,	";   protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000B2F30,	E_PREV + 5,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000B2F30,	E_PREV + 6,	";   protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000B2F30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B2F30,	"_ZTIN2nn2sf4cmif6client6detail13CmifProxyImplINS_3psc2sf12IPmStateLockENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSA_18Hipc2ProxyKindBaseILNS9_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyES7_NS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEEE");
	set_cmt	(0X71000B2F38,	"reference to type's name",	0);
	create_qword	(x=0X71000B2F38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2F40,	"attribute",	0);
	create_dword	(x=0X71000B2F40);
	op_hex		(x,	0);
	set_cmt	(0X71000B2F44,	"count of base classes",	0);
	create_dword	(x=0X71000B2F44);
	op_dec		(x,	0);
	set_cmt	(0X71000B2F48,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B2F48);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2F50,	"base class' attributes",	0);
	create_qword	(x=0X71000B2F50);
	op_hex		(x,	0);
	set_cmt	(0X71000B2F58,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B2F58);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2F60,	"base class' attributes",	0);
	create_qword	(x=0X71000B2F60);
	op_hex		(x,	0);
	set_cmt	(0X71000B2F68,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B2F68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2F70,	"base class' attributes",	0);
	create_qword	(x=0X71000B2F70);
	op_hex		(x,	0);
	set_cmt	(0X71000B2F78,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B2F78,	E_PREV + 0,	"; public \x01\b\x01(00000071000B2F78nn::sf::cmif::client::detail::CmifProxy<nn::psc::sf::IPmStateLock,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>\x02\b :");
	update_extra_cmt		(0X71000B2F78,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000B2F30nn::sf::cmif::client::detail::CmifProxyImpl<nn::psc::sf::IPmStateLock,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::psc::sf::IPmStateLock,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000B2F78,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000B2F18nn::psc::sf::IPmStateLock\x02\b :");
	update_extra_cmt		(0X71000B2F78,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000B2F78,	E_PREV + 4,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000B2F78,	E_PREV + 5,	";     protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000B2F78,	E_PREV + 6,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000B2F78,	E_PREV + 7,	";     protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000B2F78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B2F78,	"_ZTIN2nn2sf4cmif6client6detail9CmifProxyINS_3psc2sf12IPmStateLockENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSA_18Hipc2ProxyKindBaseILNS9_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEvEE");
	set_cmt	(0X71000B2F80,	"reference to type's name",	0);
	create_qword	(x=0X71000B2F80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2F88,	"reference to parent's type name",	0);
	create_qword	(x=0X71000B2F88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2F90,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B2F90,	E_PREV + 0,	"; public \x01\b\x01(00000071000B2F90nn::sf::detail::ObjectImplFactoryWithStatefulAllocator<nn::sf::cmif::client::detail::CmifProxy<nn::psc::sf::IPmStateLock,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>,nn::sf::MemoryResourceAllocationPolicy>::Object\x02\b :");
	update_extra_cmt		(0X71000B2F90,	E_PREV + 1,	";   protected /* offset 0x28 */ \x01\b\x01(00000071000ABB00nn::sf::impl::detail::ServiceObjectImplBase2\x02\b,");
	update_extra_cmt		(0X71000B2F90,	E_PREV + 2,	";   public /* offset 0x0 */ \x01\b\x01(00000071000B2F78nn::sf::cmif::client::detail::CmifProxy<nn::psc::sf::IPmStateLock,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>\x02\b :");
	update_extra_cmt		(0X71000B2F90,	E_PREV + 3,	";     public /* offset 0x0 */ \x01\b\x01(00000071000B2F30nn::sf::cmif::client::detail::CmifProxyImpl<nn::psc::sf::IPmStateLock,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::psc::sf::IPmStateLock,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000B2F90,	E_PREV + 4,	";       public /* offset 0x0 */ \x01\b\x01(00000071000B2F18nn::psc::sf::IPmStateLock\x02\b :");
	update_extra_cmt		(0X71000B2F90,	E_PREV + 5,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000B2F90,	E_PREV + 6,	";           public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000B2F90,	E_PREV + 7,	";       protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000B2F90,	E_PREV + 8,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000B2F90,	E_PREV + 9,	";       protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000B2F90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B2F90,	"_ZTIN2nn2sf6detail38ObjectImplFactoryWithStatefulAllocatorINS0_4cmif6client6detail9CmifProxyINS_3psc2sf12IPmStateLockENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSC_18Hipc2ProxyKindBaseILNSB_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESK_E6ObjectE");
	set_cmt	(0X71000B2F98,	"reference to type's name",	0);
	create_qword	(x=0X71000B2F98);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2FA0,	"attribute",	0);
	create_dword	(x=0X71000B2FA0);
	op_hex		(x,	0);
	set_cmt	(0X71000B2FA4,	"count of base classes",	0);
	create_dword	(x=0X71000B2FA4);
	op_dec		(x,	0);
	set_cmt	(0X71000B2FA8,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B2FA8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2FB0,	"base class' attributes",	0);
	create_qword	(x=0X71000B2FB0);
	op_hex		(x,	0);
	set_cmt	(0X71000B2FB8,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B2FB8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B2FC0,	"base class' attributes",	0);
	create_qword	(x=0X71000B2FC0);
	op_hex		(x,	0);
	make_array	(0X71000B2FC8,	0X8);
	create_qword	(x=0X71000B2FD0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B2FD0,	"gTimeAL");
	create_dword	(0X71000B2FF8);
	make_array	(0X71000B2FFC,	0X4);
	create_qword	(0X71000B3000);
	make_array	(0X71000B3008,	0X8);
	set_cmt	(0X71000B3440,	"offset to this",	0);
	create_qword	(x=0X71000B3440);
	op_dec		(x,	0);
	set_name	(0X71000B3440,	"_ZTVN2nn2sf6detail38ObjectImplFactoryWithStatefulAllocatorINS0_4cmif6client6detail9CmifProxyINS_7timesrv6detail7service19ITimeServiceManagerENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSD_18Hipc2ProxyKindBaseILNSC_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESL_E6ObjectE");
	create_qword	(x=0X71000B3448);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B3450);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B3450,	"timeM__vftable");
	create_qword	(x=0X71000B3458);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B3460);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B3468);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B3470);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B3478);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B3480);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B3488);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B3490);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B3498);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B34A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B34A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B34B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B34B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B34C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B34C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B34D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B34D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B34E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B34E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B34F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B34F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B3500);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B3508,	"offset to this",	0);
	create_qword	(x=0X71000B3508);
	toggle_sign		(x,	0);
	op_dec		(x,	0);
	toggle_sign		(x,	1);
	create_qword	(x=0X71000B3510);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B3518);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B3520,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B3520,	E_PREV + 0,	"; public \x01\b\x01(00000071000B3520nn::timesrv::detail::service::ITimeServiceManager\x02\b :");
	update_extra_cmt		(0X71000B3520,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000B3520,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b");
	create_qword	(x=0X71000B3520);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B3520,	"_ZTIN2nn7timesrv6detail7service19ITimeServiceManagerE");
	set_cmt	(0X71000B3528,	"reference to type's name",	0);
	create_qword	(x=0X71000B3528);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B3530,	"reference to parent's type name",	0);
	create_qword	(x=0X71000B3530);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B3538,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B3538,	E_PREV + 0,	"; public \x01\b\x01(00000071000B3538nn::sf::cmif::client::detail::CmifProxyImpl<nn::timesrv::detail::service::ITimeServiceManager,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::timesrv::detail::service::ITimeServiceManager,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000B3538,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000B3520nn::timesrv::detail::service::ITimeServiceManager\x02\b :");
	update_extra_cmt		(0X71000B3538,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000B3538,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000B3538,	E_PREV + 4,	";   protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000B3538,	E_PREV + 5,	";     public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000B3538,	E_PREV + 6,	";   protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000B3538);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B3538,	"_ZTIN2nn2sf4cmif6client6detail13CmifProxyImplINS_7timesrv6detail7service19ITimeServiceManagerENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSB_18Hipc2ProxyKindBaseILNSA_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyES8_NS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEEE");
	set_cmt	(0X71000B3540,	"reference to type's name",	0);
	create_qword	(x=0X71000B3540);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B3548,	"attribute",	0);
	create_dword	(x=0X71000B3548);
	op_hex		(x,	0);
	set_cmt	(0X71000B354C,	"count of base classes",	0);
	create_dword	(x=0X71000B354C);
	op_dec		(x,	0);
	set_cmt	(0X71000B3550,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B3550);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B3558,	"base class' attributes",	0);
	create_qword	(x=0X71000B3558);
	op_hex		(x,	0);
	set_cmt	(0X71000B3560,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B3560);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B3568,	"base class' attributes",	0);
	create_qword	(x=0X71000B3568);
	op_hex		(x,	0);
	set_cmt	(0X71000B3570,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B3570);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B3578,	"base class' attributes",	0);
	create_qword	(x=0X71000B3578);
	op_hex		(x,	0);
	set_cmt	(0X71000B3580,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B3580,	E_PREV + 0,	"; public \x01\b\x01(00000071000B3580nn::sf::cmif::client::detail::CmifProxy<nn::timesrv::detail::service::ITimeServiceManager,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>\x02\b :");
	update_extra_cmt		(0X71000B3580,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000B3538nn::sf::cmif::client::detail::CmifProxyImpl<nn::timesrv::detail::service::ITimeServiceManager,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::timesrv::detail::service::ITimeServiceManager,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000B3580,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000B3520nn::timesrv::detail::service::ITimeServiceManager\x02\b :");
	update_extra_cmt		(0X71000B3580,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000B3580,	E_PREV + 4,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000B3580,	E_PREV + 5,	";     protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000B3580,	E_PREV + 6,	";       public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000B3580,	E_PREV + 7,	";     protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000B3580);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B3580,	"_ZTIN2nn2sf4cmif6client6detail9CmifProxyINS_7timesrv6detail7service19ITimeServiceManagerENS2_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSB_18Hipc2ProxyKindBaseILNSA_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS3_19ProcessModifierImplINS2_21DefaultProxyFilterTagEEEvEE");
	set_cmt	(0X71000B3588,	"reference to type's name",	0);
	create_qword	(x=0X71000B3588);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B3590,	"reference to parent's type name",	0);
	create_qword	(x=0X71000B3590);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B3598,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B3598,	E_PREV + 0,	"; public \x01\b\x01(00000071000B3598nn::sf::detail::ObjectImplFactoryWithStatefulAllocator<nn::sf::cmif::client::detail::CmifProxy<nn::timesrv::detail::service::ITimeServiceManager,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>,nn::sf::MemoryResourceAllocationPolicy>::Object\x02\b :");
	update_extra_cmt		(0X71000B3598,	E_PREV + 1,	";   protected /* offset 0x28 */ \x01\b\x01(00000071000ABB00nn::sf::impl::detail::ServiceObjectImplBase2\x02\b,");
	update_extra_cmt		(0X71000B3598,	E_PREV + 2,	";   public /* offset 0x0 */ \x01\b\x01(00000071000B3580nn::sf::cmif::client::detail::CmifProxy<nn::timesrv::detail::service::ITimeServiceManager,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>,void>\x02\b :");
	update_extra_cmt		(0X71000B3598,	E_PREV + 3,	";     public /* offset 0x0 */ \x01\b\x01(00000071000B3538nn::sf::cmif::client::detail::CmifProxyImpl<nn::timesrv::detail::service::ITimeServiceManager,nn::sf::cmif::client::CmifDomainProxyKind<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>,nn::sf::MemoryResourceAllocationPolicy,nn::timesrv::detail::service::ITimeServiceManager,nn::sf::cmif::client::detail::ProcessModifierImpl<nn::sf::cmif::client::DefaultProxyFilterTag>>\x02\b :");
	update_extra_cmt		(0X71000B3598,	E_PREV + 4,	";       public /* offset 0x0 */ \x01\b\x01(00000071000B3520nn::timesrv::detail::service::ITimeServiceManager\x02\b :");
	update_extra_cmt		(0X71000B3598,	E_PREV + 5,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB20nn::sf::IServiceObject\x02\b :");
	update_extra_cmt		(0X71000B3598,	E_PREV + 6,	";           public /* offset 0x0 */ \x01\b\x01(00000071000ABB10nn::sf::ISharedObject\x02\b,");
	update_extra_cmt		(0X71000B3598,	E_PREV + 7,	";       protected /* offset 0x8 */ \x01\b\x01(00000071000ABB60nn::sf::cmif::client::CmifDomainClientMessage<nn::sf::hipc::client::Hipc2ClientSessionManagedProxyKindBase<nn::sf::hipc::client::Hipc2ProxyKindBase<(nn::sf::hipc::detail::MessageType)6>>>::ProxyBaseObject\x02\b :");
	update_extra_cmt		(0X71000B3598,	E_PREV + 8,	";         public /* offset 0x0 */ \x01\b\x01(00000071000ABB50nn::sf::cmif::client::CmifBaseObject\x02\b,");
	update_extra_cmt		(0X71000B3598,	E_PREV + 9,	";       protected /* offset 0x20 */ \x01\b\x01(00000071000ABB78nn::sf::detail::CmifProxyInfo\x02\b");
	create_qword	(x=0X71000B3598);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B3598,	"_ZTIN2nn2sf6detail38ObjectImplFactoryWithStatefulAllocatorINS0_4cmif6client6detail9CmifProxyINS_7timesrv6detail7service19ITimeServiceManagerENS4_19CmifDomainProxyKindINS0_4hipc6client38Hipc2ClientSessionManagedProxyKindBaseINSD_18Hipc2ProxyKindBaseILNSC_6detail11MessageTypeE6EEEEEEENS0_30MemoryResourceAllocationPolicyENS5_19ProcessModifierImplINS4_21DefaultProxyFilterTagEEEvEESL_E6ObjectE");
	set_cmt	(0X71000B35A0,	"reference to type's name",	0);
	create_qword	(x=0X71000B35A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B35A8,	"attribute",	0);
	create_dword	(x=0X71000B35A8);
	op_hex		(x,	0);
	set_cmt	(0X71000B35AC,	"count of base classes",	0);
	create_dword	(x=0X71000B35AC);
	op_dec		(x,	0);
	set_cmt	(0X71000B35B0,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B35B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B35B8,	"base class' attributes",	0);
	create_qword	(x=0X71000B35B8);
	op_hex		(x,	0);
	set_cmt	(0X71000B35C0,	"base class' type descriptor",	0);
	create_qword	(x=0X71000B35C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B35C8,	"base class' attributes",	0);
	create_qword	(x=0X71000B35C8);
	op_hex		(x,	0);
	create_qword	(x=0X71000B35D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B35D0,	"gTimeM");
	MakeStruct	(0X71000B35D8,	"nn::os::MutexType");
	create_dword	(0X71000B35F8);
	set_name	(0X71000B35F8,	"gTimeServiceManager_RefCount");
	make_array	(0X71000B35FC,	0X4);
	create_qword	(0X71000B3600);
	create_qword	(0X71000B3608);
	set_cmt	(0X71000B4080,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B4080,	E_PREV + 0,	"; public \x01\b\x01(00000071000B4080__cxxabiv1::__shim_type_info\x02\b :");
	update_extra_cmt		(0X71000B4080,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000B41D0std::type_info\x02\b");
	create_qword	(x=0X71000B4080);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B4080,	"_ZTIN10__cxxabiv116__shim_type_infoE");
	set_cmt	(0X71000B4088,	"reference to type's name",	0);
	create_qword	(x=0X71000B4088);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B4090,	"reference to parent's type name",	0);
	create_qword	(x=0X71000B4090);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B4098,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B4098,	E_PREV + 0,	"; public \x01\b\x01(00000071000B4098__cxxabiv1::__class_type_info\x02\b :");
	update_extra_cmt		(0X71000B4098,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000B4080__cxxabiv1::__shim_type_info\x02\b :");
	update_extra_cmt		(0X71000B4098,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000B41D0std::type_info\x02\b");
	create_qword	(x=0X71000B4098);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B4098,	"_ZTIN10__cxxabiv117__class_type_infoE");
	set_cmt	(0X71000B40A0,	"reference to type's name",	0);
	create_qword	(x=0X71000B40A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B40A8,	"reference to parent's type name",	0);
	create_qword	(x=0X71000B40A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B40B0,	"offset to this",	0);
	create_qword	(x=0X71000B40B0);
	op_dec		(x,	0);
	set_name	(0X71000B40B0,	"_ZTVN10__cxxabiv117__class_type_infoE");
	create_qword	(x=0X71000B40B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B40C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B40C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B40D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B40D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B40E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B40E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B40F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B40F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B4100,	"offset to this",	0);
	create_qword	(x=0X71000B4100);
	op_dec		(x,	0);
	set_name	(0X71000B4100,	"_ZTVN10__cxxabiv120__si_class_type_infoE");
	create_qword	(x=0X71000B4108);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4110);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4118);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4120);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_19(void) {
        auto x;
#define id x

	create_qword	(x=0X71000B4128);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4130);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4138);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4140);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4148);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B4150,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B4150,	E_PREV + 0,	"; public \x01\b\x01(00000071000B4150__cxxabiv1::__si_class_type_info\x02\b :");
	update_extra_cmt		(0X71000B4150,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000B4098__cxxabiv1::__class_type_info\x02\b :");
	update_extra_cmt		(0X71000B4150,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000B4080__cxxabiv1::__shim_type_info\x02\b :");
	update_extra_cmt		(0X71000B4150,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000B41D0std::type_info\x02\b");
	create_qword	(x=0X71000B4150);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B4150,	"_ZTIN10__cxxabiv120__si_class_type_infoE");
	set_cmt	(0X71000B4158,	"reference to type's name",	0);
	create_qword	(x=0X71000B4158);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B4160,	"reference to parent's type name",	0);
	create_qword	(x=0X71000B4160);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B4168,	"offset to this",	0);
	create_qword	(x=0X71000B4168);
	op_dec		(x,	0);
	set_name	(0X71000B4168,	"_ZTVN10__cxxabiv121__vmi_class_type_infoE");
	create_qword	(x=0X71000B4170);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4178);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4180);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4188);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4190);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4198);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B41A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B41A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B41B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B41B8,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B41B8,	E_PREV + 0,	"; public \x01\b\x01(00000071000B41B8__cxxabiv1::__vmi_class_type_info\x02\b :");
	update_extra_cmt		(0X71000B41B8,	E_PREV + 1,	";   public /* offset 0x0 */ \x01\b\x01(00000071000B4098__cxxabiv1::__class_type_info\x02\b :");
	update_extra_cmt		(0X71000B41B8,	E_PREV + 2,	";     public /* offset 0x0 */ \x01\b\x01(00000071000B4080__cxxabiv1::__shim_type_info\x02\b :");
	update_extra_cmt		(0X71000B41B8,	E_PREV + 3,	";       public /* offset 0x0 */ \x01\b\x01(00000071000B41D0std::type_info\x02\b");
	create_qword	(x=0X71000B41B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B41B8,	"_ZTIN10__cxxabiv121__vmi_class_type_infoE");
	set_cmt	(0X71000B41C0,	"reference to type's name",	0);
	create_qword	(x=0X71000B41C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B41C8,	"reference to parent's type name",	0);
	create_qword	(x=0X71000B41C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_cmt	(0X71000B41D0,	"reference to RTTI's type class",	0);
	update_extra_cmt		(0X71000B41D0,	E_PREV + 0,	"; public \x01\b\x01(00000071000B41D0std::type_info\x02\b");
	create_qword	(x=0X71000B41D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X71000B41D0,	"_ZTISt9type_info");
	set_cmt	(0X71000B41D8,	"reference to type's name",	0);
	create_qword	(x=0X71000B41D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(0X71000B43B8);
	create_qword	(x=0X71000B43C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B43C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B43D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B43D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B43E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B43E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B43F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B43F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4400);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4408);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4410);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4418);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4420);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4428);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4430);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4438);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4440);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4448);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4450);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4458);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4460);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4468);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4470);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4478);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4480);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4488);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4490);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4498);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B44A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B44A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B44B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B44B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B44C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B44C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B44D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B44D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B44E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B44E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B44F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B44F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4500);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4508);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4510);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4518);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4520);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4528);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4530);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4538);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4540);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4548);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4550);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4558);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4560);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4568);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4570);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4578);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4580);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4588);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4590);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4598);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B45A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B45A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B45B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B45B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B45C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B45C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B45D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B45D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B45E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B45E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B45F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B45F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4600);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4608);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4610);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4618);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4620);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4628);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4630);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4638);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4640);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4648);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4650);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4658);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4660);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4668);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4670);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4678);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4680);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4688);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4690);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4698);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B46A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B46A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B46B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B46B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B46C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B46C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B46D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B46D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B46E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B46E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B46F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B46F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4700);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4708);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4710);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4718);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4720);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4728);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4730);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4738);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4740);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4748);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4750);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4758);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4760);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4768);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4770);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4778);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4780);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4788);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4790);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4798);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B47A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B47A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B47B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B47B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B47C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B47C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B47D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B47D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B47E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B47E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B47F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B47F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4800);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4808);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4810);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4818);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4820);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4828);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4830);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4838);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4840);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4848);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4850);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4858);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4860);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4868);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4870);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4878);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4880);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4888);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4890);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4898);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B48A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B48A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B48B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B48B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B48C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B48C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B48D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B48D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B48E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B48E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B48F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B48F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4900);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4908);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4910);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4918);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4920);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4928);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4930);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4938);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4940);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4948);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4950);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4958);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4960);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4968);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4970);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4978);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4980);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4988);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4990);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4998);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B49A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B49A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B49B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B49B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B49C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B49C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B49D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B49D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B49E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B49E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B49F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B49F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4A00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4A08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4A10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4A18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4A20);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4A28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4A30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4A38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4A40);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4A48);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4A50);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4A58);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4A60);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4A68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4A70);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4A78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4A80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4A88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4A90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4A98);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4AA0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4AA8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4AB0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4AB8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4AC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4AC8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4AD0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4AD8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4AE0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4AE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4AF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4AF8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4B00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4B08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4B10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4B18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4B20);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4B28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4B30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4B38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4B40);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4B48);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4B50);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4B58);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4B60);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4B68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4B70);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4B78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4B80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4B88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4B90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4B98);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4BA0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4BA8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4BB0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4BB8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4BC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4BC8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4BD0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4BD8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4BE0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4BE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4BF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4BF8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4C00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4C08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4C10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4C18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4C20);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4C28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4C30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4C38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4C40);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4C48);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4C50);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4C58);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4C60);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4C68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4C70);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X71000B4C78,	0X8);
	create_qword	(x=0X71000B4C80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4C88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4C90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X71000B4C98,	0X8);
	create_qword	(x=0X71000B4CA0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4CA8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4CB0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X71000B4CB8,	0X8);
	create_qword	(x=0X71000B4CC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4CC8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4CD0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4CD8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4CE0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4CE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4CF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4CF8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4D00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4D08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4D10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4D18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4D20);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4D28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4D30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4D38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4D40);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4D48);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4D50);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4D58);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4D60);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4D68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4D70);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4D78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4D80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4D88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4D90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X71000B4D98,	0X8);
	create_qword	(x=0X71000B4DA0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4DA8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4DB0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X71000B4DB8,	0X8);
	create_qword	(x=0X71000B4DC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4DC8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4DD0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X71000B4DD8,	0X8);
	create_qword	(x=0X71000B4DE0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4DE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4DF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X71000B4DF8,	0X8);
	create_qword	(x=0X71000B4E00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4E08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4E10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X71000B4E18,	0X8);
	create_qword	(x=0X71000B4E20);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4E28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4E30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X71000B4E38,	0X8);
	create_qword	(x=0X71000B4E40);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4E48);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4E50);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4E58);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4E60);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4E68);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4E70);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4E78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4E80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4E88);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4E90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4E98);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4EA0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4EA8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4EB0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4EB8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4EC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4EC8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4ED0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4ED8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4EE0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4EE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4EF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4EF8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4F00);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4F08);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4F10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4F18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4F20);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4F28);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4F30);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4F38);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4F40);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X71000B4F48,	0X8);
	create_qword	(x=0X71000B4F50);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4F58);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4F60);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X71000B4F68,	0X8);
	create_qword	(x=0X71000B4F70);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4F78);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4F80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X71000B4F88,	0X8);
	create_qword	(x=0X71000B4F90);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4F98);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4FA0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X71000B4FA8,	0X8);
	create_qword	(x=0X71000B4FB0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4FB8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4FC0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4FC8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4FD0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4FD8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4FE0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4FE8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4FF0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B4FF8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B5000);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B5008);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B5010);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B5018);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B5020);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B5028);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B5030);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B5038);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B5040);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B5048);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B5050);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B5058);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B5060);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B5068);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B5070);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B5078);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B5080);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X71000B5088,	0X8);
	create_qword	(x=0X71000B5090);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B5098);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B50A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	make_array	(0X71000B50A8,	0X8);
	create_qword	(x=0X71000B50B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B50B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B50C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B50C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B50D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B50D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B50E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B50E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B50F0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B50F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B5100);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B5108);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B5110);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B5118);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B5120);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B5128);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B5130);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B5138);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B5140);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B5148);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B5150);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B5158);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B5160);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_qword	(x=0X71000B5168);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	MakeStruct	(0X71000B6000,	"nn::os::Thread");
	set_name	(0X71000B6000,	"gbgtcMainThread");
	create_byte	(0X71000B7000);
	make_array	(0X71000B7000,	0X8000);
	set_name	(0X71000B7000,	"gbgtc_MianThreadStack");
	create_qword	(0X71000BF000);
	make_array	(0X71000BF008,	0X8);
	create_qword	(0X71000BF010);
	create_qword	(0X71000BF250);
	create_qword	(0X71000BF258);
	create_dword	(0X71000BF264);
	create_qword	(0X71000BF278);
	create_qword	(0X71000BF280);
	create_qword	(0X71000BF2C8);
	create_qword	(0X71000BF2D0);
	create_dword	(0X71000BF2DC);
	create_qword	(0X71000BF2F0);
	create_qword	(0X71000BF2F8);
	create_qword	(0X71000BF340);
	create_qword	(0X71000BF348);
	create_dword	(0X71000BF354);
	create_qword	(0X71000BF368);
	create_dword	(0X71000BF377);
	create_dword	(0X71000BF3D4);
	create_dword	(0X71000BF45C);
	create_dword	(0X71000BF4E4);
	create_dword	(0X71000BF56C);
	create_dword	(0X71000BF5F4);
	create_dword	(0X71000BF67C);
	create_dword	(0X71000BF704);
	create_dword	(0X71000BF78C);
	create_dword	(0X71000BF814);
	create_dword	(0X71000BF89C);
	create_dword	(0X71000BF924);
	create_dword	(0X71000BF9AC);
	create_dword	(0X71000BFA34);
	create_dword	(0X71000BFABC);
	create_dword	(0X71000BFB44);
	create_dword	(0X71000BFBCC);
	create_dword	(0X71000BFC54);
	create_dword	(0X71000BFCDC);
	create_dword	(0X71000BFD64);
	create_dword	(0X71000BFDEC);
	create_dword	(0X71000BFE74);
	create_qword	(0X71000BFEA8);
	create_qword	(0X71000BFEB0);
	create_qword	(0X71000BFEE0);
	create_qword	(0X71000BFEE8);
	create_qword	(0X71000C02E0);
	create_qword	(0X71000C02E8);
	create_qword	(0X71000C0A48);
	create_qword	(0X71000C0A50);
	create_qword	(0X71000C0C18);
	create_qword	(0X710010E9C0);
	create_qword	(0X710010E9C8);
	create_qword	(0X710018E5D0);
	create_qword	(0X710018E5F8);
	create_qword	(0X710018E608);
	create_qword	(0X710018E610);
	create_qword	(0X710018E618);
	create_qword	(0X710018E620);
	create_qword	(0X710018E628);
	make_array	(0X710018E630,	0X9D0);
	create_qword	(0X710019A000);
	create_qword	(0X710019A010);
	create_qword	(0X710019A018);
	create_qword	(0X710019D020);
	create_qword	(0X710019D028);
	create_word	(0X710019D031);
	make_array	(0X710019D033,	0X5);
	create_qword	(0X710019D038);
	create_qword	(0X710019D040);
	create_byte	(0X710019D048);
	make_array	(0X710019D049,	0X7);
	create_qword	(0X710019D050);
	make_array	(0X710019D058,	0X8);
	create_qword	(0X710019D060);
	create_qword	(0X710019D2A0);
	create_qword	(0X710019D2A8);
	create_dword	(0X710019D2B4);
	create_qword	(0X710019D2C8);
	create_qword	(0X710019D2D0);
	create_qword	(0X710019D318);
	create_qword	(0X710019D320);
	create_dword	(0X710019D32C);
	make_array	(0X710019D330,	0X10);
	create_qword	(0X710019D340);
	create_qword	(0X710019D348);
	create_word	(0X710019D350);
	create_dword	(0X710019D3AC);
	create_dword	(0X710019D434);
	create_dword	(0X710019D4BC);
	create_dword	(0X710019D544);
	create_dword	(0X710019D5CC);
	create_dword	(0X710019D654);
	create_dword	(0X710019D6DC);
	create_dword	(0X710019D764);
	create_dword	(0X710019D7EC);
	create_dword	(0X710019D874);
	create_qword	(0X710019D8A8);
	create_word	(0X710019D8B0);
	create_qword	(0X710019D8D8);
	create_qword	(0X710019D8E0);
	create_qword	(0X710019DAC8);
	create_word	(0X710019DAD0);
	create_qword	(0X710019E438);
	MakeStruct	(0X710019E440,	"NotifEventHandlerStruct");
	set_name	(0X710019E440,	"gNotificationEventHandler_MainThreadArg");
	create_qword	(0X71001C09A0);
	make_array	(0X71001C09A8,	0X658);
	set_name	(0X71001C1000,	"gNotificationIpcServer_ThreadStack");
	create_byte	(0X71001C5000);
	make_array	(0X71001C5000,	0X4000);
	set_name	(0X71001C5000,	"gNotificationEventHandler_ThreadStack");
	MakeStruct	(0X71001C9000,	"nn::os::Thread");
	set_name	(0X71001C9000,	"nn.notification.IpcServer_Thread");
	MakeStruct	(0X71001C91C0,	"nn::os::Thread");
	set_name	(0X71001C91C0,	"nn.notification.EventHandler_Thread");
	create_byte	(0X71001C9380);
	make_array	(0X71001C9381,	0X7);
	create_qword	(0X71001C9388);
	create_qword	(0X71001C93A0);
	create_qword	(0X71001C93A8);
	create_qword	(0X71001C93B0);
	create_dword	(0X71001C9480);
	make_array	(0X71001C9484,	0X4);
	create_qword	(0X71001C9488);
	create_qword	(0X71001C9490);
	create_qword	(0X71001C9498);
	create_qword	(0X71001C94A0);
	create_qword	(0X71001C94C0);
	create_qword	(0X71001C94C8);
	make_array	(0X71001C94D0,	0X30);
	create_qword	(0X71001C9500);
	create_qword	(0X71001C9508);
	make_array	(0X71001C9510,	0X30);
	create_byte	(0X71001C9540);
	make_array	(0X71001C9541,	0X3);
	create_byte	(0X71001C9544);
	make_array	(0X71001C9545,	0X3);
	create_byte	(0X71001C9548);
	make_array	(0X71001C9549,	0X3);
	create_byte	(0X71001C954C);
	make_array	(0X71001C954D,	0X3);
	create_dword	(0X71001C9550);
	make_array	(0X71001C9554,	0X4);
	create_qword	(0X71001C9558);
	create_qword	(0X71001C9560);
	set_name	(0X71001C9560,	"gFspSrv");
	create_byte	(0X71001C9568);
	make_array	(0X71001C9568,	0X8);
	create_byte	(0X71001C95A0);
	make_array	(0X71001C95A0,	0X10);
	create_qword	(0X71001C95B0);
	create_byte	(0X71001C95B8);
	make_array	(0X71001C95B9,	0X7);
	create_qword	(0X71001C95C0);
	create_dword	(0X71001C95C8);
	make_array	(0X71001C95CC,	0X4);
	create_qword	(0X71001C95D0);
	create_dword	(0X71001C95D8);
	create_qword	(0X71001C9630);
	create_byte	(0X71001C9638);
	make_array	(0X71001C9639,	0X7);
	create_qword	(0X71001C9640);
	create_dword	(0X71001C9648);
	make_array	(0X71001C964C,	0X4);
	create_qword	(0X71001C9650);
	create_dword	(0X71001C9658);
	create_qword	(0X71001C96B0);
	create_byte	(0X71001C96B8);
	make_array	(0X71001C96B9,	0X7);
	create_qword	(0X71001C96C0);
	create_dword	(0X71001C96C8);
	make_array	(0X71001C96CC,	0X4);
	create_qword	(0X71001C96D0);
	create_dword	(0X71001C96D8);
	create_qword	(0X71001C9A30);
	make_array	(0X71001C9A38,	0X8);
	create_qword	(0X71001C9A40);
	create_qword	(0X71001C9A70);
	create_qword	(0X71001C9A78);
	create_qword	(0X71001C9A80);
	create_qword	(0X71001C9A88);
	create_dword	(0X71001C9AB0);
	make_array	(0X71001C9AB4,	0XC);
	create_dword	(0X71001C9AC0);
	make_array	(0X71001C9AC4,	0XC);
	create_dword	(0X71001C9AD0);
	make_array	(0X71001C9AD4,	0XC);
	create_dword	(0X71001C9AE0);
	make_array	(0X71001C9AE4,	0XC);
	create_dword	(0X71001C9AF0);
	make_array	(0X71001C9AF4,	0XC);
	create_dword	(0X71001C9B00);
	make_array	(0X71001C9B04,	0XC);
	create_dword	(0X71001C9B10);
	make_array	(0X71001C9B14,	0XC);
	create_dword	(0X71001C9B20);
	make_array	(0X71001C9B24,	0XC);
	create_dword	(0X71001C9B30);
	make_array	(0X71001C9B34,	0XC);
	create_dword	(0X71001C9B40);
	make_array	(0X71001C9B44,	0XC);
	create_dword	(0X71001C9B50);
	make_array	(0X71001C9B54,	0XC);
	create_dword	(0X71001C9B60);
	make_array	(0X71001C9B64,	0XC);
	create_dword	(0X71001C9B70);
	make_array	(0X71001C9B74,	0XC);
	create_dword	(0X71001C9B80);
	make_array	(0X71001C9B84,	0XC);
	create_dword	(0X71001C9B90);
	make_array	(0X71001C9B94,	0XC);
	create_dword	(0X71001C9BA0);
	make_array	(0X71001C9BA4,	0XC);
	create_word	(0X71001C9BB0);
	create_byte	(0X71001C9BB2);
	make_array	(0X71001C9BB3,	0XD);
	create_dword	(0X71001C9BC8);
	create_byte	(0X71001C9BCC);
	make_array	(0X71001C9BCD,	0X3);
	create_byte	(0X71001C9BD0);
	create_byte	(0X71001C9BD1);
	create_dword	(0X71001C9BE8);
	make_array	(0X71001C9BEC,	0X4);
	create_qword	(0X71001C9BF0);
	set_name	(0X71001C9BF0,	"_ZN2nn2fs16g_DefaultContextE");
	create_qword	(0X71001C9BF8);
	create_qword	(0X71001C9D40);
	create_qword	(0X71001C9EC0);
	create_dword	(0X71001C9EC8);
	create_qword	(0X71001C9FE8);
	create_qword	(0X71001C9FF0);
	create_qword	(0X71001C9FF8);
	create_qword	(0X71001CA000);
	create_qword	(0X71001CA008);
	create_qword	(0X71001CA068);
	create_qword	(0X71001CA070);
	create_qword	(0X71001CA078);
	create_qword	(0X71001CA080);
	create_qword	(0X71001CA088);
	create_qword	(0X71001CA090);
	create_byte	(0X71001CA098);
	create_byte	(0X71001CA0C8);
	set_name	(0X71001CA0C8,	"gPRNGInitialised");
	make_array	(0X71001CA0C9,	0X3);
	create_dword	(0X71001CA0CC);
	make_array	(0X71001CA0CC,	0X5);
	set_name	(0X71001CA0CC,	"gPRNG");
	create_qword	(0X71001CA0E0);
	create_qword	(0X71001CA0E8);
	create_byte	(0X71001CA0F0);
	make_array	(0X71001CA0F1,	0X3);
	create_dword	(0X71001CA0F4);
	create_qword	(0X71001CA0F8);
	create_qword	(0X71001CA108);
	create_dword	(0X71001CA1D0);
	create_dword	(0X71001CA1D4);
	create_byte	(0X71001CA1D8);
	make_array	(0X71001CA1D8,	0X8);
	create_qword	(0X71001CA1E0);
	make_array	(0X71001CA1E8,	0X8);
	create_qword	(0X71001CA1F0);
	create_qword	(0X71001CA430);
	create_qword	(0X71001CA438);
	create_dword	(0X71001CA444);
	create_qword	(0X71001CA458);
	create_qword	(0X71001CA460);
	create_qword	(0X71001CA4A8);
	create_qword	(0X71001CA4B0);
	create_dword	(0X71001CA4BC);
	create_qword	(0X71001CA4D0);
	create_qword	(0X71001CA4D8);
	create_word	(0X71001CA4E0);
	create_dword	(0X71001CA53C);
	create_dword	(0X71001CA5C4);
	create_dword	(0X71001CA64C);
	create_dword	(0X71001CA6D4);
	create_dword	(0X71001CA75C);
	create_dword	(0X71001CA7E4);
	create_dword	(0X71001CA86C);
	create_dword	(0X71001CA8F4);
	create_dword	(0X71001CA97C);
	create_dword	(0X71001CAA04);
	create_dword	(0X71001CAA8C);
	create_dword	(0X71001CAB14);
	create_dword	(0X71001CAB9C);
	create_dword	(0X71001CAC24);
	create_dword	(0X71001CACAC);
	create_dword	(0X71001CAD34);
	create_dword	(0X71001CADBC);
	create_dword	(0X71001CAE44);
	create_dword	(0X71001CAECC);
	create_dword	(0X71001CAF54);
	create_dword	(0X71001CAFDC);
	create_dword	(0X71001CB064);
	create_dword	(0X71001CB0EC);
	create_dword	(0X71001CB174);
	create_qword	(0X71001CB1A8);
	create_qword	(0X71001CB1B0);
	create_qword	(0X71001CB1B8);
	create_qword	(0X71001E31E0);
	create_qword	(0X71001E31E8);
	create_qword	(0X71001E3670);
	create_qword	(0X71001E5A88);
	create_qword	(0X71001E5A90);
	create_qword	(0X71001F4000);
	create_qword	(0X71001F4008);
	create_byte	(0X71001F4058);
	make_array	(0X71001F4059,	0X7);
	create_dword	(0X71001F40E0);
	make_array	(0X71001F40E4,	0X4);
	create_byte	(0X71001F40E8);
	make_array	(0X71001F40E8,	0X8);
	create_qword	(0X710021B000);
	create_qword	(0X710021B008);
	create_qword	(0X710021B010);
	create_qword	(0X710021B0A0);
	create_qword	(0X710021D0E8);
	create_dword	(0X710021D0F8);
	make_array	(0X710021D0FC,	0X4);
	create_byte	(0X710021D350);
	make_array	(0X710021D351,	0X3);
	create_qword	(0X710021D760);
	create_qword	(0X710021D768);
	create_byte	(0X710021D770);
	make_array	(0X710021D770,	0X138);
	create_qword	(0X710021D8A8);
	create_qword	(0X710021D8B8);
	create_qword	(0X710021DAF8);
	create_qword	(0X710021DB00);
	create_dword	(0X710021DB0C);
	make_array	(0X710021DB10,	0X10);
	create_qword	(0X710021DB20);
	create_qword	(0X710021DB28);
	create_byte	(0X710021DB30);
	create_dword	(0X710021DB8C);
	create_dword	(0X710021DC14);
	create_dword	(0X710021DC9C);
	create_dword	(0X710021DD24);
	create_dword	(0X710021DDAC);
	create_dword	(0X710021DDE0);
	create_byte	(0X710021DDE4);
	create_qword	(0X710021DE08);
	create_qword	(0X710021DE10);
	make_array	(0X710021DE18,	0X68);
	create_qword	(0X710021DE80);
	create_byte	(0X7100222000);
	make_array	(0X7100222000,	0X10);
	create_qword	(0X7100222010);
	make_array	(0X7100222010,	0X3);
	create_byte	(0X7100222028);
	make_array	(0X7100222029,	0X17);
	create_qword	(0X7100222040);
	create_dword	(0X7100222048);
	make_array	(0X710022204C,	0X14);
	create_dword	(0X7100222060);
	create_byte	(0X7100222070);
	make_array	(0X7100222070,	0X8);
	create_byte	(0X7100222078);
	create_dword	(0X710022209C);
	create_byte	(0X7100222E00);
	make_array	(0X7100222E00,	0X180);
	create_dword	(0X7100222F80);
	make_array	(0X7100222F84,	0XC);
	create_byte	(0X7100222F90);
	make_array	(0X7100222F91,	0X3);
	create_byte	(0X7100222F94);
	make_array	(0X7100222F95,	0X3);
	create_qword	(0X7100222FA0);
	create_byte	(0X7100222FA8);
	make_array	(0X7100222FA8,	0X8);
	create_dword	(0X7100222FB0);
	make_array	(0X7100222FB4,	0X4);
	create_qword	(0X7100222FB8);
	set_name	(0X7100222FB8,	"gSRepo3");
	create_byte	(0X7100222FC0);
	make_array	(0X7100222FC0,	0X8);
	create_qword	(0X7100222FC8);
	create_qword	(0X7100222FD0);
	create_qword	(0X7100222FD8);
	create_qword	(0X7100222FE0);
	create_qword	(0X7100223050);
	create_qword	(0X7100223058);
	create_qword	(0X71002240E8);
	set_name	(0X71002240E8,	"gSRepo2");
	create_qword	(0X71002240F0);
	set_name	(0X71002240F0,	"gStaticService");
	create_qword	(0X71002240F8);
	set_name	(0X71002240F8,	"gStandardLocalSystemClock");
	create_qword	(0X7100224100);
	create_qword	(0X7100224108);
	create_qword	(0X7100224110);
	create_qword	(0X7100224118);
	set_name	(0X7100224118,	"gTimeZoneService");
	create_byte	(0X7100224120);
	set_name	(0X7100224120,	"gTimeSharedMemoryInitialised");
	make_array	(0X7100224121,	0X7);
	MakeStruct	(0X7100224128,	"TimeSharedMemory");
	set_name	(0X7100224128,	"gTimeSharedMemory");
	create_byte	(0X7100224170);
	set_name	(0X7100224170,	"gTimeSharedMemoryLocalNetworkSystemClocksInitialised");
	make_array	(0X7100224171,	0X3);
	create_byte	(0X7100224174);
	create_dword	(0X7100224178);
	create_dword	(0X710022417C);
	set_name	(0X710022417C,	"gStaticServiceCount");
	create_dword	(0X7100224180);
	set_name	(0X7100224180,	"gStaticServiceType");
	make_array	(0X7100224184,	0X4);
	MakeStruct	(0X7100224188,	"GlueLockFreeAtomics");
	set_name	(0X7100224188,	"gTimeSharedMemoryLocal");
	MakeStruct	(0X71002241D8,	"GlueLockFreeAtomics");
	set_name	(0X71002241D8,	"gTimeSharedMemoryNetwork");
	set_name	(0X7100224230,	"timeIpcServerThread");
	create_byte	(0X7100225000);
	make_array	(0X7100225000,	0X2000);
	set_name	(0X7100225000,	"timeIpcServerStack");
	create_byte	(0X7100227000);
	set_name	(0X7100227000,	"gTimeInitialised");
	make_array	(0X7100227001,	0X7);
	create_qword	(0X7100227008);
	make_array	(0X7100227008,	0X160B);
	set_name	(0X7100227008,	"gTime");
	create_byte	(0X7100232060);
	make_array	(0X7100232060,	0X2800);
	set_name	(0X7100232060,	"gBinaryList");
	create_byte	(0X7100234860);
	make_array	(0X7100234860,	0XA000);
	set_name	(0X7100234860,	"gBinaryMount");
	create_byte	(0X710023E860);
	set_name	(0X710023E860,	"gRtcManagerInitialised");
	make_array	(0X710023E861,	0X79F);
	create_byte	(0X710023F000);
	make_array	(0X710023F000,	0X1000);
	set_name	(0X710023F000,	"timeWorkerStack");
	create_qword	(0X7100240000);
	set_name	(0X7100240000,	"gGlueTime58PmStateChangeHandler");
	create_qword	(0X7100240008);
	make_array	(0X7100240008,	0X9);
	set_name	(0X7100240008,	"gIPmModuleService");
	create_byte	(0X7100240050);
	set_name	(0X7100240050,	"gSystemClockContext_IsSet");
	make_array	(0X7100240051,	0X7);
	MakeStruct	(0X7100240058,	"SystemClockContext");
	set_name	(0X7100240058,	"gNetworkSystemClockContext");
	create_byte	(0X7100240078);
	set_name	(0X7100240078,	"gEphemeralSystemClockContext_IsSet");
	make_array	(0X7100240079,	0X7);
	MakeStruct	(0X7100240080,	"SystemClockContext");
	set_name	(0X7100240080,	"gEphemeralSystemClockContext");
	create_dword	(0X71002406BC);
	create_dword	(0X71002406C0);
	make_array	(0X71002406C4,	0X4);
	MakeStruct	(0X71002406CC,	"nn::os::SdkMutexType");
	set_name	(0X71002406CC,	"gStaticMutex");
	create_qword	(0X71002406D0);
	set_name	(0X71002406D0,	"gServiceTimeAL");
	create_byte	(0X71002406D8);
	make_array	(0X71002406D8,	0X8);
	create_byte	(0X71002406E0);
	MakeStruct	(0X71002406E4,	"nn::os::SdkMutexType");
	create_dword	(0X71002406E8);
	set_name	(0X71002406E8,	"gServiceManagerRefCount");
	create_qword	(0X71002406F0);
	set_name	(0X71002406F0,	"gTimeServiceManager");
	create_qword	(0X71002406F8);
	set_name	(0X71002406F8,	"gStaticServiceUserPSC");
	create_qword	(0X7100240700);
	set_name	(0X7100240700,	"gStaticServiceAdminPSC");
	create_qword	(0X7100240708);
	set_name	(0X7100240708,	"gStaticServiceRepairPSC");
	create_qword	(0X7100240710);
	set_name	(0X7100240710,	"gStaticServiceServiceManager");
	MakeStruct	(0X7100240718,	"nn::os::SdkMutexType");
	create_qword	(0X7100241008);
	set_name	(0X7100241008,	"__rel_plt_end");
	create_qword	(0X7100241010);
	set_name	(0X7100241010,	"__rel_plt_start");
	create_qword	(0X7100241018);
	set_name	(0X7100241018,	"__rel_dyn_end");
	create_qword	(0X7100241020);
	set_name	(0X7100241020,	"__rel_dyn_start");
	create_qword	(0X7100241028);
	set_name	(0X7100241028,	"nnosGetDefaultUserExceptionStackForApplication");
}

static Functions_0(void) {

	add_func    (0X7100000000,0X7100000018);
	set_func_flags(0X7100000000,0x1400);
	SetType(0X7100000000, "void __fastcall sub_7100000000(__int64);");
	add_func    (0X710000001C,0X710000002C);
	set_func_flags(0X710000001C,0x1401);
	SetType(0X710000001C, "void __noreturn sub_710000001C(void);");
	add_func    (0X7100000030,0X710000004C);
	set_func_flags(0X7100000030,0x1401);
	add_func    (0X7100000050,0X7100000060);
	set_func_flags(0X7100000050,0x1401);
	add_func    (0X7100000064,0X7100000098);
	set_func_flags(0X7100000064,0x1401);
	add_func    (0X710000009C,0X71000000AC);
	set_func_flags(0X710000009C,0x1401);
	add_func    (0X71000000B0,0X71000000C0);
	set_func_flags(0X71000000B0,0x1401);
	add_func    (0X71000000C4,0X71000000D8);
	set_func_flags(0X71000000C4,0x1401);
	SetType(0X71000000C4, "void __fastcall __noreturn sub_71000000C4(__int64, __int64, __int64 (__fastcall *)(__int64), void (__fastcall *)(__int64));");
	add_func    (0X71000000E0,0X7100000110);
	set_func_flags(0X71000000E0,0x1400);
	SetType(0X71000000E0, "void __noreturn sub_71000000E0();");
	add_func    (0X7100000110,0X7100000244);
	set_func_flags(0X7100000110,0x1410);
	set_frame_size(0X7100000110, 0X70, 32, 0);
	add_func    (0X7100000250,0X71000002B0);
	set_func_flags(0X7100000250,0x1410);
	set_frame_size(0X7100000250, 0, 32, 0);
	add_func    (0X71000002B0,0X71000002D4);
	set_func_flags(0X71000002B0,0x1410);
	set_frame_size(0X71000002B0, 0, 16, 0);
	add_func    (0X71000002E0,0X7100000358);
	set_func_flags(0X71000002E0,0x1400);
	add_func    (0X7100000360,0X71000003D8);
	set_func_flags(0X7100000360,0x1400);
	SetType(0X7100000360, "__int64 sub_7100000360();");
	add_func    (0X71000003E0,0X71000003E4);
	set_func_flags(0X71000003E0,0x14c0);
	add_func    (0X71000003F0,0X71000004A8);
	set_func_flags(0X71000003F0,0x1410);
	set_frame_size(0X71000003F0, 0, 64, 0);
	add_func    (0X71000004B0,0X71000004BC);
	set_func_flags(0X71000004B0,0x1400);
	add_func    (0X71000004C0,0X71000004CC);
	set_func_flags(0X71000004C0,0x1400);
	add_func    (0X71000004D0,0X7100000540);
	set_func_flags(0X71000004D0,0x1410);
	SetType(0X71000004D0, "__int64 SetupService_bgtc();");
	set_frame_size(0X71000004D0, 0X20, 0, 0);
	add_func    (0X7100000540,0X7100000558);
	set_func_flags(0X7100000540,0x1410);
	set_frame_size(0X7100000540, 0, 16, 0);
	add_func    (0X7100000558,0X7100000774);
	set_func_flags(0X7100000558,0x1410);
	set_frame_size(0X7100000558, 0X20, 0, 0);
	add_func    (0X7100000780,0X7100000B10);
	set_func_flags(0X7100000780,0x1410);
	SetType(0X7100000780, "__int64 SetupService_ectx();");
	set_frame_size(0X7100000780, 0X50, 16, 0);
	add_func    (0X7100000B10,0X7100000B1C);
	set_func_flags(0X7100000B10,0x1400);
	SetType(0X7100000B10, "__int64 __fastcall sub_7100000B10(__int64);");
	add_func    (0X7100000B1C,0X7100000D0C);
	set_func_flags(0X7100000B1C,0x1410);
	set_frame_size(0X7100000B1C, 0, 32, 0);
	add_func    (0X7100000D0C,0X7100000D60);
	set_func_flags(0X7100000D0C,0x1410);
	set_frame_size(0X7100000D0C, 0X20, 16, 0);
	add_func    (0X7100000D60,0X7100000D6C);
	set_func_flags(0X7100000D60,0x1400);
	add_func    (0X7100000D6C,0X7100000D70);
	set_func_flags(0X7100000D6C,0x1440);
	add_func    (0X7100000D70,0X7100000D94);
	set_func_flags(0X7100000D70,0x1410);
	set_frame_size(0X7100000D70, 0, 16, 0);
	add_func    (0X7100000D94,0X7100000EB0);
	set_func_flags(0X7100000D94,0x1410);
	set_frame_size(0X7100000D94, 0X30, 16, 0);
	add_func    (0X7100000EB0,0X7100000F4C);
	set_func_flags(0X7100000EB0,0x1410);
	set_frame_size(0X7100000EB0, 0, 32, 0);
	add_func    (0X7100000F4C,0X7100000F54);
	set_func_flags(0X7100000F4C,0x1400);
	add_func    (0X7100000F54,0X7100000F58);
	set_func_flags(0X7100000F54,0x1440);
	add_func    (0X7100000F58,0X7100001104);
	set_func_flags(0X7100000F58,0x1410);
	set_frame_size(0X7100000F58, 0X20, 16, 0);
	add_func    (0X7100001104,0X710000115C);
	set_func_flags(0X7100001104,0x1410);
	set_frame_size(0X7100001104, 0X20, 16, 0);
	add_func    (0X710000115C,0X7100001180);
	set_func_flags(0X710000115C,0x1410);
	set_frame_size(0X710000115C, 0X20, 0, 0);
	add_func    (0X7100001180,0X710000118C);
	set_func_flags(0X7100001180,0x1400);
	add_func    (0X710000118C,0X7100001190);
	set_func_flags(0X710000118C,0x1440);
	add_func    (0X7100001190,0X7100001198);
	set_func_flags(0X7100001190,0x1400);
	add_func    (0X7100001198,0X71000011F0);
	set_func_flags(0X7100001198,0x1410);
	set_frame_size(0X7100001198, 0X20, 16, 0);
	add_func    (0X71000011F0,0X71000011FC);
	set_func_flags(0X71000011F0,0x1400);
	add_func    (0X71000011FC,0X7100001200);
	set_func_flags(0X71000011FC,0x1440);
	add_func    (0X7100001200,0X7100001474);
	set_func_flags(0X7100001200,0x1410);
	set_frame_size(0X7100001200, 0XC0, 80, 0);
	add_func    (0X7100001474,0X7100001648);
	set_func_flags(0X7100001474,0x1410);
	set_frame_size(0X7100001474, 0XE0, 32, 0);
	add_func    (0X7100001648,0X710000180C);
	set_func_flags(0X7100001648,0x1410);
	set_frame_size(0X7100001648, 0XD0, 48, 0);
	add_func    (0X710000180C,0X7100001920);
	set_func_flags(0X710000180C,0x1410);
	set_frame_size(0X710000180C, 0X30, 0, 0);
	add_func    (0X7100001920,0X7100001AF8);
	set_func_flags(0X7100001920,0x1410);
	set_frame_size(0X7100001920, 0XC0, 64, 0);
	add_func    (0X7100001AF8,0X7100001C5C);
	set_func_flags(0X7100001AF8,0x1410);
	set_frame_size(0X7100001AF8, 0X30, 0, 0);
	add_func    (0X7100001C5C,0X7100001DE8);
	set_func_flags(0X7100001C5C,0x1410);
	set_frame_size(0X7100001C5C, 0XB0, 64, 0);
	add_func    (0X7100001DE8,0X7100001FE4);
	set_func_flags(0X7100001DE8,0x1410);
	set_frame_size(0X7100001DE8, 0XC0, 80, 0);
	add_func    (0X7100001FE4,0X71000021B0);
	set_func_flags(0X7100001FE4,0x1410);
	set_frame_size(0X7100001FE4, 0XD0, 32, 0);
	add_func    (0X71000021B0,0X71000022EC);
	set_func_flags(0X71000021B0,0x1410);
	set_frame_size(0X71000021B0, 0X30, 0, 0);
	add_func    (0X71000022EC,0X71000024C0);
	set_func_flags(0X71000022EC,0x1410);
	set_frame_size(0X71000022EC, 0XE0, 32, 0);
	add_func    (0X71000024C0,0X7100002684);
	set_func_flags(0X71000024C0,0x1410);
	set_frame_size(0X71000024C0, 0XD0, 48, 0);
	add_func    (0X7100002684,0X710000268C);
	set_func_flags(0X7100002684,0x1400);
	add_func    (0X710000268C,0X71000026D8);
	set_func_flags(0X710000268C,0x1410);
	set_frame_size(0X710000268C, 0X20, 0, 0);
	add_func    (0X71000026D8,0X71000026E0);
	set_func_flags(0X71000026D8,0x1400);
	add_func    (0X71000026E0,0X71000026E8);
	set_func_flags(0X71000026E0,0x1400);
	add_func    (0X71000026E8,0X7100002714);
	set_func_flags(0X71000026E8,0x1410);
	set_frame_size(0X71000026E8, 0X10, 16, 0);
	add_func    (0X7100002714,0X7100002728);
	set_func_flags(0X7100002714,0x1400);
	add_func    (0X7100002728,0X7100002730);
	set_func_flags(0X7100002728,0x1400);
	add_func    (0X7100002730,0X710000277C);
	set_func_flags(0X7100002730,0x1410);
	set_frame_size(0X7100002730, 0X20, 0, 0);
	add_func    (0X7100002780,0X7100002854);
	set_func_flags(0X7100002780,0x1410);
	set_frame_size(0X7100002780, 0X10, 48, 0);
	add_func    (0X7100002854,0X7100002878);
	set_func_flags(0X7100002854,0x1410);
	set_frame_size(0X7100002854, 0X20, 0, 0);
	add_func    (0X7100002878,0X710000287C);
	set_func_flags(0X7100002878,0x1480);
	add_func    (0X710000287C,0X71000028A0);
	set_func_flags(0X710000287C,0x1410);
	set_frame_size(0X710000287C, 0X20, 0, 0);
	add_func    (0X71000028A0,0X71000028A4);
	set_func_flags(0X71000028A0,0x1480);
	add_func    (0X71000028A4,0X71000028A8);
	set_func_flags(0X71000028A4,0x1440);
	add_func    (0X71000028A8,0X71000028AC);
	set_func_flags(0X71000028A8,0x1440);
	add_func    (0X71000028AC,0X71000028D8);
	set_func_flags(0X71000028AC,0x1410);
	set_frame_size(0X71000028AC, 0X10, 16, 0);
	add_func    (0X71000028D8,0X71000028EC);
	set_func_flags(0X71000028D8,0x1400);
	add_func    (0X71000028EC,0X71000028FC);
	set_func_flags(0X71000028EC,0x1400);
	add_func    (0X71000028FC,0X7100002900);
	set_func_flags(0X71000028FC,0x1440);
	add_func    (0X7100002900,0X7100002904);
	set_func_flags(0X7100002900,0x1440);
	add_func    (0X7100002904,0X7100002908);
	set_func_flags(0X7100002904,0x1440);
	add_func    (0X7100002908,0X710000290C);
	set_func_flags(0X7100002908,0x1440);
	add_func    (0X710000290C,0X710000291C);
	set_func_flags(0X710000290C,0x1400);
	add_func    (0X710000291C,0X710000292C);
	set_func_flags(0X710000291C,0x1400);
	add_func    (0X710000292C,0X710000293C);
	set_func_flags(0X710000292C,0x1400);
	add_func    (0X7100002940,0X7100002BB4);
	set_func_flags(0X7100002940,0x1410);
	set_frame_size(0X7100002940, 0X20, 16, 0);
	add_func    (0X7100002BC0,0X7100002C2C);
	set_func_flags(0X7100002BC0,0x1410);
	SetType(0X7100002BC0, "__int64 sub_7100002BC0();");
	set_frame_size(0X7100002BC0, 0X20, 0, 0);
	add_func    (0X7100002C2C,0X7100002C30);
	set_func_flags(0X7100002C2C,0x1480);
	add_func    (0X7100002C30,0X7100002C44);
	set_func_flags(0X7100002C30,0x1400);
	SetType(0X7100002C30, "__int64 __fastcall sub_7100002C30(__int64);");
	add_func    (0X7100002C50,0X7100002C6C);
	set_func_flags(0X7100002C50,0x1400);
	add_func    (0X7100002C70,0X7100002C84);
	set_func_flags(0X7100002C70,0x1400);
	add_func    (0X7100002C90,0X7100002CAC);
	set_func_flags(0X7100002C90,0x1400);
	SetType(0X7100002C90, "__int64 __fastcall delete(__int64 result);");
	add_func    (0X7100002CB0,0X7100002CC4);
	set_func_flags(0X7100002CB0,0x1400);
	add_func    (0X7100002CD0,0X7100002CE4);
	set_func_flags(0X7100002CD0,0x1400);
	add_func    (0X7100002CF0,0X7100002D40);
	set_func_flags(0X7100002CF0,0x1410);
	SetType(0X7100002CF0, "__int64 __fastcall sub_7100002CF0(_QWORD);");
	set_frame_size(0X7100002CF0, 0X20, 0, 0);
	add_func    (0X7100002D40,0X7100002D44);
	set_func_flags(0X7100002D40,0x1440);
	add_func    (0X7100002D50,0X7100002DB0);
	set_func_flags(0X7100002D50,0x1410);
	SetType(0X7100002D50, "void __fastcall nnMain();");
	set_frame_size(0X7100002D50, 0X30, 16, 0);
	add_func    (0X7100002DB0,0X7100002E50);
	set_func_flags(0X7100002DB0,0x1410);
	set_frame_size(0X7100002DB0, 0, 32, 0);
	add_func    (0X7100002E50,0X7100002E8C);
	set_func_flags(0X7100002E50,0x1410);
	set_frame_size(0X7100002E50, 0X20, 0, 0);
	add_func    (0X7100002E8C,0X7100002ED8);
	set_func_flags(0X7100002E8C,0x1410);
	set_frame_size(0X7100002E8C, 0X20, 0, 0);
	add_func    (0X7100002ED8,0X7100002FFC);
	set_func_flags(0X7100002ED8,0x1410);
	SetType(0X7100002ED8, "__int64 __fastcall sub_7100002ED8(__int64, __int64, __int64);");
	set_frame_size(0X7100002ED8, 0, 48, 0);
	add_func    (0X7100003000,0X7100003018);
	set_func_flags(0X7100003000,0x1400);
	add_func    (0X7100003020,0X7100003310);
	set_func_flags(0X7100003020,0x1410);
	SetType(0X7100003020, "__int64 SetupService_notif();");
	set_frame_size(0X7100003020, 0X40, 48, 0);
	add_func    (0X7100003310,0X7100003424);
	set_func_flags(0X7100003310,0x1410);
	set_frame_size(0X7100003310, 0, 32, 0);
	add_func    (0X7100003424,0X7100003478);
	set_func_flags(0X7100003424,0x1410);
	set_frame_size(0X7100003424, 0X20, 16, 0);
	add_func    (0X7100003478,0X7100003484);
	set_func_flags(0X7100003478,0x1400);
	add_func    (0X7100003484,0X7100003488);
	set_func_flags(0X7100003484,0x1440);
	add_func    (0X7100003488,0X71000034AC);
	set_func_flags(0X7100003488,0x1410);
	set_frame_size(0X7100003488, 0, 16, 0);
	add_func    (0X71000034AC,0X71000034B8);
	set_func_flags(0X71000034AC,0x1411);
	set_frame_size(0X71000034AC, 0, 16, 0);
	add_func    (0X71000034B8,0X7100003540);
	set_func_flags(0X71000034B8,0x1410);
	set_frame_size(0X71000034B8, 0, 32, 0);
	add_func    (0X7100003540,0X7100003548);
	set_func_flags(0X7100003540,0x1400);
	add_func    (0X7100003548,0X710000354C);
	set_func_flags(0X7100003548,0x1440);
	add_func    (0X710000354C,0X710000363C);
	set_func_flags(0X710000354C,0x1410);
	set_frame_size(0X710000354C, 0, 32, 0);
	add_func    (0X710000363C,0X7100003690);
	set_func_flags(0X710000363C,0x1410);
	set_frame_size(0X710000363C, 0X20, 16, 0);
	add_func    (0X7100003690,0X71000036B4);
	set_func_flags(0X7100003690,0x1410);
	set_frame_size(0X7100003690, 0X20, 0, 0);
	add_func    (0X71000036B4,0X71000036C0);
	set_func_flags(0X71000036B4,0x1400);
	add_func    (0X71000036C0,0X71000036C4);
	set_func_flags(0X71000036C0,0x1440);
	add_func    (0X71000036C4,0X71000037B4);
	set_func_flags(0X71000036C4,0x1410);
	set_frame_size(0X71000036C4, 0, 32, 0);
	add_func    (0X71000037B4,0X7100003808);
	set_func_flags(0X71000037B4,0x1410);
	set_frame_size(0X71000037B4, 0X20, 16, 0);
	add_func    (0X7100003808,0X7100003814);
	set_func_flags(0X7100003808,0x1400);
	add_func    (0X7100003814,0X7100003940);
	set_func_flags(0X7100003814,0x1410);
	set_frame_size(0X7100003814, 0X20, 0, 0);
	add_func    (0X7100003940,0X7100003944);
	set_func_flags(0X7100003940,0x1440);
	add_func    (0X7100003944,0X7100003948);
	set_func_flags(0X7100003944,0x14c0);
	SetType(0X7100003944, "__int64 __fastcall j_delete(__int64 result);");
	add_func    (0X7100003948,0X7100003950);
	set_func_flags(0X7100003948,0x1400);
	add_func    (0X7100003950,0X7100003958);
	set_func_flags(0X7100003950,0x1400);
	add_func    (0X7100003958,0X7100003964);
	set_func_flags(0X7100003958,0x1400);
	add_func    (0X7100003964,0X7100003968);
	set_func_flags(0X7100003964,0x1440);
	add_func    (0X7100003968,0X710000396C);
	set_func_flags(0X7100003968,0x1440);
	add_func    (0X710000396C,0X7100003974);
	set_func_flags(0X710000396C,0x1400);
	add_func    (0X7100003974,0X710000397C);
	set_func_flags(0X7100003974,0x1400);
	add_func    (0X710000397C,0X7100003984);
	set_func_flags(0X710000397C,0x1400);
	add_func    (0X7100003984,0X7100003990);
	set_func_flags(0X7100003984,0x1400);
	add_func    (0X7100003990,0X710000399C);
	set_func_flags(0X7100003990,0x1400);
	add_func    (0X710000399C,0X71000039A4);
	set_func_flags(0X710000399C,0x1400);
	add_func    (0X71000039A4,0X71000039B8);
	set_func_flags(0X71000039A4,0x1400);
	add_func    (0X71000039B8,0X71000039C8);
	set_func_flags(0X71000039B8,0x1400);
	add_func    (0X71000039C8,0X71000039D0);
	set_func_flags(0X71000039C8,0x1400);
	add_func    (0X71000039D0,0X71000039FC);
	set_func_flags(0X71000039D0,0x1410);
	set_frame_size(0X71000039D0, 0X10, 16, 0);
	add_func    (0X71000039FC,0X7100003A04);
	set_func_flags(0X71000039FC,0x1400);
	add_func    (0X7100003A04,0X7100003A0C);
	set_func_flags(0X7100003A04,0x1400);
	add_func    (0X7100003A0C,0X7100003A18);
	set_func_flags(0X7100003A0C,0x1400);
	add_func    (0X7100003A18,0X7100003A30);
	set_func_flags(0X7100003A18,0x1400);
	add_func    (0X7100003A30,0X7100003A3C);
	set_func_flags(0X7100003A30,0x1400);
	SetType(0X7100003A30, "__int64 __fastcall sub_7100003A30(__int64, unsigned __int16, char);");
	add_func    (0X7100003A3C,0X7100003A48);
	set_func_flags(0X7100003A3C,0x1400);
	add_func    (0X7100003A48,0X7100003A50);
	set_func_flags(0X7100003A48,0x1400);
	add_func    (0X7100003A50,0X7100003A58);
	set_func_flags(0X7100003A50,0x1400);
	add_func    (0X7100003A58,0X7100003A60);
	set_func_flags(0X7100003A58,0x1400);
	SetType(0X7100003A58, "__int64 __fastcall sub_7100003A58(__int64, __int64);");
	add_func    (0X7100003A60,0X7100003A6C);
	set_func_flags(0X7100003A60,0x1400);
	add_func    (0X7100003A70,0X7100003A7C);
	set_func_flags(0X7100003A70,0x1400);
	add_func    (0X7100003A7C,0X7100003B90);
	set_func_flags(0X7100003A7C,0x1410);
	set_frame_size(0X7100003A7C, 0X30, 0, 0);
	add_func    (0X7100003B90,0X7100003D08);
	set_func_flags(0X7100003B90,0x1410);
	set_frame_size(0X7100003B90, 0XC0, 32, 0);
	add_func    (0X7100003D08,0X7100003F24);
	set_func_flags(0X7100003D08,0x1410);
	set_frame_size(0X7100003D08, 0XC0, 32, 0);
	add_func    (0X7100003F24,0X71000040F4);
	set_func_flags(0X7100003F24,0x1410);
	set_frame_size(0X7100003F24, 0XD0, 64, 0);
	add_func    (0X71000040F4,0X7100004294);
	set_func_flags(0X71000040F4,0x1410);
	set_frame_size(0X71000040F4, 0XE0, 32, 0);
	add_func    (0X7100004294,0X7100004458);
	set_func_flags(0X7100004294,0x1410);
	set_frame_size(0X7100004294, 0XD0, 32, 0);
	add_func    (0X7100004458,0X7100004634);
	set_func_flags(0X7100004458,0x1410);
	set_frame_size(0X7100004458, 0XC0, 64, 0);
	add_func    (0X7100004634,0X710000473C);
	set_func_flags(0X7100004634,0x1410);
	set_frame_size(0X7100004634, 0X30, 0, 0);
	add_func    (0X710000473C,0X7100004C64);
	set_func_flags(0X710000473C,0x1410);
	set_frame_size(0X710000473C, 0XC0, 32, 0);
	add_func    (0X7100004C64,0X7100004DCC);
	set_func_flags(0X7100004C64,0x1410);
	set_frame_size(0X7100004C64, 0XC0, 32, 0);
	add_func    (0X7100004DCC,0X7100004FA8);
	set_func_flags(0X7100004DCC,0x1410);
	set_frame_size(0X7100004DCC, 0XC0, 64, 0);
	add_func    (0X7100004FA8,0X7100005130);
	set_func_flags(0X7100004FA8,0x1410);
	set_frame_size(0X7100004FA8, 0XD0, 32, 0);
	add_func    (0X7100005130,0X7100005304);
	set_func_flags(0X7100005130,0x1410);
	set_frame_size(0X7100005130, 0XE0, 32, 0);
	add_func    (0X7100005304,0X7100005468);
	set_func_flags(0X7100005304,0x1410);
	set_frame_size(0X7100005304, 0XE0, 32, 0);
	add_func    (0X7100005468,0X71000055F0);
	set_func_flags(0X7100005468,0x1410);
	set_frame_size(0X7100005468, 0XB0, 64, 0);
	add_func    (0X71000055F0,0X710000579C);
	set_func_flags(0X71000055F0,0x1410);
	set_frame_size(0X71000055F0, 0XD0, 32, 0);
	add_func    (0X710000579C,0X7100005990);
	set_func_flags(0X710000579C,0x1410);
	set_frame_size(0X710000579C, 0XE0, 48, 0);
	add_func    (0X7100005990,0X7100005AE8);
	set_func_flags(0X7100005990,0x1410);
	set_frame_size(0X7100005990, 0XC0, 32, 0);
	add_func    (0X7100005AE8,0X7100005C64);
	set_func_flags(0X7100005AE8,0x1410);
	set_frame_size(0X7100005AE8, 0XB0, 64, 0);
	add_func    (0X7100005C64,0X7100005DB4);
	set_func_flags(0X7100005C64,0x1410);
	set_frame_size(0X7100005C64, 0XC0, 32, 0);
	add_func    (0X7100005DB4,0X7100005F1C);
	set_func_flags(0X7100005DB4,0x1410);
	set_frame_size(0X7100005DB4, 0XC0, 32, 0);
	add_func    (0X7100005F1C,0X71000060A4);
	set_func_flags(0X7100005F1C,0x1410);
	set_frame_size(0X7100005F1C, 0XB0, 64, 0);
	add_func    (0X71000060A4,0X71000061B8);
	set_func_flags(0X71000060A4,0x1410);
	set_frame_size(0X71000060A4, 0X30, 0, 0);
	add_func    (0X71000061B8,0X710000635C);
	set_func_flags(0X71000061B8,0x1410);
	set_frame_size(0X71000061B8, 0XC0, 32, 0);
	define_local_var(0X71000061B8, 0X710000635C, "[bp-0X8]", "result");
	add_func    (0X7100006360,0X71000067E4);
	set_func_flags(0X7100006360,0x1410);
	SetType(0X7100006360, "void __fastcall __noreturn NotificationEventHandler_ThreadFunc(NotifEventHandlerStruct *this);");
	set_frame_size(0X7100006360, 0X2D0, 64, 0);
	define_local_var(0X7100006360, 0X71000067E4, "[bp-0X298]", "a1");
	define_local_var(0X7100006360, 0X71000067E4, "[bp-0X1E8]", "ipmodule");
	add_func    (0X71000067F0,0X710000697C);
	set_func_flags(0X71000067F0,0x1410);
	set_frame_size(0X71000067F0, 0X20, 16, 0);
	add_func    (0X710000697C,0X71000069F0);
	set_func_flags(0X710000697C,0x1400);
	set_frame_size(0X710000697C, 0XD0, 0, 0);
	add_func    (0X71000069FC,0X7100006A18);
	set_func_flags(0X71000069FC,0x1400);
	add_func    (0X7100006A20,0X7100006A24);
	set_func_flags(0X7100006A20,0x1480);
	SetType(0X7100006A20, "void sub_7100006A20();");
	add_func    (0X7100006A30,0X7100007188);
	set_func_flags(0X7100006A30,0x1410);
	set_frame_size(0X7100006A30, 0X40, 96, 0);
	add_func    (0X7100007188,0X71000073C4);
	set_func_flags(0X7100007188,0x1410);
	set_frame_size(0X7100007188, 0, 96, 0);
	add_func    (0X71000073D0,0X71000074E4);
	set_func_flags(0X71000073D0,0x1410);
	set_frame_size(0X71000073D0, 0, 64, 0);
	add_func    (0X71000074F0,0X7100007578);
	set_func_flags(0X71000074F0,0x1410);
	set_frame_size(0X71000074F0, 0X20, 16, 0);
	add_func    (0X7100007580,0X71000075E8);
	set_func_flags(0X7100007580,0x1410);
	set_frame_size(0X7100007580, 0, 32, 0);
	add_func    (0X71000075F0,0X7100007638);
	set_func_flags(0X71000075F0,0x1410);
	set_frame_size(0X71000075F0, 0, 32, 0);
	add_func    (0X7100007640,0X71000077FC);
	set_func_flags(0X7100007640,0x1410);
	set_frame_size(0X7100007640, 0, 80, 0);
	add_func    (0X71000077FC,0X710000780C);
	set_func_flags(0X71000077FC,0x1400);
	add_func    (0X710000780C,0X710000781C);
	set_func_flags(0X710000780C,0x1400);
	add_func    (0X7100007820,0X71000078EC);
	set_func_flags(0X7100007820,0x1400);
	add_func    (0X71000078F0,0X71000078F4);
	set_func_flags(0X71000078F0,0x1440);
	add_func    (0X7100007900,0X710000790C);
	set_func_flags(0X7100007900,0x1411);
	SetType(0X7100007900, "void __fastcall __noreturn _cxa_pure_virtual();");
	set_frame_size(0X7100007900, 0, 16, 0);
	add_func    (0X7100007910,0X7100007978);
	set_func_flags(0X7100007910,0x1410);
	set_frame_size(0X7100007910, 0, 16, 0);
	add_func    (0X7100007980,0X710000798C);
	set_func_flags(0X7100007980,0x1411);
	set_frame_size(0X7100007980, 0, 16, 0);
	add_func    (0X7100007990,0X710000799C);
	set_func_flags(0X7100007990,0x1400);
	add_func    (0X71000079A0,0X71000079A4);
	set_func_flags(0X71000079A0,0x1440);
	add_func    (0X71000079B0,0X71000079EC);
	set_func_flags(0X71000079B0,0x1400);
	add_func    (0X71000079F0,0X7100007AC4);
	set_func_flags(0X71000079F0,0x1411);
	SetType(0X71000079F0, "void __fastcall __noreturn sub_71000079F0(__int64, __int64, __int64, int, int *, __int64, __int64, __int64);");
	set_frame_size(0X71000079F0, 0XA0, 64, 0);
	add_func    (0X7100007AD0,0X7100007B1C);
	set_func_flags(0X7100007AD0,0x1411);
	set_frame_size(0X7100007AD0, 0XB0, 16, 0);
	add_func    (0X7100007B20,0X7100007B78);
	set_func_flags(0X7100007B20,0x1411);
	SetType(0X7100007B20, "void __fastcall __noreturn sub_7100007B20(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);");
	set_frame_size(0X7100007B20, 0XB0, 16, 0);
	add_func    (0X7100007B80,0X7100007BE4);
	set_func_flags(0X7100007B80,0x1411);
	SetType(0X7100007B80, "void __fastcall __noreturn sub_7100007B80(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD);");
	set_frame_size(0X7100007B80, 0XC0, 16, 0);
	add_func    (0X7100007BF0,0X7100007C04);
	set_func_flags(0X7100007BF0,0x1411);
	SetType(0X7100007BF0, "void __fastcall __noreturn sub_7100007BF0(__int64, __int64, __int64, __int64);");
	set_frame_size(0X7100007BF0, 0, 16, 0);
	add_func    (0X7100007C10,0X7100007C30);
	set_func_flags(0X7100007C10,0x1411);
	SetType(0X7100007C10, "void __noreturn nn__diag__detail__AbortImpl();");
	set_frame_size(0X7100007C10, 0, 16, 0);
	add_func    (0X7100007C30,0X7100007C58);
	set_func_flags(0X7100007C30,0x1411);
	SetType(0X7100007C30, "void __fastcall __noreturn nn__diag__detail__AbortImpl(__int64);");
	set_frame_size(0X7100007C30, 0, 16, 0);
	add_func    (0X7100007C60,0X7100007C8C);
	set_func_flags(0X7100007C60,0x1411);
	set_frame_size(0X7100007C60, 0, 16, 0);
	add_func    (0X7100007C90,0X7100007D0C);
	set_func_flags(0X7100007C90,0x1411);
	SetType(0X7100007C90, "void __fastcall __noreturn sub_7100007C90(__int64, __int64, int);");
	set_frame_size(0X7100007C90, 0X80, 16, 0);
	add_func    (0X7100007D10,0X7100007D2C);
	set_func_flags(0X7100007D10,0x1411);
	SetType(0X7100007D10, "void __noreturn nn__detail__UnexpectedDefaultImpl();");
	set_frame_size(0X7100007D10, 0, 16, 0);
	add_func    (0X7100007D30,0X7100007D54);
	set_func_flags(0X7100007D30,0x1411);
	SetType(0X7100007D30, "void __fastcall __noreturn sub_7100007D30(_QWORD);");
	set_frame_size(0X7100007D30, 0, 16, 0);
	add_func    (0X7100007D60,0X7100007D7C);
	set_func_flags(0X7100007D60,0x1400);
	SetType(0X7100007D60, "__int64 sub_7100007D60(void);");
	add_func    (0X7100007D80,0X7100007DF8);
	set_func_flags(0X7100007D80,0x1410);
	SetType(0X7100007D80, "__int64 __fastcall sub_7100007D80(_QWORD);");
	set_frame_size(0X7100007D80, 0X20, 16, 0);
	add_func    (0X7100007E00,0X7100007E58);
	set_func_flags(0X7100007E00,0x1410);
	SetType(0X7100007E00, "__int64 __fastcall sub_7100007E00(_QWORD);");
	set_frame_size(0X7100007E00, 0X20, 16, 0);
	add_func    (0X7100007E60,0X7100007E6C);
	set_func_flags(0X7100007E60,0x1400);
	add_func    (0X7100007E70,0X7100007EC8);
	set_func_flags(0X7100007E70,0x1410);
	set_frame_size(0X7100007E70, 0X20, 16, 0);
	add_func    (0X7100007ED0,0X7100007ED4);
	set_func_flags(0X7100007ED0,0x1440);
	add_func    (0X7100007EE0,0X7100007F6C);
	set_func_flags(0X7100007EE0,0x1410);
	set_frame_size(0X7100007EE0, 0, 32, 0);
	add_func    (0X7100007F70,0X7100007FBC);
	set_func_flags(0X7100007F70,0x1410);
	set_frame_size(0X7100007F70, 0, 32, 0);
	add_func    (0X7100007FC0,0X710000804C);
	set_func_flags(0X7100007FC0,0x1410);
	set_frame_size(0X7100007FC0, 0, 32, 0);
	add_func    (0X7100008050,0X710000809C);
	set_func_flags(0X7100008050,0x1410);
	set_frame_size(0X7100008050, 0, 32, 0);
	add_func    (0X71000080A0,0X71000080AC);
	set_func_flags(0X71000080A0,0x1400);
	SetType(0X71000080A0, "bool __fastcall PtrNotNull(__int64);");
	add_func    (0X71000080B0,0X71000080F4);
	set_func_flags(0X71000080B0,0x1410);
	set_frame_size(0X71000080B0, 0X80, 16, 0);
	add_func    (0X71000080F4,0X710000811C);
	set_func_flags(0X71000080F4,0x1410);
	set_frame_size(0X71000080F4, 0X10, 16, 0);
	add_func    (0X710000811C,0X7100008154);
	set_func_flags(0X710000811C,0x1410);
	set_frame_size(0X710000811C, 0X10, 16, 0);
	add_func    (0X7100008154,0X71000081A0);
	set_func_flags(0X7100008154,0x1400);
	set_frame_size(0X7100008154, 0X10, 0, 0);
	add_func    (0X71000081A0,0X71000081C4);
	set_func_flags(0X71000081A0,0x1410);
	set_frame_size(0X71000081A0, 0X20, 16, 0);
	add_func    (0X71000081C4,0X71000081D8);
	set_func_flags(0X71000081C4,0x1400);
	set_frame_size(0X71000081C4, 0, 0, 0);
	add_func    (0X71000081D8,0X71000081F8);
	set_func_flags(0X71000081D8,0x1400);
	set_frame_size(0X71000081D8, 0, 0, 0);
	add_func    (0X71000081F8,0X7100008204);
	set_func_flags(0X71000081F8,0x1400);
	set_frame_size(0X71000081F8, 0, 0, 0);
	add_func    (0X7100008204,0X7100008230);
	set_func_flags(0X7100008204,0x1400);
	set_frame_size(0X7100008204, 0, 0, 0);
	add_func    (0X7100008230,0X7100008248);
	set_func_flags(0X7100008230,0x1400);
	set_frame_size(0X7100008230, 0, 0, 0);
	add_func    (0X7100008248,0X710000826C);
	set_func_flags(0X7100008248,0x1410);
	set_frame_size(0X7100008248, 0X10, 16, 0);
	add_func    (0X710000826C,0X71000082B4);
	set_func_flags(0X710000826C,0x1410);
	set_frame_size(0X710000826C, 0X20, 16, 0);
	add_func    (0X71000082B4,0X71000082F4);
	set_func_flags(0X71000082B4,0x1410);
	set_frame_size(0X71000082B4, 0X30, 16, 0);
	add_func    (0X71000082F4,0X7100008310);
	set_func_flags(0X71000082F4,0x1400);
	set_frame_size(0X71000082F4, 0, 0, 0);
	add_func    (0X7100008320,0X7100008338);
	set_func_flags(0X7100008320,0x1400);
	set_frame_size(0X7100008320, 0, 0, 0);
	add_func    (0X7100008338,0X7100008360);
	set_func_flags(0X7100008338,0x1410);
	set_frame_size(0X7100008338, 0X20, 16, 0);
	add_func    (0X7100008360,0X7100008378);
	set_func_flags(0X7100008360,0x1400);
	set_frame_size(0X7100008360, 0, 0, 0);
	add_func    (0X7100008378,0X710000837C);
	set_func_flags(0X7100008378,0x1400);
	add_func    (0X710000837C,0X7100008388);
	set_func_flags(0X710000837C,0x1400);
	add_func    (0X710000839C,0X71000083A8);
	set_func_flags(0X710000839C,0x1400);
	add_func    (0X71000083C4,0X71000083E0);
	set_func_flags(0X71000083C4,0x1400);
	set_frame_size(0X71000083C4, 0, 0, 0);
	add_func    (0X71000083E0,0X71000083F8);
	set_func_flags(0X71000083E0,0x1400);
	set_frame_size(0X71000083E0, 0, 0, 0);
	add_func    (0X71000083F8,0X7100008404);
	set_func_flags(0X71000083F8,0x1400);
	add_func    (0X7100008420,0X7100008438);
	set_func_flags(0X7100008420,0x1400);
	set_frame_size(0X7100008420, 0, 0, 0);
	add_func    (0X7100008438,0X7100008450);
	set_func_flags(0X7100008438,0x1400);
	set_frame_size(0X7100008438, 0, 0, 0);
	add_func    (0X7100008450,0X710000845C);
	set_func_flags(0X7100008450,0x1400);
	add_func    (0X710000846C,0X71000084C0);
	set_func_flags(0X710000846C,0x1400);
	set_frame_size(0X710000846C, 0, 0, 0);
	add_func    (0X71000084C0,0X71000084D8);
	set_func_flags(0X71000084C0,0x1400);
	set_frame_size(0X71000084C0, 0, 0, 0);
	add_func    (0X71000084E4,0X71000084F4);
	set_func_flags(0X71000084E4,0x1400);
	set_frame_size(0X71000084E4, 0, 0, 0);
	add_func    (0X71000084F4,0X7100008534);
	set_func_flags(0X71000084F4,0x1410);
	set_frame_size(0X71000084F4, 0X20, 16, 0);
	add_func    (0X7100008540,0X7100008564);
	set_func_flags(0X7100008540,0x1410);
	set_frame_size(0X7100008540, 0X60, 16, 0);
	add_func    (0X7100008564,0X71000085AC);
	set_func_flags(0X7100008564,0x1400);
	set_frame_size(0X7100008564, 0, 0, 0);
	add_func    (0X71000085F8,0X7100008604);
	set_func_flags(0X71000085F8,0x1400);
	set_frame_size(0X71000085F8, 0, 0, 0);
	add_func    (0X7100008610,0X7100008658);
	set_func_flags(0X7100008610,0x1410);
	set_frame_size(0X7100008610, 0X50, 16, 0);
	add_func    (0X7100008658,0X7100008664);
	set_func_flags(0X7100008658,0x1400);
	add_func    (0X7100008688,0X710000869C);
	set_func_flags(0X7100008688,0x1400);
	set_frame_size(0X7100008688, 0, 0, 0);
	add_func    (0X710000869C,0X71000086A8);
	set_func_flags(0X710000869C,0x1400);
	add_func    (0X71000086D8,0X71000086E8);
	set_func_flags(0X71000086D8,0x1400);
	set_frame_size(0X71000086D8, 0, 0, 0);
	add_func    (0X71000086F0,0X7100008704);
	set_func_flags(0X71000086F0,0x1400);
	set_frame_size(0X71000086F0, 0X10, 0, 0);
	add_func    (0X7100008704,0X7100008710);
	set_func_flags(0X7100008704,0x1400);
	set_frame_size(0X7100008704, 0, 0, 0);
	add_func    (0X7100008720,0X710000872C);
	set_func_flags(0X7100008720,0x1400);
	set_frame_size(0X7100008720, 0, 0, 0);
	add_func    (0X710000873C,0X7100008748);
	set_func_flags(0X710000873C,0x1400);
	set_frame_size(0X710000873C, 0, 0, 0);
	add_func    (0X7100008750,0X7100008764);
	set_func_flags(0X7100008750,0x1400);
	set_frame_size(0X7100008750, 0X10, 0, 0);
	add_func    (0X7100008770,0X710000879C);
	set_func_flags(0X7100008770,0x1410);
	set_frame_size(0X7100008770, 0X30, 16, 0);
	add_func    (0X710000879C,0X71000087BC);
	set_func_flags(0X710000879C,0x1400);
	set_frame_size(0X710000879C, 0, 0, 0);
	add_func    (0X71000087BC,0X71000087E0);
	set_func_flags(0X71000087BC,0x1400);
	set_frame_size(0X71000087BC, 0, 0, 0);
	add_func    (0X71000087E0,0X71000087EC);
	set_func_flags(0X71000087E0,0x1400);
	add_func    (0X71000087F0,0X71000087FC);
	set_func_flags(0X71000087F0,0x1400);
	add_func    (0X71000087FC,0X7100008808);
	set_func_flags(0X71000087FC,0x1400);
	add_func    (0X7100008820,0X710000882C);
	set_func_flags(0X7100008820,0x1400);
	add_func    (0X7100008840,0X710000884C);
	set_func_flags(0X7100008840,0x1400);
	add_func    (0X7100008858,0X7100008868);
	set_func_flags(0X7100008858,0x1400);
	set_frame_size(0X7100008858, 0, 0, 0);
	add_func    (0X7100008868,0X7100008880);
	set_func_flags(0X7100008868,0x1400);
	set_frame_size(0X7100008868, 0X10, 0, 0);
	add_func    (0X7100008880,0X71000088D4);
	set_func_flags(0X7100008880,0x1410);
	set_frame_size(0X7100008880, 0XA0, 16, 0);
	add_func    (0X71000088D4,0X710000891C);
	set_func_flags(0X71000088D4,0x1410);
	set_frame_size(0X71000088D4, 0X30, 16, 0);
	add_func    (0X710000891C,0X7100008948);
	set_func_flags(0X710000891C,0x1410);
	set_frame_size(0X710000891C, 0X10, 16, 0);
	add_func    (0X7100008948,0X7100008968);
	set_func_flags(0X7100008948,0x1400);
	set_frame_size(0X7100008948, 0X10, 0, 0);
	add_func    (0X7100008970,0X7100008A04);
	set_func_flags(0X7100008970,0x1410);
	SetType(0X7100008970, "__int64 __fastcall sub_7100008970(_QWORD);");
	set_frame_size(0X7100008970, 0X10, 32, 0);
	add_func    (0X7100008A04,0X7100008A1C);
	set_func_flags(0X7100008A04,0x1400);
	add_func    (0X7100008A20,0X7100008AB8);
	set_func_flags(0X7100008A20,0x1410);
	SetType(0X7100008A20, "__int64 (__fastcall ***__usercall GetService_FspSrv@<X0>(_QWORD *@<X8>))(_QWORD);");
	set_frame_size(0X7100008A20, 0, 32, 0);
	add_func    (0X7100008AC0,0X7100008EC4);
	set_func_flags(0X7100008AC0,0x1410);
	SetType(0X7100008AC0, "__int64 SetupService_fspsrv();");
	set_frame_size(0X7100008AC0, 0X30, 32, 0);
	add_func    (0X7100008EC4,0X7100008EDC);
	set_func_flags(0X7100008EC4,0x1400);
	add_func    (0X7100008EDC,0X7100008EF4);
	set_func_flags(0X7100008EDC,0x1400);
	add_func    (0X7100008F00,0X7100008F38);
	set_func_flags(0X7100008F00,0x1410);
	set_frame_size(0X7100008F00, 0, 16, 0);
	add_func    (0X7100008F38,0X7100008F3C);
	set_func_flags(0X7100008F38,0x1440);
	add_func    (0X7100008F3C,0X7100008F44);
	set_func_flags(0X7100008F3C,0x1400);
	add_func    (0X7100008F44,0X7100008FB8);
	set_func_flags(0X7100008F44,0x1410);
	set_frame_size(0X7100008F44, 0X20, 0, 0);
	add_func    (0X7100008FB8,0X7100008FC0);
	set_func_flags(0X7100008FB8,0x1400);
	add_func    (0X7100008FC0,0X7100008FCC);
	set_func_flags(0X7100008FC0,0x1400);
	add_func    (0X7100008FCC,0X7100009058);
	set_func_flags(0X7100008FCC,0x1410);
	set_frame_size(0X7100008FCC, 0X20, 32, 0);
	add_func    (0X7100009058,0X71000090FC);
	set_func_flags(0X7100009058,0x1410);
	set_frame_size(0X7100009058, 0X20, 48, 0);
	add_func    (0X71000090FC,0X71000091B4);
	set_func_flags(0X71000090FC,0x1410);
	set_frame_size(0X71000090FC, 0X30, 32, 0);
	add_func    (0X71000091B4,0X7100009250);
	set_func_flags(0X71000091B4,0x1410);
	set_frame_size(0X71000091B4, 0X30, 16, 0);
	add_func    (0X7100009250,0X7100009318);
	set_func_flags(0X7100009250,0x1410);
	set_frame_size(0X7100009250, 0X40, 48, 0);
	add_func    (0X7100009318,0X71000093C0);
	set_func_flags(0X7100009318,0x1410);
	set_frame_size(0X7100009318, 0X20, 48, 0);
	add_func    (0X71000093C0,0X710000945C);
	set_func_flags(0X71000093C0,0x1410);
	set_frame_size(0X71000093C0, 0X30, 16, 0);
	add_func    (0X710000945C,0X7100009468);
	set_func_flags(0X710000945C,0x1400);
	add_func    (0X7100009468,0X7100009508);
	set_func_flags(0X7100009468,0x1410);
	set_frame_size(0X7100009468, 0X30, 16, 0);
	add_func    (0X7100009508,0X7100009594);
	set_func_flags(0X7100009508,0x1410);
	set_frame_size(0X7100009508, 0X20, 32, 0);
	add_func    (0X7100009594,0X71000095A0);
	set_func_flags(0X7100009594,0x1400);
	add_func    (0X71000095A0,0X71000095AC);
	set_func_flags(0X71000095A0,0x1400);
	add_func    (0X71000095AC,0X71000095B8);
	set_func_flags(0X71000095AC,0x1400);
	add_func    (0X71000095B8,0X71000095C4);
	set_func_flags(0X71000095B8,0x1400);
	add_func    (0X71000095C4,0X71000095D8);
	set_func_flags(0X71000095C4,0x1400);
	add_func    (0X71000095D8,0X71000095E8);
	set_func_flags(0X71000095D8,0x1400);
	add_func    (0X71000095E8,0X71000095F4);
	set_func_flags(0X71000095E8,0x1400);
	add_func    (0X71000095F4,0X7100009600);
	set_func_flags(0X71000095F4,0x1400);
	add_func    (0X7100009600,0X7100009610);
	set_func_flags(0X7100009600,0x1400);
	add_func    (0X7100009610,0X71000096B4);
	set_func_flags(0X7100009610,0x1410);
	set_frame_size(0X7100009610, 0X20, 48, 0);
	add_func    (0X71000096B4,0X7100009758);
	set_func_flags(0X71000096B4,0x1410);
	set_frame_size(0X71000096B4, 0X20, 48, 0);
	add_func    (0X7100009758,0X7100009768);
	set_func_flags(0X7100009758,0x1400);
	add_func    (0X7100009768,0X7100009778);
	set_func_flags(0X7100009768,0x1400);
	add_func    (0X7100009778,0X7100009788);
	set_func_flags(0X7100009778,0x1400);
	add_func    (0X7100009788,0X7100009794);
	set_func_flags(0X7100009788,0x1400);
	add_func    (0X7100009794,0X710000983C);
	set_func_flags(0X7100009794,0x1410);
	set_frame_size(0X7100009794, 0X20, 48, 0);
	add_func    (0X710000983C,0X710000984C);
	set_func_flags(0X710000983C,0x1400);
	add_func    (0X710000984C,0X71000098F0);
	set_func_flags(0X710000984C,0x1410);
	set_frame_size(0X710000984C, 0X20, 48, 0);
	add_func    (0X71000098F0,0X7100009994);
	set_func_flags(0X71000098F0,0x1410);
	set_frame_size(0X71000098F0, 0X20, 48, 0);
	add_func    (0X7100009994,0X7100009A38);
	set_func_flags(0X7100009994,0x1410);
	set_frame_size(0X7100009994, 0X20, 48, 0);
	add_func    (0X7100009A38,0X7100009A58);
	set_func_flags(0X7100009A38,0x1400);
	add_func    (0X7100009A58,0X7100009A70);
	set_func_flags(0X7100009A58,0x1400);
	add_func    (0X7100009A70,0X7100009A88);
	set_func_flags(0X7100009A70,0x1400);
	add_func    (0X7100009A88,0X7100009B14);
	set_func_flags(0X7100009A88,0x1410);
	set_frame_size(0X7100009A88, 0X20, 32, 0);
	add_func    (0X7100009B14,0X7100009BB0);
	set_func_flags(0X7100009B14,0x1410);
	set_frame_size(0X7100009B14, 0X30, 16, 0);
	add_func    (0X7100009BB0,0X7100009C3C);
	set_func_flags(0X7100009BB0,0x1410);
	set_frame_size(0X7100009BB0, 0X20, 32, 0);
	add_func    (0X7100009C3C,0X7100009CE0);
	set_func_flags(0X7100009C3C,0x1410);
	set_frame_size(0X7100009C3C, 0X20, 48, 0);
	add_func    (0X7100009CE0,0X7100009CF0);
	set_func_flags(0X7100009CE0,0x1400);
	add_func    (0X7100009CF0,0X7100009D10);
	set_func_flags(0X7100009CF0,0x1400);
	add_func    (0X7100009D10,0X7100009D30);
	set_func_flags(0X7100009D10,0x1400);
	add_func    (0X7100009D30,0X7100009DD4);
	set_func_flags(0X7100009D30,0x1410);
	set_frame_size(0X7100009D30, 0X20, 48, 0);
	add_func    (0X7100009DD4,0X7100009DF4);
	set_func_flags(0X7100009DD4,0x1400);
	add_func    (0X7100009DF4,0X7100009E14);
	set_func_flags(0X7100009DF4,0x1400);
	add_func    (0X7100009E14,0X7100009E3C);
	set_func_flags(0X7100009E14,0x1400);
	add_func    (0X7100009E3C,0X7100009EF0);
	set_func_flags(0X7100009E3C,0x1410);
	set_frame_size(0X7100009E3C, 0X30, 32, 0);
	add_func    (0X7100009EF0,0X7100009F18);
	set_func_flags(0X7100009EF0,0x1400);
	add_func    (0X7100009F18,0X7100009FB4);
	set_func_flags(0X7100009F18,0x1410);
	set_frame_size(0X7100009F18, 0X30, 16, 0);
	add_func    (0X7100009FB4,0X710000A050);
	set_func_flags(0X7100009FB4,0x1410);
	set_frame_size(0X7100009FB4, 0X30, 16, 0);
	add_func    (0X710000A050,0X710000A060);
	set_func_flags(0X710000A050,0x1400);
	add_func    (0X710000A060,0X710000A0FC);
	set_func_flags(0X710000A060,0x1410);
	set_frame_size(0X710000A060, 0X30, 16, 0);
	add_func    (0X710000A0FC,0X710000A198);
	set_func_flags(0X710000A0FC,0x1410);
	set_frame_size(0X710000A0FC, 0X30, 16, 0);
	add_func    (0X710000A198,0X710000A224);
	set_func_flags(0X710000A198,0x1410);
	set_frame_size(0X710000A198, 0X20, 32, 0);
	add_func    (0X710000A224,0X710000A2C0);
	set_func_flags(0X710000A224,0x1410);
	set_frame_size(0X710000A224, 0X30, 16, 0);
	add_func    (0X710000A2C0,0X710000A364);
	set_func_flags(0X710000A2C0,0x1410);
	SetType(0X710000A2C0, "__int64 __fastcall fspsrv_OpenDataStorageByDataId(__int64, __int64 *, __int64, unsigned __int8);");
	set_frame_size(0X710000A2C0, 0X20, 48, 0);
	add_func    (0X710000A364,0X710000A3F0);
	set_func_flags(0X710000A364,0x1410);
	set_frame_size(0X710000A364, 0X20, 32, 0);
	add_func    (0X710000A3F0,0X710000A48C);
	set_func_flags(0X710000A3F0,0x1410);
	set_frame_size(0X710000A3F0, 0X30, 16, 0);
	add_func    (0X710000A48C,0X710000A528);
	set_func_flags(0X710000A48C,0x1410);
	set_frame_size(0X710000A48C, 0X30, 16, 0);
	add_func    (0X710000A528,0X710000A5E0);
	set_func_flags(0X710000A528,0x1410);
	set_frame_size(0X710000A528, 0X30, 32, 0);
	add_func    (0X710000A5E0,0X710000A684);
	set_func_flags(0X710000A5E0,0x1410);
	set_frame_size(0X710000A5E0, 0X20, 48, 0);
	add_func    (0X710000A684,0X710000A710);
	set_func_flags(0X710000A684,0x1410);
	set_frame_size(0X710000A684, 0X20, 32, 0);
	add_func    (0X710000A710,0X710000A79C);
	set_func_flags(0X710000A710,0x1410);
	set_frame_size(0X710000A710, 0X20, 32, 0);
	add_func    (0X710000A79C,0X710000A828);
	set_func_flags(0X710000A79C,0x1410);
	set_frame_size(0X710000A79C, 0X20, 32, 0);
	add_func    (0X710000A828,0X710000A8B4);
	set_func_flags(0X710000A828,0x1410);
	set_frame_size(0X710000A828, 0X20, 32, 0);
	add_func    (0X710000A8B4,0X710000A8C0);
	set_func_flags(0X710000A8B4,0x1400);
	add_func    (0X710000A8C0,0X710000A8D8);
	set_func_flags(0X710000A8C0,0x1400);
	add_func    (0X710000A8D8,0X710000A8E4);
	set_func_flags(0X710000A8D8,0x1400);
	add_func    (0X710000A8E4,0X710000A8F8);
	set_func_flags(0X710000A8E4,0x1400);
	add_func    (0X710000A8F8,0X710000A904);
	set_func_flags(0X710000A8F8,0x1400);
	add_func    (0X710000A904,0X710000A910);
	set_func_flags(0X710000A904,0x1400);
	add_func    (0X710000A910,0X710000A91C);
	set_func_flags(0X710000A910,0x1400);
	add_func    (0X710000A91C,0X710000A92C);
	set_func_flags(0X710000A91C,0x1400);
	add_func    (0X710000A92C,0X710000A938);
	set_func_flags(0X710000A92C,0x1400);
	add_func    (0X710000A938,0X710000A944);
	set_func_flags(0X710000A938,0x1400);
	add_func    (0X710000A944,0X710000A958);
	set_func_flags(0X710000A944,0x1400);
	add_func    (0X710000A958,0X710000A968);
	set_func_flags(0X710000A958,0x1400);
	SetType(0X710000A958, "__int64 __fastcall sub_710000A958(__int64, __int64, unsigned int);");
	add_func    (0X710000A968,0X710000A978);
	set_func_flags(0X710000A968,0x1400);
	add_func    (0X710000A978,0X710000A990);
	set_func_flags(0X710000A978,0x1400);
	add_func    (0X710000A990,0X710000A9A0);
	set_func_flags(0X710000A990,0x1400);
	add_func    (0X710000A9A0,0X710000A9B0);
	set_func_flags(0X710000A9A0,0x1400);
	add_func    (0X710000A9B0,0X710000A9C0);
	set_func_flags(0X710000A9B0,0x1400);
	add_func    (0X710000A9C0,0X710000A9CC);
	set_func_flags(0X710000A9C0,0x1400);
	add_func    (0X710000A9CC,0X710000A9D8);
	set_func_flags(0X710000A9CC,0x1400);
	add_func    (0X710000A9D8,0X710000A9E8);
	set_func_flags(0X710000A9D8,0x1400);
	add_func    (0X710000A9E8,0X710000A9F4);
	set_func_flags(0X710000A9E8,0x1400);
	add_func    (0X710000A9F4,0X710000AA98);
	set_func_flags(0X710000A9F4,0x1410);
	set_frame_size(0X710000A9F4, 0X20, 48, 0);
	add_func    (0X710000AA98,0X710000AAA4);
	set_func_flags(0X710000AA98,0x1400);
	add_func    (0X710000AAA4,0X710000AAB0);
	set_func_flags(0X710000AAA4,0x1400);
	add_func    (0X710000AAB0,0X710000AABC);
	set_func_flags(0X710000AAB0,0x1400);
	add_func    (0X710000AABC,0X710000AAC8);
	set_func_flags(0X710000AABC,0x1400);
	add_func    (0X710000AAC8,0X710000AAD4);
	set_func_flags(0X710000AAC8,0x1400);
	add_func    (0X710000AAD4,0X710000AAF0);
	set_func_flags(0X710000AAD4,0x1400);
	add_func    (0X710000AAF0,0X710000AAFC);
	set_func_flags(0X710000AAF0,0x1400);
	add_func    (0X710000AAFC,0X710000AB0C);
	set_func_flags(0X710000AAFC,0x1400);
	add_func    (0X710000AB0C,0X710000AB18);
	set_func_flags(0X710000AB0C,0x1400);
	add_func    (0X710000AB18,0X710000AB28);
	set_func_flags(0X710000AB18,0x1400);
	add_func    (0X710000AB28,0X710000AB34);
	set_func_flags(0X710000AB28,0x1400);
	add_func    (0X710000AB34,0X710000AB48);
	set_func_flags(0X710000AB34,0x1400);
	add_func    (0X710000AB48,0X710000AB54);
	set_func_flags(0X710000AB48,0x1400);
	add_func    (0X710000AB54,0X710000ABE0);
	set_func_flags(0X710000AB54,0x1410);
	set_frame_size(0X710000AB54, 0X20, 32, 0);
	add_func    (0X710000ABE0,0X710000ABEC);
	set_func_flags(0X710000ABE0,0x1400);
	add_func    (0X710000ABEC,0X710000ABF8);
	set_func_flags(0X710000ABEC,0x1400);
	add_func    (0X710000ABF8,0X710000AC08);
	set_func_flags(0X710000ABF8,0x1400);
	add_func    (0X710000AC08,0X710000AC14);
	set_func_flags(0X710000AC08,0x1400);
	add_func    (0X710000AC14,0X710000AC20);
	set_func_flags(0X710000AC14,0x1400);
	add_func    (0X710000AC20,0X710000AC2C);
	set_func_flags(0X710000AC20,0x1400);
	add_func    (0X710000AC2C,0X710000AC3C);
	set_func_flags(0X710000AC2C,0x1400);
	add_func    (0X710000AC3C,0X710000AC4C);
	set_func_flags(0X710000AC3C,0x1400);
	add_func    (0X710000AC4C,0X710000AC60);
	set_func_flags(0X710000AC4C,0x1400);
	add_func    (0X710000AC60,0X710000AC70);
	set_func_flags(0X710000AC60,0x1400);
	add_func    (0X710000AC70,0X710000ACFC);
	set_func_flags(0X710000AC70,0x1410);
	set_frame_size(0X710000AC70, 0X20, 32, 0);
	add_func    (0X710000ACFC,0X710000ADA0);
	set_func_flags(0X710000ACFC,0x1410);
	set_frame_size(0X710000ACFC, 0X20, 48, 0);
	add_func    (0X710000ADA0,0X710000ADB0);
	set_func_flags(0X710000ADA0,0x1400);
	add_func    (0X710000ADB0,0X710000ADB8);
	set_func_flags(0X710000ADB0,0x1400);
	add_func    (0X710000ADB8,0X710000ADC0);
	set_func_flags(0X710000ADB8,0x1400);
	add_func    (0X710000ADC0,0X710000B004);
	set_func_flags(0X710000ADC0,0x1410);
	set_frame_size(0X710000ADC0, 0X1C0, 48, 0);
	add_func    (0X710000B010,0X710000B780);
	set_func_flags(0X710000B010,0x1410);
	SetType(0X710000B010, "__int64 __fastcall sub_710000B010(__int64, _QWORD *, __int64 *, __int64);");
	set_frame_size(0X710000B010, 0X40, 64, 0);
	add_func    (0X710000B780,0X710000B8BC);
	set_func_flags(0X710000B780,0x1400);
	SetType(0X710000B780, "__int64 __fastcall sub_710000B780(__int64 result, unsigned int *);");
	add_func    (0X710000B8BC,0X710000B9E8);
	set_func_flags(0X710000B8BC,0x1410);
	set_frame_size(0X710000B8BC, 0X70, 64, 0);
	add_func    (0X710000B9E8,0X710000BBA4);
	set_func_flags(0X710000B9E8,0x1410);
	SetType(0X710000B9E8, "__int64 __fastcall sub_710000B9E8(__int64 a1, __int64 **a2, unsigned int command, __int64 *a4);");
	set_frame_size(0X710000B9E8, 0X90, 48, 0);
	add_func    (0X710000BBA4,0X710000BC68);
	set_func_flags(0X710000BBA4,0x1410);
	set_frame_size(0X710000BBA4, 0X20, 0, 0);
	add_func    (0X710000BC68,0X710000BC70);
	set_func_flags(0X710000BC68,0x1400);
	add_func    (0X710000BC70,0X710000BCE4);
	set_func_flags(0X710000BC70,0x1410);
	set_frame_size(0X710000BC70, 0X20, 0, 0);
	add_func    (0X710000BCE4,0X710000BCEC);
	set_func_flags(0X710000BCE4,0x1400);
	add_func    (0X710000BCEC,0X710000BCF8);
	set_func_flags(0X710000BCEC,0x1411);
	set_frame_size(0X710000BCEC, 0, 16, 0);
	add_func    (0X710000BCF8,0X710000BD14);
	set_func_flags(0X710000BCF8,0x1400);
	add_func    (0X710000BD14,0X710000BD24);
	set_func_flags(0X710000BD14,0x1400);
	add_func    (0X710000BD24,0X710000BD34);
	set_func_flags(0X710000BD24,0x1400);
	add_func    (0X710000BD34,0X710000BD44);
	set_func_flags(0X710000BD34,0x1400);
	add_func    (0X710000BD44,0X710000BD54);
	set_func_flags(0X710000BD44,0x1400);
	add_func    (0X710000BD54,0X710000BD6C);
	set_func_flags(0X710000BD54,0x1400);
	add_func    (0X710000BD6C,0X710000BD84);
	set_func_flags(0X710000BD6C,0x1400);
	add_func    (0X710000BD84,0X710000BD94);
	set_func_flags(0X710000BD84,0x1400);
	add_func    (0X710000BD94,0X710000BE3C);
	set_func_flags(0X710000BD94,0x1410);
	set_frame_size(0X710000BD94, 0X20, 48, 0);
	add_func    (0X710000BE3C,0X710000BEE4);
	set_func_flags(0X710000BE3C,0x1410);
	set_frame_size(0X710000BE3C, 0X20, 48, 0);
	add_func    (0X710000BEE4,0X710000BEF0);
	set_func_flags(0X710000BEE4,0x1400);
	add_func    (0X710000BEF0,0X710000BF00);
	set_func_flags(0X710000BEF0,0x1400);
	add_func    (0X710000BF00,0X710000BF10);
	set_func_flags(0X710000BF00,0x1400);
	add_func    (0X710000BF10,0X710000BF20);
	set_func_flags(0X710000BF10,0x1400);
	add_func    (0X710000BF20,0X710000BF30);
	set_func_flags(0X710000BF20,0x1400);
	add_func    (0X710000BF30,0X710000BF74);
	set_func_flags(0X710000BF30,0x1410);
	set_frame_size(0X710000BF30, 0X10, 16, 0);
	add_func    (0X710000BF74,0X710000BF80);
	set_func_flags(0X710000BF74,0x1400);
	add_func    (0X710000BF80,0X710000BF88);
	set_func_flags(0X710000BF80,0x1400);
	add_func    (0X710000BF88,0X710000BF90);
	set_func_flags(0X710000BF88,0x1400);
	add_func    (0X710000BF90,0X710000C188);
	set_func_flags(0X710000BF90,0x1410);
	set_frame_size(0X710000BF90, 0X90, 96, 0);
	add_func    (0X710000C190,0X710000C8E0);
	set_func_flags(0X710000C190,0x1410);
	set_frame_size(0X710000C190, 0X40, 64, 0);
	add_func    (0X710000C8E0,0X710000CAC0);
	set_func_flags(0X710000C8E0,0x1410);
	set_frame_size(0X710000C8E0, 0X90, 80, 0);
	add_func    (0X710000CAC0,0X710000CCB8);
	set_func_flags(0X710000CAC0,0x1410);
	set_frame_size(0X710000CAC0, 0XA0, 96, 0);
	add_func    (0X710000CCB8,0X710000CEB0);
	set_func_flags(0X710000CCB8,0x1410);
	set_frame_size(0X710000CCB8, 0XB0, 64, 0);
	add_func    (0X710000CEB0,0X710000D13C);
	set_func_flags(0X710000CEB0,0x1410);
	set_frame_size(0X710000CEB0, 0XA0, 96, 0);
	add_func    (0X710000D13C,0X710000D200);
	set_func_flags(0X710000D13C,0x1410);
	set_frame_size(0X710000D13C, 0X20, 0, 0);
	add_func    (0X710000D200,0X710000D208);
	set_func_flags(0X710000D200,0x1400);
	add_func    (0X710000D208,0X710000D27C);
	set_func_flags(0X710000D208,0x1410);
	set_frame_size(0X710000D208, 0X20, 0, 0);
	add_func    (0X710000D27C,0X710000D284);
	set_func_flags(0X710000D27C,0x1400);
	add_func    (0X710000D284,0X710000D2A4);
	set_func_flags(0X710000D284,0x1400);
	add_func    (0X710000D2A4,0X710000D2C4);
	set_func_flags(0X710000D2A4,0x1400);
	add_func    (0X710000D2C4,0X710000D2D0);
	set_func_flags(0X710000D2C4,0x1400);
	add_func    (0X710000D2D0,0X710000D2DC);
	set_func_flags(0X710000D2D0,0x1400);
	add_func    (0X710000D2DC,0X710000D2E8);
	set_func_flags(0X710000D2DC,0x1400);
	add_func    (0X710000D2E8,0X710000D2F8);
	set_func_flags(0X710000D2E8,0x1400);
	add_func    (0X710000D2F8,0X710000D340);
	set_func_flags(0X710000D2F8,0x1410);
	set_frame_size(0X710000D2F8, 0X10, 16, 0);
	add_func    (0X710000D340,0X710000D348);
	set_func_flags(0X710000D340,0x1400);
	add_func    (0X710000D348,0X710000D350);
	set_func_flags(0X710000D348,0x1400);
	add_func    (0X710000D350,0X710000D560);
	set_func_flags(0X710000D350,0x1410);
	set_frame_size(0X710000D350, 0XA0, 96, 0);
	add_func    (0X710000D560,0X710000D760);
	set_func_flags(0X710000D560,0x1410);
	set_frame_size(0X710000D560, 0XA0, 96, 0);
	add_func    (0X710000D760,0X710000D87C);
	set_func_flags(0X710000D760,0x1410);
	set_frame_size(0X710000D760, 0X90, 32, 0);
	add_func    (0X710000D87C,0X710000D99C);
	set_func_flags(0X710000D87C,0x1410);
	SetType(0X710000D87C, "__int64 __fastcall sub_710000D87C(__int64, __int64, unsigned int);");
	set_frame_size(0X710000D87C, 0X70, 64, 0);
	add_func    (0X710000D99C,0X710000DAC8);
	set_func_flags(0X710000D99C,0x1410);
	SetType(0X710000D99C, "__int64 __fastcall sub_710000D99C(__int64, _QWORD *, unsigned int);");
	set_frame_size(0X710000D99C, 0X70, 64, 0);
	add_func    (0X710000DAC8,0X710000DC30);
	set_func_flags(0X710000DAC8,0x1410);
	set_frame_size(0X710000DAC8, 0X90, 64, 0);
	add_func    (0X710000DC30,0X710000DE28);
	set_func_flags(0X710000DC30,0x1410);
	set_frame_size(0X710000DC30, 0XC0, 96, 0);
	add_func    (0X710000DE28,0X710000DEEC);
	set_func_flags(0X710000DE28,0x1410);
	set_frame_size(0X710000DE28, 0X20, 0, 0);
	add_func    (0X710000DEEC,0X710000DEF4);
	set_func_flags(0X710000DEEC,0x1400);
	add_func    (0X710000DEF4,0X710000DF68);
	set_func_flags(0X710000DEF4,0x1410);
	set_frame_size(0X710000DEF4, 0X20, 0, 0);
	add_func    (0X710000DF68,0X710000DF70);
	set_func_flags(0X710000DF68,0x1400);
	add_func    (0X710000DF70,0X710000DF84);
	set_func_flags(0X710000DF70,0x1400);
	add_func    (0X710000DF84,0X710000DF90);
	set_func_flags(0X710000DF84,0x1400);
	add_func    (0X710000DF90,0X710000DF98);
	set_func_flags(0X710000DF90,0x1400);
	add_func    (0X710000DF98,0X710000DFA0);
	set_func_flags(0X710000DF98,0x1400);
	add_func    (0X710000DFA0,0X710000E198);
	set_func_flags(0X710000DFA0,0x1410);
	set_frame_size(0X710000DFA0, 0XB0, 64, 0);
	add_func    (0X710000E198,0X710000E390);
	set_func_flags(0X710000E198,0x1410);
	set_frame_size(0X710000E198, 0XB0, 64, 0);
	add_func    (0X710000E390,0X710000E590);
	set_func_flags(0X710000E390,0x1410);
	set_frame_size(0X710000E390, 0XB0, 64, 0);
	add_func    (0X710000E590,0X710000E7A4);
	set_func_flags(0X710000E590,0x1410);
	set_frame_size(0X710000E590, 0XD0, 96, 0);
	add_func    (0X710000E7A4,0X710000E8D8);
	set_func_flags(0X710000E7A4,0x1410);
	set_frame_size(0X710000E7A4, 0X70, 64, 0);
	add_func    (0X710000E8D8,0X710000EAAC);
	set_func_flags(0X710000E8D8,0x1410);
	set_frame_size(0X710000E8D8, 0X90, 64, 0);
	add_func    (0X710000EAAC,0X710000ED40);
	set_func_flags(0X710000EAAC,0x1410);
	set_frame_size(0X710000EAAC, 0XA0, 96, 0);
	add_func    (0X710000ED40,0X710000EF00);
	set_func_flags(0X710000ED40,0x1410);
	set_frame_size(0X710000ED40, 0X70, 80, 0);
	add_func    (0X710000EF00,0X710000F19C);
	set_func_flags(0X710000EF00,0x1410);
	set_frame_size(0X710000EF00, 0XA0, 96, 0);
	add_func    (0X710000F19C,0X710000F360);
	set_func_flags(0X710000F19C,0x1410);
	set_frame_size(0X710000F19C, 0X70, 80, 0);
	add_func    (0X710000F360,0X710000F424);
	set_func_flags(0X710000F360,0x1410);
	SetType(0X710000F360, "__int64 *__fastcall sub_710000F360(__int64 *result);");
	set_frame_size(0X710000F360, 0X20, 0, 0);
	add_func    (0X710000F424,0X710000F42C);
	set_func_flags(0X710000F424,0x1400);
	add_func    (0X710000F42C,0X710000F4A0);
	set_func_flags(0X710000F42C,0x1410);
	set_frame_size(0X710000F42C, 0X20, 0, 0);
	add_func    (0X710000F4A0,0X710000F4A8);
	set_func_flags(0X710000F4A0,0x1400);
	add_func    (0X710000F4A8,0X710000F4C0);
	set_func_flags(0X710000F4A8,0x1400);
	add_func    (0X710000F4C0,0X710000F4D8);
	set_func_flags(0X710000F4C0,0x1400);
	add_func    (0X710000F4D8,0X710000F4E4);
	set_func_flags(0X710000F4D8,0x1400);
	add_func    (0X710000F4E4,0X710000F4F0);
	set_func_flags(0X710000F4E4,0x1400);
	add_func    (0X710000F4F0,0X710000F4FC);
	set_func_flags(0X710000F4F0,0x1400);
	add_func    (0X710000F4FC,0X710000F50C);
	set_func_flags(0X710000F4FC,0x1400);
	add_func    (0X710000F50C,0X710000F514);
	set_func_flags(0X710000F50C,0x1400);
	add_func    (0X710000F514,0X710000F51C);
	set_func_flags(0X710000F514,0x1400);
	add_func    (0X710000F51C,0X710000F710);
	set_func_flags(0X710000F51C,0x1410);
	set_frame_size(0X710000F51C, 0X90, 96, 0);
	add_func    (0X710000F710,0X710000F904);
	set_func_flags(0X710000F710,0x1410);
	set_frame_size(0X710000F710, 0X90, 96, 0);
	add_func    (0X710000F904,0X710000FB80);
	set_func_flags(0X710000F904,0x1410);
	set_frame_size(0X710000F904, 0X90, 96, 0);
	add_func    (0X710000FB80,0X710000FD1C);
	set_func_flags(0X710000FB80,0x1410);
	set_frame_size(0X710000FB80, 0X70, 80, 0);
	add_func    (0X710000FD1C,0X710000FEA8);
	set_func_flags(0X710000FD1C,0x1410);
	set_frame_size(0X710000FD1C, 0X90, 48, 0);
	add_func    (0X710000FEA8,0X7100010084);
	set_func_flags(0X710000FEA8,0x1410);
	set_frame_size(0X710000FEA8, 0X90, 80, 0);
	add_func    (0X7100010084,0X71000101B8);
	set_func_flags(0X7100010084,0x1410);
	set_frame_size(0X7100010084, 0X90, 48, 0);
	add_func    (0X71000101B8,0X71000102E4);
	set_func_flags(0X71000101B8,0x1410);
	set_frame_size(0X71000101B8, 0X70, 64, 0);
	add_func    (0X71000102E4,0X7100010448);
	set_func_flags(0X71000102E4,0x1410);
	set_frame_size(0X71000102E4, 0X90, 48, 0);
	add_func    (0X7100010448,0X7100010618);
	set_func_flags(0X7100010448,0x1410);
	set_frame_size(0X7100010448, 0X90, 64, 0);
	add_func    (0X7100010618,0X7100010760);
	set_func_flags(0X7100010618,0x1410);
	set_frame_size(0X7100010618, 0X90, 64, 0);
	add_func    (0X7100010760,0X7100010884);
	set_func_flags(0X7100010760,0x1410);
	set_frame_size(0X7100010760, 0X70, 64, 0);
	add_func    (0X7100010884,0X71000109CC);
	set_func_flags(0X7100010884,0x1410);
	set_frame_size(0X7100010884, 0X70, 80, 0);
	add_func    (0X71000109CC,0X7100010B8C);
	set_func_flags(0X71000109CC,0x1410);
	set_frame_size(0X71000109CC, 0X90, 64, 0);
	add_func    (0X7100010B8C,0X7100010D6C);
	set_func_flags(0X7100010B8C,0x1410);
	set_frame_size(0X7100010B8C, 0X90, 80, 0);
	add_func    (0X7100010D6C,0X7100010F70);
	set_func_flags(0X7100010D6C,0x1410);
	set_frame_size(0X7100010D6C, 0X90, 64, 0);
	add_func    (0X7100010F70,0X7100011168);
	set_func_flags(0X7100010F70,0x1410);
	set_frame_size(0X7100010F70, 0X90, 96, 0);
	add_func    (0X7100011168,0X7100011354);
	set_func_flags(0X7100011168,0x1410);
	set_frame_size(0X7100011168, 0XB0, 64, 0);
	add_func    (0X7100011354,0X7100011548);
	set_func_flags(0X7100011354,0x1410);
	set_frame_size(0X7100011354, 0X90, 96, 0);
	add_func    (0X7100011548,0X710001160C);
	set_func_flags(0X7100011548,0x1410);
	set_frame_size(0X7100011548, 0X20, 0, 0);
	add_func    (0X710001160C,0X7100011614);
	set_func_flags(0X710001160C,0x1400);
	add_func    (0X7100011614,0X7100011688);
	set_func_flags(0X7100011614,0x1410);
	set_frame_size(0X7100011614, 0X20, 0, 0);
	add_func    (0X7100011688,0X7100011690);
	set_func_flags(0X7100011688,0x1400);
	add_func    (0X7100011690,0X71000116A4);
	set_func_flags(0X7100011690,0x1400);
	add_func    (0X71000116A4,0X71000116AC);
	set_func_flags(0X71000116A4,0x1400);
	add_func    (0X71000116AC,0X71000116B4);
	set_func_flags(0X71000116AC,0x1400);
	add_func    (0X71000116B4,0X7100011878);
	set_func_flags(0X71000116B4,0x1410);
	set_frame_size(0X71000116B4, 0X70, 80, 0);
	add_func    (0X7100011878,0X7100011A4C);
	set_func_flags(0X7100011878,0x1410);
	set_frame_size(0X7100011878, 0X90, 64, 0);
	add_func    (0X7100011A4C,0X7100011C64);
	set_func_flags(0X7100011A4C,0x1410);
	set_frame_size(0X7100011A4C, 0XC0, 96, 0);
	add_func    (0X7100011C64,0X7100011EA8);
	set_func_flags(0X7100011C64,0x1410);
	set_frame_size(0X7100011C64, 0XA0, 96, 0);
	add_func    (0X7100011EA8,0X71000120B4);
	set_func_flags(0X7100011EA8,0x1410);
	set_frame_size(0X7100011EA8, 0X90, 64, 0);
	add_func    (0X71000120B4,0X71000122DC);
	set_func_flags(0X71000120B4,0x1410);
	set_frame_size(0X71000120B4, 0X90, 96, 0);
	add_func    (0X71000122DC,0X7100012520);
	set_func_flags(0X71000122DC,0x1410);
	set_frame_size(0X71000122DC, 0XC0, 96, 0);
	add_func    (0X7100012520,0X7100012754);
	set_func_flags(0X7100012520,0x1410);
	set_frame_size(0X7100012520, 0XC0, 96, 0);
	add_func    (0X7100012754,0X7100012960);
	set_func_flags(0X7100012754,0x1410);
	set_frame_size(0X7100012754, 0X70, 96, 0);
	add_func    (0X7100012960,0X7100012B70);
	set_func_flags(0X7100012960,0x1410);
	set_frame_size(0X7100012960, 0XA0, 96, 0);
	add_func    (0X7100012B70,0X7100012C94);
	set_func_flags(0X7100012B70,0x1410);
	set_frame_size(0X7100012B70, 0X70, 64, 0);
	add_func    (0X7100012C94,0X7100012E68);
	set_func_flags(0X7100012C94,0x1410);
	SetType(0X7100012C94, "__int64 __fastcall sub_7100012C94(__int64, __int64 **, __int64, char, unsigned int, __int64 *);");
	set_frame_size(0X7100012C94, 0X90, 64, 0);
	add_func    (0X7100012E68,0X71000130FC);
	set_func_flags(0X7100012E68,0x1410);
	set_frame_size(0X7100012E68, 0XA0, 96, 0);
	add_func    (0X71000130FC,0X71000131C0);
	set_func_flags(0X71000130FC,0x1410);
	set_frame_size(0X71000130FC, 0X20, 0, 0);
	add_func    (0X71000131C0,0X71000131C8);
	set_func_flags(0X71000131C0,0x1400);
	add_func    (0X71000131C8,0X710001323C);
	set_func_flags(0X71000131C8,0x1410);
	set_frame_size(0X71000131C8, 0X20, 0, 0);
	add_func    (0X710001323C,0X7100013244);
	set_func_flags(0X710001323C,0x1400);
	add_func    (0X7100013244,0X7100013250);
	set_func_flags(0X7100013244,0x1400);
	add_func    (0X7100013250,0X710001325C);
	set_func_flags(0X7100013250,0x1400);
	add_func    (0X710001325C,0X7100013274);
	set_func_flags(0X710001325C,0x1400);
	add_func    (0X7100013274,0X7100013280);
	set_func_flags(0X7100013274,0x1400);
	add_func    (0X7100013280,0X710001328C);
	set_func_flags(0X7100013280,0x1400);
	add_func    (0X710001328C,0X71000132A4);
	set_func_flags(0X710001328C,0x1400);
	add_func    (0X71000132A4,0X71000132BC);
	set_func_flags(0X71000132A4,0x1400);
	add_func    (0X71000132BC,0X71000132C8);
	set_func_flags(0X71000132BC,0x1400);
	add_func    (0X71000132C8,0X71000132D8);
	set_func_flags(0X71000132C8,0x1400);
	add_func    (0X71000132D8,0X71000132E8);
	set_func_flags(0X71000132D8,0x1400);
	add_func    (0X71000132E8,0X71000132F4);
	set_func_flags(0X71000132E8,0x1400);
	add_func    (0X71000132F4,0X710001330C);
	set_func_flags(0X71000132F4,0x1400);
	add_func    (0X710001330C,0X7100013324);
	set_func_flags(0X710001330C,0x1400);
	add_func    (0X7100013324,0X7100013330);
	set_func_flags(0X7100013324,0x1400);
	add_func    (0X7100013330,0X710001333C);
	set_func_flags(0X7100013330,0x1400);
	add_func    (0X710001333C,0X7100013348);
	set_func_flags(0X710001333C,0x1400);
	add_func    (0X7100013348,0X7100013358);
	set_func_flags(0X7100013348,0x1400);
	add_func    (0X7100013358,0X7100013364);
	set_func_flags(0X7100013358,0x1400);
	add_func    (0X7100013364,0X7100013374);
	set_func_flags(0X7100013364,0x1400);
	add_func    (0X7100013374,0X7100013380);
	set_func_flags(0X7100013374,0x1400);
	add_func    (0X7100013380,0X7100013390);
	set_func_flags(0X7100013380,0x1400);
	add_func    (0X7100013390,0X71000133B0);
	set_func_flags(0X7100013390,0x1400);
	add_func    (0X71000133B0,0X71000133D4);
	set_func_flags(0X71000133B0,0x1400);
	add_func    (0X71000133D4,0X71000133EC);
	set_func_flags(0X71000133D4,0x1400);
	add_func    (0X71000133EC,0X7100013404);
	set_func_flags(0X71000133EC,0x1400);
	add_func    (0X7100013404,0X7100013414);
	set_func_flags(0X7100013404,0x1400);
	add_func    (0X7100013414,0X7100013434);
	set_func_flags(0X7100013414,0x1400);
	add_func    (0X7100013434,0X7100013458);
	set_func_flags(0X7100013434,0x1400);
	add_func    (0X7100013458,0X7100013470);
	set_func_flags(0X7100013458,0x1400);
	add_func    (0X7100013470,0X7100013488);
	set_func_flags(0X7100013470,0x1400);
	add_func    (0X7100013488,0X7100013494);
	set_func_flags(0X7100013488,0x1400);
	add_func    (0X7100013494,0X71000134A0);
	set_func_flags(0X7100013494,0x1400);
	add_func    (0X71000134A0,0X71000134AC);
	set_func_flags(0X71000134A0,0x1400);
	add_func    (0X71000134AC,0X71000134C4);
	set_func_flags(0X71000134AC,0x1400);
	add_func    (0X71000134C4,0X710001350C);
	set_func_flags(0X71000134C4,0x1410);
	set_frame_size(0X71000134C4, 0X10, 16, 0);
	add_func    (0X710001350C,0X710001351C);
	set_func_flags(0X710001350C,0x1400);
	add_func    (0X710001351C,0X710001352C);
	set_func_flags(0X710001351C,0x1400);
	add_func    (0X710001352C,0X7100013538);
	set_func_flags(0X710001352C,0x1400);
	add_func    (0X7100013538,0X7100013544);
	set_func_flags(0X7100013538,0x1400);
	add_func    (0X7100013544,0X7100013550);
	set_func_flags(0X7100013544,0x1400);
	add_func    (0X7100013550,0X7100013560);
	set_func_flags(0X7100013550,0x1400);
	add_func    (0X7100013560,0X7100013580);
	set_func_flags(0X7100013560,0x1400);
	add_func    (0X7100013580,0X7100013590);
	set_func_flags(0X7100013580,0x1400);
	add_func    (0X7100013590,0X7100013598);
	set_func_flags(0X7100013590,0x1400);
	add_func    (0X7100013598,0X71000135A0);
	set_func_flags(0X7100013598,0x1400);
	add_func    (0X71000135A0,0X71000137AC);
	set_func_flags(0X71000135A0,0x1410);
	set_frame_size(0X71000135A0, 0XA0, 96, 0);
	add_func    (0X71000137AC,0X71000138E8);
	set_func_flags(0X71000137AC,0x1410);
	set_frame_size(0X71000137AC, 0X90, 48, 0);
	add_func    (0X71000138E8,0X7100013A14);
	set_func_flags(0X71000138E8,0x1410);
	set_frame_size(0X71000138E8, 0X70, 64, 0);
	add_func    (0X7100013A14,0X7100013B48);
	set_func_flags(0X7100013A14,0x1410);
	set_frame_size(0X7100013A14, 0X90, 48, 0);
	add_func    (0X7100013B48,0X7100013C90);
	set_func_flags(0X7100013B48,0x1410);
	set_frame_size(0X7100013B48, 0X70, 80, 0);
	add_func    (0X7100013C90,0X7100013DCC);
	set_func_flags(0X7100013C90,0x1410);
	set_frame_size(0X7100013C90, 0X90, 48, 0);
	add_func    (0X7100013DCC,0X7100013FC4);
	set_func_flags(0X7100013DCC,0x1410);
	set_frame_size(0X7100013DCC, 0X90, 96, 0);
	add_func    (0X7100013FC4,0X71000141C8);
	set_func_flags(0X7100013FC4,0x1410);
	set_frame_size(0X7100013FC4, 0XC0, 96, 0);
	add_func    (0X71000141C8,0X71000143BC);
	set_func_flags(0X71000141C8,0x1410);
	set_frame_size(0X71000141C8, 0X90, 96, 0);
	add_func    (0X71000143BC,0X71000144E0);
	set_func_flags(0X71000143BC,0x1410);
	set_frame_size(0X71000143BC, 0X70, 64, 0);
	add_func    (0X71000144E0,0X71000146C8);
	set_func_flags(0X71000144E0,0x1410);
	set_frame_size(0X71000144E0, 0XB0, 64, 0);
	add_func    (0X71000146C8,0X71000147F4);
	set_func_flags(0X71000146C8,0x1410);
	set_frame_size(0X71000146C8, 0X70, 64, 0);
	add_func    (0X71000147F4,0X7100014938);
	set_func_flags(0X71000147F4,0x1410);
	set_frame_size(0X71000147F4, 0X70, 64, 0);
	add_func    (0X7100014938,0X7100014B48);
	set_func_flags(0X7100014938,0x1410);
	set_frame_size(0X7100014938, 0XD0, 96, 0);
	add_func    (0X7100014B48,0X7100014C90);
	set_func_flags(0X7100014B48,0x1410);
	set_frame_size(0X7100014B48, 0X70, 80, 0);
	add_func    (0X7100014C90,0X7100014DE0);
	set_func_flags(0X7100014C90,0x1410);
	set_frame_size(0X7100014C90, 0X70, 96, 0);
	add_func    (0X7100014DE0,0X7100014EA4);
	set_func_flags(0X7100014DE0,0x1410);
	set_frame_size(0X7100014DE0, 0X20, 0, 0);
	add_func    (0X7100014EA4,0X7100014EAC);
	set_func_flags(0X7100014EA4,0x1400);
	add_func    (0X7100014EAC,0X7100014F20);
	set_func_flags(0X7100014EAC,0x1410);
	set_frame_size(0X7100014EAC, 0X20, 0, 0);
	add_func    (0X7100014F20,0X7100014F28);
	set_func_flags(0X7100014F20,0x1400);
	add_func    (0X7100014F28,0X7100014F34);
	set_func_flags(0X7100014F28,0x1400);
	add_func    (0X7100014F34,0X7100014F3C);
	set_func_flags(0X7100014F34,0x1400);
	add_func    (0X7100014F3C,0X7100014F44);
	set_func_flags(0X7100014F3C,0x1400);
	add_func    (0X7100014F44,0X7100015090);
	set_func_flags(0X7100014F44,0x1410);
	SetType(0X7100014F44, "__int64 __fastcall sub_7100014F44(__int64 a1, nn::sf::NativeHandle *a2, unsigned int command);");
	set_frame_size(0X7100014F44, 0X70, 64, 0);
	add_func    (0X7100015090,0X71000151C8);
	set_func_flags(0X7100015090,0x1410);
	set_frame_size(0X7100015090, 0X70, 80, 0);
	add_func    (0X71000151C8,0X7100015308);
	set_func_flags(0X71000151C8,0x1410);
	set_frame_size(0X71000151C8, 0X70, 80, 0);
	add_func    (0X7100015308,0X71000154F4);
	set_func_flags(0X7100015308,0x1410);
	set_frame_size(0X7100015308, 0XB0, 64, 0);
	add_func    (0X71000154F4,0X7100015638);
	set_func_flags(0X71000154F4,0x1410);
	set_frame_size(0X71000154F4, 0X70, 80, 0);
	add_func    (0X7100015638,0X710001577C);
	set_func_flags(0X7100015638,0x1410);
	set_frame_size(0X7100015638, 0X90, 48, 0);
	add_func    (0X710001577C,0X710001598C);
	set_func_flags(0X710001577C,0x1410);
	set_frame_size(0X710001577C, 0XA0, 96, 0);
	add_func    (0X710001598C,0X7100015AC0);
	set_func_flags(0X710001598C,0x1410);
	SetType(0X710001598C, "__int64 __fastcall sub_710001598C(_QWORD, _QWORD, _QWORD, _QWORD);");
	set_frame_size(0X710001598C, 0X90, 48, 0);
	add_func    (0X7100015AC0,0X7100015BFC);
	set_func_flags(0X7100015AC0,0x1410);
	set_frame_size(0X7100015AC0, 0X90, 48, 0);
	add_func    (0X7100015BFC,0X7100015DF4);
	set_func_flags(0X7100015BFC,0x1410);
	set_frame_size(0X7100015BFC, 0X90, 96, 0);
	add_func    (0X7100015DF4,0X7100015F38);
	set_func_flags(0X7100015DF4,0x1410);
	set_frame_size(0X7100015DF4, 0X70, 80, 0);
	add_func    (0X7100015F38,0X7100016064);
	set_func_flags(0X7100015F38,0x1410);
	set_frame_size(0X7100015F38, 0X70, 64, 0);
	add_func    (0X7100016064,0X7100016190);
	set_func_flags(0X7100016064,0x1410);
	set_frame_size(0X7100016064, 0X70, 64, 0);
	add_func    (0X7100016190,0X71000162C8);
	set_func_flags(0X7100016190,0x1410);
	set_frame_size(0X7100016190, 0X90, 48, 0);
	add_func    (0X71000162C8,0X710001642C);
	set_func_flags(0X71000162C8,0x1410);
	set_frame_size(0X71000162C8, 0X70, 64, 0);
	add_func    (0X710001642C,0X7100016618);
	set_func_flags(0X710001642C,0x1410);
	set_frame_size(0X710001642C, 0XB0, 64, 0);
	add_func    (0X7100016618,0X7100016748);
	set_func_flags(0X7100016618,0x1410);
	set_frame_size(0X7100016618, 0X90, 48, 0);
	add_func    (0X7100016748,0X71000168AC);
	set_func_flags(0X7100016748,0x1410);
	set_frame_size(0X7100016748, 0X70, 64, 0);
	add_func    (0X71000168AC,0X71000169EC);
	set_func_flags(0X71000168AC,0x1410);
	set_frame_size(0X71000168AC, 0X90, 48, 0);
	add_func    (0X71000169EC,0X7100016B28);
	set_func_flags(0X71000169EC,0x1410);
	set_frame_size(0X71000169EC, 0X90, 48, 0);
	add_func    (0X7100016B28,0X7100016C60);
	set_func_flags(0X7100016B28,0x1410);
	set_frame_size(0X7100016B28, 0X70, 64, 0);
	add_func    (0X7100016C60,0X7100016D98);
	set_func_flags(0X7100016C60,0x1410);
	set_frame_size(0X7100016C60, 0X70, 80, 0);
	add_func    (0X7100016D98,0X7100016E5C);
	set_func_flags(0X7100016D98,0x1410);
	set_frame_size(0X7100016D98, 0X20, 0, 0);
	add_func    (0X7100016E5C,0X7100016E64);
	set_func_flags(0X7100016E5C,0x1400);
	add_func    (0X7100016E64,0X7100016ED8);
	set_func_flags(0X7100016E64,0x1410);
	set_frame_size(0X7100016E64, 0X20, 0, 0);
	add_func    (0X7100016ED8,0X7100016EE0);
	set_func_flags(0X7100016ED8,0x1400);
	add_func    (0X7100016EE0,0X7100016F2C);
	set_func_flags(0X7100016EE0,0x1410);
	set_frame_size(0X7100016EE0, 0, 32, 0);
	add_func    (0X7100016F2C,0X7100016F38);
	set_func_flags(0X7100016F2C,0x1400);
	add_func    (0X7100016F38,0X7100016F40);
	set_func_flags(0X7100016F38,0x1400);
	add_func    (0X7100016F40,0X7100016F48);
	set_func_flags(0X7100016F40,0x1400);
	add_func    (0X7100016F48,0X7100017088);
	set_func_flags(0X7100016F48,0x1410);
	set_frame_size(0X7100016F48, 0X70, 64, 0);
	add_func    (0X7100017088,0X7100017280);
	set_func_flags(0X7100017088,0x1410);
	set_frame_size(0X7100017088, 0X70, 96, 0);
	add_func    (0X7100017280,0X7100017344);
	set_func_flags(0X7100017280,0x1410);
	set_frame_size(0X7100017280, 0X20, 0, 0);
	add_func    (0X7100017344,0X710001734C);
	set_func_flags(0X7100017344,0x1400);
	add_func    (0X710001734C,0X71000173C0);
	set_func_flags(0X710001734C,0x1410);
	set_frame_size(0X710001734C, 0X20, 0, 0);
	add_func    (0X71000173C0,0X71000173C8);
	set_func_flags(0X71000173C0,0x1400);
	add_func    (0X71000173C8,0X71000173D4);
	set_func_flags(0X71000173C8,0x1400);
	add_func    (0X71000173D4,0X71000173E0);
	set_func_flags(0X71000173D4,0x1400);
	add_func    (0X71000173E0,0X71000173E8);
	set_func_flags(0X71000173E0,0x1400);
	add_func    (0X71000173E8,0X71000173F0);
	set_func_flags(0X71000173E8,0x1400);
	add_func    (0X71000173F0,0X71000174C4);
	set_func_flags(0X71000173F0,0x1410);
	SetType(0X71000173F0, "__int64 __fastcall sub_71000173F0(_QWORD, _QWORD);");
	set_frame_size(0X71000173F0, 0, 48, 0);
	add_func    (0X71000174D0,0X7100017658);
	set_func_flags(0X71000174D0,0x1410);
	SetType(0X71000174D0, "__int64 __fastcall sub_71000174D0(_QWORD, _QWORD);");
	set_frame_size(0X71000174D0, 0XC0, 32, 0);
	add_func    (0X7100017660,0X710001776C);
	set_func_flags(0X7100017660,0x1410);
	set_frame_size(0X7100017660, 0X20, 32, 0);
	add_func    (0X710001776C,0X71000177D8);
	set_func_flags(0X710001776C,0x1410);
	set_frame_size(0X710001776C, 0X20, 16, 0);
	add_func    (0X71000177E0,0X7100017858);
	set_func_flags(0X71000177E0,0x1410);
	SetType(0X71000177E0, "__int64 __fastcall sub_71000177E0(__int64);");
	set_frame_size(0X71000177E0, 0X20, 16, 0);
	add_func    (0X7100017858,0X71000178C8);
	set_func_flags(0X7100017858,0x1410);
	set_frame_size(0X7100017858, 0X20, 16, 0);
	add_func    (0X71000178D0,0X71000179DC);
	set_func_flags(0X71000178D0,0x1410);
	SetType(0X71000178D0, "__int64 __fastcall sub_71000178D0(__int64, int);");
	set_frame_size(0X71000178D0, 0X10, 64, 0);
	add_func    (0X71000179E0,0X7100017AB0);
	set_func_flags(0X71000179E0,0x1410);
	SetType(0X71000179E0, "__int64 __fastcall sub_71000179E0(_QWORD);");
	set_frame_size(0X71000179E0, 0XC0, 16, 0);
	add_func    (0X7100017AB0,0X7100017B18);
	set_func_flags(0X7100017AB0,0x1410);
	set_frame_size(0X7100017AB0, 0X20, 16, 0);
	add_func    (0X7100017B18,0X7100017B20);
	set_func_flags(0X7100017B18,0x1400);
	add_func    (0X7100017B20,0X7100017B2C);
	set_func_flags(0X7100017B20,0x1400);
	add_func    (0X7100017B30,0X7100017B50);
	set_func_flags(0X7100017B30,0x1400);
	add_func    (0X7100017B50,0X7100017B94);
	set_func_flags(0X7100017B50,0x1410);
	SetType(0X7100017B50, "__int64 sub_7100017B50(void);");
	set_frame_size(0X7100017B50, 0, 16, 0);
	add_func    (0X7100017BA0,0X7100017BA4);
	set_func_flags(0X7100017BA0,0x1440);
	add_func    (0X7100017BB0,0X7100017C6C);
	set_func_flags(0X7100017BB0,0x1410);
	set_frame_size(0X7100017BB0, 0X10, 32, 0);
	add_func    (0X7100017C70,0X7100017CD8);
	set_func_flags(0X7100017C70,0x1410);
	SetType(0X7100017C70, "__int64 __fastcall nn__fs__detail__Allocate(__int64);");
	set_frame_size(0X7100017C70, 0X20, 0, 0);
	add_func    (0X7100017CE0,0X7100017D38);
	set_func_flags(0X7100017CE0,0x1410);
	SetType(0X7100017CE0, "__int64 __fastcall nn__fs__detail__Deallocate(__int64 result, __int64);");
	set_frame_size(0X7100017CE0, 0X20, 16, 0);
	add_func    (0X7100017D38,0X7100017D3C);
	set_func_flags(0X7100017D38,0x14c0);
	SetType(0X7100017D38, "__int64 __fastcall j_delete_0(__int64 result);");
	add_func    (0X7100017D3C,0X7100017DA4);
	set_func_flags(0X7100017D3C,0x1410);
	set_frame_size(0X7100017D3C, 0X20, 0, 0);
	add_func    (0X7100017DA4,0X7100017DFC);
	set_func_flags(0X7100017DA4,0x1410);
	set_frame_size(0X7100017DA4, 0X20, 16, 0);
	add_func    (0X7100017DFC,0X7100017E08);
	set_func_flags(0X7100017DFC,0x1400);
	add_func    (0X7100017E10,0X7100017E20);
	set_func_flags(0X7100017E10,0x1400);
	SetType(0X7100017E10, "__int64 __fastcall sub_7100017E10(__int64);");
	add_func    (0X7100017E20,0X7100017E24);
	set_func_flags(0X7100017E20,0x1480);
	add_func    (0X7100017E30,0X7100017E88);
	set_func_flags(0X7100017E30,0x1410);
	set_frame_size(0X7100017E30, 0X10, 16, 0);
	add_func    (0X7100017E90,0X7100017F94);
	set_func_flags(0X7100017E90,0x1410);
	SetType(0X7100017E90, "__int64 __fastcall nn__fs__detail__IsAbortNeeded(unsigned int);");
	set_frame_size(0X7100017E90, 0X20, 0, 0);
	add_func    (0X7100017FA0,0X7100017FA4);
	set_func_flags(0X7100017FA0,0x1440);
	SetType(0X7100017FA0, "void __fastcall nn__fs__detail__LogResultErrorMessage(__int64, __int64);");
	add_func    (0X7100017FB0,0X7100017FD8);
	set_func_flags(0X7100017FB0,0x1400);
	SetType(0X7100017FB0, "__int64 nn__fs__detail__LogErrorMessage(_QWORD, const char *, ...);");
	set_frame_size(0X7100017FB0, 0XB0, 0, 0);
	add_func    (0X7100017FD8,0X7100017FE0);
	set_func_flags(0X7100017FD8,0x1400);
	add_func    (0X7100017FE0,0X710001800C);
	set_func_flags(0X7100017FE0,0x1410);
	SetType(0X7100017FE0, "__int64 *nn__fs__GetCurrentThreadFsContext();");
	set_frame_size(0X7100017FE0, 0, 16, 0);
	add_func    (0X7100018010,0X7100018028);
	set_func_flags(0X7100018010,0x1400);
	add_func    (0X7100018030,0X7100018038);
	set_func_flags(0X7100018030,0x1400);
	add_func    (0X7100018038,0X7100018080);
	set_func_flags(0X7100018038,0x1410);
	set_frame_size(0X7100018038, 0, 32, 0);
	add_func    (0X7100018080,0X7100018090);
	set_func_flags(0X7100018080,0x1400);
	add_func    (0X7100018090,0X710001810C);
	set_func_flags(0X7100018090,0x1410);
	set_frame_size(0X7100018090, 0X10, 16, 0);
	add_func    (0X7100018110,0X7100018118);
	set_func_flags(0X7100018110,0x1400);
	add_func    (0X7100018120,0X71000181C8);
	set_func_flags(0X7100018120,0x1410);
	set_frame_size(0X7100018120, 0X20, 32, 0);
	add_func    (0X71000181D0,0X7100018288);
	set_func_flags(0X71000181D0,0x1410);
	set_frame_size(0X71000181D0, 0X30, 16, 0);
	add_func    (0X7100018290,0X71000183E8);
	set_func_flags(0X7100018290,0x1410);
	SetType(0X7100018290, "__int64 __fastcall nn__fs__OpenFile(_QWORD *, __int64, unsigned int);");
	set_frame_size(0X7100018290, 0X20, 48, 0);
	add_func    (0X71000183F0,0X7100018490);
	set_func_flags(0X71000183F0,0x1410);
	set_frame_size(0X71000183F0, 0X10, 32, 0);
	add_func    (0X7100018490,0X7100018494);
	set_func_flags(0X7100018490,0x1480);
	add_func    (0X71000184A0,0X7100018560);
	set_func_flags(0X71000184A0,0x1410);
	set_frame_size(0X71000184A0, 0X20, 48, 0);
	add_func    (0X7100018560,0X7100018768);
	set_func_flags(0X7100018560,0x1400);
	SetType(0X7100018560, "bool __fastcall sub_7100018560(unsigned __int8 *str);");
	add_func    (0X7100018770,0X7100018838);
	set_func_flags(0X7100018770,0x1410);
	SetType(0X7100018770, "__int64 __fastcall nn__fs__detail__FindFileSystem(__int64, __int64, __int64);");
	set_frame_size(0X7100018770, 0X30, 16, 0);
	add_func    (0X7100018840,0X7100018A70);
	set_func_flags(0X7100018840,0x1410);
	SetType(0X7100018840, "__int64 __fastcall sub_7100018840(char *, _QWORD *, _BYTE *);");
	set_frame_size(0X7100018840, 0X20, 32, 0);
	add_func    (0X7100018A70,0X7100018AC4);
	set_func_flags(0X7100018A70,0x1410);
	SetType(0X7100018A70, "__int64 __fastcall sub_7100018A70(_BYTE *str);");
	set_frame_size(0X7100018A70, 0X20, 0, 0);
	add_func    (0X7100018AD0,0X7100018B84);
	set_func_flags(0X7100018AD0,0x1410);
	SetType(0X7100018AD0, "__int64 __fastcall sub_7100018AD0(_QWORD);");
	set_frame_size(0X7100018AD0, 0X20, 32, 0);
	add_func    (0X7100018B90,0X7100018BA4);
	set_func_flags(0X7100018B90,0x1400);
	SetType(0X7100018B90, "__int64 __fastcall sub_7100018B90(_QWORD);");
	add_func    (0X7100018BB0,0X7100018BC4);
	set_func_flags(0X7100018BB0,0x1400);
	SetType(0X7100018BB0, "__int64 __fastcall nn__fs__detail__Find(__int64, __int64);");
	add_func    (0X7100018BD0,0X7100018BE4);
	set_func_flags(0X7100018BD0,0x1400);
	add_func    (0X7100018BF0,0X7100018C9C);
	set_func_flags(0X7100018BF0,0x1410);
	set_frame_size(0X7100018BF0, 0X20, 48, 0);
	add_func    (0X7100018CA0,0X7100018D5C);
	set_func_flags(0X7100018CA0,0x1410);
	set_frame_size(0X7100018CA0, 0X10, 48, 0);
	add_func    (0X7100018D60,0X7100018E0C);
	set_func_flags(0X7100018D60,0x1410);
	SetType(0X7100018D60, "__int64 __fastcall nn__fs__detail__MountTable__Find(__int64, _QWORD *, unsigned __int8 *);");
	set_frame_size(0X7100018D60, 0, 64, 0);
	add_func    (0X7100018E10,0X7100018E3C);
	set_func_flags(0X7100018E10,0x1400);
	SetType(0X7100018E10, "__int64 __fastcall nn__fs__IsWindowsDrive(_QWORD);");
	add_func    (0X7100018E40,0X7100018E84);
	set_func_flags(0X7100018E40,0x1400);
	SetType(0X7100018E40, "__int64 __fastcall nn__fs__IsUncPath(_QWORD);");
	add_func    (0X7100018E84,0X7100018E9C);
	set_func_flags(0X7100018E84,0x1400);
	SetType(0X7100018E84, "__int64 __fastcall nn__fs__Path__Path(__int64 result);");
	add_func    (0X7100018E9C,0X7100018EEC);
	set_func_flags(0X7100018E9C,0x1410);
	SetType(0X7100018E9C, "__int64 __fastcall nn__fs__Path__SetShallowBuffer(__int64, __int64);");
	set_frame_size(0X7100018E9C, 0X20, 0, 0);
	add_func    (0X7100018EEC,0X7100018EF4);
	set_func_flags(0X7100018EEC,0x1400);
	SetType(0X7100018EEC, "__int64 __fastcall nn__fs__Path__GetString(__int64);");
	add_func    (0X7100018F00,0X7100018F08);
	set_func_flags(0X7100018F00,0x1400);
	SetType(0X7100018F00, "__int64 sub_7100018F00();");
	add_func    (0X7100018F10,0X7100018F18);
	set_func_flags(0X7100018F10,0x1400);
	SetType(0X7100018F10, "__int64 sub_7100018F10();");
	add_func    (0X7100018F20,0X71000191E0);
	set_func_flags(0X7100018F20,0x1410);
	SetType(0X7100018F20, "__int64 __fastcall sub_7100018F20(__int64 result, __int64, __int64, __int64 *, __int64 *, __int64 *);");
	set_frame_size(0X7100018F20, 0X30, 0, 0);
	add_func    (0X71000191E0,0X7100019310);
	set_func_flags(0X71000191E0,0x1410);
	set_frame_size(0X71000191E0, 0X10, 32, 0);
	add_func    (0X7100019310,0X71000194B0);
	set_func_flags(0X7100019310,0x1410);
	set_frame_size(0X7100019310, 0X50, 96, 0);
	add_func    (0X71000194B0,0X71000194D8);
	set_func_flags(0X71000194B0,0x1410);
	set_frame_size(0X71000194B0, 0X20, 0, 0);
	add_func    (0X71000194D8,0X710001962C);
	set_func_flags(0X71000194D8,0x1410);
	set_frame_size(0X71000194D8, 0X30, 48, 0);
	add_func    (0X710001962C,0X71000196C4);
	set_func_flags(0X710001962C,0x1410);
	set_frame_size(0X710001962C, 0X30, 32, 0);
	add_func    (0X71000196C4,0X7100019788);
	set_func_flags(0X71000196C4,0x1410);
	set_frame_size(0X71000196C4, 0X50, 16, 0);
	add_func    (0X7100019788,0X7100019988);
	set_func_flags(0X7100019788,0x1410);
	SetType(0X7100019788, "__int64 __fastcall nn__fs__detail__FileSystemAccessor__OpenFile(__int64, __int64 *, __int64, unsigned int);");
	set_frame_size(0X7100019788, 0X60, 48, 0);
	add_func    (0X7100019990,0X7100019A2C);
	set_func_flags(0X7100019990,0x1410);
	set_frame_size(0X7100019990, 0, 48, 0);
	add_func    (0X7100019A2C,0X7100019A3C);
	set_func_flags(0X7100019A2C,0x1400);
	add_func    (0X7100019A40,0X7100019AB4);
	set_func_flags(0X7100019A40,0x1410);
	SetType(0X7100019A40, "__int64 __fastcall nn__fs__detail__FileSystemAccessor__NotifyCloseFile(_QWORD, _QWORD);");
	set_frame_size(0X7100019A40, 0X20, 16, 0);
	add_func    (0X7100019AC0,0X7100019AC8);
	set_func_flags(0X7100019AC0,0x1400);
	SetType(0X7100019AC0, "void __usercall nn__fs__detail__LockPathBasedFileDataCacheEntries(_QWORD *@<X8>);");
	add_func    (0X7100019AD0,0X7100019AD4);
	set_func_flags(0X7100019AD0,0x1440);
	add_func    (0X7100019AE0,0X7100019AE4);
	set_func_flags(0X7100019AE0,0x1440);
	SetType(0X7100019AE0, "void nn__fs__detail__InvalidatePathBasedFileDataCacheEntry();");
	add_func    (0X7100019AF0,0X7100019AF8);
	set_func_flags(0X7100019AF0,0x1400);
	SetType(0X7100019AF0, "__int64 __fastcall nn__fs__detail__FindPathBasedFileDataCacheEntry(void *, int *, void *, __int64 *);");
	add_func    (0X7100019B00,0X7100019B84);
	set_func_flags(0X7100019B00,0x1400);
	SetType(0X7100019B00, "__int64 __fastcall sub_7100019B00(__int64, __int64, __int64, __int64, __int64, _QWORD *, __int64, __int64, unsigned __int64, __int64, __int64);");
	set_frame_size(0X7100019B00, 0, 0, 0);
	add_func    (0X7100019B90,0X7100019C4C);
	set_func_flags(0X7100019B90,0x1410);
	set_frame_size(0X7100019B90, 0, 16, 0);
	add_func    (0X7100019C4C,0X7100019C6C);
	set_func_flags(0X7100019C4C,0x1400);
	SetType(0X7100019C4C, "__int64 __fastcall nn__fs__detail__FileAccessor__FileAccessor(__int64 result, __int64 *, __int64, int);");
	add_func    (0X7100019C6C,0X7100019D18);
	set_func_flags(0X7100019C6C,0x1410);
	SetType(0X7100019C6C, "__int64 __fastcall nn__fs__detail__FileAccessor___FileAccessor(__int64);");
	set_frame_size(0X7100019C6C, 0X20, 0, 0);
	add_func    (0X7100019D18,0X7100019ED4);
	set_func_flags(0X7100019D18,0x1410);
	SetType(0X7100019D18, "__int64 __fastcall sub_7100019D18(__int64, _QWORD *, __int64, __int64, unsigned __int64, __int64, char, char);");
	set_frame_size(0X7100019D18, 0XE0, 64, 0);
	add_func    (0X7100019ED4,0X7100019EDC);
	set_func_flags(0X7100019ED4,0x1400);
	add_func    (0X7100019EDC,0X710001A070);
	set_func_flags(0X7100019EDC,0x1410);
	SetType(0X7100019EDC, "__int64 __fastcall nn__fs__detail__FileAccessor__Read(__int64, _QWORD *, __int64, __int64, unsigned __int64, __int64);");
	set_frame_size(0X7100019EDC, 0X20, 48, 0);
	add_func    (0X710001A070,0X710001A224);
	set_func_flags(0X710001A070,0x1410);
	set_frame_size(0X710001A070, 0X10, 32, 0);
	add_func    (0X710001A224,0X710001A254);
	set_func_flags(0X710001A224,0x1400);
	SetType(0X710001A224, "__int64 __fastcall nn__fs__detail__FileAccessor__GetSize(__int64, __int64);");
	add_func    (0X710001A254,0X710001A294);
	set_func_flags(0X710001A254,0x1410);
	SetType(0X710001A254, "__int64 __fastcall nn__fs__detail__FileAccessor__SetFilePathHash(__int64, __int64 *, int);");
	set_frame_size(0X710001A254, 0, 32, 0);
	add_func    (0X710001A294,0X710001A304);
	set_func_flags(0X710001A294,0x1400);
	SetType(0X710001A294, "__int64 __fastcall sub_710001A294(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);");
	add_func    (0X710001A304,0X710001A314);
	set_func_flags(0X710001A304,0x1400);
	add_func    (0X710001A320,0X710001A434);
	set_func_flags(0X710001A320,0x1410);
	set_frame_size(0X710001A320, 0X90, 80, 0);
	add_func    (0X710001A440,0X710001A464);
	set_func_flags(0X710001A440,0x1400);
	add_func    (0X710001A470,0X710001A584);
	set_func_flags(0X710001A470,0x1410);
	set_frame_size(0X710001A470, 0X230, 16, 0);
	add_func    (0X710001A590,0X710001A59C);
	set_func_flags(0X710001A590,0x1400);
	add_func    (0X710001A5A0,0X710001A6E8);
	set_func_flags(0X710001A5A0,0x1410);
	set_frame_size(0X710001A5A0, 0X230, 32, 0);
	add_func    (0X710001A6E8,0X710001A728);
	set_func_flags(0X710001A6E8,0x1400);
	add_func    (0X710001A728,0X710001A780);
	set_func_flags(0X710001A728,0x1400);
	add_func    (0X710001A780,0X710001A7A8);
	set_func_flags(0X710001A780,0x1410);
	SetType(0X710001A780, "__int64 __fastcall nn__fs__detail__FileAccessor__Dtor(__int64);");
	set_frame_size(0X710001A780, 0X20, 0, 0);
	add_func    (0X710001A7B0,0X710001A88C);
	set_func_flags(0X710001A7B0,0x1410);
	SetType(0X710001A7B0, "__int64 __fastcall nn__fs__ReadFile(__int64, __int64, __int64, __int64);");
	set_frame_size(0X710001A7B0, 0X30, 16, 0);
	add_func    (0X710001A890,0X710001A91C);
	set_func_flags(0X710001A890,0x1410);
	SetType(0X710001A890, "__int64 __fastcall sub_710001A890(_QWORD *, __int64, __int64, __int64, unsigned __int64);");
	set_frame_size(0X710001A890, 0X10, 32, 0);
	add_func    (0X710001A920,0X710001A998);
	set_func_flags(0X710001A920,0x1410);
	set_frame_size(0X710001A920, 0X10, 32, 0);
	add_func    (0X710001A9A0,0X710001AA24);
	set_func_flags(0X710001A9A0,0x1410);
	SetType(0X710001A9A0, "__int64 __fastcall nn__fs__GetFileSize(__int64, __int64);");
	set_frame_size(0X710001A9A0, 0X10, 32, 0);
	add_func    (0X710001AA30,0X710001AA44);
	set_func_flags(0X710001AA30,0x1400);
	add_func    (0X710001AA50,0X710001AC04);
	set_func_flags(0X710001AA50,0x1410);
	set_frame_size(0X710001AA50, 0X60, 64, 0);
	add_func    (0X710001AC04,0X710001AC34);
	set_func_flags(0X710001AC04,0x1400);
	add_func    (0X710001AC34,0X710001AC5C);
	set_func_flags(0X710001AC34,0x1400);
	add_func    (0X710001AC5C,0X710001AC84);
	set_func_flags(0X710001AC5C,0x1410);
	set_frame_size(0X710001AC5C, 0X20, 0, 0);
	add_func    (0X710001AC84,0X710001ACE8);
	set_func_flags(0X710001AC84,0x1410);
	set_frame_size(0X710001AC84, 0X30, 0, 0);
	add_func    (0X710001ACE8,0X710001AD1C);
	set_func_flags(0X710001ACE8,0x1410);
	set_frame_size(0X710001ACE8, 0X10, 16, 0);
	add_func    (0X710001AD1C,0X710001AD2C);
	set_func_flags(0X710001AD1C,0x1400);
	add_func    (0X710001AD2C,0X710001AD3C);
	set_func_flags(0X710001AD2C,0x1400);
	add_func    (0X710001AD3C,0X710001AD4C);
	set_func_flags(0X710001AD3C,0x1400);
	add_func    (0X710001AD4C,0X710001AE0C);
	set_func_flags(0X710001AD4C,0x1410);
	set_frame_size(0X710001AD4C, 0X50, 16, 0);
	add_func    (0X710001AE0C,0X710001AE3C);
	set_func_flags(0X710001AE0C,0x1400);
	add_func    (0X710001AE3C,0X710001AE64);
	set_func_flags(0X710001AE3C,0x1400);
	add_func    (0X710001AE64,0X710001AE8C);
	set_func_flags(0X710001AE64,0x1410);
	set_frame_size(0X710001AE64, 0X20, 0, 0);
	add_func    (0X710001AE8C,0X710001AEC4);
	set_func_flags(0X710001AE8C,0x1410);
	set_frame_size(0X710001AE8C, 0X10, 16, 0);
	add_func    (0X710001AEC4,0X710001AED4);
	set_func_flags(0X710001AEC4,0x1400);
	add_func    (0X710001AED4,0X710001AF08);
	set_func_flags(0X710001AED4,0x1400);
	add_func    (0X710001AF08,0X710001AF34);
	set_func_flags(0X710001AF08,0x1400);
	add_func    (0X710001AF34,0X710001AF5C);
	set_func_flags(0X710001AF34,0x1410);
	set_frame_size(0X710001AF34, 0X20, 0, 0);
	add_func    (0X710001AF60,0X710001B040);
	set_func_flags(0X710001AF60,0x1410);
	set_frame_size(0X710001AF60, 0X310, 48, 0);
	add_func    (0X710001B040,0X710001B100);
	set_func_flags(0X710001B040,0x1410);
	set_frame_size(0X710001B040, 0X310, 32, 0);
	add_func    (0X710001B100,0X710001B1C0);
	set_func_flags(0X710001B100,0x1410);
	set_frame_size(0X710001B100, 0X310, 32, 0);
	add_func    (0X710001B1C0,0X710001B280);
	set_func_flags(0X710001B1C0,0x1410);
	set_frame_size(0X710001B1C0, 0X310, 32, 0);
	add_func    (0X710001B280,0X710001B340);
	set_func_flags(0X710001B280,0x1410);
	set_frame_size(0X710001B280, 0X310, 32, 0);
	add_func    (0X710001B340,0X710001B400);
	set_func_flags(0X710001B340,0x1410);
	set_frame_size(0X710001B340, 0X310, 32, 0);
	add_func    (0X710001B400,0X710001B548);
	set_func_flags(0X710001B400,0x1410);
	set_frame_size(0X710001B400, 0X610, 48, 0);
	add_func    (0X710001B550,0X710001B698);
	set_func_flags(0X710001B550,0x1410);
	set_frame_size(0X710001B550, 0X610, 48, 0);
	add_func    (0X710001B6A0,0X710001B77C);
	set_func_flags(0X710001B6A0,0x1410);
	set_frame_size(0X710001B6A0, 0X330, 16, 0);
	add_func    (0X710001B780,0X710001B85C);
	set_func_flags(0X710001B780,0x1410);
	set_frame_size(0X710001B780, 0X330, 16, 0);
	add_func    (0X710001B860,0X710001B93C);
	set_func_flags(0X710001B860,0x1410);
	set_frame_size(0X710001B860, 0X330, 16, 0);
	add_func    (0X710001B940,0X710001BA80);
	set_func_flags(0X710001B940,0x1410);
	set_frame_size(0X710001B940, 0X320, 48, 0);
	add_func    (0X710001BA80,0X710001BBC0);
	set_func_flags(0X710001BA80,0x1410);
	set_frame_size(0X710001BA80, 0X320, 48, 0);
	add_func    (0X710001BBC0,0X710001BBD0);
	set_func_flags(0X710001BBC0,0x1400);
	add_func    (0X710001BBD0,0X710001BCAC);
	set_func_flags(0X710001BBD0,0x1410);
	set_frame_size(0X710001BBD0, 0X330, 16, 0);
	add_func    (0X710001BCAC,0X710001BCBC);
	set_func_flags(0X710001BCAC,0x1400);
	add_func    (0X710001BCC0,0X710001BDB4);
	set_func_flags(0X710001BCC0,0x1410);
	set_frame_size(0X710001BCC0, 0X350, 48, 0);
	add_func    (0X710001BDB4,0X710001BDC0);
	set_func_flags(0X710001BDB4,0x1400);
	add_func    (0X710001BDC0,0X710001BDCC);
	set_func_flags(0X710001BDC0,0x1400);
	add_func    (0X710001BDCC,0X710001BDD8);
	set_func_flags(0X710001BDCC,0x1400);
	add_func    (0X710001BDD8,0X710001BDF4);
	set_func_flags(0X710001BDD8,0x1400);
	add_func    (0X710001BDF4,0X710001BE10);
	set_func_flags(0X710001BDF4,0x1400);
	add_func    (0X710001BE10,0X710001BEE8);
	set_func_flags(0X710001BE10,0x1410);
	set_frame_size(0X710001BE10, 0X30, 16, 0);
	add_func    (0X710001BEF0,0X710001BF64);
	set_func_flags(0X710001BEF0,0x1410);
	set_frame_size(0X710001BEF0, 0X30, 0, 0);
	add_func    (0X710001BF70,0X710001C0A4);
	set_func_flags(0X710001BF70,0x1410);
	SetType(0X710001BF70, "__int64 __fastcall sub_710001BF70(__int64, __int64, __int64 *, __int64 *, __int64 *, char, __int64, char, __int64 *);");
	set_frame_size(0X710001BF70, 0X10, 96, 0);
	add_func    (0X710001C0B0,0X710001C110);
	set_func_flags(0X710001C0B0,0x1410);
	SetType(0X710001C0B0, "__int64 __fastcall sub_710001C0B0(__int64, __int64, __int64 *, __int64, char, __int64, char, __int64 *);");
	set_frame_size(0X710001C0B0, 0X30, 0, 0);
	add_func    (0X710001C110,0X710001C190);
	set_func_flags(0X710001C110,0x1410);
	set_frame_size(0X710001C110, 0X20, 0, 0);
	add_func    (0X710001C190,0X710001C214);
	set_func_flags(0X710001C190,0x1410);
	set_frame_size(0X710001C190, 0X20, 0, 0);
	add_func    (0X710001C214,0X710001C234);
	set_func_flags(0X710001C214,0x1400);
	add_func    (0X710001C234,0X710001C244);
	set_func_flags(0X710001C234,0x1400);
	add_func    (0X710001C244,0X710001C254);
	set_func_flags(0X710001C244,0x1400);
	add_func    (0X710001C254,0X710001C264);
	set_func_flags(0X710001C254,0x1400);
	add_func    (0X710001C264,0X710001C274);
	set_func_flags(0X710001C264,0x1400);
	add_func    (0X710001C274,0X710001C284);
	set_func_flags(0X710001C274,0x1400);
	add_func    (0X710001C284,0X710001C294);
	set_func_flags(0X710001C284,0x1400);
	add_func    (0X710001C294,0X710001C2A4);
	set_func_flags(0X710001C294,0x1400);
	add_func    (0X710001C2A4,0X710001C2C4);
	set_func_flags(0X710001C2A4,0x1400);
	add_func    (0X710001C2C4,0X710001C2E4);
	set_func_flags(0X710001C2C4,0x1400);
	add_func    (0X710001C2E4,0X710001C304);
	set_func_flags(0X710001C2E4,0x1400);
	add_func    (0X710001C304,0X710001C340);
	set_func_flags(0X710001C304,0x1400);
	add_func    (0X710001C340,0X710001C37C);
	set_func_flags(0X710001C340,0x1400);
	add_func    (0X710001C37C,0X710001C38C);
	set_func_flags(0X710001C37C,0x1400);
	add_func    (0X710001C38C,0X710001C39C);
	set_func_flags(0X710001C38C,0x1400);
	add_func    (0X710001C39C,0X710001C3AC);
	set_func_flags(0X710001C39C,0x1400);
	add_func    (0X710001C3AC,0X710001C3BC);
	set_func_flags(0X710001C3AC,0x1400);
	add_func    (0X710001C3BC,0X710001C3DC);
	set_func_flags(0X710001C3BC,0x1400);
	add_func    (0X710001C3DC,0X710001C3EC);
	set_func_flags(0X710001C3DC,0x1400);
	add_func    (0X710001C3EC,0X710001C40C);
	set_func_flags(0X710001C3EC,0x1400);
	add_func    (0X710001C410,0X710001C48C);
	set_func_flags(0X710001C410,0x1410);
	SetType(0X710001C410, "__int64 __fastcall QueryMountSystemDataCacheSize(unsigned __int64 *out_size, __int64 data_id);");
	set_frame_size(0X710001C410, 0X10, 32, 0);
	add_func    (0X710001C490,0X710001C514);
	set_func_flags(0X710001C490,0x1410);
	SetType(0X710001C490, "__int64 __fastcall MountSystemData(__int64 name, __int64 data_id, __int64 binary, __int64 size);");
	set_frame_size(0X710001C490, 0X10, 32, 0);
	add_func    (0X710001C520,0X710001C5D4);
	set_func_flags(0X710001C520,0x1410);
	SetType(0X710001C520, "__int64 __fastcall sub_710001C520(unsigned __int64 *out_size, __int64 data_id, unsigned int storage_id);");
	set_frame_size(0X710001C520, 0X30, 16, 0);
	define_local_var(0X710001C520, 0X710001C5D4, "[bp-0X8]", "out_IStorage");
	add_func    (0X710001C5E0,0X710001C728);
	set_func_flags(0X710001C5E0,0x1410);
	SetType(0X710001C5E0, "__int64 __fastcall nn__fssrv__sf__IFileSystemProxy__OpenDataStorageByDataId(__int64 *out_IStorage, __int64 data_id, unsigned int storage_id);");
	set_frame_size(0X710001C5E0, 0X30, 16, 0);
	add_func    (0X710001C730,0X710001C864);
	set_func_flags(0X710001C730,0x1410);
	SetType(0X710001C730, "__int64 __fastcall sub_710001C730(__int64, __int64, unsigned int, __int64, unsigned __int64, char, char, char, __int64);");
	set_frame_size(0X710001C730, 0X20, 80, 0);
	define_local_var(0X710001C730, 0X710001C864, "[bp-0X8]", "istorage");
	add_func    (0X710001C870,0X710001C920);
	set_func_flags(0X710001C870,0x1410);
	SetType(0X710001C870, "__int64 __fastcall sub_710001C870(__int64 name, __int64 data_id, unsigned int storage_id, __int64 binary, __int64 size);");
	set_frame_size(0X710001C870, 0X10, 64, 0);
	add_func    (0X710001C920,0X710001C948);
	set_func_flags(0X710001C920,0x1400);
	SetType(0X710001C920, "__int64 __fastcall nn__fssrv__sf__IStorage__D1(_QWORD *);");
	add_func    (0X710001C948,0X710001C990);
	set_func_flags(0X710001C948,0x1410);
	SetType(0X710001C948, "__int64 __fastcall nn__fssrv__sf__IStorage__D0(_QWORD *);");
	set_frame_size(0X710001C948, 0X20, 0, 0);
	add_func    (0X710001C990,0X710001C9C0);
	set_func_flags(0X710001C990,0x1410);
	SetType(0X710001C990, "__int64 __fastcall nn__fssrv__sf__IStorage__Read(__int64, __int64, __int64, __int64);");
	set_frame_size(0X710001C990, 0X10, 16, 0);
	add_func    (0X710001C9C0,0X710001C9F0);
	set_func_flags(0X710001C9C0,0x1410);
	SetType(0X710001C9C0, "__int64 __fastcall nn__fssrv__sf__IStorage__Write(__int64, __int64, __int64, __int64);");
	set_frame_size(0X710001C9C0, 0X10, 16, 0);
	add_func    (0X710001C9F0,0X710001CA00);
	set_func_flags(0X710001C9F0,0x1400);
	SetType(0X710001C9F0, "__int64 __fastcall nn__fssrv__sf__IStorage__Flush(__int64);");
	add_func    (0X710001CA00,0X710001CA10);
	set_func_flags(0X710001CA00,0x1400);
	SetType(0X710001CA00, "__int64 __fastcall nn__fssrv__sf__IStorage__SetSize(__int64);");
	add_func    (0X710001CA10,0X710001CA20);
	set_func_flags(0X710001CA10,0x1400);
	SetType(0X710001CA10, "__int64 __fastcall nn__fssrv__sf__IStorage__GetSize(__int64 a1, __int64);");
	add_func    (0X710001CA20,0X710001CAC8);
	set_func_flags(0X710001CA20,0x1410);
	SetType(0X710001CA20, "__int64 __fastcall nn__fssrv__sf__IStorage__OperateRange(__int64, __int64, __int64, __int64, __int64, __int64);");
	set_frame_size(0X710001CA20, 0X40, 16, 0);
	add_func    (0X710001CAC8,0X710001CAE0);
	set_func_flags(0X710001CAC8,0x1400);
	add_func    (0X710001CAE0,0X710001CAE4);
	set_func_flags(0X710001CAE0,0x1440);
	add_func    (0X710001CAE4,0X710001CB0C);
	set_func_flags(0X710001CAE4,0x1410);
	set_frame_size(0X710001CAE4, 0X20, 0, 0);
	add_func    (0X710001CB0C,0X710001CBEC);
	set_func_flags(0X710001CB0C,0x1410);
	set_frame_size(0X710001CB0C, 0X20, 32, 0);
	add_func    (0X710001CBEC,0X710001CBF4);
	set_func_flags(0X710001CBEC,0x1400);
	SetType(0X710001CBEC, "__int64 __fastcall sub_710001CBEC(__int64);");
	add_func    (0X710001CBF4,0X710001CC08);
	set_func_flags(0X710001CBF4,0x1400);
	add_func    (0X710001CC08,0X710001CCA8);
	set_func_flags(0X710001CC08,0x1400);
	add_func    (0X710001CCA8,0X710001CCB4);
	set_func_flags(0X710001CCA8,0x1400);
	add_func    (0X710001CCB4,0X710001CCBC);
	set_func_flags(0X710001CCB4,0x1400);
	add_func    (0X710001CCBC,0X710001CCC8);
	set_func_flags(0X710001CCBC,0x1400);
	add_func    (0X710001CCC8,0X710001CD04);
	set_func_flags(0X710001CCC8,0x1410);
	SetType(0X710001CCC8, "__int64 __fastcall sub_710001CCC8(_QWORD *);");
	set_frame_size(0X710001CCC8, 0X20, 0, 0);
	add_func    (0X710001CD04,0X710001CDAC);
	set_func_flags(0X710001CD04,0x1410);
	set_frame_size(0X710001CD04, 0X20, 0, 0);
	add_func    (0X710001CDB0,0X710001CF00);
	set_func_flags(0X710001CDB0,0x1410);
	set_frame_size(0X710001CDB0, 0, 48, 0);
	add_func    (0X710001CF00,0X710001CF28);
	set_func_flags(0X710001CF00,0x1410);
	set_frame_size(0X710001CF00, 0X20, 0, 0);
	add_func    (0X710001CF28,0X710001CFB8);
	set_func_flags(0X710001CF28,0x1410);
	SetType(0X710001CF28, "__int64 __fastcall sub_710001CF28(unsigned __int64 *out_size, __int64 *IStorage);");
	set_frame_size(0X710001CF28, 0X70, 0, 0);
	define_local_var(0X710001CF28, 0X710001CFB8, "[bp-0X70]", "header");
	add_func    (0X710001CFB8,0X710001D020);
	set_func_flags(0X710001CFB8,0x1410);
	SetType(0X710001CFB8, "__int64 __fastcall sub_710001CFB8(_QWORD *, __int64 *, __int64, unsigned __int64, char);");
	set_frame_size(0X710001CFB8, 0, 48, 0);
	add_func    (0X710001D020,0X710001D55C);
	set_func_flags(0X710001D020,0x1410);
	SetType(0X710001D020, "__int64 __fastcall sub_710001D020(_QWORD *a1, __int64 *istorage, __int64 a3, unsigned __int64 a4, char a5);");
	set_frame_size(0X710001D020, 0X210, 80, 0);
	add_func    (0X710001D560,0X710001D5D0);
	set_func_flags(0X710001D560,0x1410);
	SetType(0X710001D560, "_QWORD *__fastcall nn__fs__SubStorage__D1(_QWORD *result);");
	set_frame_size(0X710001D560, 0X20, 0, 0);
	add_func    (0X710001D5D0,0X710001D6DC);
	set_func_flags(0X710001D5D0,0x1400);
	set_frame_size(0X710001D5D0, 0X40, 0, 0);
	add_func    (0X710001D6DC,0X710001D7D8);
	set_func_flags(0X710001D6DC,0x1410);
	set_frame_size(0X710001D6DC, 0X10, 48, 0);
	add_func    (0X710001D7D8,0X710001D888);
	set_func_flags(0X710001D7D8,0x1410);
	set_frame_size(0X710001D7D8, 0X10, 32, 0);
	add_func    (0X710001D888,0X710001D894);
	set_func_flags(0X710001D888,0x1400);
	add_func    (0X710001D894,0X710001D8A0);
	set_func_flags(0X710001D894,0x1400);
	add_func    (0X710001D8A0,0X710001D8AC);
	set_func_flags(0X710001D8A0,0x1400);
	add_func    (0X710001D8AC,0X710001D8B8);
	set_func_flags(0X710001D8AC,0x1400);
	add_func    (0X710001D8B8,0X710001D8C4);
	set_func_flags(0X710001D8B8,0x1400);
	add_func    (0X710001D8C4,0X710001D8D0);
	set_func_flags(0X710001D8C4,0x1400);
	add_func    (0X710001D8D0,0X710001D8DC);
	set_func_flags(0X710001D8D0,0x1400);
	add_func    (0X710001D8DC,0X710001D8E8);
	set_func_flags(0X710001D8DC,0x1400);
	add_func    (0X710001D8E8,0X710001D8F0);
	set_func_flags(0X710001D8E8,0x1400);
	add_func    (0X710001D8F0,0X710001D8FC);
	set_func_flags(0X710001D8F0,0x1400);
	add_func    (0X710001D8FC,0X710001D904);
	set_func_flags(0X710001D8FC,0x1400);
	add_func    (0X710001D904,0X710001D910);
	set_func_flags(0X710001D904,0x1400);
	add_func    (0X710001D910,0X710001D91C);
	set_func_flags(0X710001D910,0x1400);
	add_func    (0X710001D91C,0X710001D964);
	set_func_flags(0X710001D91C,0x1400);
	add_func    (0X710001D964,0X710001D970);
	set_func_flags(0X710001D964,0x1400);
	add_func    (0X710001D970,0X710001D97C);
	set_func_flags(0X710001D970,0x1400);
	add_func    (0X710001D97C,0X710001D984);
	set_func_flags(0X710001D97C,0x1400);
	add_func    (0X710001D984,0X710001DA10);
	set_func_flags(0X710001D984,0x1410);
	set_frame_size(0X710001D984, 0, 48, 0);
	add_func    (0X710001DA10,0X710001DA9C);
	set_func_flags(0X710001DA10,0x1410);
	set_frame_size(0X710001DA10, 0, 48, 0);
	add_func    (0X710001DA9C,0X710001DAA4);
	set_func_flags(0X710001DA9C,0x1400);
	add_func    (0X710001DAA4,0X710001DAB0);
	set_func_flags(0X710001DAA4,0x1400);
	add_func    (0X710001DAB0,0X710001DAC0);
	set_func_flags(0X710001DAB0,0x1400);
	add_func    (0X710001DAC0,0X710001DB18);
	set_func_flags(0X710001DAC0,0x1400);
	add_func    (0X710001DB18,0X710001DB1C);
	set_func_flags(0X710001DB18,0x1440);
	add_func    (0X710001DB20,0X710001DBA4);
	set_func_flags(0X710001DB20,0x1410);
	SetType(0X710001DB20, "__int64 __fastcall nn__fs__SubStorage__D0(_QWORD *);");
	set_frame_size(0X710001DB20, 0, 32, 0);
	add_func    (0X710001DBA4,0X710001DC64);
	set_func_flags(0X710001DBA4,0x1410);
	SetType(0X710001DBA4, "__int64 __fastcall sub_710001DBA4(_QWORD *, signed __int64, __int64, __int64);");
	set_frame_size(0X710001DBA4, 0, 48, 0);
	add_func    (0X710001DC64,0X710001DD24);
	set_func_flags(0X710001DC64,0x1410);
	SetType(0X710001DC64, "__int64 __fastcall sub_710001DC64(_QWORD *, signed __int64, __int64, __int64);");
	set_frame_size(0X710001DC64, 0, 48, 0);
	add_func    (0X710001DD24,0X710001DD44);
	set_func_flags(0X710001DD24,0x1400);
	add_func    (0X710001DD44,0X710001DE24);
	set_func_flags(0X710001DD44,0x1410);
	set_frame_size(0X710001DD44, 0X20, 16, 0);
	add_func    (0X710001DE24,0X710001DE4C);
	set_func_flags(0X710001DE24,0x1400);
	add_func    (0X710001DE4C,0X710001DF40);
	set_func_flags(0X710001DE4C,0x1410);
	set_frame_size(0X710001DE4C, 0, 80, 0);
	add_func    (0X710001DF40,0X710001DF48);
	set_func_flags(0X710001DF40,0x1400);
	add_func    (0X710001DF48,0X710001DF58);
	set_func_flags(0X710001DF48,0x1400);
	add_func    (0X710001DF58,0X710001DF88);
	set_func_flags(0X710001DF58,0x1410);
	set_frame_size(0X710001DF58, 0X10, 16, 0);
	add_func    (0X710001DF88,0X710001DF8C);
	set_func_flags(0X710001DF88,0x1440);
	add_func    (0X710001DF90,0X710001E3A8);
	set_func_flags(0X710001DF90,0x1410);
	set_frame_size(0X710001DF90, 0X20, 96, 0);
	add_func    (0X710001E3A8,0X710001E410);
	set_func_flags(0X710001E3A8,0x1400);
	SetType(0X710001E3A8, "__int64 __fastcall sub_710001E3A8(_QWORD);");
	add_func    (0X710001E410,0X710001E7F0);
	set_func_flags(0X710001E410,0x1410);
	SetType(0X710001E410, "__int64 __fastcall sub_710001E410(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD);");
	set_frame_size(0X710001E410, 0X10, 96, 0);
	add_func    (0X710001E7F0,0X710001E998);
	set_func_flags(0X710001E7F0,0x1410);
	set_frame_size(0X710001E7F0, 0X40, 32, 0);
	add_func    (0X710001E9A0,0X710001EB40);
	set_func_flags(0X710001E9A0,0x1410);
	set_frame_size(0X710001E9A0, 0X40, 32, 0);
	add_func    (0X710001EB40,0X710001EBC4);
	set_func_flags(0X710001EB40,0x1410);
	set_frame_size(0X710001EB40, 0X40, 32, 0);
	add_func    (0X710001EBC4,0X710001EC18);
	set_func_flags(0X710001EBC4,0x1410);
	set_frame_size(0X710001EBC4, 0X40, 0, 0);
	add_func    (0X710001EC18,0X710001ED78);
	set_func_flags(0X710001EC18,0x1410);
	set_frame_size(0X710001EC18, 0X40, 16, 0);
	add_func    (0X710001ED78,0X710001EE00);
	set_func_flags(0X710001ED78,0x1410);
	set_frame_size(0X710001ED78, 0X40, 32, 0);
	add_func    (0X710001EE00,0X710001EE90);
	set_func_flags(0X710001EE00,0x1410);
	set_frame_size(0X710001EE00, 0X20, 32, 0);
	add_func    (0X710001EE90,0X710001EF28);
	set_func_flags(0X710001EE90,0x1410);
	set_frame_size(0X710001EE90, 0X30, 32, 0);
	add_func    (0X710001EF28,0X710001F020);
	set_func_flags(0X710001EF28,0x1410);
	set_frame_size(0X710001EF28, 0X30, 64, 0);
	add_func    (0X710001F020,0X710001F274);
	set_func_flags(0X710001F020,0x1410);
	set_frame_size(0X710001F020, 0X80, 96, 0);
	add_func    (0X710001F274,0X710001F4A8);
	set_func_flags(0X710001F274,0x1410);
	set_frame_size(0X710001F274, 0X60, 64, 0);
	add_func    (0X710001F4A8,0X710001F660);
	set_func_flags(0X710001F4A8,0x1410);
	set_frame_size(0X710001F4A8, 0X20, 96, 0);
	add_func    (0X710001F660,0X710001F7B4);
	set_func_flags(0X710001F660,0x1410);
	set_frame_size(0X710001F660, 0X20, 48, 0);
	add_func    (0X710001F7B4,0X710001F96C);
	set_func_flags(0X710001F7B4,0x1410);
	set_frame_size(0X710001F7B4, 0X20, 96, 0);
	add_func    (0X710001F96C,0X710001FAC0);
	set_func_flags(0X710001F96C,0x1410);
	set_frame_size(0X710001F96C, 0X20, 48, 0);
	add_func    (0X710001FAC0,0X710001FBE0);
	set_func_flags(0X710001FAC0,0x1410);
	set_frame_size(0X710001FAC0, 0X20, 80, 0);
	add_func    (0X710001FBE0,0X710001FD04);
	set_func_flags(0X710001FBE0,0x1410);
	set_frame_size(0X710001FBE0, 0X20, 80, 0);
	add_func    (0X710001FD04,0X710001FD40);
	set_func_flags(0X710001FD04,0x1400);
	SetType(0X710001FD04, "__int64 __fastcall sub_710001FD04(signed __int64, __int64, __int64);");
	add_func    (0X710001FD40,0X710001FD74);
	set_func_flags(0X710001FD40,0x1400);
	add_func    (0X710001FD74,0X710001FD84);
	set_func_flags(0X710001FD74,0x1400);
	add_func    (0X710001FD90,0X710001FDCC);
	set_func_flags(0X710001FD90,0x1400);
	add_func    (0X710001FDCC,0X710001FDD4);
	set_func_flags(0X710001FDCC,0x1400);
	add_func    (0X710001FDD4,0X710001FE28);
	set_func_flags(0X710001FDD4,0x1400);
	add_func    (0X710001FE30,0X710001FEC8);
	set_func_flags(0X710001FE30,0x1400);
	add_func    (0X710001FEC8,0X710001FEF0);
	set_func_flags(0X710001FEC8,0x1400);
	add_func    (0X710001FEF0,0X710001FF18);
	set_func_flags(0X710001FEF0,0x1400);
	add_func    (0X710001FF20,0X710002005C);
	set_func_flags(0X710001FF20,0x1400);
	add_func    (0X7100020060,0X71000200FC);
	set_func_flags(0X7100020060,0x1410);
	SetType(0X7100020060, "__int64 __fastcall fspsrv_SetCurrentPosixTimeWithTimeDifference(__int64 time, unsigned int utoffset);");
	set_frame_size(0X7100020060, 0X10, 32, 0);
	add_func    (0X7100020100,0X7100020160);
	set_func_flags(0X7100020100,0x1410);
	SetType(0X7100020100, "__int64 __fastcall nn__init__Start(__int64, __int64, __int64 (__fastcall *)(__int64), void (__fastcall *)(__int64), __int64 (__fastcall *)(__int64));");
	set_frame_size(0X7100020100, 0X20, 32, 0);
	add_func    (0X7100020160,0X7100020164);
	set_func_flags(0X7100020160,0x14c0);
	SetType(0X7100020160, "__int64 __fastcall j_nullsub_96(_QWORD);");
	add_func    (0X7100020170,0X7100020174);
	set_func_flags(0X7100020170,0x1480);
	SetType(0X7100020170, "__int64 __fastcall sub_7100020170(_QWORD);");
	add_func    (0X7100020180,0X7100020184);
	set_func_flags(0X7100020180,0x14c0);
	SetType(0X7100020180, "__int64 __fastcall j_nullsub_97(_QWORD);");
	add_func    (0X7100020190,0X71000201A4);
	set_func_flags(0X7100020190,0x1410);
	SetType(0X7100020190, "__int64 __fastcall sub_7100020190(_QWORD);");
	set_frame_size(0X7100020190, 0, 16, 0);
	add_func    (0X71000201B0,0X71000201B4);
	set_func_flags(0X71000201B0,0x1440);
	SetType(0X71000201B0, "__int64 __fastcall nullsub_29(_QWORD);");
	add_func    (0X71000201C0,0X71000201FC);
	set_func_flags(0X71000201C0,0x1410);
	SetType(0X71000201C0, "unsigned __int64 __fastcall nn__lmem__CreateExpHeap(__int64, __int64, unsigned __int16);");
	set_frame_size(0X71000201C0, 0, 32, 0);
	add_func    (0X7100020200,0X7100020230);
	set_func_flags(0X7100020200,0x1410);
	set_frame_size(0X7100020200, 0X20, 0, 0);
	add_func    (0X7100020230,0X7100020288);
	set_func_flags(0X7100020230,0x1410);
	SetType(0X7100020230, "unsigned __int64 __fastcall nn__lmem__AllocateFromExpHeap(__int64, __int64);");
	set_frame_size(0X7100020230, 0, 32, 0);
	add_func    (0X7100020290,0X71000202F4);
	set_func_flags(0X7100020290,0x1410);
	SetType(0X7100020290, "__int64 __fastcall sub_7100020290(__int64, __int64, unsigned int);");
	set_frame_size(0X7100020290, 0X20, 16, 0);
	add_func    (0X7100020300,0X7100020354);
	set_func_flags(0X7100020300,0x1410);
	SetType(0X7100020300, "__int64 __fastcall sub_7100020300(_QWORD, _QWORD);");
	set_frame_size(0X7100020300, 0, 32, 0);
	add_func    (0X7100020360,0X71000203D0);
	set_func_flags(0X7100020360,0x1410);
	SetType(0X7100020360, "__int64 __fastcall sub_7100020360(__int64);");
	set_frame_size(0X7100020360, 0, 32, 0);
	add_func    (0X71000203D0,0X710002044C);
	set_func_flags(0X71000203D0,0x1410);
	SetType(0X71000203D0, "__int64 __fastcall sub_71000203D0(__int64, unsigned int);");
	set_frame_size(0X71000203D0, 0, 32, 0);
	add_func    (0X7100020450,0X71000204E0);
	set_func_flags(0X7100020450,0x1410);
	SetType(0X7100020450, "unsigned __int64 __fastcall nn__lmem__detail__CreateExpHeap(__int64, __int64, unsigned __int16);");
	set_frame_size(0X7100020450, 0X20, 0, 0);
	add_func    (0X71000204E0,0X71000204E4);
	set_func_flags(0X71000204E0,0x14c0);
	add_func    (0X71000204F0,0X7100020714);
	set_func_flags(0X71000204F0,0x1410);
	SetType(0X71000204F0, "unsigned __int64 __fastcall sub_71000204F0(__int64, __int64, unsigned int);");
	set_frame_size(0X71000204F0, 0X20, 0, 0);
	add_func    (0X7100020720,0X71000208A0);
	set_func_flags(0X7100020720,0x1400);
	add_func    (0X71000208A0,0X71000208CC);
	set_func_flags(0X71000208A0,0x1400);
	SetType(0X71000208A0, "__int64 __fastcall sub_71000208A0(_QWORD);");
	add_func    (0X71000208D0,0X7100020954);
	set_func_flags(0X71000208D0,0x1400);
	SetType(0X71000208D0, "unsigned __int64 __fastcall sub_71000208D0(__int64, int);");
	add_func    (0X7100020960,0X7100020AF0);
	set_func_flags(0X7100020960,0x1400);
	SetType(0X7100020960, "__int64 __fastcall sub_7100020960(_QWORD, _QWORD, _QWORD);");
	add_func    (0X7100020AF0,0X7100020B00);
	set_func_flags(0X7100020AF0,0x1400);
	SetType(0X7100020AF0, "__int64 __fastcall sub_7100020AF0(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD);");
	add_func    (0X7100020B00,0X7100020B04);
	set_func_flags(0X7100020B00,0x1440);
	SetType(0X7100020B00, "__int64 nullsub_30(void);");
	add_func    (0X7100020B10,0X7100020B5C);
	set_func_flags(0X7100020B10,0x1410);
	SetType(0X7100020B10, "unsigned __int64 __fastcall nn__lmem__CreateUnitHeap(__int64, __int64, __int64, unsigned __int16, int, unsigned __int64);");
	set_frame_size(0X7100020B10, 0, 32, 0);
	add_func    (0X7100020B60,0X7100020B90);
	set_func_flags(0X7100020B60,0x1410);
	SetType(0X7100020B60, "__int64 __fastcall sub_7100020B60(__int64);");
	set_frame_size(0X7100020B60, 0X20, 0, 0);
	add_func    (0X7100020B90,0X7100020C00);
	set_func_flags(0X7100020B90,0x1410);
	set_frame_size(0X7100020B90, 0, 32, 0);
	add_func    (0X7100020C00,0X7100020C54);
	set_func_flags(0X7100020C00,0x1410);
	set_frame_size(0X7100020C00, 0, 32, 0);
	add_func    (0X7100020C60,0X7100020E38);
	set_func_flags(0X7100020C60,0x1410);
	SetType(0X7100020C60, "unsigned __int64 __fastcall sub_7100020C60(__int64, __int64, __int64, int, unsigned __int16, int, unsigned __int64);");
	set_frame_size(0X7100020C60, 0, 64, 0);
	add_func    (0X7100020E40,0X7100020E50);
	set_func_flags(0X7100020E40,0x1400);
	SetType(0X7100020E40, "__int64 __fastcall sub_7100020E40(__int64);");
	add_func    (0X7100020E50,0X7100020E74);
	set_func_flags(0X7100020E50,0x1400);
	add_func    (0X7100020E80,0X7100020EA0);
	set_func_flags(0X7100020E80,0x1400);
	add_func    (0X7100020EA0,0X7100020ECC);
	set_func_flags(0X7100020EA0,0x1410);
	SetType(0X7100020EA0, "__int64 __fastcall sub_7100020EA0(_QWORD);");
	set_frame_size(0X7100020EA0, 0X20, 0, 0);
	add_func    (0X7100020ED0,0X7100020ED8);
	set_func_flags(0X7100020ED0,0x1400);
	SetType(0X7100020ED0, "__int64 __fastcall sub_7100020ED0(_QWORD);");
	add_func    (0X7100020EE0,0X7100020EE8);
	set_func_flags(0X7100020EE0,0x1400);
	SetType(0X7100020EE0, "__int64 __fastcall sub_7100020EE0(_QWORD);");
	add_func    (0X7100020EF0,0X7100020F5C);
	set_func_flags(0X7100020EF0,0x1410);
	SetType(0X7100020EF0, "__int64 __fastcall sub_7100020EF0(_QWORD, _QWORD);");
	set_frame_size(0X7100020EF0, 0X20, 0, 0);
	add_func    (0X7100020F60,0X7100020FB8);
	set_func_flags(0X7100020F60,0x1410);
	SetType(0X7100020F60, "_DWORD *__fastcall nn__os__InitializeEvent(__int64, char, char);");
	set_frame_size(0X7100020F60, 0X20, 16, 0);
	add_func    (0X7100020FC0,0X7100020FC8);
	set_func_flags(0X7100020FC0,0x1400);
	SetType(0X7100020FC0, "void __fastcall nn__os__FinalizeEvent(__int64 result);");
	add_func    (0X7100020FD0,0X7100021070);
	set_func_flags(0X7100020FD0,0x1410);
	SetType(0X7100020FD0, "unsigned int *__fastcall nn__os__SignalEvent(__int64);");
	set_frame_size(0X7100020FD0, 0X20, 16, 0);
	add_func    (0X7100021070,0X71000210A0);
	set_func_flags(0X7100021070,0x1410);
	SetType(0X7100021070, "unsigned int *__fastcall nn__os__ClearEvent(__int64);");
	set_frame_size(0X7100021070, 0, 32, 0);
	add_func    (0X71000210A0,0X7100021114);
	set_func_flags(0X71000210A0,0x1410);
	SetType(0X71000210A0, "unsigned int *__fastcall sub_71000210A0(__int64);");
	set_frame_size(0X71000210A0, 0, 48, 0);
	add_func    (0X7100021120,0X7100021170);
	set_func_flags(0X7100021120,0x1410);
	SetType(0X7100021120, "bool __fastcall sub_7100021120(__int64);");
	set_frame_size(0X7100021120, 0, 32, 0);
	add_func    (0X7100021170,0X7100021198);
	set_func_flags(0X7100021170,0x1400);
	SetType(0X7100021170, "_QWORD *__fastcall sub_7100021170(_QWORD *result, __int64);");
	add_func    (0X71000211A0,0X710002120C);
	set_func_flags(0X71000211A0,0x1410);
	SetType(0X71000211A0, "int __fastcall nn__os__CreateSystemEvent(nn::os::SystemEventType *event, char clearMode, bool type);");
	set_frame_size(0X71000211A0, 0X20, 0, 0);
	add_func    (0X7100021210,0X7100021244);
	set_func_flags(0X7100021210,0x1410);
	SetType(0X7100021210, "__int64 __fastcall nn__os__AttachReadableHandleToSystemEvent(nn::os::SystemEventType *event, __int64 handle, __int64 managed, unsigned int a4);");
	set_frame_size(0X7100021210, 0X20, 0, 0);
	add_func    (0X7100021250,0X7100021284);
	set_func_flags(0X7100021250,0x1410);
	SetType(0X7100021250, "void __fastcall nn__os__DestroySystemEvent(__int64);");
	set_frame_size(0X7100021250, 0, 16, 0);
	add_func    (0X7100021290,0X71000212C0);
	set_func_flags(0X7100021290,0x1410);
	SetType(0X7100021290, "__int64 __fastcall sub_7100021290(_QWORD);");
	set_frame_size(0X7100021290, 0, 16, 0);
	add_func    (0X71000212C0,0X71000212F0);
	set_func_flags(0X71000212C0,0x1410);
	SetType(0X71000212C0, "__int64 __fastcall sub_71000212C0(__int64);");
	set_frame_size(0X71000212C0, 0, 16, 0);
	add_func    (0X71000212F0,0X7100021320);
	set_func_flags(0X71000212F0,0x1410);
	SetType(0X71000212F0, "unsigned int *__fastcall nn__os__SignalSystemEvent(__int64);");
	set_frame_size(0X71000212F0, 0, 16, 0);
	add_func    (0X7100021320,0X7100021350);
	set_func_flags(0X7100021320,0x1410);
	SetType(0X7100021320, "void __fastcall nn__os__ClearSystemEvent(nn::os::SystemEventType *a1);");
	set_frame_size(0X7100021320, 0, 16, 0);
	add_func    (0X7100021350,0X7100021354);
	set_func_flags(0X7100021350,0x14c0);
	SetType(0X7100021350, "__int64 __fastcall nn__os__detail__GetReadableHandleOfInterProcessEvent(__int64);");
	add_func    (0X7100021360,0X71000213D8);
	set_func_flags(0X7100021360,0x1410);
	SetType(0X7100021360, "_QWORD *__fastcall nn__os__InitializeMultiWaitHolder(_QWORD *result, __int64);");
	set_frame_size(0X7100021360, 0, 16, 0);
	add_func    (0X71000213E0,0X710002141C);
	set_func_flags(0X71000213E0,0x1410);
	SetType(0X71000213E0, "_DWORD *__fastcall nn__os__InitializeMultiWait(__int64);");
	set_frame_size(0X71000213E0, 0X20, 0, 0);
	add_func    (0X7100021420,0X7100021428);
	set_func_flags(0X7100021420,0x1400);
	SetType(0X7100021420, "_BYTE *__fastcall nn__os__FinalizeMultiWait(_BYTE *result);");
	add_func    (0X7100021430,0X7100021464);
	set_func_flags(0X7100021430,0x1410);
	SetType(0X7100021430, "__int64 __fastcall nn__os__WaitAny(__int64);");
	set_frame_size(0X7100021430, 0X10, 16, 0);
	add_func    (0X7100021470,0X7100021474);
	set_func_flags(0X7100021470,0x1440);
	SetType(0X7100021470, "__int64 __fastcall nullsub_31(_QWORD);");
	add_func    (0X7100021480,0X71000214A4);
	set_func_flags(0X7100021480,0x1400);
	SetType(0X7100021480, "__int64 __fastcall nn__os__LinkMultiWaitHolder(__int64, __int64);");
	add_func    (0X71000214B0,0X71000214E4);
	set_func_flags(0X71000214B0,0x1400);
	SetType(0X71000214B0, "_QWORD *__fastcall nn__os__UnlinkMultiWaitHolder(_QWORD *result);");
	add_func    (0X71000214F0,0X7100021534);
	set_func_flags(0X71000214F0,0x1400);
	SetType(0X71000214F0, "__int64 __fastcall nn__os__UnlinkAllMultiWaitHolder(__int64 result);");
	add_func    (0X7100021540,0X71000215A8);
	set_func_flags(0X7100021540,0x1400);
	SetType(0X7100021540, "__int64 __fastcall nn__os__MoveAllMultiWaitHolder(__int64 result, __int64);");
	add_func    (0X71000215B0,0X71000215B8);
	set_func_flags(0X71000215B0,0x1400);
	SetType(0X71000215B0, "__int64 __fastcall nn__os__SetMultiWaitHolderUserData(__int64 result, __int64);");
	add_func    (0X71000215C0,0X71000215C8);
	set_func_flags(0X71000215C0,0x1400);
	SetType(0X71000215C0, "__int64 __fastcall nn__os__GetMultiWaitHolderUserData(__int64);");
	add_func    (0X71000215D0,0X71000215FC);
	set_func_flags(0X71000215D0,0x1400);
	SetType(0X71000215D0, "__int64 __fastcall nn__os__InitializeMultiWaitHolder(__int64 result, int);");
	add_func    (0X7100021600,0X7100021648);
	set_func_flags(0X7100021600,0x1410);
	SetType(0X7100021600, "_DWORD *__fastcall nn__os__InitializeMutex(__int64, char, int);");
	set_frame_size(0X7100021600, 0X20, 16, 0);
	add_func    (0X7100021650,0X7100021658);
	set_func_flags(0X7100021650,0x1400);
	SetType(0X7100021650, "void __fastcall nn__os__FinalizeMutex(_BYTE *result);");
	add_func    (0X7100021660,0X71000216B0);
	set_func_flags(0X7100021660,0x1410);
	SetType(0X7100021660, "void __fastcall nn__os__LockMutex(__int64 result);");
	set_frame_size(0X7100021660, 0, 32, 0);
	add_func    (0X71000216B0,0X71000216D0);
	set_func_flags(0X71000216B0,0x1400);
	SetType(0X71000216B0, "__int64 __fastcall nn__os__UnlockMutex(__int64 result);");
	add_func    (0X71000216D0,0X7100021710);
	set_func_flags(0X71000216D0,0x1410);
	SetType(0X71000216D0, "_DWORD *__fastcall nn__os__InitializeReaderWriterLock(__int64);");
	set_frame_size(0X71000216D0, 0X20, 0, 0);
	add_func    (0X7100021710,0X7100021718);
	set_func_flags(0X7100021710,0x1400);
	SetType(0X7100021710, "__int64 __fastcall nn__os__FinalizeReaderWriterLock(__int64 result);");
	add_func    (0X7100021720,0X7100021724);
	set_func_flags(0X7100021720,0x14c0);
	SetType(0X7100021720, "void __fastcall nn__os__AcquireReadLock(unsigned __int64 *);");
	add_func    (0X7100021730,0X7100021734);
	set_func_flags(0X7100021730,0x1480);
	SetType(0X7100021730, "void __fastcall sub_7100021730(unsigned __int64 *);");
	add_func    (0X7100021740,0X7100021744);
	set_func_flags(0X7100021740,0x1480);
	SetType(0X7100021740, "__int64 sub_7100021740();");
	add_func    (0X7100021750,0X7100021778);
	set_func_flags(0X7100021750,0x1410);
	SetType(0X7100021750, "__int64 __fastcall nn__os__ReleaseWriteLock(__int64);");
	set_frame_size(0X7100021750, 0, 16, 0);
	add_func    (0X7100021778,0X710002177C);
	set_func_flags(0X7100021778,0x14c0);
	SetType(0X7100021778, "bool __fastcall j_nn__svc__ThreadLocalRegion__GetThreadHandle(_DWORD *out_handle);");
	add_func    (0X710002177C,0X71000217A8);
	set_func_flags(0X710002177C,0x1410);
	SetType(0X710002177C, "void __fastcall nn__os__SdkMutexType__Lock(nn::os::SdkMutexType *a1);");
	set_frame_size(0X710002177C, 0X20, 0, 0);
	add_func    (0X71000217A8,0X71000217D4);
	set_func_flags(0X71000217A8,0x1410);
	SetType(0X71000217A8, "unsigned int *__fastcall nn__os__SdkMutexType__Unlock(nn::os::SdkMutexType *a1);");
	set_frame_size(0X71000217A8, 0X20, 0, 0);
	add_func    (0X71000217D4,0X7100021814);
	set_func_flags(0X71000217D4,0x1410);
	SetType(0X71000217D4, "void __fastcall nn__os__SdkRecursiveMutexType__Lock(nn::os::SdkRecursiveMutexType *a1);");
	set_frame_size(0X71000217D4, 0X20, 0, 0);
	add_func    (0X7100021814,0X710002185C);
	set_func_flags(0X7100021814,0x1410);
	SetType(0X7100021814, "void __fastcall nn__os__SdkRecursiveMutexType__Unlock(nn::os::SdkRecursiveMutexType *a1);");
	set_frame_size(0X7100021814, 0X20, 0, 0);
	add_func    (0X7100021860,0X7100021888);
	set_func_flags(0X7100021860,0x1400);
	SetType(0X7100021860, "__int64 __fastcall nn__os__CreateThread(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);");
	add_func    (0X7100021890,0X71000218A4);
	set_func_flags(0X7100021890,0x1400);
	SetType(0X7100021890, "__int64 __fastcall sub_7100021890(__int64);");
	add_func    (0X71000218B0,0X71000218C4);
	set_func_flags(0X71000218B0,0x1400);
	SetType(0X71000218B0, "__int64 __fastcall nn__os__StartThread(_QWORD);");
	add_func    (0X71000218D0,0X71000218F4);
	set_func_flags(0X71000218D0,0x1400);
	SetType(0X71000218D0, "void __fastcall nn__os__SetThreadNamePointer(__int64 result, __int64 a2);");
	add_func    (0X7100021900,0X7100021908);
	set_func_flags(0X7100021900,0x1400);
	SetType(0X7100021900, "__int64 __fastcall sub_7100021900(_QWORD);");
	add_func    (0X7100021910,0X710002191C);
	set_func_flags(0X7100021910,0x1400);
	SetType(0X7100021910, "__int64 sub_7100021910();");
	add_func    (0X7100021920,0X7100021924);
	set_func_flags(0X7100021920,0x14c0);
	SetType(0X7100021920, "void __fastcall nn__os__SleepThread(__int64);");
	add_func    (0X7100021930,0X7100021944);
	set_func_flags(0X7100021930,0x1400);
	add_func    (0X7100021950,0X7100021968);
	set_func_flags(0X7100021950,0x1410);
	SetType(0X7100021950, "__int64 sub_7100021950();");
	set_frame_size(0X7100021950, 0, 16, 0);
	add_func    (0X7100021968,0X7100021984);
	set_func_flags(0X7100021968,0x1410);
	SetType(0X7100021968, "void sub_7100021968();");
	set_frame_size(0X7100021968, 0X10, 16, 0);
	add_func    (0X7100021990,0X7100021998);
	set_func_flags(0X7100021990,0x1400);
	SetType(0X7100021990, "unsigned __int64 nn__os__GetSystemTick();");
	add_func    (0X71000219A0,0X71000219B4);
	set_func_flags(0X71000219A0,0x1400);
	SetType(0X71000219A0, "__int64 __fastcall nn__os__detail__TickManager__ConvertToTimeSpan(__int64);");
	add_func    (0X71000219C0,0X71000219F4);
	set_func_flags(0X71000219C0,0x1410);
	SetType(0X71000219C0, "nn::Result __fastcall nn__os__CloseHandle(nn::sf::NativeHandle *result);");
	set_frame_size(0X71000219C0, 0X10, 16, 0);
	add_func    (0X7100021A10,0X7100021A84);
	set_func_flags(0X7100021A10,0x1410);
	SetType(0X7100021A10, "__int64 __fastcall nn__os__detail__CreateInterProcessEvent(__int64, int);");
	set_frame_size(0X7100021A10, 0X10, 32, 0);
	add_func    (0X7100021A90,0X7100021AE8);
	set_func_flags(0X7100021A90,0x1410);
	SetType(0X7100021A90, "__int64 __fastcall nn__os__detail__DestroyInterProcessEvent(__int64 result);");
	set_frame_size(0X7100021A90, 0X20, 0, 0);
	add_func    (0X7100021AF0,0X7100021B18);
	set_func_flags(0X7100021AF0,0x1400);
	SetType(0X7100021AF0, "__int64 __fastcall nn__os__detail__AttachInterProcessEvent(__int64 result, int handle, char managed, int a4, char a5, int a6);");
	add_func    (0X7100021B20,0X7100021B30);
	set_func_flags(0X7100021B20,0x1400);
	add_func    (0X7100021B30,0X7100021B40);
	set_func_flags(0X7100021B30,0x1400);
	SetType(0X7100021B30, "__int64 sub_7100021B30(void);");
	add_func    (0X7100021B40,0X7100021B48);
	set_func_flags(0X7100021B40,0x1400);
	SetType(0X7100021B40, "__int64 sub_7100021B40(void);");
	add_func    (0X7100021B50,0X7100021B68);
	set_func_flags(0X7100021B50,0x1400);
	SetType(0X7100021B50, "__int64 __fastcall nn__os__detail__ClearInterProcessEvent(__int64);");
	add_func    (0X7100021B70,0X7100021B78);
	set_func_flags(0X7100021B70,0x1400);
	SetType(0X7100021B70, "__int64 __fastcall nn__os__detail__GetReadableHandleOfInterProcessEvent(nn::os::detail::InterProcessEventType *a1);");
	add_func    (0X7100021B80,0X7100021C68);
	set_func_flags(0X7100021B80,0x1410);
	set_frame_size(0X7100021B80, 0X20, 48, 0);
	add_func    (0X7100021C68,0X7100021E78);
	set_func_flags(0X7100021C68,0x1410);
	set_frame_size(0X7100021C68, 0X20, 64, 0);
	add_func    (0X7100021E80,0X7100021F5C);
	set_func_flags(0X7100021E80,0x1410);
	set_frame_size(0X7100021E80, 0X20, 16, 0);
	add_func    (0X7100021F5C,0X7100021F64);
	set_func_flags(0X7100021F5C,0x1400);
	add_func    (0X7100021F64,0X7100021FB8);
	set_func_flags(0X7100021F64,0x1410);
	set_frame_size(0X7100021F64, 0X20, 16, 0);
	add_func    (0X7100021FB8,0X7100022018);
	set_func_flags(0X7100021FB8,0x1410);
	set_frame_size(0X7100021FB8, 0X20, 16, 0);
	add_func    (0X7100022018,0X7100022090);
	set_func_flags(0X7100022018,0x1410);
	SetType(0X7100022018, "__int64 __fastcall sub_7100022018(__int64, __int64);");
	set_frame_size(0X7100022018, 0X20, 16, 0);
	add_func    (0X7100022090,0X7100022158);
	set_func_flags(0X7100022090,0x1410);
	SetType(0X7100022090, "__int64 __fastcall sub_7100022090(_QWORD, _QWORD);");
	set_frame_size(0X7100022090, 0, 48, 0);
	add_func    (0X7100022160,0X71000221C8);
	set_func_flags(0X7100022160,0x1410);
	set_frame_size(0X7100022160, 0X20, 16, 0);
	add_func    (0X71000221C8,0X7100022254);
	set_func_flags(0X71000221C8,0x1410);
	SetType(0X71000221C8, "__int64 __fastcall sub_71000221C8(_QWORD, _QWORD);");
	set_frame_size(0X71000221C8, 0X20, 0, 0);
	add_func    (0X7100022254,0X7100022318);
	set_func_flags(0X7100022254,0x1410);
	set_frame_size(0X7100022254, 0, 48, 0);
	add_func    (0X7100022320,0X710002237C);
	set_func_flags(0X7100022320,0x1400);
	add_func    (0X710002237C,0X7100022404);
	set_func_flags(0X710002237C,0x1400);
	SetType(0X710002237C, "__int64 __fastcall nn__os__detail__TickManager__ConvertToTimeSpan(__int64 a1, __int64 ticks);");
	add_func    (0X7100022410,0X71000226B0);
	set_func_flags(0X7100022410,0x1410);
	SetType(0X7100022410, "__int64 __fastcall nn__os__detail__MultiWaitImpl__InternalWaitAnyImpl_false_(__int64, _QWORD *, char, __int64);");
	set_frame_size(0X7100022410, 0X320, 96, 0);
	add_func    (0X71000226B0,0X71000227D4);
	set_func_flags(0X71000226B0,0x1410);
	SetType(0X71000226B0, "__int64 __fastcall nn__os__detail__MultiWaitImpl__WaitAnyImpl_false_(__int64, __int64 *, char, __int64, unsigned int);");
	set_frame_size(0X71000226B0, 0X20, 48, 0);
	add_func    (0X71000227D4,0X7100022834);
	set_func_flags(0X71000227D4,0x1410);
	SetType(0X71000227D4, "unsigned int *__fastcall nn__os__detail__MultiWaitImpl__NotifyAndWakeupThread(__int64, __int64);");
	set_frame_size(0X71000227D4, 0X20, 16, 0);
	add_func    (0X7100022834,0X710002283C);
	set_func_flags(0X7100022834,0x1400);
	add_func    (0X710002283C,0X7100022844);
	set_func_flags(0X710002283C,0x1400);
	add_func    (0X7100022844,0X7100022884);
	set_func_flags(0X7100022844,0x1410);
	set_frame_size(0X7100022844, 0, 32, 0);
	add_func    (0X7100022884,0X71000228E8);
	set_func_flags(0X7100022884,0x1410);
	set_frame_size(0X7100022884, 0, 32, 0);
	add_func    (0X71000228E8,0X7100022944);
	set_func_flags(0X71000228E8,0x1410);
	set_frame_size(0X71000228E8, 0, 32, 0);
	add_func    (0X7100022944,0X710002294C);
	set_func_flags(0X7100022944,0x1400);
	add_func    (0X710002294C,0X7100022960);
	set_func_flags(0X710002294C,0x1400);
	add_func    (0X7100022960,0X7100022968);
	set_func_flags(0X7100022960,0x1400);
	add_func    (0X7100022968,0X710002296C);
	set_func_flags(0X7100022968,0x1440);
	add_func    (0X710002296C,0X7100022974);
	set_func_flags(0X710002296C,0x1400);
	add_func    (0X7100022974,0X7100022984);
	set_func_flags(0X7100022974,0x1400);
	add_func    (0X7100022990,0X71000229C8);
	set_func_flags(0X7100022990,0x1410);
	set_frame_size(0X7100022990, 0, 16, 0);
	add_func    (0X71000229D0,0X71000229E4);
	set_func_flags(0X71000229D0,0x1400);
	add_func    (0X71000229F0,0X7100022A04);
	set_func_flags(0X71000229F0,0x1400);
	SetType(0X71000229F0, "__int64 __fastcall nn__os__GetTlsValue(unsigned int);");
	add_func    (0X7100022A10,0X7100022A24);
	set_func_flags(0X7100022A10,0x1400);
	add_func    (0X7100022A24,0X7100022CA0);
	set_func_flags(0X7100022A24,0x1410);
	set_frame_size(0X7100022A24, 0, 16, 0);
	add_func    (0X7100022CA0,0X7100022D08);
	set_func_flags(0X7100022CA0,0x1410);
	set_frame_size(0X7100022CA0, 0X20, 0, 0);
	add_func    (0X7100022D10,0X7100022ED0);
	set_func_flags(0X7100022D10,0x1410);
	set_frame_size(0X7100022D10, 0, 48, 0);
	add_func    (0X7100022ED0,0X7100022FB0);
	set_func_flags(0X7100022ED0,0x1410);
	set_frame_size(0X7100022ED0, 0, 80, 0);
	add_func    (0X7100022FB0,0X7100022FB4);
	set_func_flags(0X7100022FB0,0x1440);
	add_func    (0X7100022FB4,0X7100023030);
	set_func_flags(0X7100022FB4,0x1410);
	set_frame_size(0X7100022FB4, 0, 48, 0);
	add_func    (0X7100023030,0X71000230C4);
	set_func_flags(0X7100023030,0x1410);
	SetType(0X7100023030, "__int64 __fastcall sub_7100023030(__int64, _DWORD *, __int64, int);");
	set_frame_size(0X7100023030, 0X20, 0, 0);
	add_func    (0X71000230C4,0X71000230F4);
	set_func_flags(0X71000230C4,0x1410);
	SetType(0X71000230C4, "void __fastcall nn__os__detail__MultiWaitImplByHorizon__CancelWait(unsigned int *);");
	set_frame_size(0X71000230C4, 0X10, 16, 0);
	add_func    (0X71000230F4,0X71000231B4);
	set_func_flags(0X71000230F4,0x1410);
	set_frame_size(0X71000230F4, 0X60, 16, 0);
	add_func    (0X71000231B4,0X7100023234);
	set_func_flags(0X71000231B4,0x1410);
	set_frame_size(0X71000231B4, 0X20, 0, 0);
	add_func    (0X7100023234,0X710002325C);
	set_func_flags(0X7100023234,0x1410);
	set_frame_size(0X7100023234, 0, 16, 0);
	add_func    (0X710002325C,0X71000235C0);
	set_func_flags(0X710002325C,0x1410);
	set_frame_size(0X710002325C, 0X30, 32, 0);
	add_func    (0X71000235C0,0X7100023634);
	set_func_flags(0X71000235C0,0x1410);
	set_frame_size(0X71000235C0, 0X20, 0, 0);
	add_func    (0X7100023634,0X7100023664);
	set_func_flags(0X7100023634,0x1410);
	SetType(0X7100023634, "__int64 __fastcall sub_7100023634(_QWORD, _QWORD);");
	set_frame_size(0X7100023634, 0X10, 16, 0);
	add_func    (0X7100023664,0X710002369C);
	set_func_flags(0X7100023664,0x1410);
	set_frame_size(0X7100023664, 0X20, 0, 0);
	add_func    (0X71000236A0,0X710002372C);
	set_func_flags(0X71000236A0,0x1410);
	SetType(0X71000236A0, "__int64 __fastcall sub_71000236A0(_QWORD, _QWORD);");
	set_frame_size(0X71000236A0, 0X30, 16, 0);
	add_func    (0X710002372C,0X7100023734);
	set_func_flags(0X710002372C,0x1400);
	SetType(0X710002372C, "__int64 __fastcall nn__os__detail__ThreadManagerImplByHorizon__YieldThread(_QWORD);");
	add_func    (0X7100023740,0X7100023828);
	set_func_flags(0X7100023740,0x1410);
	set_frame_size(0X7100023740, 0X70, 48, 0);
	add_func    (0X7100023828,0X710002382C);
	set_func_flags(0X7100023828,0x1480);
	add_func    (0X7100023830,0X7100023918);
	set_func_flags(0X7100023830,0x1410);
	set_frame_size(0X7100023830, 0, 96, 0);
	add_func    (0X7100023920,0X71000239F4);
	set_func_flags(0X7100023920,0x1410);
	set_frame_size(0X7100023920, 0, 64, 0);
	add_func    (0X7100023A00,0X7100023B78);
	set_func_flags(0X7100023A00,0x1410);
	SetType(0X7100023A00, "__int64 __fastcall sub_7100023A00(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD);");
	set_frame_size(0X7100023A00, 0X10, 96, 0);
	add_func    (0X7100023B78,0X7100023BF4);
	set_func_flags(0X7100023B78,0x1410);
	SetType(0X7100023B78, "__int64 __fastcall sub_7100023B78(_QWORD, _QWORD, _QWORD, _QWORD);");
	set_frame_size(0X7100023B78, 0, 48, 0);
	add_func    (0X7100023C00,0X7100023C34);
	set_func_flags(0X7100023C00,0x1410);
	set_frame_size(0X7100023C00, 0X20, 0, 0);
	add_func    (0X7100023C34,0X7100023C88);
	set_func_flags(0X7100023C34,0x1410);
	set_frame_size(0X7100023C34, 0X20, 16, 0);
	add_func    (0X7100023C88,0X7100023D24);
	set_func_flags(0X7100023C88,0x1410);
	SetType(0X7100023C88, "__int64 __fastcall sub_7100023C88(_QWORD, _QWORD);");
	set_frame_size(0X7100023C88, 0X20, 32, 0);
	add_func    (0X7100023D24,0X7100023D58);
	set_func_flags(0X7100023D24,0x1410);
	SetType(0X7100023D24, "__int64 sub_7100023D24(void);");
	set_frame_size(0X7100023D24, 0X10, 16, 0);
	add_func    (0X7100023D58,0X7100023D88);
	set_func_flags(0X7100023D58,0x1410);
	set_frame_size(0X7100023D58, 0X10, 16, 0);
	add_func    (0X7100023D88,0X7100023DB8);
	set_func_flags(0X7100023D88,0x1410);
	SetType(0X7100023D88, "__int64 __fastcall sub_7100023D88(_QWORD);");
	set_frame_size(0X7100023D88, 0X10, 16, 0);
	add_func    (0X7100023DC0,0X7100023E68);
	set_func_flags(0X7100023DC0,0x1410);
	set_frame_size(0X7100023DC0, 0X10, 32, 0);
	add_func    (0X7100023E70,0X7100023EE8);
	set_func_flags(0X7100023E70,0x1410);
	set_frame_size(0X7100023E70, 0X20, 0, 0);
	add_func    (0X7100023EE8,0X7100023EF0);
	set_func_flags(0X7100023EE8,0x1400);
	SetType(0X7100023EE8, "_DWORD *__fastcall nn__os__detail__InternalConditionVariableImplByHorizon__InternalConditionVariableImplByHorizon(_DWORD *result);");
	add_func    (0X7100023EF0,0X7100023F04);
	set_func_flags(0X7100023EF0,0x1400);
	SetType(0X7100023EF0, "void __fastcall nn__os__detail__InternalConditionVariableImplByHorizon__Signal(_DWORD *result);");
	add_func    (0X7100023F04,0X7100023F18);
	set_func_flags(0X7100023F04,0x1400);
	SetType(0X7100023F04, "void __fastcall nn__os__detail__InternalConditionVariableImplByHorizon__Broadcast(_DWORD *);");
	add_func    (0X7100023F18,0X7100023F84);
	set_func_flags(0X7100023F18,0x1410);
	SetType(0X7100023F18, "__int64 __fastcall sub_7100023F18(__int64, _DWORD *);");
	set_frame_size(0X7100023F18, 0X20, 16, 0);
	add_func    (0X7100023F84,0X7100023F9C);
	set_func_flags(0X7100023F84,0x1400);
	SetType(0X7100023F84, "void __fastcall nn__os__detail__TimeoutHelperImplByHorizon__Sleep(__int64);");
	add_func    (0X7100023FA0,0X71000241F0);
	set_func_flags(0X7100023FA0,0x1410);
	SetType(0X7100023FA0, "__int64 __fastcall sub_7100023FA0(_QWORD, _QWORD);");
	set_frame_size(0X7100023FA0, 0X70, 80, 0);
	add_func    (0X71000241F0,0X71000242B4);
	set_func_flags(0X71000241F0,0x1410);
	set_frame_size(0X71000241F0, 0X30, 16, 0);
	add_func    (0X71000242B4,0X7100024374);
	set_func_flags(0X71000242B4,0x1410);
	set_frame_size(0X71000242B4, 0X30, 16, 0);
	add_func    (0X7100024374,0X7100024430);
	set_func_flags(0X7100024374,0x1410);
	set_frame_size(0X7100024374, 0X30, 0, 0);
	add_func    (0X7100024430,0X71000244A4);
	set_func_flags(0X7100024430,0x1410);
	set_frame_size(0X7100024430, 0X30, 32, 0);
	add_func    (0X71000244A4,0X7100024528);
	set_func_flags(0X71000244A4,0x1410);
	set_frame_size(0X71000244A4, 0X30, 0, 0);
	define_local_var(0X71000244A4, 0X7100024528, "[bp-0X28]", "result");
	add_func    (0X7100024530,0X710002457C);
	set_func_flags(0X7100024530,0x1410);
	set_frame_size(0X7100024530, 0X10, 32, 0);
	add_func    (0X7100024580,0X7100024584);
	set_func_flags(0X7100024580,0x1480);
	add_func    (0X7100024584,0X710002461C);
	set_func_flags(0X7100024584,0x1410);
	set_frame_size(0X7100024584, 0, 16, 0);
	add_func    (0X710002461C,0X71000246D8);
	set_func_flags(0X710002461C,0x1410);
	set_frame_size(0X710002461C, 0X10, 32, 0);
	define_local_var(0X710002461C, 0X71000246D8, "[bp-0X8]", "result");
	add_func    (0X71000246E0,0X71000246F0);
	set_func_flags(0X71000246E0,0x1400);
	add_func    (0X71000246F0,0X7100024700);
	set_func_flags(0X71000246F0,0x1400);
	add_func    (0X7100024700,0X7100024734);
	set_func_flags(0X7100024700,0x1410);
	set_frame_size(0X7100024700, 0X20, 0, 0);
	add_func    (0X7100024740,0X71000247A0);
	set_func_flags(0X7100024740,0x1400);
	add_func    (0X71000247A0,0X71000247A8);
	set_func_flags(0X71000247A0,0x1400);
	SetType(0X71000247A0, "_DWORD *__fastcall nn__os__detail__InternalCriticalSectionImplByHorizon__InternalCriticalSectionImplByHorizon(_DWORD *result);");
	add_func    (0X71000247A8,0X7100024840);
	set_func_flags(0X71000247A8,0x1410);
	SetType(0X71000247A8, "void __fastcall nn__os__detail__InternalCriticalSectionImplByHorizon__Enter(unsigned int *handle);");
	set_frame_size(0X71000247A8, 0X10, 32, 0);
	add_func    (0X7100024840,0X710002489C);
	set_func_flags(0X7100024840,0x1410);
	SetType(0X7100024840, "unsigned int *__fastcall nn__os__detail__InternalCriticalSectionImplByHorizon__Leave(unsigned int *result);");
	set_frame_size(0X7100024840, 0X10, 16, 0);
	add_func    (0X710002489C,0X71000248BC);
	set_func_flags(0X710002489C,0x1400);
	SetType(0X710002489C, "bool __fastcall nn__os__detail__InternalCriticalSectionImplByHorizon__IsLockedByCurrentThread(_DWORD *out_handle);");
	add_func    (0X71000248C0,0X7100024908);
	set_func_flags(0X71000248C0,0x1410);
	set_frame_size(0X71000248C0, 0X10, 16, 0);
	define_local_var(0X71000248C0, 0X7100024908, "[bp-0X8]", "result");
	add_func    (0X7100024908,0X7100024978);
	set_func_flags(0X7100024908,0x1410);
	set_frame_size(0X7100024908, 0X30, 16, 0);
	add_func    (0X7100024980,0X7100024C3C);
	set_func_flags(0X7100024980,0x1410);
	SetType(0X7100024980, "void __fastcall nn__os__detail__ReaderWriterLockImplByHorizon__AcquireReadLock(unsigned __int64 *);");
	set_frame_size(0X7100024980, 0X30, 16, 0);
	add_func    (0X7100024C40,0X7100024D98);
	set_func_flags(0X7100024C40,0x1410);
	SetType(0X7100024C40, "void __fastcall sub_7100024C40(__int64);");
	set_frame_size(0X7100024C40, 0X10, 32, 0);
	add_func    (0X7100024DA0,0X7100024FA4);
	set_func_flags(0X7100024DA0,0x1410);
	SetType(0X7100024DA0, "void __fastcall sub_7100024DA0(unsigned __int64 *);");
	set_frame_size(0X7100024DA0, 0X10, 32, 0);
	add_func    (0X7100024FB0,0X7100025194);
	set_func_flags(0X7100024FB0,0x1410);
	SetType(0X7100024FB0, "__int64 sub_7100024FB0(void);");
	set_frame_size(0X7100024FB0, 0X10, 64, 0);
	add_func    (0X71000251A0,0X71000252A8);
	set_func_flags(0X71000251A0,0x1410);
	SetType(0X71000251A0, "__int64 nn__os__detail__ReaderWriterLockImplByHorizon__ReleaseWriteLock(void);");
	set_frame_size(0X71000251A0, 0X10, 32, 0);
	add_func    (0X71000252A8,0X71000255E0);
	set_func_flags(0X71000252A8,0x1401);
	SetType(0X71000252A8, "void __noreturn sub_71000252A8(void);");
	set_frame_size(0X71000252A8, 0X2C0, 0, 0);
	add_func    (0X7100025658,0X71000256D4);
	set_func_flags(0X7100025658,0x1400);
	set_frame_size(0X7100025658, 0, 0, 0);
	add_func    (0X71000256D4,0X710002570C);
	set_func_flags(0X71000256D4,0x1410);
	SetType(0X71000256D4, "__int64 __fastcall sub_71000256D4(_QWORD, _QWORD);");
	set_frame_size(0X71000256D4, 0, 32, 0);
	add_func    (0X7100025710,0X7100025760);
	set_func_flags(0X7100025710,0x1410);
	SetType(0X7100025710, "_DWORD *__fastcall nn__os__InitializeTimerEvent(nn::os::TimerEventType *this, char a2);");
	set_frame_size(0X7100025710, 0, 32, 0);
	add_func    (0X7100025760,0X7100025768);
	set_func_flags(0X7100025760,0x1400);
	SetType(0X7100025760, "__int64 __fastcall nn__os__FinalizeTimerEvent(__int64 result);");
	add_func    (0X7100025770,0X71000257FC);
	set_func_flags(0X7100025770,0x1410);
	SetType(0X7100025770, "unsigned int *__fastcall nn__os__StartOneShotTimerEvent(__int64, __int64);");
	set_frame_size(0X7100025770, 0X20, 16, 0);
	add_func    (0X7100025800,0X710002588C);
	set_func_flags(0X7100025800,0x1410);
	SetType(0X7100025800, "unsigned int *__fastcall nn__os__StartPeriodicTimerEvent(__int64, __int64, __int64);");
	set_frame_size(0X7100025800, 0, 48, 0);
	add_func    (0X7100025890,0X71000258FC);
	set_func_flags(0X7100025890,0x1410);
	SetType(0X7100025890, "unsigned int *__fastcall nn__os__StopTimerEvent(nn::os::TimerEventType *this);");
	set_frame_size(0X7100025890, 0X20, 16, 0);
	add_func    (0X7100025900,0X71000259BC);
	set_func_flags(0X7100025900,0x1410);
	SetType(0X7100025900, "unsigned int *__fastcall nn__os__SignalTimerEvent(__int64);");
	set_frame_size(0X7100025900, 0X20, 16, 0);
	add_func    (0X71000259C0,0X7100025A74);
	set_func_flags(0X71000259C0,0x1410);
	SetType(0X71000259C0, "unsigned int *__fastcall nn__os__ClearTimerEvent(__int64);");
	set_frame_size(0X71000259C0, 0X20, 16, 0);
	add_func    (0X7100025A80,0X7100025AA8);
	set_func_flags(0X7100025A80,0x1400);
	SetType(0X7100025A80, "_QWORD *__fastcall nn__os__InitializeMultiWaitHolder(_QWORD *result, __int64);");
	add_func    (0X7100025AB0,0X7100025AC4);
	set_func_flags(0X7100025AB0,0x1400);
	SetType(0X7100025AB0, "__int64 __fastcall nn__os__detail__SaturatedAdd(__int64, __int64);");
	add_func    (0X7100025AD0,0X7100025ADC);
	set_func_flags(0X7100025AD0,0x1400);
	SetType(0X7100025AD0, "__int64 __fastcall nn__os__detail__StopTimerUnsafe(_QWORD);");
	add_func    (0X7100025AE0,0X7100025B9C);
	set_func_flags(0X7100025AE0,0x1410);
	SetType(0X7100025AE0, "__int64 __fastcall nn__os__detail__UpdateSignalStateAndRecalcNextTimeToWakeupUnsafe(_QWORD, _QWORD);");
	set_frame_size(0X7100025AE0, 0, 16, 0);
	add_func    (0X7100025B9C,0X7100025BE8);
	set_func_flags(0X7100025B9C,0x1410);
	set_frame_size(0X7100025B9C, 0, 32, 0);
	add_func    (0X7100025BE8,0X7100025C5C);
	set_func_flags(0X7100025BE8,0x1410);
	set_frame_size(0X7100025BE8, 0, 32, 0);
	add_func    (0X7100025C5C,0X7100025CB8);
	set_func_flags(0X7100025C5C,0x1410);
	set_frame_size(0X7100025C5C, 0, 32, 0);
	add_func    (0X7100025CB8,0X7100025D1C);
	set_func_flags(0X7100025CB8,0x1410);
	set_frame_size(0X7100025CB8, 0, 32, 0);
	add_func    (0X7100025D20,0X7100025D94);
	set_func_flags(0X7100025D20,0x1410);
	SetType(0X7100025D20, "__int64 __fastcall Random_GenBytes(__int64, __int64);");
	set_frame_size(0X7100025D20, 0X20, 16, 0);
	add_func    (0X7100025DA0,0X7100025E0C);
	set_func_flags(0X7100025DA0,0x1410);
	SetType(0X7100025DA0, "__int64 __fastcall GenerateRandomBytes(__int64);");
	set_frame_size(0X7100025DA0, 0X30, 16, 0);
	add_func    (0X7100025E10,0X7100025E78);
	set_func_flags(0X7100025E10,0x1410);
	set_frame_size(0X7100025E10, 0X20, 0, 0);
	add_func    (0X7100025E80,0X7100025F64);
	set_func_flags(0X7100025E80,0x1410);
	set_frame_size(0X7100025E80, 0X80, 0, 0);
	add_func    (0X7100025F70,0X7100025FB4);
	set_func_flags(0X7100025F70,0x1410);
	set_frame_size(0X7100025F70, 0, 16, 0);
	add_func    (0X7100025FB4,0X7100025FC0);
	set_func_flags(0X7100025FB4,0x1400);
	add_func    (0X7100025FC0,0X7100025FD0);
	set_func_flags(0X7100025FC0,0x1400);
	add_func    (0X7100025FD0,0X710002601C);
	set_func_flags(0X7100025FD0,0x1411);
	set_frame_size(0X7100025FD0, 0X20, 0, 0);
	add_func    (0X710002601C,0X7100026034);
	set_func_flags(0X710002601C,0x1400);
	add_func    (0X7100026034,0X71000260A4);
	set_func_flags(0X7100026034,0x1410);
	set_frame_size(0X7100026034, 0X20, 0, 0);
	add_func    (0X71000260A4,0X71000260C0);
	set_func_flags(0X71000260A4,0x1410);
	set_frame_size(0X71000260A4, 0, 16, 0);
	add_func    (0X71000260C0,0X71000260C4);
	set_func_flags(0X71000260C0,0x1480);
	add_func    (0X71000260C4,0X710002613C);
	set_func_flags(0X71000260C4,0x1400);
	set_frame_size(0X71000260C4, 0XF0, 0, 0);
	add_func    (0X710002613C,0X7100026158);
	set_func_flags(0X710002613C,0x1400);
	set_frame_size(0X710002613C, 0X10, 0, 0);
	add_func    (0X7100026160,0X71000261C0);
	set_func_flags(0X7100026160,0x1400);
	add_func    (0X71000261C0,0X7100026230);
	set_func_flags(0X71000261C0,0x1410);
	set_frame_size(0X71000261C0, 0X20, 16, 0);
	add_func    (0X7100026230,0X710002626C);
	set_func_flags(0X7100026230,0x1410);
	SetType(0X7100026230, "_DWORD *__fastcall nn__os__AttachSharedMemory(nn::os::SharedMemoryType *shared_memory, __int64 size, int handle, char managed);");
	set_frame_size(0X7100026230, 0X20, 0, 0);
	add_func    (0X7100026270,0X71000262FC);
	set_func_flags(0X7100026270,0x1410);
	SetType(0X7100026270, "unsigned int *__fastcall nn__os__DestroySharedMemory(unsigned int *result);");
	set_frame_size(0X7100026270, 0, 32, 0);
	add_func    (0X7100026300,0X710002635C);
	set_func_flags(0X7100026300,0x1410);
	SetType(0X7100026300, "unsigned int *__fastcall nn__os__UnmapSharedMemory(__int64);");
	set_frame_size(0X7100026300, 0, 32, 0);
	add_func    (0X7100026360,0X71000263FC);
	set_func_flags(0X7100026360,0x1410);
	SetType(0X7100026360, "void *__fastcall nn__os__MapSharedMemory(nn::os::SharedMemoryType *this, unsigned int a2);");
	set_frame_size(0X7100026360, 0X10, 48, 0);
	add_func    (0X7100026400,0X7100026408);
	set_func_flags(0X7100026400,0x1400);
	SetType(0X7100026400, "__int64 __fastcall nn__os__GetSharedMemoryHandle(__int64);");
	add_func    (0X7100026408,0X71000264B0);
	set_func_flags(0X7100026408,0x1410);
	SetType(0X7100026408, "__int64 __fastcall sub_7100026408(_DWORD *, __int64, int, int);");
	set_frame_size(0X7100026408, 0X30, 0, 0);
	add_func    (0X71000264B0,0X71000264E0);
	set_func_flags(0X71000264B0,0x1410);
	SetType(0X71000264B0, "__int64 __fastcall nn__os__detail__SharedMemoryImplByHorizon__Close(_QWORD);");
	set_frame_size(0X71000264B0, 0X10, 16, 0);
	add_func    (0X71000264E0,0X71000266AC);
	set_func_flags(0X71000264E0,0x1410);
	SetType(0X71000264E0, "__int64 __fastcall nn__os__detail__SharedMemoryImplByHorizon__Map(__int64 *, unsigned int, unsigned __int64, unsigned int);");
	set_frame_size(0X71000264E0, 0X20, 96, 0);
	add_func    (0X71000266AC,0X71000266DC);
	set_func_flags(0X71000266AC,0x1410);
	SetType(0X71000266AC, "__int64 __fastcall nn__os__detail__SharedMemoryImplByHorizon__Unmap(_QWORD, _QWORD, _QWORD);");
	set_frame_size(0X71000266AC, 0X10, 16, 0);
	add_func    (0X71000266DC,0X71000268B8);
	set_func_flags(0X71000266DC,0x1400);
	SetType(0X71000266DC, "__int64 __fastcall sub_71000266DC(__int64 result);");
	add_func    (0X71000268C0,0X7100026AB4);
	set_func_flags(0X71000268C0,0x1400);
	SetType(0X71000268C0, "__int64 __fastcall sub_71000268C0(_DWORD *, __int64, int);");
	add_func    (0X7100026AB4,0X7100026B24);
	set_func_flags(0X7100026AB4,0x1400);
	add_func    (0X7100026B30,0X7100026CF0);
	set_func_flags(0X7100026B30,0x1410);
	SetType(0X7100026B30, "unsigned __int64 __fastcall PRNG_GetNext(_DWORD *, unsigned __int64, unsigned __int64);");
	set_frame_size(0X7100026B30, 0X20, 48, 0);
	add_func    (0X7100026CF0,0X7100027BC4);
	set_func_flags(0X7100026CF0,0x1410);
	SetType(0X7100026CF0, "__int64 __fastcall sub_7100026CF0(_QWORD, _QWORD, _QWORD);");
	set_frame_size(0X7100026CF0, 0X30, 96, 0);
	add_func    (0X7100027BC4,0X7100027C28);
	set_func_flags(0X7100027BC4,0x1410);
	set_frame_size(0X7100027BC4, 0, 32, 0);
	add_func    (0X7100027C30,0X7100027CE8);
	set_func_flags(0X7100027C30,0x1410);
	SetType(0X7100027C30, "__int64 fmt(_BYTE *, __int64, const char *, ...);");
	set_frame_size(0X7100027C30, 0X190, 0, 0);
	add_func    (0X7100027CF0,0X7100027DA8);
	set_func_flags(0X7100027CF0,0x1410);
	set_frame_size(0X7100027CF0, 0X180, 0, 0);
	add_func    (0X7100027DB0,0X710002864C);
	set_func_flags(0X7100027DB0,0x1410);
	set_frame_size(0X7100027DB0, 0X18, 88, 0);
	add_func    (0X7100028650,0X7100028968);
	set_func_flags(0X7100028650,0x1410);
	set_frame_size(0X7100028650, 0X50, 48, 0);
	add_func    (0X7100028968,0X71000289C4);
	set_func_flags(0X7100028968,0x1400);
	add_func    (0X71000289D0,0X71000289E0);
	set_func_flags(0X71000289D0,0x1400);
	add_func    (0X71000289E0,0X71000289FC);
	set_func_flags(0X71000289E0,0x1410);
	SetType(0X71000289E0, "bool __fastcall sub_71000289E0(__int64, unsigned __int64);");
	set_frame_size(0X71000289E0, 0, 16, 0);
	add_func    (0X7100028A00,0X7100028B30);
	set_func_flags(0X7100028A00,0x1400);
	SetType(0X7100028A00, "__int64 __fastcall sub_7100028A00(__int64 str, unsigned __int64 len);");
	add_func    (0X7100028B30,0X7100028B38);
	set_func_flags(0X7100028B30,0x1400);
	SetType(0X7100028B30, "_QWORD *__fastcall sub_7100028B30(_QWORD *result, __int64);");
	add_func    (0X7100028B38,0X7100028B48);
	set_func_flags(0X7100028B38,0x1400);
	SetType(0X7100028B38, "__int64 __fastcall sub_7100028B38(_QWORD *, __int64);");
	add_func    (0X7100028B48,0X7100028B50);
	set_func_flags(0X7100028B48,0x1400);
	SetType(0X7100028B48, "_QWORD *__fastcall sub_7100028B48(_QWORD *result, __int64);");
	add_func    (0X7100028B50,0X7100028B60);
	set_func_flags(0X7100028B50,0x1400);
	add_func    (0X7100028B60,0X7100028B68);
	set_func_flags(0X7100028B60,0x1400);
	SetType(0X7100028B60, "bool __fastcall sub_7100028B60(_QWORD *, unsigned int);");
	add_func    (0X7100028B68,0X7100028B70);
	set_func_flags(0X7100028B68,0x1400);
	add_func    (0X7100028B70,0X7100028B78);
	set_func_flags(0X7100028B70,0x1400);
	SetType(0X7100028B70, "__int64 __fastcall sub_7100028B70(_QWORD, _QWORD);");
	add_func    (0X7100028B78,0X7100028B80);
	set_func_flags(0X7100028B78,0x1400);
	add_func    (0X7100028B80,0X7100028B88);
	set_func_flags(0X7100028B80,0x1400);
	add_func    (0X7100028B88,0X7100028B90);
	set_func_flags(0X7100028B88,0x1400);
	SetType(0X7100028B88, "__int64 __fastcall sub_7100028B88(_QWORD, _QWORD);");
	add_func    (0X7100028B90,0X7100028B98);
	set_func_flags(0X7100028B90,0x1400);
	add_func    (0X7100028B98,0X7100028BA0);
	set_func_flags(0X7100028B98,0x1400);
	add_func    (0X7100028BA0,0X7100028BA8);
	set_func_flags(0X7100028BA0,0x1400);
	add_func    (0X7100028BA8,0X7100028BB0);
	set_func_flags(0X7100028BA8,0x1400);
	SetType(0X7100028BA8, "__int64 __fastcall sub_7100028BA8(_QWORD *, __int64);");
	add_func    (0X7100028BB0,0X7100028BB8);
	set_func_flags(0X7100028BB0,0x1400);
	add_func    (0X7100028BC0,0X7100029068);
	set_func_flags(0X7100028BC0,0x1410);
	SetType(0X7100028BC0, "__int64 __fastcall sub_7100028BC0(__int64, __int64 *);");
	set_frame_size(0X7100028BC0, 0, 32, 0);
	add_func    (0X7100029070,0X71000291A0);
	set_func_flags(0X7100029070,0x1400);
	SetType(0X7100029070, "__int64 __fastcall sub_7100029070(_QWORD, _QWORD);");
	add_func    (0X71000291A0,0X7100029290);
	set_func_flags(0X71000291A0,0x1400);
	SetType(0X71000291A0, "__int64 __fastcall sub_71000291A0(__int64, __int64 *, unsigned __int8);");
	add_func    (0X7100029290,0X71000293FC);
	set_func_flags(0X7100029290,0x1400);
	SetType(0X7100029290, "__int64 __fastcall sub_7100029290(_QWORD, _QWORD);");
	add_func    (0X7100029400,0X7100029450);
	set_func_flags(0X7100029400,0x1400);
	SetType(0X7100029400, "bool __fastcall sub_7100029400(__int64 *, unsigned int);");
	add_func    (0X7100029450,0X71000294A0);
	set_func_flags(0X7100029450,0x1400);
	add_func    (0X71000294A0,0X7100029534);
	set_func_flags(0X71000294A0,0x1410);
	set_frame_size(0X71000294A0, 0X20, 16, 0);
	add_func    (0X7100029540,0X71000296B4);
	set_func_flags(0X7100029540,0x1410);
	set_frame_size(0X7100029540, 0, 32, 0);
	add_func    (0X71000296C0,0X710002981C);
	set_func_flags(0X71000296C0,0x1410);
	set_frame_size(0X71000296C0, 0, 32, 0);
	add_func    (0X7100029820,0X7100029954);
	set_func_flags(0X7100029820,0x1400);
	add_func    (0X7100029960,0X7100029AD8);
	set_func_flags(0X7100029960,0x1410);
	set_frame_size(0X7100029960, 0X20, 16, 0);
	add_func    (0X7100029AE0,0X7100029B14);
	set_func_flags(0X7100029AE0,0x1400);
	add_func    (0X7100029B20,0X7100029CAC);
	set_func_flags(0X7100029B20,0x1400);
	SetType(0X7100029B20, "__int64 __fastcall sub_7100029B20(__int64 *, unsigned __int64);");
	add_func    (0X7100029CB0,0X7100029D14);
	set_func_flags(0X7100029CB0,0x1400);
	add_func    (0X7100029D20,0X7100029EA8);
	set_func_flags(0X7100029D20,0x1400);
	SetType(0X7100029D20, "bool __fastcall sub_7100029D20(__int64 *, unsigned __int64);");
	add_func    (0X7100029EB0,0X7100029EBC);
	set_func_flags(0X7100029EB0,0x1400);
	SetType(0X7100029EB0, "__int64 __fastcall sub_7100029EB0(__int64, __int64);");
	add_func    (0X7100029EC0,0X7100029F28);
	set_func_flags(0X7100029EC0,0x1400);
	add_func    (0X7100029F30,0X7100029F4C);
	set_func_flags(0X7100029F30,0x1410);
	SetType(0X7100029F30, "unsigned __int64 sub_7100029F30();");
	set_frame_size(0X7100029F30, 0, 16, 0);
	add_func    (0X7100029F50,0X7100029F88);
	set_func_flags(0X7100029F50,0x1410);
	SetType(0X7100029F50, "__int64 __fastcall sub_7100029F50(_QWORD);");
	set_frame_size(0X7100029F50, 0X20, 0, 0);
	add_func    (0X7100029F90,0X7100029F9C);
	set_func_flags(0X7100029F90,0x1400);
	add_func    (0X7100029FA0,0X7100029FB8);
	set_func_flags(0X7100029FA0,0x1400);
	SetType(0X7100029FA0, "__int64 __fastcall sub_7100029FA0(_QWORD);");
	add_func    (0X7100029FC0,0X7100029FD8);
	set_func_flags(0X7100029FC0,0x1400);
	add_func    (0X7100029FD8,0X710002A038);
	set_func_flags(0X7100029FD8,0x1410);
	SetType(0X7100029FD8, "__int64 __fastcall sub_7100029FD8(__int64, __int64, unsigned int);");
	set_frame_size(0X7100029FD8, 0X20, 16, 0);
	add_func    (0X710002A038,0X710002A098);
	set_func_flags(0X710002A038,0x1410);
	SetType(0X710002A038, "__int64 __fastcall sub_710002A038(_QWORD, _QWORD);");
	set_frame_size(0X710002A038, 0X20, 16, 0);
	add_func    (0X710002A0A0,0X710002A0B0);
	set_func_flags(0X710002A0A0,0x1400);
	SetType(0X710002A0A0, "__int64 __fastcall sub_710002A0A0(_WORD *, unsigned int);");
	add_func    (0X710002A0B0,0X710002A0C0);
	set_func_flags(0X710002A0B0,0x1400);
	SetType(0X710002A0B0, "__int64 __fastcall sub_710002A0B0(_DWORD *, unsigned int);");
	add_func    (0X710002A0C0,0X710002A13C);
	set_func_flags(0X710002A0C0,0x1410);
	set_frame_size(0X710002A0C0, 0X10, 32, 0);
	define_local_var(0X710002A0C0, 0X710002A13C, "[bp-0X8]", "result");
	add_func    (0X710002A140,0X710002A3A0);
	set_func_flags(0X710002A140,0x1410);
	SetType(0X710002A140, "__int64 __fastcall sub_710002A140(unsigned int, _DWORD *);");
	set_frame_size(0X710002A140, 0X1B0, 48, 0);
	add_func    (0X710002A3A0,0X710002A49C);
	set_func_flags(0X710002A3A0,0x1410);
	set_frame_size(0X710002A3A0, 0X20, 48, 0);
	add_func    (0X710002A4A0,0X710002A74C);
	set_func_flags(0X710002A4A0,0x1410);
	set_frame_size(0X710002A4A0, 0X1B0, 48, 0);
	define_local_var(0X710002A4A0, 0X710002A74C, "[bp-0X1B0]", "result");
	add_func    (0X710002A750,0X710002A9B4);
	set_func_flags(0X710002A750,0x1410);
	SetType(0X710002A750, "__int64 __fastcall sub_710002A750(unsigned int, _WORD *);");
	set_frame_size(0X710002A750, 0X1B0, 48, 0);
	add_func    (0X710002A9B4,0X710002AAEC);
	set_func_flags(0X710002A9B4,0x1400);
	add_func    (0X710002AAEC,0X710002ACB0);
	set_func_flags(0X710002AAEC,0x1410);
	set_frame_size(0X710002AAEC, 0, 32, 0);
	add_func    (0X710002ACB0,0X710002ACBC);
	set_func_flags(0X710002ACB0,0x1400);
	add_func    (0X710002ACBC,0X710002ACD8);
	set_func_flags(0X710002ACBC,0x1400);
	add_func    (0X710002ACD8,0X710002ADC8);
	set_func_flags(0X710002ACD8,0x1410);
	SetType(0X710002ACD8, "__int64 __fastcall sub_710002ACD8(_QWORD *, __int64, unsigned int);");
	set_frame_size(0X710002ACD8, 0X20, 32, 0);
	add_func    (0X710002ADD0,0X710002AEE0);
	set_func_flags(0X710002ADD0,0x1410);
	SetType(0X710002ADD0, "void __fastcall sub_710002ADD0(__int64 a1);");
	set_frame_size(0X710002ADD0, 0, 48, 0);
	add_func    (0X710002AEE0,0X710002AF30);
	set_func_flags(0X710002AEE0,0x1410);
	SetType(0X710002AEE0, "__int64 __fastcall sub_710002AEE0(_QWORD *, int, unsigned int, __int64);");
	set_frame_size(0X710002AEE0, 0X30, 0, 0);
	add_func    (0X710002AF30,0X710002B060);
	set_func_flags(0X710002AF30,0x1410);
	SetType(0X710002AF30, "__int64 __fastcall sub_710002AF30(_QWORD *, int, __int64 *, unsigned int, __int64);");
	set_frame_size(0X710002AF30, 0X10, 64, 0);
	add_func    (0X710002B060,0X710002B068);
	set_func_flags(0X710002B060,0x1400);
	SetType(0X710002B060, "void __fastcall Unk4440__ClearEvent(Unk4440 *this);");
	add_func    (0X710002B068,0X710002B070);
	set_func_flags(0X710002B068,0x1400);
	add_func    (0X710002B070,0X710002B154);
	set_func_flags(0X710002B070,0x1410);
	SetType(0X710002B070, "__int64 __fastcall sub_710002B070(__int64);");
	set_frame_size(0X710002B070, 0, 80, 0);
	add_func    (0X710002B154,0X710002B254);
	set_func_flags(0X710002B154,0x1410);
	SetType(0X710002B154, "__int64 __fastcall sub_710002B154(_QWORD, _QWORD);");
	set_frame_size(0X710002B154, 0X10, 48, 0);
	add_func    (0X710002B254,0X710002B2B0);
	set_func_flags(0X710002B254,0x1410);
	set_frame_size(0X710002B254, 0X20, 16, 0);
	add_func    (0X710002B2B0,0X710002B374);
	set_func_flags(0X710002B2B0,0x1410);
	SetType(0X710002B2B0, "__int64 __fastcall sub_710002B2B0(__int64, __int64);");
	set_frame_size(0X710002B2B0, 0X20, 16, 0);
	add_func    (0X710002B380,0X710002B3D4);
	set_func_flags(0X710002B380,0x1410);
	SetType(0X710002B380, "__int64 __fastcall sub_710002B380(__int64);");
	set_frame_size(0X710002B380, 0X20, 0, 0);
	add_func    (0X710002B3D4,0X710002B3E0);
	set_func_flags(0X710002B3D4,0x1400);
	add_func    (0X710002B3E0,0X710002B3E4);
	set_func_flags(0X710002B3E0,0x1440);
	add_func    (0X710002B3E4,0X710002B3E8);
	set_func_flags(0X710002B3E4,0x1440);
	add_func    (0X710002B3E8,0X710002B3EC);
	set_func_flags(0X710002B3E8,0x1440);
	add_func    (0X710002B3F0,0X710002B488);
	set_func_flags(0X710002B3F0,0x1410);
	SetType(0X710002B3F0, "__int64 __fastcall sub_710002B3F0(_QWORD, _QWORD, _QWORD);");
	set_frame_size(0X710002B3F0, 0X20, 16, 0);
	add_func    (0X710002B490,0X710002B504);
	set_func_flags(0X710002B490,0x1410);
	SetType(0X710002B490, "__int64 __fastcall sub_710002B490(_QWORD);");
	set_frame_size(0X710002B490, 0X20, 16, 0);
	add_func    (0X710002B504,0X710002B530);
	set_func_flags(0X710002B504,0x1400);
	add_func    (0X710002B530,0X710002B600);
	set_func_flags(0X710002B530,0x1410);
	set_frame_size(0X710002B530, 0X20, 32, 0);
	add_func    (0X710002B600,0X710002B6CC);
	set_func_flags(0X710002B600,0x1410);
	set_frame_size(0X710002B600, 0, 80, 0);
	add_func    (0X710002B6D0,0X710002B79C);
	set_func_flags(0X710002B6D0,0x1410);
	set_frame_size(0X710002B6D0, 0, 80, 0);
	add_func    (0X710002B7A0,0X710002B844);
	set_func_flags(0X710002B7A0,0x1410);
	set_frame_size(0X710002B7A0, 0X20, 48, 0);
	add_func    (0X710002B850,0X710002B8F4);
	set_func_flags(0X710002B850,0x1410);
	set_frame_size(0X710002B850, 0X20, 48, 0);
	add_func    (0X710002B8F4,0X710002B9A8);
	set_func_flags(0X710002B8F4,0x1410);
	set_frame_size(0X710002B8F4, 0, 48, 0);
	add_func    (0X710002B9A8,0X710002BA6C);
	set_func_flags(0X710002B9A8,0x1410);
	set_frame_size(0X710002B9A8, 0X20, 32, 0);
	add_func    (0X710002BA6C,0X710002BB88);
	set_func_flags(0X710002BA6C,0x1410);
	set_frame_size(0X710002BA6C, 0X20, 48, 0);
	add_func    (0X710002BB88,0X710002BB94);
	set_func_flags(0X710002BB88,0x1400);
	add_func    (0X710002BB94,0X710002BC60);
	set_func_flags(0X710002BB94,0x1410);
	set_frame_size(0X710002BB94, 0X20, 32, 0);
	add_func    (0X710002BC60,0X710002BD2C);
	set_func_flags(0X710002BC60,0x1410);
	set_frame_size(0X710002BC60, 0X20, 32, 0);
	add_func    (0X710002BD2C,0X710002BD84);
	set_func_flags(0X710002BD2C,0x1410);
	SetType(0X710002BD2C, "__int64 __fastcall sub_710002BD2C(_QWORD *, __int64, unsigned int);");
	set_frame_size(0X710002BD2C, 0X20, 16, 0);
	add_func    (0X710002BD84,0X710002BDC4);
	set_func_flags(0X710002BD84,0x1410);
	set_frame_size(0X710002BD84, 0, 32, 0);
	add_func    (0X710002BDC4,0X710002BDCC);
	set_func_flags(0X710002BDC4,0x1400);
	add_func    (0X710002BDCC,0X710002BE1C);
	set_func_flags(0X710002BDCC,0x1410);
	set_frame_size(0X710002BDCC, 0, 32, 0);
	add_func    (0X710002BE1C,0X710002BE24);
	set_func_flags(0X710002BE1C,0x1400);
	add_func    (0X710002BE24,0X710002BF0C);
	set_func_flags(0X710002BE24,0x1410);
	SetType(0X710002BE24, "__int64 __fastcall sub_710002BE24(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);");
	set_frame_size(0X710002BE24, 0XC0, 32, 0);
	add_func    (0X710002BF0C,0X710002BFF0);
	set_func_flags(0X710002BF0C,0x1410);
	SetType(0X710002BF0C, "__int64 __fastcall sub_710002BF0C(_QWORD, _QWORD, _QWORD, _QWORD);");
	set_frame_size(0X710002BF0C, 0X20, 16, 0);
	add_func    (0X710002BFF0,0X710002C070);
	set_func_flags(0X710002BFF0,0x1410);
	set_frame_size(0X710002BFF0, 0X20, 16, 0);
	add_func    (0X710002C070,0X710002C17C);
	set_func_flags(0X710002C070,0x1410);
	set_frame_size(0X710002C070, 0X30, 16, 0);
	add_func    (0X710002C180,0X710002C328);
	set_func_flags(0X710002C180,0x1410);
	SetType(0X710002C180, "__int64 __fastcall sub_710002C180(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);");
	set_frame_size(0X710002C180, 0X1C0, 80, 0);
	add_func    (0X710002C328,0X710002C330);
	set_func_flags(0X710002C328,0x1400);
	add_func    (0X710002C330,0X710002C538);
	set_func_flags(0X710002C330,0x1410);
	SetType(0X710002C330, "__int64 __fastcall sub_710002C330(__int64, __int64, unsigned int *, __int64, __int64, __int64);");
	set_frame_size(0X710002C330, 0X10, 80, 0);
	add_func    (0X710002C538,0X710002C5D8);
	set_func_flags(0X710002C538,0x1410);
	SetType(0X710002C538, "_QWORD *__fastcall sub_710002C538(_QWORD *, __int64 *, _QWORD *);");
	set_frame_size(0X710002C538, 0, 48, 0);
	add_func    (0X710002C5D8,0X710002C658);
	set_func_flags(0X710002C5D8,0x1410);
	SetType(0X710002C5D8, "__int64 __fastcall sub_710002C5D8(_QWORD *, _QWORD *);");
	set_frame_size(0X710002C5D8, 0, 32, 0);
	add_func    (0X710002C658,0X710002C708);
	set_func_flags(0X710002C658,0x1410);
	set_frame_size(0X710002C658, 0X20, 16, 0);
	add_func    (0X710002C710,0X710002C9EC);
	set_func_flags(0X710002C710,0x1410);
	set_frame_size(0X710002C710, 0, 32, 0);
	add_func    (0X710002C9EC,0X710002CA0C);
	set_func_flags(0X710002C9EC,0x1400);
	add_func    (0X710002CA10,0X710002CC30);
	set_func_flags(0X710002CA10,0x1400);
	set_frame_size(0X710002CA10, 0X10, 0, 0);
	add_func    (0X710002CC30,0X710002CD30);
	set_func_flags(0X710002CC30,0x1410);
	set_frame_size(0X710002CC30, 0X20, 48, 0);
	add_func    (0X710002CD30,0X710002CD38);
	set_func_flags(0X710002CD30,0x1400);
	add_func    (0X710002CD40,0X710002CE88);
	set_func_flags(0X710002CD40,0x1410);
	set_frame_size(0X710002CD40, 0X90, 16, 0);
	add_func    (0X710002CE90,0X710002CF84);
	set_func_flags(0X710002CE90,0x1400);
	add_func    (0X710002CF90,0X710002CFF4);
	set_func_flags(0X710002CF90,0x1410);
	set_frame_size(0X710002CF90, 0X20, 16, 0);
	add_func    (0X710002D000,0X710002D0DC);
	set_func_flags(0X710002D000,0x1410);
	set_frame_size(0X710002D000, 0, 16, 0);
	add_func    (0X710002D0DC,0X710002D1B0);
	set_func_flags(0X710002D0DC,0x1410);
	set_frame_size(0X710002D0DC, 0X70, 48, 0);
	add_func    (0X710002D1B0,0X710002D1B4);
	set_func_flags(0X710002D1B0,0x1440);
	add_func    (0X710002D1C0,0X710002D3C4);
	set_func_flags(0X710002D1C0,0x1400);
	set_frame_size(0X710002D1C0, 0X20, 0, 0);
	add_func    (0X710002D3C4,0X710002D494);
	set_func_flags(0X710002D3C4,0x1410);
	set_frame_size(0X710002D3C4, 0X20, 48, 0);
	add_func    (0X710002D494,0X710002D514);
	set_func_flags(0X710002D494,0x1410);
	SetType(0X710002D494, "__int64 __fastcall sub_710002D494(__int64, __int64, __int64, __int64, __int64, __int64);");
	set_frame_size(0X710002D494, 0X50, 0, 0);
	add_func    (0X710002D514,0X710002D518);
	set_func_flags(0X710002D514,0x1440);
	add_func    (0X710002D518,0X710002D51C);
	set_func_flags(0X710002D518,0x1440);
	add_func    (0X710002D51C,0X710002D61C);
	set_func_flags(0X710002D51C,0x1410);
	set_frame_size(0X710002D51C, 0X20, 32, 0);
	add_func    (0X710002D61C,0X710002D628);
	set_func_flags(0X710002D61C,0x1400);
	add_func    (0X710002D628,0X710002D630);
	set_func_flags(0X710002D628,0x1400);
	add_func    (0X710002D630,0X710002D644);
	set_func_flags(0X710002D630,0x1400);
	add_func    (0X710002D644,0X710002D698);
	set_func_flags(0X710002D644,0x1410);
	set_frame_size(0X710002D644, 0, 32, 0);
	add_func    (0X710002D698,0X710002D6D0);
	set_func_flags(0X710002D698,0x1410);
	set_frame_size(0X710002D698, 0, 32, 0);
	add_func    (0X710002D6D0,0X710002D864);
	set_func_flags(0X710002D6D0,0x1410);
	set_frame_size(0X710002D6D0, 0XB0, 96, 0);
	add_func    (0X710002D864,0X710002D968);
	set_func_flags(0X710002D864,0x1410);
	set_frame_size(0X710002D864, 0XB0, 32, 0);
	add_func    (0X710002D968,0X710002D978);
	set_func_flags(0X710002D968,0x1400);
	add_func    (0X710002D978,0X710002D988);
	set_func_flags(0X710002D978,0x1400);
	add_func    (0X710002D988,0X710002D998);
	set_func_flags(0X710002D988,0x1400);
	add_func    (0X710002D9A0,0X710002DA4C);
	set_func_flags(0X710002D9A0,0x1410);
	set_frame_size(0X710002D9A0, 0X30, 16, 0);
	add_func    (0X710002DA4C,0X710002DAB8);
	set_func_flags(0X710002DA4C,0x1410);
	set_frame_size(0X710002DA4C, 0X10, 32, 0);
	add_func    (0X710002DAB8,0X710002DAC8);
	set_func_flags(0X710002DAB8,0x1400);
	add_func    (0X710002DAD0,0X710002DBA0);
	set_func_flags(0X710002DAD0,0x1410);
	set_frame_size(0X710002DAD0, 0, 64, 0);
	add_func    (0X710002DBA0,0X710002DBB0);
	set_func_flags(0X710002DBA0,0x1400);
	add_func    (0X710002DBB0,0X710002DC28);
	set_func_flags(0X710002DBB0,0x1410);
	set_frame_size(0X710002DBB0, 0X30, 16, 0);
	add_func    (0X710002DC28,0X710002DC38);
	set_func_flags(0X710002DC28,0x1400);
	add_func    (0X710002DC38,0X710002DD48);
	set_func_flags(0X710002DC38,0x1410);
	set_frame_size(0X710002DC38, 0X40, 16, 0);
	add_func    (0X710002DD48,0X710002DE74);
	set_func_flags(0X710002DD48,0x1410);
	set_frame_size(0X710002DD48, 0X40, 32, 0);
	add_func    (0X710002DE74,0X710002E200);
	set_func_flags(0X710002DE74,0x1410);
	set_frame_size(0X710002DE74, 0XE0, 32, 0);
	add_func    (0X710002E200,0X710002E3A4);
	set_func_flags(0X710002E200,0x1410);
	set_frame_size(0X710002E200, 0XC0, 32, 0);
	define_local_var(0X710002E200, 0X710002E3A4, "[bp-0X8]", "result");
	add_func    (0X710002E3A4,0X710002E54C);
	set_func_flags(0X710002E3A4,0x1410);
	set_frame_size(0X710002E3A4, 0XC0, 32, 0);
	define_local_var(0X710002E3A4, 0X710002E54C, "[bp-0X8]", "result");
	add_func    (0X710002E54C,0X710002E6F0);
	set_func_flags(0X710002E54C,0x1410);
	set_frame_size(0X710002E54C, 0XC0, 32, 0);
	define_local_var(0X710002E54C, 0X710002E6F0, "[bp-0X8]", "result");
	add_func    (0X710002E6F0,0X710002E724);
	set_func_flags(0X710002E6F0,0x1410);
	SetType(0X710002E6F0, "__int64 __fastcall sub_710002E6F0(_QWORD);");
	set_frame_size(0X710002E6F0, 0, 16, 0);
	add_func    (0X710002E730,0X710002E768);
	set_func_flags(0X710002E730,0x1410);
	SetType(0X710002E730, "__int64 __fastcall sub_710002E730(_QWORD);");
	set_frame_size(0X710002E730, 0, 16, 0);
	add_func    (0X710002E770,0X710002E7A0);
	set_func_flags(0X710002E770,0x1410);
	set_frame_size(0X710002E770, 0X10, 16, 0);
	add_func    (0X710002E7A0,0X710002E7A8);
	set_func_flags(0X710002E7A0,0x1400);
	SetType(0X710002E7A0, "unsigned __int64 sub_710002E7A0();");
	add_func    (0X710002E7B0,0X710002E80C);
	set_func_flags(0X710002E7B0,0x1410);
	SetType(0X710002E7B0, "__int64 __fastcall sub_710002E7B0(unsigned int, __int64, __int64);");
	set_frame_size(0X710002E7B0, 0, 16, 0);
	add_func    (0X710002E810,0X710002E868);
	set_func_flags(0X710002E810,0x1410);
	SetType(0X710002E810, "__int64 __fastcall sub_710002E810(_QWORD);");
	set_frame_size(0X710002E810, 0X20, 0, 0);
	add_func    (0X710002E870,0X710002E874);
	set_func_flags(0X710002E870,0x1480);
	SetType(0X710002E870, "__int64 __fastcall nn__os__InitializeMultiWaitHolder(_QWORD);");
	add_func    (0X710002E880,0X710002E8D0);
	set_func_flags(0X710002E880,0x1410);
	set_frame_size(0X710002E880, 0, 32, 0);
	add_func    (0X710002E8D0,0X710002E90C);
	set_func_flags(0X710002E8D0,0x1410);
	set_frame_size(0X710002E8D0, 0, 16, 0);
	add_func    (0X710002E910,0X710002E940);
	set_func_flags(0X710002E910,0x1410);
	set_frame_size(0X710002E910, 0X10, 16, 0);
	add_func    (0X710002E940,0X710002E944);
	set_func_flags(0X710002E940,0x14c0);
	SetType(0X710002E940, "__int64 __fastcall nn__os__InitializeMultiWaitHolder(__int64 result, int);");
	add_func    (0X710002E950,0X710002EA10);
	set_func_flags(0X710002E950,0x1410);
	set_frame_size(0X710002E950, 0X30, 0, 0);
	add_func    (0X710002EA10,0X710002EA9C);
	set_func_flags(0X710002EA10,0x1410);
	set_frame_size(0X710002EA10, 0X10, 16, 0);
}

static Functions_1(void) {

	add_func    (0X710002EAA0,0X710002EAEC);
	set_func_flags(0X710002EAA0,0x1410);
	SetType(0X710002EAA0, "__int64 __fastcall sub_710002EAA0(unsigned int);");
	set_frame_size(0X710002EAA0, 0X20, 0, 0);
	add_func    (0X710002EAF0,0X710002EB38);
	set_func_flags(0X710002EAF0,0x1410);
	SetType(0X710002EAF0, "__int64 __fastcall sub_710002EAF0(__int64);");
	set_frame_size(0X710002EAF0, 0X20, 0, 0);
	add_func    (0X710002EB38,0X710002EB3C);
	set_func_flags(0X710002EB38,0x14c0);
	SetType(0X710002EB38, "__int64 __fastcall j_delete_1(__int64 result);");
	add_func    (0X710002EB3C,0X710002EB44);
	set_func_flags(0X710002EB3C,0x1400);
	add_func    (0X710002EB44,0X710002EB4C);
	set_func_flags(0X710002EB44,0x1400);
	add_func    (0X710002EB4C,0X710002EB58);
	set_func_flags(0X710002EB4C,0x1400);
	SetType(0X710002EB4C, "bool __fastcall sub_710002EB4C(__int64, __int64);");
	add_func    (0X710002EB60,0X710002EB8C);
	set_func_flags(0X710002EB60,0x1410);
	SetType(0X710002EB60, "__int64 GetService_SM_();");
	set_frame_size(0X710002EB60, 0X10, 16, 0);
	add_func    (0X710002EB90,0X710002EBBC);
	set_func_flags(0X710002EB90,0x1410);
	SetType(0X710002EB90, "__int64 sub_710002EB90();");
	set_frame_size(0X710002EB90, 0X10, 16, 0);
	add_func    (0X710002EBC0,0X710002EC38);
	set_func_flags(0X710002EBC0,0x1410);
	SetType(0X710002EBC0, "__int64 __fastcall sub_710002EBC0(_QWORD, _QWORD, _QWORD);");
	set_frame_size(0X710002EBC0, 0X20, 16, 0);
	add_func    (0X710002EC40,0X710002ECA0);
	set_func_flags(0X710002EC40,0x1410);
	SetType(0X710002EC40, "__int64 __fastcall sub_710002EC40(_QWORD);");
	set_frame_size(0X710002EC40, 0X20, 0, 0);
	add_func    (0X710002ECA0,0X710002ECFC);
	set_func_flags(0X710002ECA0,0x1410);
	SetType(0X710002ECA0, "__int64 __fastcall sub_710002ECA0(_DWORD *a1, unsigned __int8 *service_name);");
	set_frame_size(0X710002ECA0, 0, 32, 0);
	add_func    (0X710002ED00,0X710002EDEC);
	set_func_flags(0X710002ED00,0x1410);
	set_frame_size(0X710002ED00, 0X20, 32, 0);
	add_func    (0X710002EDF0,0X710002EE30);
	set_func_flags(0X710002EDF0,0x1400);
	add_func    (0X710002EE30,0X710002EE34);
	set_func_flags(0X710002EE30,0x14c0);
	SetType(0X710002EE30, "__int64 __fastcall j_delete_2(__int64 result);");
	add_func    (0X710002EE34,0X710002EE48);
	set_func_flags(0X710002EE34,0x1400);
	add_func    (0X710002EE48,0X710002EE5C);
	set_func_flags(0X710002EE48,0x1400);
	add_func    (0X710002EE5C,0X710002EE68);
	set_func_flags(0X710002EE5C,0x1400);
	add_func    (0X710002EE70,0X710002EFD0);
	set_func_flags(0X710002EE70,0x1410);
	SetType(0X710002EE70, "__int64 GetService_SM();");
	set_frame_size(0X710002EE70, 0X20, 32, 0);
	add_func    (0X710002EFD0,0X710002EFD8);
	set_func_flags(0X710002EFD0,0x1400);
	SetType(0X710002EFD0, "__int64 sub_710002EFD0();");
	add_func    (0X710002EFE0,0X710002F150);
	set_func_flags(0X710002EFE0,0x1410);
	SetType(0X710002EFE0, "__int64 __fastcall sub_710002EFE0(_DWORD *, unsigned __int8 *, unsigned __int64);");
	set_frame_size(0X710002EFE0, 0, 32, 0);
	add_func    (0X710002F150,0X710002F2CC);
	set_func_flags(0X710002F150,0x1410);
	set_frame_size(0X710002F150, 0, 32, 0);
	add_func    (0X710002F2D0,0X710002F428);
	set_func_flags(0X710002F2D0,0x1410);
	set_frame_size(0X710002F2D0, 0X20, 0, 0);
	add_func    (0X710002F428,0X710002F45C);
	set_func_flags(0X710002F428,0x1410);
	set_frame_size(0X710002F428, 0X20, 0, 0);
	add_func    (0X710002F45C,0X710002F464);
	set_func_flags(0X710002F45C,0x1400);
	add_func    (0X710002F464,0X710002F46C);
	set_func_flags(0X710002F464,0x1400);
	add_func    (0X710002F46C,0X710002F484);
	set_func_flags(0X710002F46C,0x1400);
	set_frame_size(0X710002F46C, 0X10, 0, 0);
	add_func    (0X710002F484,0X710002F48C);
	set_func_flags(0X710002F484,0x1400);
	SetType(0X710002F484, "void sub_710002F484();");
	add_func    (0X710002F48C,0X710002F4A4);
	set_func_flags(0X710002F48C,0x1400);
	set_frame_size(0X710002F48C, 0X10, 0, 0);
	add_func    (0X710002F4A4,0X710002F4AC);
	set_func_flags(0X710002F4A4,0x1400);
	add_func    (0X710002F4AC,0X710002F4B4);
	set_func_flags(0X710002F4AC,0x1400);
	add_func    (0X710002F4B4,0X710002F4BC);
	set_func_flags(0X710002F4B4,0x1400);
	SetType(0X710002F4B4, "void __fastcall SleepThread(__int64);");
	add_func    (0X710002F4BC,0X710002F4D4);
	set_func_flags(0X710002F4BC,0x1400);
	set_frame_size(0X710002F4BC, 0X10, 0, 0);
	add_func    (0X710002F4D4,0X710002F4DC);
	set_func_flags(0X710002F4D4,0x1400);
	add_func    (0X710002F4DC,0X710002F4E4);
	set_func_flags(0X710002F4DC,0x1400);
	add_func    (0X710002F4E4,0X710002F4EC);
	set_func_flags(0X710002F4E4,0x1400);
	SetType(0X710002F4E4, "__int64 __fastcall sub_710002F4E4(_QWORD, _QWORD, _QWORD, _QWORD);");
	add_func    (0X710002F4EC,0X710002F4F4);
	set_func_flags(0X710002F4EC,0x1400);
	SetType(0X710002F4EC, "void sub_710002F4EC();");
	add_func    (0X710002F4F4,0X710002F4FC);
	set_func_flags(0X710002F4F4,0x1400);
	SetType(0X710002F4F4, "__int64 __fastcall sub_710002F4F4(_QWORD);");
	add_func    (0X710002F4FC,0X710002F504);
	set_func_flags(0X710002F4FC,0x1400);
	add_func    (0X710002F504,0X710002F51C);
	set_func_flags(0X710002F504,0x1400);
	SetType(0X710002F504, "_DWORD *__fastcall sub_710002F504(_DWORD *result, int);");
	set_frame_size(0X710002F504, 0X10, 0, 0);
	add_func    (0X710002F51C,0X710002F524);
	set_func_flags(0X710002F51C,0x1400);
	SetType(0X710002F51C, "void CancelSynchronization();");
	add_func    (0X710002F524,0X710002F52C);
	set_func_flags(0X710002F524,0x1400);
	SetType(0X710002F524, "void __fastcall ArbitrateLock(int handle, uintptr_t address, uint32_t tag);");
	add_func    (0X710002F52C,0X710002F534);
	set_func_flags(0X710002F52C,0x1400);
	SetType(0X710002F52C, "void __fastcall ArbitrateUnlock(uintptr_t address);");
	add_func    (0X710002F534,0X710002F53C);
	set_func_flags(0X710002F534,0x1400);
	SetType(0X710002F534, "void sub_710002F534();");
	add_func    (0X710002F53C,0X710002F544);
	set_func_flags(0X710002F53C,0x1400);
	SetType(0X710002F53C, "void SignalProcessWideKey();");
	add_func    (0X710002F544,0X710002F55C);
	set_func_flags(0X710002F544,0x1400);
	SetType(0X710002F544, "__int64 __fastcall sub_710002F544(_QWORD, _QWORD);");
	set_frame_size(0X710002F544, 0X10, 0, 0);
	add_func    (0X710002F55C,0X710002F564);
	set_func_flags(0X710002F55C,0x1400);
	SetType(0X710002F55C, "__int64 __fastcall sub_710002F55C(_QWORD);");
	add_func    (0X710002F564,0X710002F56C);
	set_func_flags(0X710002F564,0x1400);
	SetType(0X710002F564, "__int64 __fastcall sub_710002F564(_QWORD, _QWORD, _QWORD);");
	add_func    (0X710002F56C,0X710002F584);
	set_func_flags(0X710002F56C,0x1400);
	set_frame_size(0X710002F56C, 0X10, 0, 0);
	add_func    (0X710002F584,0X710002F58C);
	set_func_flags(0X710002F584,0x1400);
	add_func    (0X710002F58C,0X710002F594);
	set_func_flags(0X710002F58C,0x1400);
	add_func    (0X710002F594,0X710002F59C);
	set_func_flags(0X710002F594,0x1400);
	SetType(0X710002F594, "__int64 __fastcall sub_710002F594(_QWORD);");
	add_func    (0X710002F59C,0X710002F5B4);
	set_func_flags(0X710002F59C,0x1400);
	SetType(0X710002F59C, "_QWORD *__fastcall GetInfo(_QWORD *result, __int64 a2, int, __int64);");
	set_frame_size(0X710002F59C, 0X10, 0, 0);
	add_func    (0X710002F5B4,0X710002F5BC);
	set_func_flags(0X710002F5B4,0x1400);
	add_func    (0X710002F5BC,0X710002F5DC);
	set_func_flags(0X710002F5BC,0x1400);
	set_frame_size(0X710002F5BC, 0X10, 0, 0);
	add_func    (0X710002F5DC,0X710002F5F4);
	set_func_flags(0X710002F5DC,0x1400);
	set_frame_size(0X710002F5DC, 0X10, 0, 0);
	add_func    (0X710002F5F4,0X710002F60C);
	set_func_flags(0X710002F5F4,0x1400);
	set_frame_size(0X710002F5F4, 0X10, 0, 0);
	add_func    (0X710002F60C,0X710002F624);
	set_func_flags(0X710002F60C,0x1400);
	set_frame_size(0X710002F60C, 0X10, 0, 0);
	add_func    (0X710002F624,0X710002F644);
	set_func_flags(0X710002F624,0x1400);
	set_frame_size(0X710002F624, 0X10, 0, 0);
	add_func    (0X710002F644,0X710002F65C);
	set_func_flags(0X710002F644,0x1400);
	SetType(0X710002F644, "__int64 __fastcall sub_710002F644(_QWORD);");
	set_frame_size(0X710002F644, 0X10, 0, 0);
	add_func    (0X710002F660,0X710002F874);
	set_func_flags(0X710002F660,0x1410);
	SetType(0X710002F660, "__int64 SetupService_arp();");
	set_frame_size(0X710002F660, 0X30, 16, 0);
	add_func    (0X710002F874,0X710002F960);
	set_func_flags(0X710002F874,0x1410);
	SetType(0X710002F874, "__int64 __fastcall sub_710002F874(_QWORD);");
	set_frame_size(0X710002F874, 0, 48, 0);
	add_func    (0X710002F960,0X710002FB8C);
	set_func_flags(0X710002F960,0x1410);
	set_frame_size(0X710002F960, 0, 32, 0);
	add_func    (0X710002FB8C,0X710002FBE0);
	set_func_flags(0X710002FB8C,0x1410);
	set_frame_size(0X710002FB8C, 0X20, 16, 0);
	add_func    (0X710002FBE0,0X710002FC0C);
	set_func_flags(0X710002FBE0,0x1400);
	add_func    (0X710002FC0C,0X710002FC10);
	set_func_flags(0X710002FC0C,0x1440);
	add_func    (0X710002FC10,0X710002FC34);
	set_func_flags(0X710002FC10,0x1410);
	set_frame_size(0X710002FC10, 0, 16, 0);
	add_func    (0X710002FC34,0X710002FC40);
	set_func_flags(0X710002FC34,0x1411);
	set_frame_size(0X710002FC34, 0, 16, 0);
	add_func    (0X710002FC40,0X710002FCC8);
	set_func_flags(0X710002FC40,0x1410);
	set_frame_size(0X710002FC40, 0, 32, 0);
	add_func    (0X710002FCC8,0X710002FCD0);
	set_func_flags(0X710002FCC8,0x1400);
	add_func    (0X710002FCD0,0X710002FCD4);
	set_func_flags(0X710002FCD0,0x1440);
	add_func    (0X710002FCD4,0X710002FEB4);
	set_func_flags(0X710002FCD4,0x1410);
	set_frame_size(0X710002FCD4, 0X20, 16, 0);
	add_func    (0X710002FEB4,0X710002FF14);
	set_func_flags(0X710002FEB4,0x1410);
	set_frame_size(0X710002FEB4, 0X20, 16, 0);
	add_func    (0X710002FF14,0X710002FF38);
	set_func_flags(0X710002FF14,0x1410);
	set_frame_size(0X710002FF14, 0X20, 0, 0);
	add_func    (0X710002FF38,0X710002FF44);
	set_func_flags(0X710002FF38,0x1400);
	add_func    (0X710002FF44,0X710002FF48);
	set_func_flags(0X710002FF44,0x1440);
	add_func    (0X710002FF48,0X710002FF50);
	set_func_flags(0X710002FF48,0x1400);
	add_func    (0X710002FF50,0X710002FFAC);
	set_func_flags(0X710002FF50,0x1410);
	set_frame_size(0X710002FF50, 0X20, 16, 0);
	add_func    (0X710002FFAC,0X710002FFB8);
	set_func_flags(0X710002FFAC,0x1400);
	add_func    (0X710002FFB8,0X71000301FC);
	set_func_flags(0X710002FFB8,0x1410);
	set_frame_size(0X710002FFB8, 0X20, 0, 0);
	add_func    (0X7100030200,0X710003020C);
	set_func_flags(0X7100030200,0x1400);
	add_func    (0X710003020C,0X7100030314);
	set_func_flags(0X710003020C,0x1410);
	set_frame_size(0X710003020C, 0X30, 0, 0);
	add_func    (0X7100030314,0X710003050C);
	set_func_flags(0X7100030314,0x1410);
	set_frame_size(0X7100030314, 0XC0, 32, 0);
	add_func    (0X710003050C,0X71000306E0);
	set_func_flags(0X710003050C,0x1410);
	set_frame_size(0X710003050C, 0XE0, 32, 0);
	add_func    (0X71000306E0,0X71000308B0);
	set_func_flags(0X71000306E0,0x1410);
	set_frame_size(0X71000306E0, 0XE0, 32, 0);
	add_func    (0X71000308B0,0X7100030A80);
	set_func_flags(0X71000308B0,0x1410);
	set_frame_size(0X71000308B0, 0XE0, 32, 0);
	add_func    (0X7100030A80,0X7100030DE8);
	set_func_flags(0X7100030A80,0x1410);
	set_frame_size(0X7100030A80, 0XE0, 64, 0);
	add_func    (0X7100030DE8,0X7100030F74);
	set_func_flags(0X7100030DE8,0x1410);
	set_frame_size(0X7100030DE8, 0XD0, 32, 0);
	add_func    (0X7100030F74,0X710003107C);
	set_func_flags(0X7100030F74,0x1410);
	set_frame_size(0X7100030F74, 0X30, 0, 0);
	add_func    (0X710003107C,0X7100031328);
	set_func_flags(0X710003107C,0x1410);
	set_frame_size(0X710003107C, 0XC0, 32, 0);
	add_func    (0X7100031328,0X710003147C);
	set_func_flags(0X7100031328,0x1410);
	set_frame_size(0X7100031328, 0XC0, 32, 0);
	add_func    (0X710003147C,0X7100031608);
	set_func_flags(0X710003147C,0x1410);
	set_frame_size(0X710003147C, 0XD0, 32, 0);
	add_func    (0X7100031608,0X7100031610);
	set_func_flags(0X7100031608,0x1400);
	add_func    (0X7100031610,0X7100031670);
	set_func_flags(0X7100031610,0x1410);
	set_frame_size(0X7100031610, 0X20, 16, 0);
	add_func    (0X7100031670,0X710003169C);
	set_func_flags(0X7100031670,0x1410);
	set_frame_size(0X7100031670, 0X10, 16, 0);
	add_func    (0X710003169C,0X71000316C4);
	set_func_flags(0X710003169C,0x1410);
	SetType(0X710003169C, "__int64 __fastcall sub_710003169C(__int64, __int64);");
	set_frame_size(0X710003169C, 0X10, 16, 0);
	add_func    (0X71000316C4,0X71000317E4);
	set_func_flags(0X71000316C4,0x1410);
	set_frame_size(0X71000316C4, 0, 64, 0);
	add_func    (0X71000317E4,0X7100031908);
	set_func_flags(0X71000317E4,0x1410);
	set_frame_size(0X71000317E4, 0, 64, 0);
	add_func    (0X7100031908,0X7100031A10);
	set_func_flags(0X7100031908,0x1410);
	set_frame_size(0X7100031908, 0X20, 32, 0);
	add_func    (0X7100031A10,0X7100031A18);
	set_func_flags(0X7100031A10,0x1400);
	add_func    (0X7100031A18,0X7100031A50);
	set_func_flags(0X7100031A18,0x1410);
	set_frame_size(0X7100031A18, 0X20, 0, 0);
	add_func    (0X7100031A50,0X7100031A58);
	set_func_flags(0X7100031A50,0x1400);
	add_func    (0X7100031A58,0X7100031A78);
	set_func_flags(0X7100031A58,0x1400);
	add_func    (0X7100031A78,0X7100031AAC);
	set_func_flags(0X7100031A78,0x1410);
	set_frame_size(0X7100031A78, 0, 16, 0);
	add_func    (0X7100031AAC,0X7100031B58);
	set_func_flags(0X7100031AAC,0x1410);
	set_frame_size(0X7100031AAC, 0, 48, 0);
	add_func    (0X7100031B58,0X7100031C40);
	set_func_flags(0X7100031B58,0x1410);
	set_frame_size(0X7100031B58, 0X20, 32, 0);
	add_func    (0X7100031C40,0X7100031D2C);
	set_func_flags(0X7100031C40,0x1410);
	SetType(0X7100031C40, "__int64 __fastcall sub_7100031C40(__int64, _QWORD *);");
	set_frame_size(0X7100031C40, 0X20, 16, 0);
	add_func    (0X7100031D2C,0X7100031E3C);
	set_func_flags(0X7100031D2C,0x1410);
	set_frame_size(0X7100031D2C, 0, 32, 0);
	add_func    (0X7100031E3C,0X7100031E44);
	set_func_flags(0X7100031E3C,0x1400);
	add_func    (0X7100031E44,0X7100031E7C);
	set_func_flags(0X7100031E44,0x1410);
	set_frame_size(0X7100031E44, 0X20, 0, 0);
	add_func    (0X7100031E7C,0X7100031E84);
	set_func_flags(0X7100031E7C,0x1400);
	add_func    (0X7100031E84,0X7100031EBC);
	set_func_flags(0X7100031E84,0x1400);
	add_func    (0X7100031EBC,0X7100031EE0);
	set_func_flags(0X7100031EBC,0x1400);
	add_func    (0X7100031EE0,0X7100031EE8);
	set_func_flags(0X7100031EE0,0x1400);
	add_func    (0X7100031EE8,0X7100031F98);
	set_func_flags(0X7100031EE8,0x1410);
	set_frame_size(0X7100031EE8, 0X20, 16, 0);
	add_func    (0X7100031F98,0X7100032064);
	set_func_flags(0X7100031F98,0x1410);
	set_frame_size(0X7100031F98, 0, 32, 0);
	add_func    (0X7100032064,0X710003215C);
	set_func_flags(0X7100032064,0x1410);
	set_frame_size(0X7100032064, 0X20, 16, 0);
	add_func    (0X710003215C,0X7100032288);
	set_func_flags(0X710003215C,0x1410);
	set_frame_size(0X710003215C, 0X20, 16, 0);
	add_func    (0X7100032288,0X7100032290);
	set_func_flags(0X7100032288,0x1400);
	add_func    (0X7100032290,0X71000322C8);
	set_func_flags(0X7100032290,0x1410);
	set_frame_size(0X7100032290, 0X20, 0, 0);
	add_func    (0X71000322C8,0X71000322D0);
	set_func_flags(0X71000322C8,0x1400);
	add_func    (0X71000322D0,0X71000322D8);
	set_func_flags(0X71000322D0,0x1400);
	add_func    (0X71000322D8,0X71000322E0);
	set_func_flags(0X71000322D8,0x1400);
	add_func    (0X71000322E0,0X7100032358);
	set_func_flags(0X71000322E0,0x1410);
	set_frame_size(0X71000322E0, 0, 48, 0);
	add_func    (0X7100032358,0X7100032408);
	set_func_flags(0X7100032358,0x1410);
	set_frame_size(0X7100032358, 0X20, 16, 0);
	add_func    (0X7100032408,0X7100032558);
	set_func_flags(0X7100032408,0x1410);
	set_frame_size(0X7100032408, 0X20, 32, 0);
	add_func    (0X7100032558,0X710003255C);
	set_func_flags(0X7100032558,0x1440);
	add_func    (0X710003255C,0X7100032664);
	set_func_flags(0X710003255C,0x1410);
	set_frame_size(0X710003255C, 0X30, 0, 0);
	add_func    (0X7100032664,0X71000326B4);
	set_func_flags(0X7100032664,0x1400);
	add_func    (0X71000326B4,0X7100032834);
	set_func_flags(0X71000326B4,0x1410);
	set_frame_size(0X71000326B4, 0XB0, 64, 0);
	add_func    (0X7100032834,0X71000329E0);
	set_func_flags(0X7100032834,0x1410);
	set_frame_size(0X7100032834, 0XD0, 32, 0);
	add_func    (0X71000329E0,0X7100032B5C);
	set_func_flags(0X71000329E0,0x1410);
	set_frame_size(0X71000329E0, 0XB0, 64, 0);
	add_func    (0X7100032B5C,0X7100032CD8);
	set_func_flags(0X7100032B5C,0x1410);
	set_frame_size(0X7100032B5C, 0XB0, 64, 0);
	add_func    (0X7100032CD8,0X7100032EAC);
	set_func_flags(0X7100032CD8,0x1410);
	set_frame_size(0X7100032CD8, 0XE0, 32, 0);
	add_func    (0X7100032EAC,0X7100033070);
	set_func_flags(0X7100032EAC,0x1410);
	set_frame_size(0X7100032EAC, 0XD0, 32, 0);
	add_func    (0X7100033070,0X71000331EC);
	set_func_flags(0X7100033070,0x1410);
	set_frame_size(0X7100033070, 0XB0, 64, 0);
	add_func    (0X71000331EC,0X7100033398);
	set_func_flags(0X71000331EC,0x1410);
	set_frame_size(0X71000331EC, 0XD0, 32, 0);
	add_func    (0X7100033398,0X71000334AC);
	set_func_flags(0X7100033398,0x1410);
	set_frame_size(0X7100033398, 0X30, 0, 0);
	add_func    (0X71000334AC,0X7100033650);
	set_func_flags(0X71000334AC,0x1410);
	set_frame_size(0X71000334AC, 0XC0, 32, 0);
	define_local_var(0X71000334AC, 0X7100033650, "[bp-0X8]", "result");
	add_func    (0X7100033650,0X7100033658);
	set_func_flags(0X7100033650,0x1400);
	add_func    (0X7100033658,0X71000336B8);
	set_func_flags(0X7100033658,0x1410);
	set_frame_size(0X7100033658, 0X20, 16, 0);
	add_func    (0X71000336B8,0X71000337A0);
	set_func_flags(0X71000336B8,0x1410);
	set_frame_size(0X71000336B8, 0X30, 16, 0);
	add_func    (0X71000337A0,0X710003386C);
	set_func_flags(0X71000337A0,0x1410);
	set_frame_size(0X71000337A0, 0X20, 16, 0);
	add_func    (0X710003386C,0X7100033954);
	set_func_flags(0X710003386C,0x1410);
	set_frame_size(0X710003386C, 0X20, 16, 0);
	add_func    (0X7100033954,0X7100033A48);
	set_func_flags(0X7100033954,0x1410);
	set_frame_size(0X7100033954, 0X20, 16, 0);
	add_func    (0X7100033A48,0X7100033A74);
	set_func_flags(0X7100033A48,0x1410);
	set_frame_size(0X7100033A48, 0X10, 16, 0);
	add_func    (0X7100033A74,0X7100033B34);
	set_func_flags(0X7100033A74,0x1410);
	set_frame_size(0X7100033A74, 0X20, 32, 0);
	add_func    (0X7100033B34,0X7100033C2C);
	set_func_flags(0X7100033B34,0x1410);
	set_frame_size(0X7100033B34, 0X20, 16, 0);
	add_func    (0X7100033C2C,0X7100033D18);
	set_func_flags(0X7100033C2C,0x1410);
	set_frame_size(0X7100033C2C, 0, 48, 0);
	add_func    (0X7100033D18,0X7100033E54);
	set_func_flags(0X7100033D18,0x1410);
	set_frame_size(0X7100033D18, 0X10, 64, 0);
	add_func    (0X7100033E54,0X7100033E5C);
	set_func_flags(0X7100033E54,0x1400);
	add_func    (0X7100033E5C,0X7100033E94);
	set_func_flags(0X7100033E5C,0x1410);
	set_frame_size(0X7100033E5C, 0X20, 0, 0);
	add_func    (0X7100033E94,0X7100033ED8);
	set_func_flags(0X7100033E94,0x1410);
	set_frame_size(0X7100033E94, 0X20, 0, 0);
	add_func    (0X7100033ED8,0X7100033F80);
	set_func_flags(0X7100033ED8,0x1410);
	set_frame_size(0X7100033ED8, 0X20, 32, 0);
	add_func    (0X7100033F80,0X7100033F84);
	set_func_flags(0X7100033F80,0x1440);
	add_func    (0X7100033F90,0X7100034224);
	set_func_flags(0X7100033F90,0x1410);
	set_frame_size(0X7100033F90, 0X20, 16, 0);
	add_func    (0X7100034230,0X7100034234);
	set_func_flags(0X7100034230,0x1440);
	add_func    (0X7100034240,0X7100034244);
	set_func_flags(0X7100034240,0x1440);
	add_func    (0X7100034250,0X7100034254);
	set_func_flags(0X7100034250,0x1440);
	add_func    (0X7100034260,0X7100034264);
	set_func_flags(0X7100034260,0x1440);
	SetType(0X7100034260, "__int64 __fastcall nullsub_48(_QWORD);");
	add_func    (0X7100034270,0X710003427C);
	set_func_flags(0X7100034270,0x1400);
	add_func    (0X7100034280,0X7100034298);
	set_func_flags(0X7100034280,0x1400);
	add_func    (0X71000342A0,0X71000342AC);
	set_func_flags(0X71000342A0,0x1400);
	add_func    (0X71000342B0,0X710003443C);
	set_func_flags(0X71000342B0,0x1400);
	add_func    (0X710003443C,0X7100034478);
	set_func_flags(0X710003443C,0x1410);
	SetType(0X710003443C, "nn::psc::sf::IPmModule *__fastcall sub_710003443C(__int64);");
	set_frame_size(0X710003443C, 0X20, 0, 0);
	add_func    (0X7100034478,0X710003448C);
	set_func_flags(0X7100034478,0x1400);
	add_func    (0X7100034490,0X71000344FC);
	set_func_flags(0X7100034490,0x1410);
	SetType(0X7100034490, "__int64 __fastcall sub_7100034490(__int64, unsigned int, __int64, unsigned int);");
	set_frame_size(0X7100034490, 0, 48, 0);
	add_func    (0X71000344FC,0X71000345BC);
	set_func_flags(0X71000344FC,0x1410);
	SetType(0X71000344FC, "__int64 __fastcall sub_71000344FC(__int64 *);");
	set_frame_size(0X71000344FC, 0X20, 16, 0);
	add_func    (0X71000345BC,0X71000345C0);
	set_func_flags(0X71000345BC,0x1440);
	add_func    (0X71000345C0,0X71000345C8);
	set_func_flags(0X71000345C0,0x1400);
	SetType(0X71000345C0, "__int64 __fastcall sub_71000345C0(_QWORD);");
	add_func    (0X71000345C8,0X71000345D4);
	set_func_flags(0X71000345C8,0x1400);
	SetType(0X71000345C8, "__int64 __fastcall sub_71000345C8(__int64);");
	add_func    (0X71000345D4,0X71000345E8);
	set_func_flags(0X71000345D4,0x1400);
	SetType(0X71000345D4, "__int64 __fastcall sub_71000345D4(_QWORD);");
	add_func    (0X71000345E8,0X710003463C);
	set_func_flags(0X71000345E8,0x1410);
	set_frame_size(0X71000345E8, 0X20, 16, 0);
	add_func    (0X710003463C,0X7100034698);
	set_func_flags(0X710003463C,0x1410);
	SetType(0X710003463C, "__int64 __fastcall sub_710003463C(__int64 *, __int64 *);");
	set_frame_size(0X710003463C, 0X20, 16, 0);
	add_func    (0X71000346A0,0X71000346F8);
	set_func_flags(0X71000346A0,0x1410);
	SetType(0X71000346A0, "__int64 __fastcall sub_71000346A0(_QWORD);");
	set_frame_size(0X71000346A0, 0X20, 16, 0);
	add_func    (0X7100034700,0X7100034758);
	set_func_flags(0X7100034700,0x1410);
	SetType(0X7100034700, "__int64 __fastcall sub_7100034700(_QWORD);");
	set_frame_size(0X7100034700, 0X20, 16, 0);
	add_func    (0X7100034758,0X710003475C);
	set_func_flags(0X7100034758,0x14c0);
	SetType(0X7100034758, "_BYTE *__fastcall nn__os__FinalizeMutex(_BYTE *result);");
	add_func    (0X710003475C,0X710003476C);
	set_func_flags(0X710003475C,0x1400);
	add_func    (0X710003476C,0X7100034770);
	set_func_flags(0X710003476C,0x1440);
	add_func    (0X7100034770,0X7100034788);
	set_func_flags(0X7100034770,0x1400);
	add_func    (0X7100034790,0X71000347F8);
	set_func_flags(0X7100034790,0x1410);
	SetType(0X7100034790, "__int64 GetService_bgtc_();");
	set_frame_size(0X7100034790, 0X20, 16, 0);
	add_func    (0X7100034800,0X710003480C);
	set_func_flags(0X7100034800,0x1400);
	SetType(0X7100034800, "__int64 sub_7100034800(void);");
	add_func    (0X7100034810,0X71000348B8);
	set_func_flags(0X7100034810,0x1410);
	set_frame_size(0X7100034810, 0X20, 16, 0);
	add_func    (0X71000348B8,0X71000348BC);
	set_func_flags(0X71000348B8,0x14c0);
	SetType(0X71000348B8, "__int64 __fastcall j_getService_bgtc(_QWORD);");
	add_func    (0X71000348BC,0X71000348C0);
	set_func_flags(0X71000348BC,0x1480);
	SetType(0X71000348BC, "__int64 __fastcall sub_71000348BC(__int64);");
	add_func    (0X71000348C0,0X71000348C4);
	set_func_flags(0X71000348C0,0x1480);
	SetType(0X71000348C0, "__int64 __fastcall sub_71000348C0(_QWORD);");
	add_func    (0X71000348C4,0X71000348C8);
	set_func_flags(0X71000348C4,0x1480);
	SetType(0X71000348C4, "__int64 __fastcall sub_71000348C4(__int64);");
	add_func    (0X71000348C8,0X71000348CC);
	set_func_flags(0X71000348C8,0x1480);
	SetType(0X71000348C8, "__int64 __fastcall sub_71000348C8(_QWORD);");
	add_func    (0X71000348CC,0X71000348D0);
	set_func_flags(0X71000348CC,0x1480);
	SetType(0X71000348CC, "__int64 __fastcall sub_71000348CC(_QWORD);");
	add_func    (0X71000348D0,0X71000348F8);
	set_func_flags(0X71000348D0,0x1400);
	SetType(0X71000348D0, "__int64 __fastcall sub_71000348D0(_QWORD);");
	add_func    (0X71000348F8,0X71000349D4);
	set_func_flags(0X71000348F8,0x1410);
	set_frame_size(0X71000348F8, 0X20, 0, 0);
	add_func    (0X71000349D4,0X7100034B48);
	set_func_flags(0X71000349D4,0x1410);
	SetType(0X71000349D4, "__int64 __fastcall GetService_bgtc(__int64);");
	set_frame_size(0X71000349D4, 0X10, 48, 0);
	add_func    (0X7100034B48,0X7100034B58);
	set_func_flags(0X7100034B48,0x1400);
	SetType(0X7100034B48, "__int64 __fastcall sub_7100034B48(__int64);");
	add_func    (0X7100034B58,0X7100034B90);
	set_func_flags(0X7100034B58,0x1410);
	set_frame_size(0X7100034B58, 0X10, 16, 0);
	add_func    (0X7100034B90,0X7100034BD0);
	set_func_flags(0X7100034B90,0x1410);
	set_frame_size(0X7100034B90, 0X10, 16, 0);
	add_func    (0X7100034BD0,0X7100034C08);
	set_func_flags(0X7100034BD0,0x1410);
	SetType(0X7100034BD0, "__int64 __fastcall sub_7100034BD0(__int64);");
	set_frame_size(0X7100034BD0, 0X10, 16, 0);
	add_func    (0X7100034C08,0X7100034C18);
	set_func_flags(0X7100034C08,0x1400);
	add_func    (0X7100034C18,0X7100034CC4);
	set_func_flags(0X7100034C18,0x1410);
	set_frame_size(0X7100034C18, 0X10, 32, 0);
	define_local_var(0X7100034C18, 0X7100034CC4, "[bp-0X8]", "result");
	add_func    (0X7100034CC4,0X7100034D8C);
	set_func_flags(0X7100034CC4,0x1410);
	SetType(0X7100034CC4, "__int64 __fastcall sub_7100034CC4(_QWORD, _QWORD, _QWORD, _QWORD);");
	set_frame_size(0X7100034CC4, 0X20, 48, 0);
	add_func    (0X7100034D8C,0X71000350E0);
	set_func_flags(0X7100034D8C,0x1410);
	set_frame_size(0X7100034D8C, 0X10, 96, 0);
	add_func    (0X71000350E0,0X71000351E8);
	set_func_flags(0X71000350E0,0x1410);
	set_frame_size(0X71000350E0, 0X10, 64, 0);
	add_func    (0X71000351E8,0X71000351F0);
	set_func_flags(0X71000351E8,0x1400);
	add_func    (0X71000351F0,0X7100035248);
	set_func_flags(0X71000351F0,0x1410);
	set_frame_size(0X71000351F0, 0, 32, 0);
	add_func    (0X7100035248,0X7100035250);
	set_func_flags(0X7100035248,0x1400);
	add_func    (0X7100035250,0X71000352E4);
	set_func_flags(0X7100035250,0x1410);
	set_frame_size(0X7100035250, 0X20, 32, 0);
	add_func    (0X71000352E4,0X71000352EC);
	set_func_flags(0X71000352E4,0x1400);
	add_func    (0X71000352EC,0X71000352F4);
	set_func_flags(0X71000352EC,0x1400);
	add_func    (0X71000352F4,0X71000353A0);
	set_func_flags(0X71000352F4,0x1410);
	set_frame_size(0X71000352F4, 0X20, 16, 0);
	add_func    (0X71000353A0,0X71000353A8);
	set_func_flags(0X71000353A0,0x1400);
	add_func    (0X71000353A8,0X7100035400);
	set_func_flags(0X71000353A8,0x1410);
	set_frame_size(0X71000353A8, 0, 32, 0);
	add_func    (0X7100035400,0X7100035408);
	set_func_flags(0X7100035400,0x1400);
	add_func    (0X7100035408,0X7100035414);
	set_func_flags(0X7100035408,0x1400);
	add_func    (0X7100035414,0X7100035420);
	set_func_flags(0X7100035414,0x1400);
	add_func    (0X7100035420,0X710003542C);
	set_func_flags(0X7100035420,0x1400);
	add_func    (0X710003542C,0X7100035438);
	set_func_flags(0X710003542C,0x1400);
	add_func    (0X7100035438,0X710003544C);
	set_func_flags(0X7100035438,0x1400);
	add_func    (0X710003544C,0X7100035458);
	set_func_flags(0X710003544C,0x1400);
	add_func    (0X7100035458,0X7100035468);
	set_func_flags(0X7100035458,0x1400);
	add_func    (0X7100035468,0X7100035474);
	set_func_flags(0X7100035468,0x1400);
	add_func    (0X7100035474,0X7100035480);
	set_func_flags(0X7100035474,0x1400);
	add_func    (0X7100035480,0X710003548C);
	set_func_flags(0X7100035480,0x1400);
	add_func    (0X710003548C,0X71000354A0);
	set_func_flags(0X710003548C,0x1400);
	add_func    (0X71000354A0,0X71000354B0);
	set_func_flags(0X71000354A0,0x1400);
	add_func    (0X71000354B0,0X71000354BC);
	set_func_flags(0X71000354B0,0x1400);
	add_func    (0X71000354BC,0X71000354C8);
	set_func_flags(0X71000354BC,0x1400);
	add_func    (0X71000354C8,0X71000354D4);
	set_func_flags(0X71000354C8,0x1400);
	add_func    (0X71000354D4,0X71000354E4);
	set_func_flags(0X71000354D4,0x1400);
	add_func    (0X71000354E4,0X71000354EC);
	set_func_flags(0X71000354E4,0x1400);
	add_func    (0X71000354EC,0X71000354F4);
	set_func_flags(0X71000354EC,0x1400);
	add_func    (0X71000354F4,0X71000356D4);
	set_func_flags(0X71000354F4,0x1410);
	set_frame_size(0X71000354F4, 0X90, 80, 0);
	add_func    (0X71000356D4,0X7100035804);
	set_func_flags(0X71000356D4,0x1410);
	set_frame_size(0X71000356D4, 0X90, 48, 0);
	add_func    (0X7100035804,0X710003580C);
	set_func_flags(0X7100035804,0x1400);
	add_func    (0X710003580C,0X71000358C0);
	set_func_flags(0X710003580C,0x1410);
	set_frame_size(0X710003580C, 0X20, 16, 0);
	add_func    (0X71000358C0,0X71000358C4);
	set_func_flags(0X71000358C0,0x1440);
	add_func    (0X71000358C4,0X71000358C8);
	set_func_flags(0X71000358C4,0x1440);
	add_func    (0X71000358C8,0X71000358EC);
	set_func_flags(0X71000358C8,0x1400);
	add_func    (0X71000358F0,0X7100035940);
	set_func_flags(0X71000358F0,0x1410);
	SetType(0X71000358F0, "void sub_71000358F0();");
	set_frame_size(0X71000358F0, 0X10, 16, 0);
	add_func    (0X7100035940,0X7100035990);
	set_func_flags(0X7100035940,0x1410);
	set_frame_size(0X7100035940, 0X20, 0, 0);
	add_func    (0X7100035990,0X7100035994);
	set_func_flags(0X7100035990,0x14c0);
	SetType(0X7100035990, "__int64 __fastcall j_delete_3(__int64 result);");
	add_func    (0X7100035994,0X71000359A0);
	set_func_flags(0X7100035994,0x1400);
	SetType(0X7100035994, "bool sub_7100035994();");
	add_func    (0X71000359A0,0X7100035A44);
	set_func_flags(0X71000359A0,0x1410);
	set_frame_size(0X71000359A0, 0X20, 16, 0);
	add_func    (0X7100035A44,0X7100035B18);
	set_func_flags(0X7100035A44,0x1410);
	SetType(0X7100035A44, "__int64 __fastcall sub_7100035A44(__int64);");
	set_frame_size(0X7100035A44, 0X20, 32, 0);
	add_func    (0X7100035B18,0X7100035B88);
	set_func_flags(0X7100035B18,0x1410);
	set_frame_size(0X7100035B18, 0X20, 0, 0);
	add_func    (0X7100035B88,0X7100035B90);
	set_func_flags(0X7100035B88,0x1400);
	add_func    (0X7100035B90,0X7100035BB4);
	set_func_flags(0X7100035B90,0x1410);
	set_frame_size(0X7100035B90, 0X20, 0, 0);
	add_func    (0X7100035BB4,0X7100035BDC);
	set_func_flags(0X7100035BB4,0x1410);
	set_frame_size(0X7100035BB4, 0X20, 0, 0);
	add_func    (0X7100035BDC,0X7100035CC8);
	set_func_flags(0X7100035BDC,0x1410);
	SetType(0X7100035BDC, "__int64 __fastcall sub_7100035BDC(__int64);");
	set_frame_size(0X7100035BDC, 0X10, 48, 0);
	add_func    (0X7100035CC8,0X7100035D18);
	set_func_flags(0X7100035CC8,0x1410);
	set_frame_size(0X7100035CC8, 0, 32, 0);
	add_func    (0X7100035D18,0X7100035D6C);
	set_func_flags(0X7100035D18,0x1410);
	set_frame_size(0X7100035D18, 0, 32, 0);
	add_func    (0X7100035D6C,0X7100035F48);
	set_func_flags(0X7100035D6C,0x1410);
	SetType(0X7100035D6C, "__int64 __fastcall sub_7100035D6C(__int64, unsigned int);");
	set_frame_size(0X7100035D6C, 0X20, 32, 0);
	add_func    (0X7100035F48,0X7100036318);
	set_func_flags(0X7100035F48,0x1410);
	SetType(0X7100035F48, "__int64 __fastcall sub_7100035F48(__int64 result, __int64, int);");
	set_frame_size(0X7100035F48, 0X70, 96, 0);
	add_func    (0X7100036320,0X71000365B4);
	set_func_flags(0X7100036320,0x1410);
	SetType(0X7100036320, "_BYTE *__fastcall sub_7100036320(__int64);");
	set_frame_size(0X7100036320, 0XF0, 96, 0);
	add_func    (0X71000365B4,0X71000365BC);
	set_func_flags(0X71000365B4,0x1400);
	add_func    (0X71000365BC,0X71000365F4);
	set_func_flags(0X71000365BC,0x1410);
	SetType(0X71000365BC, "unsigned int *__fastcall sub_71000365BC(__int64);");
	set_frame_size(0X71000365BC, 0X20, 0, 0);
	add_func    (0X71000365F4,0X710003662C);
	set_func_flags(0X71000365F4,0x1410);
	set_frame_size(0X71000365F4, 0X20, 0, 0);
	add_func    (0X710003662C,0X7100036638);
	set_func_flags(0X710003662C,0x1400);
	add_func    (0X7100036638,0X7100036644);
	set_func_flags(0X7100036638,0x1400);
	SetType(0X7100036638, "__int64 __fastcall sub_7100036638(__int64);");
	add_func    (0X7100036644,0X7100036688);
	set_func_flags(0X7100036644,0x1400);
	SetType(0X7100036644, "__int64 __fastcall sub_7100036644(_QWORD);");
	add_func    (0X7100036688,0X71000366A8);
	set_func_flags(0X7100036688,0x1400);
	SetType(0X7100036688, "bool __fastcall sub_7100036688(__int64);");
	add_func    (0X71000366A8,0X71000366B8);
	set_func_flags(0X71000366A8,0x1400);
	add_func    (0X71000366B8,0X71000366C4);
	set_func_flags(0X71000366B8,0x1400);
	SetType(0X71000366B8, "__int64 __fastcall sub_71000366B8(_QWORD);");
	add_func    (0X71000366C4,0X71000366D4);
	set_func_flags(0X71000366C4,0x1400);
	add_func    (0X71000366D4,0X7100036744);
	set_func_flags(0X71000366D4,0x1410);
	SetType(0X71000366D4, "void sub_71000366D4(__int64, __int64, ...);");
	set_frame_size(0X71000366D4, 0XF0, 16, 0);
	add_func    (0X7100036744,0X7100036750);
	set_func_flags(0X7100036744,0x1400);
	SetType(0X7100036744, "__int64 __fastcall sub_7100036744(__int64);");
	add_func    (0X7100036750,0X710003675C);
	set_func_flags(0X7100036750,0x1400);
	SetType(0X7100036750, "__int64 __fastcall sub_7100036750(__int64);");
	add_func    (0X7100036760,0X7100036880);
	set_func_flags(0X7100036760,0x1410);
	SetType(0X7100036760, "__int64 *__fastcall sub_7100036760(__int64 (__fastcall **)(__int64), __int64, __int64, __int64 *, __int64 *, __int64 *);");
	set_frame_size(0X7100036760, 0XE0, 64, 0);
	add_func    (0X7100036880,0X7100036924);
	set_func_flags(0X7100036880,0x1410);
	SetType(0X7100036880, "__int64 __fastcall sub_7100036880(__int64 *, __int64);");
	set_frame_size(0X7100036880, 0X20, 16, 0);
	add_func    (0X7100036924,0X7100036964);
	set_func_flags(0X7100036924,0x1410);
	set_frame_size(0X7100036924, 0X20, 0, 0);
	add_func    (0X7100036964,0X7100036C40);
	set_func_flags(0X7100036964,0x1410);
	SetType(0X7100036964, "__int64 __fastcall sub_7100036964(_QWORD, _QWORD);");
	set_frame_size(0X7100036964, 0X20, 16, 0);
	add_func    (0X7100036C40,0X7100036C48);
	set_func_flags(0X7100036C40,0x1400);
	SetType(0X7100036C40, "__int64 __fastcall sub_7100036C40(_QWORD);");
	add_func    (0X7100036C48,0X7100036C50);
	set_func_flags(0X7100036C48,0x1400);
	SetType(0X7100036C48, "__int64 __fastcall sub_7100036C48(_QWORD, _QWORD);");
	add_func    (0X7100036C50,0X7100036C58);
	set_func_flags(0X7100036C50,0x1400);
	add_func    (0X7100036C58,0X7100036C94);
	set_func_flags(0X7100036C58,0x1410);
	set_frame_size(0X7100036C58, 0X20, 0, 0);
	add_func    (0X7100036C94,0X7100036C9C);
	set_func_flags(0X7100036C94,0x1400);
	add_func    (0X7100036C9C,0X7100036CA4);
	set_func_flags(0X7100036C9C,0x1400);
	add_func    (0X7100036CA4,0X7100036CAC);
	set_func_flags(0X7100036CA4,0x1400);
	SetType(0X7100036CA4, "__int64 __fastcall sub_7100036CA4(_QWORD, _QWORD);");
	add_func    (0X7100036CAC,0X7100036D00);
	set_func_flags(0X7100036CAC,0x1410);
	set_frame_size(0X7100036CAC, 0X20, 16, 0);
	add_func    (0X7100036D00,0X7100036D28);
	set_func_flags(0X7100036D00,0x1410);
	set_frame_size(0X7100036D00, 0X20, 0, 0);
	add_func    (0X7100036D28,0X7100036D7C);
	set_func_flags(0X7100036D28,0x1410);
	set_frame_size(0X7100036D28, 0X20, 16, 0);
	add_func    (0X7100036D7C,0X7100036DD8);
	set_func_flags(0X7100036D7C,0x1410);
	SetType(0X7100036D7C, "__int64 __fastcall sub_7100036D7C(_QWORD, _QWORD);");
	set_frame_size(0X7100036D7C, 0X20, 16, 0);
	add_func    (0X7100036DD8,0X7100036EBC);
	set_func_flags(0X7100036DD8,0x1410);
	set_frame_size(0X7100036DD8, 0X20, 32, 0);
	add_func    (0X7100036EBC,0X7100037190);
	set_func_flags(0X7100036EBC,0x1400);
	SetType(0X7100036EBC, "__int64 __fastcall sub_7100036EBC(_QWORD);");
	add_func    (0X7100037190,0X7100037274);
	set_func_flags(0X7100037190,0x1410);
	SetType(0X7100037190, "__int64 __fastcall sub_7100037190(__int64, __int64, unsigned int);");
	set_frame_size(0X7100037190, 0X20, 32, 0);
	add_func    (0X7100037274,0X7100037360);
	set_func_flags(0X7100037274,0x1410);
	SetType(0X7100037274, "__int64 __fastcall sub_7100037274(__int64, __int64, unsigned int, unsigned int);");
	set_frame_size(0X7100037274, 0, 64, 0);
	add_func    (0X7100037360,0X710003741C);
	set_func_flags(0X7100037360,0x1410);
	set_frame_size(0X7100037360, 0X20, 32, 0);
	add_func    (0X710003741C,0X71000374C0);
	set_func_flags(0X710003741C,0x1410);
	SetType(0X710003741C, "__int64 __fastcall sub_710003741C(_QWORD, _QWORD, _QWORD);");
	set_frame_size(0X710003741C, 0X20, 16, 0);
	add_func    (0X71000374C0,0X71000374EC);
	set_func_flags(0X71000374C0,0x1410);
	set_frame_size(0X71000374C0, 0X20, 0, 0);
	add_func    (0X71000374EC,0X71000374FC);
	set_func_flags(0X71000374EC,0x1400);
	add_func    (0X71000374FC,0X710003755C);
	set_func_flags(0X71000374FC,0x1410);
	set_frame_size(0X71000374FC, 0, 48, 0);
	add_func    (0X7100037560,0X7100037648);
	set_func_flags(0X7100037560,0x1410);
	SetType(0X7100037560, "__int64 __fastcall sub_7100037560(_QWORD, _QWORD, _QWORD);");
	set_frame_size(0X7100037560, 0, 48, 0);
	add_func    (0X7100037650,0X71000376A4);
	set_func_flags(0X7100037650,0x1410);
	SetType(0X7100037650, "__int64 __fastcall sub_7100037650(_QWORD);");
	set_frame_size(0X7100037650, 0, 32, 0);
	add_func    (0X71000376B0,0X7100037700);
	set_func_flags(0X71000376B0,0x1410);
	SetType(0X71000376B0, "__int64 __fastcall sub_71000376B0(_QWORD);");
	set_frame_size(0X71000376B0, 0, 32, 0);
	add_func    (0X7100037700,0X71000378D4);
	set_func_flags(0X7100037700,0x1410);
	SetType(0X7100037700, "__int64 __fastcall sub_7100037700(__int64);");
	set_frame_size(0X7100037700, 0X10, 64, 0);
	add_func    (0X71000378E0,0X7100037B60);
	set_func_flags(0X71000378E0,0x1410);
	SetType(0X71000378E0, "__int64 __fastcall sub_71000378E0(__int64, char);");
	set_frame_size(0X71000378E0, 0X10, 96, 0);
	add_func    (0X7100037B60,0X7100037BD4);
	set_func_flags(0X7100037B60,0x1410);
	SetType(0X7100037B60, "__int64 __fastcall sub_7100037B60(_QWORD, _QWORD);");
	set_frame_size(0X7100037B60, 0, 32, 0);
	add_func    (0X7100037BD4,0X7100037C10);
	set_func_flags(0X7100037BD4,0x1410);
	SetType(0X7100037BD4, "__int64 __fastcall sub_7100037BD4(__int64 result, char);");
	set_frame_size(0X7100037BD4, 0, 32, 0);
	add_func    (0X7100037C10,0X7100037D18);
	set_func_flags(0X7100037C10,0x1410);
	SetType(0X7100037C10, "__int64 __fastcall sub_7100037C10(_QWORD);");
	set_frame_size(0X7100037C10, 0, 96, 0);
	add_func    (0X7100037D18,0X7100037D30);
	set_func_flags(0X7100037D18,0x1400);
	add_func    (0X7100037D30,0X7100037DA0);
	set_func_flags(0X7100037D30,0x1410);
	SetType(0X7100037D30, "__int64 __fastcall sub_7100037D30(__int64);");
	set_frame_size(0X7100037D30, 0X20, 16, 0);
	add_func    (0X7100037DA0,0X7100037DF4);
	set_func_flags(0X7100037DA0,0x1410);
	SetType(0X7100037DA0, "__int64 __fastcall sub_7100037DA0(_QWORD);");
	set_frame_size(0X7100037DA0, 0X10, 16, 0);
	add_func    (0X7100037DF4,0X7100037E48);
	set_func_flags(0X7100037DF4,0x1410);
	SetType(0X7100037DF4, "__int64 __fastcall sub_7100037DF4(_QWORD);");
	set_frame_size(0X7100037DF4, 0X10, 16, 0);
	add_func    (0X7100037E48,0X7100037FE8);
	set_func_flags(0X7100037E48,0x1410);
	SetType(0X7100037E48, "__int64 __fastcall sub_7100037E48(__int64, __int64, int, int, __int64, char);");
	set_frame_size(0X7100037E48, 0X20, 48, 0);
	add_func    (0X7100037FE8,0X710003800C);
	set_func_flags(0X7100037FE8,0x1410);
	SetType(0X7100037FE8, "__int64 __fastcall sub_7100037FE8(_QWORD);");
	set_frame_size(0X7100037FE8, 0X20, 0, 0);
	add_func    (0X710003800C,0X7100038030);
	set_func_flags(0X710003800C,0x1410);
	SetType(0X710003800C, "__int64 __fastcall sub_710003800C(_QWORD);");
	set_frame_size(0X710003800C, 0X20, 0, 0);
	add_func    (0X7100038030,0X7100038050);
	set_func_flags(0X7100038030,0x1400);
	add_func    (0X7100038050,0X7100038058);
	set_func_flags(0X7100038050,0x1400);
	add_func    (0X7100038058,0X710003808C);
	set_func_flags(0X7100038058,0x1410);
	set_frame_size(0X7100038058, 0, 16, 0);
	add_func    (0X710003808C,0X71000382BC);
	set_func_flags(0X710003808C,0x1410);
	SetType(0X710003808C, "__int64 __fastcall sub_710003808C(__int64, char);");
	set_frame_size(0X710003808C, 0X10, 32, 0);
	add_func    (0X71000382BC,0X71000382C4);
	set_func_flags(0X71000382BC,0x1400);
	SetType(0X71000382BC, "__int64 __fastcall sub_71000382BC(_QWORD);");
	add_func    (0X71000382C4,0X7100038354);
	set_func_flags(0X71000382C4,0x1410);
	SetType(0X71000382C4, "__int64 __fastcall sub_71000382C4(_QWORD, _QWORD);");
	set_frame_size(0X71000382C4, 0X10, 32, 0);
	add_func    (0X7100038354,0X710003839C);
	set_func_flags(0X7100038354,0x1410);
	set_frame_size(0X7100038354, 0X20, 0, 0);
	add_func    (0X71000383A0,0X7100038434);
	set_func_flags(0X71000383A0,0x1410);
	set_frame_size(0X71000383A0, 0, 32, 0);
	add_func    (0X7100038434,0X7100038458);
	set_func_flags(0X7100038434,0x1410);
	set_frame_size(0X7100038434, 0X20, 0, 0);
	add_func    (0X7100038458,0X71000384F4);
	set_func_flags(0X7100038458,0x1410);
	SetType(0X7100038458, "void __fastcall sub_7100038458(Unk4440 *);");
	set_frame_size(0X7100038458, 0X10, 32, 0);
	add_func    (0X71000384F4,0X71000384F8);
	set_func_flags(0X71000384F4,0x1480);
	add_func    (0X71000384F8,0X7100038720);
	set_func_flags(0X71000384F8,0x1410);
	set_frame_size(0X71000384F8, 0X10, 48, 0);
	add_func    (0X7100038720,0X71000387C0);
	set_func_flags(0X7100038720,0x1410);
	set_frame_size(0X7100038720, 0, 32, 0);
	add_func    (0X71000387C0,0X7100038818);
	set_func_flags(0X71000387C0,0x1410);
	set_frame_size(0X71000387C0, 0X20, 16, 0);
	add_func    (0X7100038818,0X7100038844);
	set_func_flags(0X7100038818,0x1400);
	add_func    (0X7100038844,0X7100038848);
	set_func_flags(0X7100038844,0x1440);
	add_func    (0X7100038848,0X710003886C);
	set_func_flags(0X7100038848,0x1410);
	set_frame_size(0X7100038848, 0, 16, 0);
	add_func    (0X710003886C,0X71000388F4);
	set_func_flags(0X710003886C,0x1410);
	set_frame_size(0X710003886C, 0, 32, 0);
	add_func    (0X71000388F4,0X7100038918);
	set_func_flags(0X71000388F4,0x1400);
	add_func    (0X7100038918,0X710003891C);
	set_func_flags(0X7100038918,0x1440);
	add_func    (0X710003891C,0X7100038BFC);
	set_func_flags(0X710003891C,0x1410);
	set_frame_size(0X710003891C, 0X20, 16, 0);
	add_func    (0X7100038BFC,0X7100038C58);
	set_func_flags(0X7100038BFC,0x1410);
	set_frame_size(0X7100038BFC, 0X20, 16, 0);
	add_func    (0X7100038C58,0X7100038C64);
	set_func_flags(0X7100038C58,0x1400);
	add_func    (0X7100038C64,0X7100038C68);
	set_func_flags(0X7100038C64,0x1440);
	add_func    (0X7100038C68,0X7100038C70);
	set_func_flags(0X7100038C68,0x1400);
	add_func    (0X7100038C70,0X7100038CCC);
	set_func_flags(0X7100038C70,0x1410);
	set_frame_size(0X7100038C70, 0X20, 16, 0);
	add_func    (0X7100038CCC,0X7100038CD8);
	set_func_flags(0X7100038CCC,0x1400);
	add_func    (0X7100038CD8,0X71000393A8);
	set_func_flags(0X7100038CD8,0x1410);
	set_frame_size(0X7100038CD8, 0, 48, 0);
	add_func    (0X71000393A8,0X71000393B0);
	set_func_flags(0X71000393A8,0x1400);
	add_func    (0X71000393B0,0X7100039414);
	set_func_flags(0X71000393B0,0x1410);
	set_frame_size(0X71000393B0, 0X20, 16, 0);
	add_func    (0X7100039414,0X7100039440);
	set_func_flags(0X7100039414,0x1410);
	set_frame_size(0X7100039414, 0X10, 16, 0);
	add_func    (0X7100039440,0X7100039444);
	set_func_flags(0X7100039440,0x1440);
	add_func    (0X7100039444,0X710003955C);
	set_func_flags(0X7100039444,0x1410);
	set_frame_size(0X7100039444, 0X30, 0, 0);
	add_func    (0X710003955C,0X7100039730);
	set_func_flags(0X710003955C,0x1410);
	set_frame_size(0X710003955C, 0XE0, 32, 0);
	add_func    (0X7100039730,0X7100039838);
	set_func_flags(0X7100039730,0x1410);
	set_frame_size(0X7100039730, 0X30, 0, 0);
	add_func    (0X7100039838,0X7100039DF8);
	set_func_flags(0X7100039838,0x1410);
	set_frame_size(0X7100039838, 0XC0, 32, 0);
	add_func    (0X7100039DF8,0X7100039F9C);
	set_func_flags(0X7100039DF8,0x1410);
	set_frame_size(0X7100039DF8, 0XC0, 32, 0);
	define_local_var(0X7100039DF8, 0X7100039F9C, "[bp-0X8]", "result");
	add_func    (0X7100039F9C,0X710003A100);
	set_func_flags(0X7100039F9C,0x1410);
	set_frame_size(0X7100039F9C, 0XC0, 32, 0);
	add_func    (0X710003A100,0X710003A290);
	set_func_flags(0X710003A100,0x1410);
	set_frame_size(0X710003A100, 0XD0, 32, 0);
	add_func    (0X710003A290,0X710003A3F4);
	set_func_flags(0X710003A290,0x1410);
	set_frame_size(0X710003A290, 0XC0, 32, 0);
	add_func    (0X710003A3F4,0X710003A55C);
	set_func_flags(0X710003A3F4,0x1410);
	set_frame_size(0X710003A3F4, 0XC0, 32, 0);
	add_func    (0X710003A55C,0X710003A700);
	set_func_flags(0X710003A55C,0x1410);
	set_frame_size(0X710003A55C, 0XC0, 32, 0);
	define_local_var(0X710003A55C, 0X710003A700, "[bp-0X8]", "result");
	add_func    (0X710003A700,0X710003A850);
	set_func_flags(0X710003A700,0x1410);
	set_frame_size(0X710003A700, 0XC0, 32, 0);
	add_func    (0X710003A850,0X710003A9B8);
	set_func_flags(0X710003A850,0x1410);
	set_frame_size(0X710003A850, 0XC0, 32, 0);
	add_func    (0X710003A9B8,0X710003AB1C);
	set_func_flags(0X710003A9B8,0x1410);
	set_frame_size(0X710003A9B8, 0XC0, 32, 0);
	add_func    (0X710003AB1C,0X710003AC80);
	set_func_flags(0X710003AB1C,0x1410);
	set_frame_size(0X710003AB1C, 0XC0, 32, 0);
	add_func    (0X710003AC80,0X710003ADD4);
	set_func_flags(0X710003AC80,0x1410);
	set_frame_size(0X710003AC80, 0XC0, 32, 0);
	add_func    (0X710003ADD4,0X710003ADDC);
	set_func_flags(0X710003ADD4,0x1400);
	add_func    (0X710003ADDC,0X710003AE48);
	set_func_flags(0X710003ADDC,0x1410);
	set_frame_size(0X710003ADDC, 0X20, 16, 0);
	add_func    (0X710003AE48,0X710003AE50);
	set_func_flags(0X710003AE48,0x1400);
	add_func    (0X710003AE50,0X710003AE58);
	set_func_flags(0X710003AE50,0x1400);
	add_func    (0X710003AE58,0X710003AE60);
	set_func_flags(0X710003AE58,0x1400);
	SetType(0X710003AE58, "__int64 __fastcall sub_710003AE58(__int64, char);");
	add_func    (0X710003AE60,0X710003AE68);
	set_func_flags(0X710003AE60,0x1400);
	add_func    (0X710003AE68,0X710003AE70);
	set_func_flags(0X710003AE68,0x1400);
	add_func    (0X710003AE70,0X710003AE74);
	set_func_flags(0X710003AE70,0x1440);
	add_func    (0X710003AE74,0X710003AF7C);
	set_func_flags(0X710003AE74,0x1410);
	set_frame_size(0X710003AE74, 0X30, 0, 0);
	add_func    (0X710003AF7C,0X710003B188);
	set_func_flags(0X710003AF7C,0x1410);
	set_frame_size(0X710003AF7C, 0XC0, 32, 0);
	add_func    (0X710003B188,0X710003B2F0);
	set_func_flags(0X710003B188,0x1410);
	set_frame_size(0X710003B188, 0XC0, 32, 0);
	add_func    (0X710003B2F0,0X710003B494);
	set_func_flags(0X710003B2F0,0x1410);
	set_frame_size(0X710003B2F0, 0XC0, 32, 0);
	define_local_var(0X710003B2F0, 0X710003B494, "[bp-0X8]", "result");
	add_func    (0X710003B494,0X710003B5E8);
	set_func_flags(0X710003B494,0x1410);
	set_frame_size(0X710003B494, 0XC0, 32, 0);
	add_func    (0X710003B5E8,0X710003B73C);
	set_func_flags(0X710003B5E8,0x1410);
	set_frame_size(0X710003B5E8, 0XC0, 32, 0);
	add_func    (0X710003B740,0X710003B76C);
	set_func_flags(0X710003B740,0x1410);
	SetType(0X710003B740, "__int64 sub_710003B740();");
	set_frame_size(0X710003B740, 0X20, 16, 0);
	add_func    (0X710003B76C,0X710003B770);
	set_func_flags(0X710003B76C,0x14c0);
	SetType(0X710003B76C, "__int64 __fastcall j_j_TimeAL__CreateAlarm(__int64);");
	add_func    (0X710003B770,0X710003B774);
	set_func_flags(0X710003B770,0x1480);
	add_func    (0X710003B774,0X710003B7B0);
	set_func_flags(0X710003B774,0x1410);
	SetType(0X710003B774, "__int64 __fastcall sub_710003B774(_QWORD);");
	set_frame_size(0X710003B774, 0X20, 0, 0);
	add_func    (0X710003B7B0,0X710003B7B8);
	set_func_flags(0X710003B7B0,0x1400);
	SetType(0X710003B7B0, "__int64 __fastcall sub_710003B7B0(_QWORD);");
	add_func    (0X710003B7B8,0X710003B7C4);
	set_func_flags(0X710003B7B8,0x1400);
	add_func    (0X710003B7C4,0X710003B814);
	set_func_flags(0X710003B7C4,0x1410);
	SetType(0X710003B7C4, "__int64 __fastcall sub_710003B7C4(_QWORD, _QWORD);");
	set_frame_size(0X710003B7C4, 0X10, 16, 0);
	add_func    (0X710003B814,0X710003B86C);
	set_func_flags(0X710003B814,0x1410);
	SetType(0X710003B814, "__int64 __fastcall sub_710003B814(_QWORD *);");
	set_frame_size(0X710003B814, 0X20, 0, 0);
	add_func    (0X710003B86C,0X710003B8BC);
	set_func_flags(0X710003B86C,0x1410);
	set_frame_size(0X710003B86C, 0X20, 0, 0);
	add_func    (0X710003B8BC,0X710003B8DC);
	set_func_flags(0X710003B8BC,0x1400);
	add_func    (0X710003B8DC,0X710003B920);
	set_func_flags(0X710003B8DC,0x1410);
	set_frame_size(0X710003B8DC, 0X20, 0, 0);
	add_func    (0X710003B920,0X710003B960);
	set_func_flags(0X710003B920,0x1410);
	SetType(0X710003B920, "__int64 __fastcall sub_710003B920(__int64, char);");
	set_frame_size(0X710003B920, 0X20, 0, 0);
	add_func    (0X710003B960,0X710003B98C);
	set_func_flags(0X710003B960,0x1410);
	SetType(0X710003B960, "__int64 sub_710003B960();");
	set_frame_size(0X710003B960, 0, 16, 0);
	add_func    (0X710003B98C,0X710003B9B8);
	set_func_flags(0X710003B98C,0x1410);
	set_frame_size(0X710003B98C, 0, 16, 0);
	add_func    (0X710003B9B8,0X710003BA70);
	set_func_flags(0X710003B9B8,0x1410);
	set_frame_size(0X710003B9B8, 0, 32, 0);
	add_func    (0X710003BA70,0X710003BA78);
	set_func_flags(0X710003BA70,0x1400);
	add_func    (0X710003BA78,0X710003BAC4);
	set_func_flags(0X710003BA78,0x1410);
	set_frame_size(0X710003BA78, 0X20, 0, 0);
	add_func    (0X710003BAC4,0X710003BACC);
	set_func_flags(0X710003BAC4,0x1400);
	add_func    (0X710003BACC,0X710003BAD4);
	set_func_flags(0X710003BACC,0x1400);
	add_func    (0X710003BAD4,0X710003BADC);
	set_func_flags(0X710003BAD4,0x1400);
	add_func    (0X710003BADC,0X710003BAE4);
	set_func_flags(0X710003BADC,0x1400);
	add_func    (0X710003BAE4,0X710003BAEC);
	set_func_flags(0X710003BAE4,0x1400);
	add_func    (0X710003BAEC,0X710003BAF4);
	set_func_flags(0X710003BAEC,0x1400);
	add_func    (0X710003BAF4,0X710003BAFC);
	set_func_flags(0X710003BAF4,0x1400);
	add_func    (0X710003BAFC,0X710003BB04);
	set_func_flags(0X710003BAFC,0x1400);
	add_func    (0X710003BB04,0X710003BB0C);
	set_func_flags(0X710003BB04,0x1400);
	add_func    (0X710003BB0C,0X710003BB14);
	set_func_flags(0X710003BB0C,0x1400);
	add_func    (0X710003BB14,0X710003BB1C);
	set_func_flags(0X710003BB14,0x1400);
	SetType(0X710003BB14, "__int64 __fastcall sub_710003BB14(__int64, unsigned int, unsigned int);");
	add_func    (0X710003BB1C,0X710003BB24);
	set_func_flags(0X710003BB1C,0x1400);
	SetType(0X710003BB1C, "__int64 __fastcall sub_710003BB1C(__int64, unsigned int);");
	add_func    (0X710003BB24,0X710003BB2C);
	set_func_flags(0X710003BB24,0x1400);
	add_func    (0X710003BB2C,0X710003BB34);
	set_func_flags(0X710003BB2C,0x1400);
	add_func    (0X710003BB34,0X710003BB3C);
	set_func_flags(0X710003BB34,0x1400);
	add_func    (0X710003BB3C,0X710003BB44);
	set_func_flags(0X710003BB3C,0x1400);
	add_func    (0X710003BB44,0X710003BBA4);
	set_func_flags(0X710003BB44,0x1410);
	set_frame_size(0X710003BB44, 0, 32, 0);
	add_func    (0X710003BBA4,0X710003BC24);
	set_func_flags(0X710003BBA4,0x1410);
	SetType(0X710003BBA4, "__int64 __fastcall sub_710003BBA4(_BYTE *);");
	set_frame_size(0X710003BBA4, 0, 32, 0);
	add_func    (0X710003BC24,0X710003BC98);
	set_func_flags(0X710003BC24,0x1410);
	set_frame_size(0X710003BC24, 0X20, 16, 0);
	add_func    (0X710003BC98,0X710003BCFC);
	set_func_flags(0X710003BC98,0x1410);
	SetType(0X710003BC98, "__int64 __fastcall sub_710003BC98(__int64);");
	set_frame_size(0X710003BC98, 0, 32, 0);
	add_func    (0X710003BCFC,0X710003BDB4);
	set_func_flags(0X710003BCFC,0x1410);
	set_frame_size(0X710003BCFC, 0X10, 48, 0);
	add_func    (0X710003BDB4,0X710003BDF0);
	set_func_flags(0X710003BDB4,0x1410);
	set_frame_size(0X710003BDB4, 0X20, 0, 0);
	add_func    (0X710003BDF0,0X710003BE2C);
	set_func_flags(0X710003BDF0,0x1410);
	set_frame_size(0X710003BDF0, 0X20, 0, 0);
	add_func    (0X710003BE2C,0X710003BE78);
	set_func_flags(0X710003BE2C,0x1410);
	set_frame_size(0X710003BE2C, 0X20, 0, 0);
	add_func    (0X710003BE78,0X710003BEC0);
	set_func_flags(0X710003BE78,0x1410);
	set_frame_size(0X710003BE78, 0X20, 0, 0);
	add_func    (0X710003BEC0,0X710003BF10);
	set_func_flags(0X710003BEC0,0x1410);
	SetType(0X710003BEC0, "__int64 __fastcall sub_710003BEC0(__int64, unsigned int, unsigned int);");
	set_frame_size(0X710003BEC0, 0X20, 0, 0);
	add_func    (0X710003BF10,0X710003BF80);
	set_func_flags(0X710003BF10,0x1410);
	set_frame_size(0X710003BF10, 0X20, 16, 0);
	add_func    (0X710003BF80,0X710003BFB0);
	set_func_flags(0X710003BF80,0x1410);
	set_frame_size(0X710003BF80, 0, 16, 0);
	add_func    (0X710003BFB0,0X710003C050);
	set_func_flags(0X710003BFB0,0x1410);
	set_frame_size(0X710003BFB0, 0X10, 48, 0);
	add_func    (0X710003C050,0X710003C098);
	set_func_flags(0X710003C050,0x1410);
	SetType(0X710003C050, "__int64 __fastcall sub_710003C050(__int64, unsigned int);");
	set_frame_size(0X710003C050, 0X20, 0, 0);
	add_func    (0X710003C098,0X710003C0D0);
	set_func_flags(0X710003C098,0x1410);
	set_frame_size(0X710003C098, 0X20, 0, 0);
	add_func    (0X710003C0D0,0X710003C110);
	set_func_flags(0X710003C0D0,0x1410);
	set_frame_size(0X710003C0D0, 0X20, 0, 0);
	add_func    (0X710003C110,0X710003C150);
	set_func_flags(0X710003C110,0x1410);
	set_frame_size(0X710003C110, 0X20, 0, 0);
	add_func    (0X710003C150,0X710003C180);
	set_func_flags(0X710003C150,0x1410);
	SetType(0X710003C150, "__int64 __fastcall sub_710003C150(unsigned int);");
	set_frame_size(0X710003C150, 0, 16, 0);
	add_func    (0X710003C180,0X710003C29C);
	set_func_flags(0X710003C180,0x1410);
	SetType(0X710003C180, "__int64 __fastcall sub_710003C180(_QWORD);");
	set_frame_size(0X710003C180, 0X60, 32, 0);
	add_func    (0X710003C29C,0X710003C4A8);
	set_func_flags(0X710003C29C,0x1410);
	SetType(0X710003C29C, "__int64 __fastcall sub_710003C29C(__int64);");
	set_frame_size(0X710003C29C, 0X70, 48, 0);
	add_func    (0X710003C4A8,0X710003C560);
	set_func_flags(0X710003C4A8,0x1410);
	SetType(0X710003C4A8, "__int64 __fastcall sub_710003C4A8(_QWORD, _QWORD);");
	set_frame_size(0X710003C4A8, 0X10, 32, 0);
	add_func    (0X710003C560,0X710003C590);
	set_func_flags(0X710003C560,0x1400);
	SetType(0X710003C560, "__int64 __fastcall sub_710003C560(_QWORD, _QWORD, _QWORD);");
	add_func    (0X710003C590,0X710003C80C);
	set_func_flags(0X710003C590,0x1410);
	set_frame_size(0X710003C590, 0X70, 32, 0);
	add_func    (0X710003C80C,0X710003C82C);
	set_func_flags(0X710003C80C,0x1400);
	SetType(0X710003C80C, "__int64 __fastcall sub_710003C80C(_QWORD, _QWORD, _QWORD);");
	add_func    (0X710003C82C,0X710003C8D8);
	set_func_flags(0X710003C82C,0x1410);
	SetType(0X710003C82C, "__int64 __fastcall sub_710003C82C(_QWORD, _QWORD, _QWORD);");
	set_frame_size(0X710003C82C, 0X20, 16, 0);
	add_func    (0X710003C8D8,0X710003C974);
	set_func_flags(0X710003C8D8,0x1410);
	SetType(0X710003C8D8, "__int64 __fastcall sub_710003C8D8(_QWORD, _QWORD, _QWORD);");
	set_frame_size(0X710003C8D8, 0X20, 16, 0);
	add_func    (0X710003C974,0X710003CAB0);
	set_func_flags(0X710003C974,0x1410);
	SetType(0X710003C974, "__int64 __fastcall sub_710003C974(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _DWORD, _DWORD, _QWORD, _QWORD, _DWORD, _QWORD, _DWORD, _QWORD);");
	set_frame_size(0X710003C974, 0X50, 80, 0);
	add_func    (0X710003CAB0,0X710003CCE4);
	set_func_flags(0X710003CAB0,0x1410);
	set_frame_size(0X710003CAB0, 0X50, 80, 0);
	add_func    (0X710003CCE4,0X710003CD58);
	set_func_flags(0X710003CCE4,0x1410);
	SetType(0X710003CCE4, "__int64 __fastcall sub_710003CCE4(_QWORD, _QWORD);");
	set_frame_size(0X710003CCE4, 0, 32, 0);
	add_func    (0X710003CD58,0X710003CD68);
	set_func_flags(0X710003CD58,0x1400);
	add_func    (0X710003CD70,0X710003CDDC);
	set_func_flags(0X710003CD70,0x1410);
	SetType(0X710003CD70, "unsigned __int64 GenerateRandomClockSourceId();");
	set_frame_size(0X710003CD70, 0X10, 16, 0);
	add_func    (0X710003CDE0,0X710003CE14);
	set_func_flags(0X710003CDE0,0x1410);
	set_frame_size(0X710003CDE0, 0X20, 0, 0);
	add_func    (0X710003CE20,0X710003CE30);
	set_func_flags(0X710003CE20,0x1400);
	add_func    (0X710003CE30,0X710003CE48);
	set_func_flags(0X710003CE30,0x1400);
	add_func    (0X710003CE50,0X710003CEB4);
	set_func_flags(0X710003CE50,0x1410);
	set_frame_size(0X710003CE50, 0, 16, 0);
	add_func    (0X710003CEB4,0X710003CEBC);
	set_func_flags(0X710003CEB4,0x1400);
	add_func    (0X710003CEBC,0X710003CEC4);
	set_func_flags(0X710003CEBC,0x1400);
	add_func    (0X710003CEC4,0X710003CED0);
	set_func_flags(0X710003CEC4,0x1400);
	add_func    (0X710003CED0,0X710003CED8);
	set_func_flags(0X710003CED0,0x1400);
	add_func    (0X710003CED8,0X710003CEF0);
	set_func_flags(0X710003CED8,0x1400);
	add_func    (0X710003CEF0,0X710003CF14);
	set_func_flags(0X710003CEF0,0x1410);
	set_frame_size(0X710003CEF0, 0X20, 0, 0);
	add_func    (0X710003CF14,0X710003CF18);
	set_func_flags(0X710003CF14,0x14c0);
	SetType(0X710003CF14, "__int64 __fastcall j_delete_4(__int64 result);");
	add_func    (0X710003CF18,0X710003CF20);
	set_func_flags(0X710003CF18,0x1400);
	add_func    (0X710003CF20,0X710003CF24);
	set_func_flags(0X710003CF20,0x1440);
	add_func    (0X710003CF24,0X710003CF30);
	set_func_flags(0X710003CF24,0x1400);
	add_func    (0X710003CF30,0X710003CF64);
	set_func_flags(0X710003CF30,0x1400);
	add_func    (0X710003CF64,0X710003CFD8);
	set_func_flags(0X710003CF64,0x1410);
	set_frame_size(0X710003CF64, 0X50, 32, 0);
	add_func    (0X710003CFD8,0X710003CFE0);
	set_func_flags(0X710003CFD8,0x1400);
	add_func    (0X710003CFE0,0X710003CFE8);
	set_func_flags(0X710003CFE0,0x1400);
	add_func    (0X710003CFE8,0X710003CFF0);
	set_func_flags(0X710003CFE8,0x1400);
	add_func    (0X710003CFF0,0X710003D02C);
	set_func_flags(0X710003CFF0,0x1410);
	set_frame_size(0X710003CFF0, 0X20, 0, 0);
	add_func    (0X710003D030,0X710003D080);
	set_func_flags(0X710003D030,0x1410);
	set_frame_size(0X710003D030, 0, 32, 0);
	add_func    (0X710003D080,0X710003D0D4);
	set_func_flags(0X710003D080,0x1410);
	set_frame_size(0X710003D080, 0X20, 0, 0);
	add_func    (0X710003D0D4,0X710003D0DC);
	set_func_flags(0X710003D0D4,0x1400);
	add_func    (0X710003D0DC,0X710003D0E4);
	set_func_flags(0X710003D0DC,0x1400);
	add_func    (0X710003D0F0,0X710003D1FC);
	set_func_flags(0X710003D0F0,0x1410);
	set_frame_size(0X710003D0F0, 0X20, 96, 0);
	add_func    (0X710003D1FC,0X710003D238);
	set_func_flags(0X710003D1FC,0x1400);
	add_func    (0X710003D238,0X710003D2B8);
	set_func_flags(0X710003D238,0x1410);
	set_frame_size(0X710003D238, 0X40, 32, 0);
	add_func    (0X710003D2B8,0X710003D2F4);
	set_func_flags(0X710003D2B8,0x1410);
	set_frame_size(0X710003D2B8, 0X20, 0, 0);
	add_func    (0X710003D2F4,0X710003D2FC);
	set_func_flags(0X710003D2F4,0x1400);
	add_func    (0X710003D2FC,0X710003D304);
	set_func_flags(0X710003D2FC,0x1400);
	add_func    (0X710003D304,0X710003D30C);
	set_func_flags(0X710003D304,0x1400);
	add_func    (0X710003D30C,0X710003D384);
	set_func_flags(0X710003D30C,0x1410);
	set_frame_size(0X710003D30C, 0X20, 32, 0);
	add_func    (0X710003D384,0X710003D40C);
	set_func_flags(0X710003D384,0x1410);
	set_frame_size(0X710003D384, 0X40, 16, 0);
	add_func    (0X710003D40C,0X710003D42C);
	set_func_flags(0X710003D40C,0x1400);
	add_func    (0X710003D42C,0X710003D434);
	set_func_flags(0X710003D42C,0x1400);
	add_func    (0X710003D434,0X710003D444);
	set_func_flags(0X710003D434,0x1400);
	add_func    (0X710003D444,0X710003D454);
	set_func_flags(0X710003D444,0x1400);
	add_func    (0X710003D454,0X710003D474);
	set_func_flags(0X710003D454,0x1400);
	add_func    (0X710003D474,0X710003D4A4);
	set_func_flags(0X710003D474,0x1400);
	add_func    (0X710003D4A4,0X710003D528);
	set_func_flags(0X710003D4A4,0x1410);
	set_frame_size(0X710003D4A4, 0X30, 32, 0);
	add_func    (0X710003D528,0X710003D530);
	set_func_flags(0X710003D528,0x1400);
	add_func    (0X710003D530,0X710003D554);
	set_func_flags(0X710003D530,0x1410);
	set_frame_size(0X710003D530, 0, 16, 0);
	add_func    (0X710003D554,0X710003D5A8);
	set_func_flags(0X710003D554,0x1410);
	set_frame_size(0X710003D554, 0X20, 0, 0);
	add_func    (0X710003D5A8,0X710003D64C);
	set_func_flags(0X710003D5A8,0x1410);
	set_frame_size(0X710003D5A8, 0X40, 32, 0);
	add_func    (0X710003D64C,0X710003D680);
	set_func_flags(0X710003D64C,0x1400);
	add_func    (0X710003D680,0X710003D6CC);
	set_func_flags(0X710003D680,0x1410);
	SetType(0X710003D680, "__int64 sub_710003D680(void);");
	set_frame_size(0X710003D680, 0X20, 16, 0);
	add_func    (0X710003D6CC,0X710003D7E0);
	set_func_flags(0X710003D6CC,0x1410);
	set_frame_size(0X710003D6CC, 0, 48, 0);
	add_func    (0X710003D7E0,0X710003D8C0);
	set_func_flags(0X710003D7E0,0x1410);
	set_frame_size(0X710003D7E0, 0, 64, 0);
	add_func    (0X710003D8C0,0X710003D950);
	set_func_flags(0X710003D8C0,0x1410);
	set_frame_size(0X710003D8C0, 0, 48, 0);
	add_func    (0X710003D950,0X710003DA64);
	set_func_flags(0X710003D950,0x1410);
	set_frame_size(0X710003D950, 0, 48, 0);
	add_func    (0X710003DA64,0X710003DB44);
	set_func_flags(0X710003DA64,0x1410);
	set_frame_size(0X710003DA64, 0, 64, 0);
	add_func    (0X710003DB44,0X710003DC20);
	set_func_flags(0X710003DB44,0x1410);
	set_frame_size(0X710003DB44, 0X30, 48, 0);
	add_func    (0X710003DC20,0X710003DD18);
	set_func_flags(0X710003DC20,0x1410);
	set_frame_size(0X710003DC20, 0X20, 80, 0);
	add_func    (0X710003DD18,0X710003DDC0);
	set_func_flags(0X710003DD18,0x1410);
	set_frame_size(0X710003DD18, 0X10, 64, 0);
	add_func    (0X710003DDC0,0X710003DDC8);
	set_func_flags(0X710003DDC0,0x1400);
	add_func    (0X710003DDC8,0X710003DE2C);
	set_func_flags(0X710003DDC8,0x1410);
	set_frame_size(0X710003DDC8, 0, 32, 0);
	add_func    (0X710003DE2C,0X710003DEE8);
	set_func_flags(0X710003DE2C,0x1410);
	set_frame_size(0X710003DE2C, 0X10, 64, 0);
	add_func    (0X710003DEE8,0X710003DEEC);
	set_func_flags(0X710003DEE8,0x1440);
	add_func    (0X710003DEEC,0X710003DEF4);
	set_func_flags(0X710003DEEC,0x1400);
	add_func    (0X710003DEF4,0X710003DF58);
	set_func_flags(0X710003DEF4,0x1410);
	set_frame_size(0X710003DEF4, 0, 32, 0);
	add_func    (0X710003DF58,0X710003E014);
	set_func_flags(0X710003DF58,0x1410);
	set_frame_size(0X710003DF58, 0X10, 64, 0);
	add_func    (0X710003E014,0X710003E030);
	set_func_flags(0X710003E014,0x1400);
	add_func    (0X710003E030,0X710003E190);
	set_func_flags(0X710003E030,0x1410);
	set_frame_size(0X710003E030, 0X20, 64, 0);
	add_func    (0X710003E190,0X710003E264);
	set_func_flags(0X710003E190,0x1410);
	set_frame_size(0X710003E190, 0X50, 48, 0);
	add_func    (0X710003E270,0X710003E37C);
	set_func_flags(0X710003E270,0x1410);
	set_frame_size(0X710003E270, 0X20, 48, 0);
	add_func    (0X710003E37C,0X710003E504);
	set_func_flags(0X710003E37C,0x1410);
	set_frame_size(0X710003E37C, 0X20, 48, 0);
	add_func    (0X710003E510,0X710003E668);
	set_func_flags(0X710003E510,0x1410);
	set_frame_size(0X710003E510, 0X80, 32, 0);
	add_func    (0X710003E670,0X710003E7D0);
	set_func_flags(0X710003E670,0x1410);
	set_frame_size(0X710003E670, 0X80, 32, 0);
	add_func    (0X710003E7D0,0X710003E96C);
	set_func_flags(0X710003E7D0,0x1410);
	set_frame_size(0X710003E7D0, 0X90, 80, 0);
	add_func    (0X710003E970,0X710003E9F0);
	set_func_flags(0X710003E970,0x1400);
	add_func    (0X710003E9F0,0X710003EC6C);
	set_func_flags(0X710003E9F0,0x1410);
	set_frame_size(0X710003E9F0, 0X70, 96, 0);
	add_func    (0X710003EC70,0X710003F024);
	set_func_flags(0X710003EC70,0x1410);
	set_frame_size(0X710003EC70, 0X90, 96, 0);
	add_func    (0X710003F024,0X710003F0A4);
	set_func_flags(0X710003F024,0x1410);
	set_frame_size(0X710003F024, 0, 16, 0);
	add_func    (0X710003F0B0,0X710003F10C);
	set_func_flags(0X710003F0B0,0x1410);
	set_frame_size(0X710003F0B0, 0X20, 16, 0);
	add_func    (0X710003F110,0X710003F2E0);
	set_func_flags(0X710003F110,0x1410);
	set_frame_size(0X710003F110, 0X20, 48, 0);
	add_func    (0X710003F2E0,0X710003F314);
	set_func_flags(0X710003F2E0,0x1410);
	set_frame_size(0X710003F2E0, 0X10, 16, 0);
	add_func    (0X710003F314,0X710003F4C4);
	set_func_flags(0X710003F314,0x1410);
	set_frame_size(0X710003F314, 0X20, 32, 0);
	add_func    (0X710003F4C4,0X710003F4CC);
	set_func_flags(0X710003F4C4,0x1400);
	add_func    (0X710003F4CC,0X710003F57C);
	set_func_flags(0X710003F4CC,0x1410);
	set_frame_size(0X710003F4CC, 0XA0, 48, 0);
	add_func    (0X710003F57C,0X710003F584);
	set_func_flags(0X710003F57C,0x1400);
	add_func    (0X710003F584,0X710003F594);
	set_func_flags(0X710003F584,0x1400);
	add_func    (0X710003F594,0X710003F5A8);
	set_func_flags(0X710003F594,0x1400);
	add_func    (0X710003F5A8,0X710003F5C0);
	set_func_flags(0X710003F5A8,0x1400);
	add_func    (0X710003F5C0,0X710003F5C8);
	set_func_flags(0X710003F5C0,0x1400);
	add_func    (0X710003F5C8,0X710003F5D0);
	set_func_flags(0X710003F5C8,0x1400);
	add_func    (0X710003F5D0,0X710003F6C8);
	set_func_flags(0X710003F5D0,0x1410);
	set_frame_size(0X710003F5D0, 0X90, 32, 0);
	add_func    (0X710003F6C8,0X710003F7C4);
	set_func_flags(0X710003F6C8,0x1410);
	set_frame_size(0X710003F6C8, 0X70, 64, 0);
	add_func    (0X710003F7C4,0X710003F968);
	set_func_flags(0X710003F7C4,0x1410);
	set_frame_size(0X710003F7C4, 0X90, 80, 0);
	add_func    (0X710003F968,0X710003F9C4);
	set_func_flags(0X710003F968,0x1410);
	set_frame_size(0X710003F968, 0, 32, 0);
	add_func    (0X710003F9C4,0X710003FAD0);
	set_func_flags(0X710003F9C4,0x1410);
	set_frame_size(0X710003F9C4, 0X90, 32, 0);
	add_func    (0X710003FAD0,0X710003FB18);
	set_func_flags(0X710003FAD0,0x1410);
	set_frame_size(0X710003FAD0, 0, 32, 0);
	add_func    (0X710003FB20,0X710003FDDC);
	set_func_flags(0X710003FB20,0x1410);
	set_frame_size(0X710003FB20, 0, 32, 0);
	add_func    (0X710003FDDC,0X710003FDF4);
	set_func_flags(0X710003FDDC,0x1400);
	SetType(0X710003FDDC, "__int64 __fastcall sub_710003FDDC(_QWORD);");
	add_func    (0X710003FDF4,0X710003FE38);
	set_func_flags(0X710003FDF4,0x1410);
	set_frame_size(0X710003FDF4, 0X20, 0, 0);
	add_func    (0X710003FE38,0X710003FE40);
	set_func_flags(0X710003FE38,0x1400);
	SetType(0X710003FE38, "__int64 __fastcall sub_710003FE38(_QWORD, _QWORD);");
	add_func    (0X710003FE40,0X710003FE48);
	set_func_flags(0X710003FE40,0x1400);
	SetType(0X710003FE40, "__int64 __fastcall sub_710003FE40(_QWORD, _QWORD);");
	add_func    (0X710003FE48,0X710003FEA0);
	set_func_flags(0X710003FE48,0x1410);
	SetType(0X710003FE48, "__int64 __fastcall sub_710003FE48(_QWORD, _QWORD);");
	set_frame_size(0X710003FE48, 0, 32, 0);
	add_func    (0X710003FEA0,0X710003FF24);
	set_func_flags(0X710003FEA0,0x1410);
	set_frame_size(0X710003FEA0, 0X20, 0, 0);
	add_func    (0X710003FF30,0X710003FF94);
	set_func_flags(0X710003FF30,0x1410);
	set_frame_size(0X710003FF30, 0, 32, 0);
	add_func    (0X710003FFA0,0X7100040004);
	set_func_flags(0X710003FFA0,0x1410);
	set_frame_size(0X710003FFA0, 0, 32, 0);
	add_func    (0X7100040010,0X71000400A4);
	set_func_flags(0X7100040010,0x1410);
	set_frame_size(0X7100040010, 0X30, 16, 0);
	add_func    (0X71000400B0,0X71000400E0);
	set_func_flags(0X71000400B0,0x1410);
	set_frame_size(0X71000400B0, 0X20, 0, 0);
	add_func    (0X71000400E0,0X710004011C);
	set_func_flags(0X71000400E0,0x1410);
	set_frame_size(0X71000400E0, 0X10, 16, 0);
	add_func    (0X7100040120,0X7100040188);
	set_func_flags(0X7100040120,0x1410);
	set_frame_size(0X7100040120, 0X10, 32, 0);
	add_func    (0X7100040190,0X71000402C0);
	set_func_flags(0X7100040190,0x1410);
	set_frame_size(0X7100040190, 0X40, 0, 0);
	add_func    (0X71000402C0,0X7100040470);
	set_func_flags(0X71000402C0,0x1410);
	set_frame_size(0X71000402C0, 0X20, 32, 0);
	add_func    (0X7100040470,0X7100040478);
	set_func_flags(0X7100040470,0x1400);
	add_func    (0X7100040478,0X7100040528);
	set_func_flags(0X7100040478,0x1410);
	set_frame_size(0X7100040478, 0XA0, 48, 0);
	add_func    (0X7100040528,0X7100040530);
	set_func_flags(0X7100040528,0x1400);
	add_func    (0X7100040530,0X710004053C);
	set_func_flags(0X7100040530,0x1400);
	add_func    (0X710004053C,0X7100040548);
	set_func_flags(0X710004053C,0x1400);
	add_func    (0X7100040548,0X71000405DC);
	set_func_flags(0X7100040548,0x1410);
	set_frame_size(0X7100040548, 0X20, 32, 0);
	add_func    (0X71000405DC,0X71000405E8);
	set_func_flags(0X71000405DC,0x1400);
	add_func    (0X71000405E8,0X71000405F4);
	set_func_flags(0X71000405E8,0x1400);
	add_func    (0X71000405F4,0X7100040688);
	set_func_flags(0X71000405F4,0x1410);
	set_frame_size(0X71000405F4, 0X20, 32, 0);
	add_func    (0X7100040688,0X7100040694);
	set_func_flags(0X7100040688,0x1400);
	add_func    (0X7100040694,0X7100040738);
	set_func_flags(0X7100040694,0x1410);
	set_frame_size(0X7100040694, 0X30, 16, 0);
	add_func    (0X7100040738,0X7100040748);
	set_func_flags(0X7100040738,0x1400);
	add_func    (0X7100040748,0X7100040750);
	set_func_flags(0X7100040748,0x1400);
	add_func    (0X7100040750,0X7100040758);
	set_func_flags(0X7100040750,0x1400);
	add_func    (0X7100040758,0X7100040844);
	set_func_flags(0X7100040758,0x1410);
	SetType(0X7100040758, "__int64 __fastcall sub_7100040758(_QWORD, _QWORD, _QWORD);");
	set_frame_size(0X7100040758, 0X90, 32, 0);
	add_func    (0X7100040844,0X71000409B0);
	set_func_flags(0X7100040844,0x1410);
	set_frame_size(0X7100040844, 0X70, 64, 0);
	add_func    (0X71000409B0,0X7100040A58);
	set_func_flags(0X71000409B0,0x1410);
	set_frame_size(0X71000409B0, 0X20, 16, 0);
	add_func    (0X7100040A58,0X7100040A60);
	set_func_flags(0X7100040A58,0x1400);
	add_func    (0X7100040A60,0X7100040B10);
	set_func_flags(0X7100040A60,0x1410);
	set_frame_size(0X7100040A60, 0XA0, 48, 0);
	add_func    (0X7100040B10,0X7100040B18);
	set_func_flags(0X7100040B10,0x1400);
	add_func    (0X7100040B18,0X7100040B24);
	set_func_flags(0X7100040B18,0x1400);
	add_func    (0X7100040B24,0X7100040B34);
	set_func_flags(0X7100040B24,0x1400);
	add_func    (0X7100040B34,0X7100040B3C);
	set_func_flags(0X7100040B34,0x1400);
	add_func    (0X7100040B3C,0X7100040B44);
	set_func_flags(0X7100040B3C,0x1400);
	add_func    (0X7100040B44,0X7100040C28);
	set_func_flags(0X7100040B44,0x1410);
	set_frame_size(0X7100040B44, 0X90, 32, 0);
	add_func    (0X7100040C28,0X7100040CD0);
	set_func_flags(0X7100040C28,0x1410);
	set_frame_size(0X7100040C28, 0X20, 16, 0);
	add_func    (0X7100040CD0,0X7100040CD8);
	set_func_flags(0X7100040CD0,0x1400);
	add_func    (0X7100040CD8,0X7100040D88);
	set_func_flags(0X7100040CD8,0x1410);
	set_frame_size(0X7100040CD8, 0XA0, 48, 0);
	add_func    (0X7100040D88,0X7100040D90);
	set_func_flags(0X7100040D88,0x1400);
	add_func    (0X7100040D90,0X7100040D9C);
	set_func_flags(0X7100040D90,0x1400);
	add_func    (0X7100040D9C,0X7100040DAC);
	set_func_flags(0X7100040D9C,0x1400);
	add_func    (0X7100040DAC,0X7100040DB4);
	set_func_flags(0X7100040DAC,0x1400);
	add_func    (0X7100040DB4,0X7100040DBC);
	set_func_flags(0X7100040DB4,0x1400);
	add_func    (0X7100040DBC,0X7100040F38);
	set_func_flags(0X7100040DBC,0x1410);
	set_frame_size(0X7100040DBC, 0X90, 48, 0);
	add_func    (0X7100040F38,0X7100040FE0);
	set_func_flags(0X7100040F38,0x1410);
	set_frame_size(0X7100040F38, 0X20, 16, 0);
	add_func    (0X7100040FE0,0X7100040FE8);
	set_func_flags(0X7100040FE0,0x1400);
	add_func    (0X7100040FE8,0X7100041098);
	set_func_flags(0X7100040FE8,0x1410);
	set_frame_size(0X7100040FE8, 0XA0, 48, 0);
	add_func    (0X7100041098,0X71000410A0);
	set_func_flags(0X7100041098,0x1400);
	add_func    (0X71000410A0,0X71000410AC);
	set_func_flags(0X71000410A0,0x1400);
	add_func    (0X71000410AC,0X71000410B4);
	set_func_flags(0X71000410AC,0x1400);
	add_func    (0X71000410B4,0X71000410BC);
	set_func_flags(0X71000410B4,0x1400);
	add_func    (0X71000410BC,0X71000411B0);
	set_func_flags(0X71000410BC,0x1410);
	SetType(0X71000410BC, "__int64 __fastcall sub_71000410BC(__int64, _QWORD *, int, unsigned int);");
	set_frame_size(0X71000410BC, 0X70, 64, 0);
	add_func    (0X71000411B0,0X710004120C);
	set_func_flags(0X71000411B0,0x1410);
	set_frame_size(0X71000411B0, 0, 32, 0);
	add_func    (0X710004120C,0X7100041214);
	set_func_flags(0X710004120C,0x1400);
	SetType(0X710004120C, "_QWORD *__fastcall sub_710004120C(_QWORD *result, __int64, __int64);");
	add_func    (0X7100041214,0X710004121C);
	set_func_flags(0X7100041214,0x1400);
	SetType(0X7100041214, "__int64 __fastcall sub_7100041214(_QWORD *);");
	add_func    (0X710004121C,0X71000412A0);
	set_func_flags(0X710004121C,0x1410);
	SetType(0X710004121C, "void __usercall sub_710004121C(_QWORD *@<X0>, __int64@<X8>);");
	set_frame_size(0X710004121C, 0X30, 0, 0);
	define_local_var(0X710004121C, 0X71000412A0, "[bp-0X8]", "out_time");
	add_func    (0X71000412A0,0X71000412A8);
	set_func_flags(0X71000412A0,0x1400);
	SetType(0X71000412A0, "void __fastcall sub_71000412A0(_QWORD *);");
	add_func    (0X71000412A8,0X71000412BC);
	set_func_flags(0X71000412A8,0x1400);
	SetType(0X71000412A8, "__int64 __fastcall sub_71000412A8(__int64 *);");
	add_func    (0X71000412BC,0X710004136C);
	set_func_flags(0X71000412BC,0x1410);
	SetType(0X71000412BC, "__int64 __fastcall sub_71000412BC(_QWORD);");
	set_frame_size(0X71000412BC, 0, 48, 0);
	add_func    (0X710004136C,0X710004137C);
	set_func_flags(0X710004136C,0x1400);
	SetType(0X710004136C, "__int64 __fastcall sub_710004136C(_QWORD);");
	add_func    (0X710004137C,0X71000413B0);
	set_func_flags(0X710004137C,0x1410);
	SetType(0X710004137C, "__int64 __fastcall sub_710004137C(NotifEventHandlerStruct *this);");
	set_frame_size(0X710004137C, 0X10, 16, 0);
	add_func    (0X71000413B0,0X71000413C0);
	set_func_flags(0X71000413B0,0x1400);
	add_func    (0X71000413C0,0X71000413C8);
	set_func_flags(0X71000413C0,0x1400);
	add_func    (0X71000413C8,0X7100041414);
	set_func_flags(0X71000413C8,0x1410);
	set_frame_size(0X71000413C8, 0X20, 0, 0);
	add_func    (0X7100041414,0X710004141C);
	set_func_flags(0X7100041414,0x1400);
	SetType(0X7100041414, "__int64 __fastcall sub_7100041414(__int64, _WORD *, __int64 *, __int64 *);");
	add_func    (0X710004141C,0X7100041424);
	set_func_flags(0X710004141C,0x1400);
	add_func    (0X7100041424,0X710004142C);
	set_func_flags(0X7100041424,0x1400);
	add_func    (0X710004142C,0X7100041438);
	set_func_flags(0X710004142C,0x1400);
	add_func    (0X7100041438,0X7100041444);
	set_func_flags(0X7100041438,0x1400);
	add_func    (0X7100041444,0X710004144C);
	set_func_flags(0X7100041444,0x1400);
	add_func    (0X710004144C,0X71000414AC);
	set_func_flags(0X710004144C,0x1410);
	set_frame_size(0X710004144C, 0X40, 0, 0);
	add_func    (0X71000414AC,0X7100041504);
	set_func_flags(0X71000414AC,0x1410);
	SetType(0X71000414AC, "__int64 __fastcall sub_71000414AC(__int64, _WORD *, __int64 *, __int64 *);");
	set_frame_size(0X71000414AC, 0X40, 16, 0);
	add_func    (0X7100041504,0X71000415E4);
	set_func_flags(0X7100041504,0x1410);
	SetType(0X7100041504, "__int64 __fastcall sub_7100041504(__int64, _WORD *, __int64 *, __int64 *);");
	set_frame_size(0X7100041504, 0X50, 64, 0);
	add_func    (0X71000415E4,0X71000416AC);
	set_func_flags(0X71000415E4,0x1410);
	set_frame_size(0X71000415E4, 0X60, 16, 0);
	add_func    (0X71000416AC,0X71000416F8);
	set_func_flags(0X71000416AC,0x1410);
	set_frame_size(0X71000416AC, 0X20, 0, 0);
	add_func    (0X71000416F8,0X71000417A8);
	set_func_flags(0X71000416F8,0x1410);
	set_frame_size(0X71000416F8, 0X10, 64, 0);
	add_func    (0X71000417A8,0X71000417F8);
	set_func_flags(0X71000417A8,0x1410);
	set_frame_size(0X71000417A8, 0X20, 0, 0);
	add_func    (0X71000417F8,0X71000418B0);
	set_func_flags(0X71000417F8,0x1410);
	set_frame_size(0X71000417F8, 0X10, 48, 0);
	add_func    (0X71000418B0,0X71000418C0);
	set_func_flags(0X71000418B0,0x1400);
	SetType(0X71000418B0, "__int64 __fastcall sub_71000418B0(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);");
	add_func    (0X71000418C0,0X7100041900);
	set_func_flags(0X71000418C0,0x1410);
	set_frame_size(0X71000418C0, 0X40, 16, 0);
	add_func    (0X7100041900,0X71000419A4);
	set_func_flags(0X7100041900,0x1410);
	set_frame_size(0X7100041900, 0X60, 16, 0);
	add_func    (0X71000419A4,0X71000419D4);
	set_func_flags(0X71000419A4,0x1410);
	set_frame_size(0X71000419A4, 0X20, 0, 0);
	add_func    (0X71000419D4,0X7100041A88);
	set_func_flags(0X71000419D4,0x1410);
	set_frame_size(0X71000419D4, 0X50, 48, 0);
	add_func    (0X7100041A88,0X7100041AF0);
	set_func_flags(0X7100041A88,0x1410);
	set_frame_size(0X7100041A88, 0X60, 0, 0);
	add_func    (0X7100041AF0,0X7100041BBC);
	set_func_flags(0X7100041AF0,0x1410);
	set_frame_size(0X7100041AF0, 0X50, 80, 0);
	add_func    (0X7100041BBC,0X7100041C2C);
	set_func_flags(0X7100041BBC,0x1410);
	SetType(0X7100041BBC, "__int64 __fastcall sub_7100041BBC(__int64, unsigned __int16, char);");
	set_frame_size(0X7100041BBC, 0X10, 32, 0);
	add_func    (0X7100041C2C,0X7100041CCC);
	set_func_flags(0X7100041C2C,0x1410);
	set_frame_size(0X7100041C2C, 0X60, 32, 0);
	add_func    (0X7100041CCC,0X7100041CF8);
	set_func_flags(0X7100041CCC,0x1410);
	set_frame_size(0X7100041CCC, 0X20, 0, 0);
	add_func    (0X7100041CF8,0X7100041D44);
	set_func_flags(0X7100041CF8,0x1410);
	set_frame_size(0X7100041CF8, 0X20, 0, 0);
	add_func    (0X7100041D44,0X7100041D74);
	set_func_flags(0X7100041D44,0x1410);
	SetType(0X7100041D44, "__int64 __fastcall sub_7100041D44(__int64, __int64);");
	set_frame_size(0X7100041D44, 0X10, 16, 0);
	add_func    (0X7100041D74,0X7100041D90);
	set_func_flags(0X7100041D74,0x1410);
	set_frame_size(0X7100041D74, 0, 16, 0);
	add_func    (0X7100041D90,0X7100041DAC);
	set_func_flags(0X7100041D90,0x1410);
	set_frame_size(0X7100041D90, 0, 16, 0);
	add_func    (0X7100041DAC,0X7100041E50);
	set_func_flags(0X7100041DAC,0x1410);
	set_frame_size(0X7100041DAC, 0, 48, 0);
	add_func    (0X7100041E50,0X7100041E88);
	set_func_flags(0X7100041E50,0x1410);
	set_frame_size(0X7100041E50, 0X20, 0, 0);
	add_func    (0X7100041E88,0X7100041E94);
	set_func_flags(0X7100041E88,0x1400);
	add_func    (0X7100041E94,0X7100041EDC);
	set_func_flags(0X7100041E94,0x1400);
	set_frame_size(0X7100041E94, 0X20, 0, 0);
	add_func    (0X7100041EDC,0X7100041F20);
	set_func_flags(0X7100041EDC,0x1400);
	set_frame_size(0X7100041EDC, 0X20, 0, 0);
	add_func    (0X7100041F20,0X7100041F3C);
	set_func_flags(0X7100041F20,0x1410);
	set_frame_size(0X7100041F20, 0, 16, 0);
	add_func    (0X7100041F3C,0X7100041F58);
	set_func_flags(0X7100041F3C,0x1410);
	set_frame_size(0X7100041F3C, 0, 16, 0);
	add_func    (0X7100041F58,0X7100041FC4);
	set_func_flags(0X7100041F58,0x1410);
	set_frame_size(0X7100041F58, 0X10, 32, 0);
	add_func    (0X7100041FC4,0X7100041FCC);
	set_func_flags(0X7100041FC4,0x1400);
	add_func    (0X7100041FCC,0X7100042024);
	set_func_flags(0X7100041FCC,0x1410);
	set_frame_size(0X7100041FCC, 0, 32, 0);
	add_func    (0X7100042024,0X7100042068);
	set_func_flags(0X7100042024,0x1410);
	set_frame_size(0X7100042024, 0X20, 0, 0);
	add_func    (0X7100042068,0X7100042080);
	set_func_flags(0X7100042068,0x1400);
	SetType(0X7100042068, "__int64 __fastcall sub_7100042068(_QWORD);");
	add_func    (0X7100042080,0X7100042164);
	set_func_flags(0X7100042080,0x1410);
	set_frame_size(0X7100042080, 0X20, 16, 0);
	add_func    (0X7100042164,0X71000421D0);
	set_func_flags(0X7100042164,0x1410);
	set_frame_size(0X7100042164, 0, 32, 0);
	add_func    (0X71000421D0,0X710004225C);
	set_func_flags(0X71000421D0,0x1410);
	set_frame_size(0X71000421D0, 0, 32, 0);
	add_func    (0X710004225C,0X7100042310);
	set_func_flags(0X710004225C,0x1410);
	SetType(0X710004225C, "__int64 __fastcall sub_710004225C(_QWORD, _QWORD, _QWORD);");
	set_frame_size(0X710004225C, 0XE0, 16, 0);
	add_func    (0X7100042310,0X71000423D8);
	set_func_flags(0X7100042310,0x1410);
	SetType(0X7100042310, "void __fastcall sub_7100042310(nn::os::SdkRecursiveMutexType *);");
	set_frame_size(0X7100042310, 0X30, 48, 0);
	define_local_var(0X7100042310, 0X71000423D8, "[bp-0X28]", "additional_info");
	define_local_var(0X7100042310, 0X71000423D8, "[bp-0X10]", "calendar_time");
	define_local_var(0X7100042310, 0X71000423D8, "[bp-0X8]", "time");
	add_func    (0X71000423D8,0X7100042510);
	set_func_flags(0X71000423D8,0x1410);
	SetType(0X71000423D8, "unsigned int *__fastcall sub_71000423D8(__int64, __int64);");
	set_frame_size(0X71000423D8, 0XE0, 48, 0);
	add_func    (0X7100042510,0X71000425C8);
	set_func_flags(0X7100042510,0x1410);
	set_frame_size(0X7100042510, 0, 48, 0);
	add_func    (0X71000425D0,0X7100042678);
	set_func_flags(0X71000425D0,0x1410);
	SetType(0X71000425D0, "__int64 __fastcall sub_71000425D0(_QWORD);");
	set_frame_size(0X71000425D0, 0X20, 16, 0);
	add_func    (0X7100042680,0X7100042728);
	set_func_flags(0X7100042680,0x1410);
	SetType(0X7100042680, "__int64 __fastcall sub_7100042680(_QWORD);");
	set_frame_size(0X7100042680, 0X20, 16, 0);
	add_func    (0X7100042730,0X7100042A40);
	set_func_flags(0X7100042730,0x1410);
	SetType(0X7100042730, "__int64 __fastcall sub_7100042730(__int64, _WORD *, __int64 *, __int64, unsigned __int64);");
	set_frame_size(0X7100042730, 0XA0, 96, 0);
	add_func    (0X7100042A40,0X7100042B40);
	set_func_flags(0X7100042A40,0x1410);
	SetType(0X7100042A40, "__int64 __fastcall sub_7100042A40(_QWORD);");
	set_frame_size(0X7100042A40, 0X20, 0, 0);
	add_func    (0X7100042B40,0X7100042C00);
	set_func_flags(0X7100042B40,0x1410);
	set_frame_size(0X7100042B40, 0X20, 32, 0);
	add_func    (0X7100042C00,0X7100042CCC);
	set_func_flags(0X7100042C00,0x1410);
	set_frame_size(0X7100042C00, 0X20, 64, 0);
	add_func    (0X7100042CD0,0X7100042D98);
	set_func_flags(0X7100042CD0,0x1410);
	set_frame_size(0X7100042CD0, 0, 48, 0);
	add_func    (0X7100042DA0,0X7100042EF4);
	set_func_flags(0X7100042DA0,0x1410);
	set_frame_size(0X7100042DA0, 0XA0, 80, 0);
	add_func    (0X7100042F00,0X7100043074);
	set_func_flags(0X7100042F00,0x1410);
	SetType(0X7100042F00, "__int64 __fastcall sub_7100042F00(__int64, unsigned __int16, char);");
	set_frame_size(0X7100042F00, 0X50, 64, 0);
	add_func    (0X7100043080,0X71000432FC);
	set_func_flags(0X7100043080,0x1410);
	SetType(0X7100043080, "__int64 __fastcall sub_7100043080(__int64, unsigned __int16 *, __int64, unsigned __int64);");
	set_frame_size(0X7100043080, 0XA0, 80, 0);
	add_func    (0X7100043300,0X710004345C);
	set_func_flags(0X7100043300,0x1410);
	set_frame_size(0X7100043300, 0XB0, 32, 0);
	add_func    (0X710004345C,0X7100043464);
	set_func_flags(0X710004345C,0x1400);
	SetType(0X710004345C, "__int64 __fastcall sub_710004345C(__int64);");
	add_func    (0X7100043470,0X710004354C);
	set_func_flags(0X7100043470,0x1410);
	set_frame_size(0X7100043470, 0, 48, 0);
	add_func    (0X7100043550,0X710004372C);
	set_func_flags(0X7100043550,0x1410);
	SetType(0X7100043550, "__int64 __fastcall sub_7100043550(__int64 a1, __int64 time, TimeZone::CalendarTime *calendar_time, int day_of_week, __int64 a5);");
	set_frame_size(0X7100043550, 0X40, 64, 0);
	define_local_var(0X7100043550, 0X710004372C, "[bp-0X3C]", "out_count");
	define_local_var(0X7100043550, 0X710004372C, "[bp-0X38]", "out_times");
	define_local_var(0X7100043550, 0X710004372C, "[bp-0X28]", "calendar");
	define_local_var(0X7100043550, 0X710004372C, "[bp-0X8]", "calendar_time_1");
	add_func    (0X710004372C,0X71000437BC);
	set_func_flags(0X710004372C,0x1410);
	SetType(0X710004372C, "void __usercall sub_710004372C(__int64 *@<X0>, _QWORD *@<X8>);");
	set_frame_size(0X710004372C, 0X20, 16, 0);
	add_func    (0X71000437C0,0X7100043920);
	set_func_flags(0X71000437C0,0x1410);
	SetType(0X71000437C0, "__int64 __fastcall sub_71000437C0(__int64, void (__fastcall *)(unsigned __int64 *, __int64), __int64);");
	set_frame_size(0X71000437C0, 0XB0, 80, 0);
	add_func    (0X7100043920,0X7100043944);
	set_func_flags(0X7100043920,0x1400);
	SetType(0X7100043920, "bool __fastcall sub_7100043920(__int64, unsigned int);");
	add_func    (0X7100043944,0X710004395C);
	set_func_flags(0X7100043944,0x1400);
	SetType(0X7100043944, "unsigned __int64 __fastcall sub_7100043944(__int64, unsigned int);");
	add_func    (0X710004395C,0X7100043964);
	set_func_flags(0X710004395C,0x1400);
	SetType(0X710004395C, "__int64 __fastcall sub_710004395C(__int64);");
	add_func    (0X7100043970,0X7100043B04);
	set_func_flags(0X7100043970,0x1410);
	set_frame_size(0X7100043970, 0, 48, 0);
	add_func    (0X7100043B04,0X7100043B38);
	set_func_flags(0X7100043B04,0x1410);
	set_frame_size(0X7100043B04, 0, 32, 0);
	add_func    (0X7100043B40,0X7100043F4C);
	set_func_flags(0X7100043B40,0x1410);
	set_frame_size(0X7100043B40, 0X80, 48, 0);
	add_func    (0X7100043F50,0X7100044010);
	set_func_flags(0X7100043F50,0x1410);
	set_frame_size(0X7100043F50, 0X30, 16, 0);
	add_func    (0X7100044010,0X710004403C);
	set_func_flags(0X7100044010,0x1410);
	set_frame_size(0X7100044010, 0X20, 0, 0);
	add_func    (0X710004403C,0X7100044118);
	set_func_flags(0X710004403C,0x1410);
	set_frame_size(0X710004403C, 0X10, 48, 0);
	add_func    (0X7100044118,0X7100044264);
	set_func_flags(0X7100044118,0x1410);
	set_frame_size(0X7100044118, 0X20, 32, 0);
	add_func    (0X7100044264,0X7100044358);
	set_func_flags(0X7100044264,0x1410);
	set_frame_size(0X7100044264, 0XE0, 48, 0);
	add_func    (0X7100044358,0X710004445C);
	set_func_flags(0X7100044358,0x1410);
	SetType(0X7100044358, "__int64 __fastcall sub_7100044358(_QWORD, _QWORD);");
	set_frame_size(0X7100044358, 0XE0, 48, 0);
	add_func    (0X7100044460,0X71000444FC);
	set_func_flags(0X7100044460,0x1410);
	set_frame_size(0X7100044460, 0X20, 16, 0);
	add_func    (0X7100044500,0X71000445D4);
	set_func_flags(0X7100044500,0x1410);
	set_frame_size(0X7100044500, 0X10, 32, 0);
	add_func    (0X71000445E0,0X7100044748);
	set_func_flags(0X71000445E0,0x1410);
	set_frame_size(0X71000445E0, 0X70, 16, 0);
	add_func    (0X7100044750,0X7100044768);
	set_func_flags(0X7100044750,0x1400);
	SetType(0X7100044750, "__int64 __fastcall sub_7100044750(_QWORD, _QWORD, _QWORD);");
	add_func    (0X7100044770,0X7100044B70);
	set_func_flags(0X7100044770,0x1410);
	set_frame_size(0X7100044770, 0X80, 32, 0);
	add_func    (0X7100044B70,0X7100044B88);
	set_func_flags(0X7100044B70,0x1400);
	add_func    (0X7100044B90,0X7100044C54);
	set_func_flags(0X7100044B90,0x1410);
	SetType(0X7100044B90, "__int64 __fastcall sub_7100044B90(_QWORD, _QWORD);");
	set_frame_size(0X7100044B90, 0X70, 16, 0);
	add_func    (0X7100044C60,0X7100044D24);
	set_func_flags(0X7100044C60,0x1410);
	set_frame_size(0X7100044C60, 0X70, 16, 0);
	add_func    (0X7100044D24,0X7100044D30);
	set_func_flags(0X7100044D24,0x1400);
	add_func    (0X7100044D30,0X7100044D70);
	set_func_flags(0X7100044D30,0x1410);
	SetType(0X7100044D30, "unsigned int *__fastcall sub_7100044D30(__int64);");
	set_frame_size(0X7100044D30, 0X20, 0, 0);
	add_func    (0X7100044D70,0X7100044D7C);
	set_func_flags(0X7100044D70,0x1400);
	SetType(0X7100044D70, "__int64 __fastcall sub_7100044D70(_QWORD);");
	add_func    (0X7100044D7C,0X7100044DB0);
	set_func_flags(0X7100044D7C,0x1410);
	SetType(0X7100044D7C, "__int64 __fastcall sub_7100044D7C(_QWORD);");
	set_frame_size(0X7100044D7C, 0X10, 16, 0);
	add_func    (0X7100044DB0,0X7100044DB8);
	set_func_flags(0X7100044DB0,0x1400);
	add_func    (0X7100044DB8,0X7100044DC4);
	set_func_flags(0X7100044DB8,0x1400);
	SetType(0X7100044DB8, "__int64 __fastcall sub_7100044DB8(_QWORD *);");
	add_func    (0X7100044DC4,0X7100044E64);
	set_func_flags(0X7100044DC4,0x1410);
	SetType(0X7100044DC4, "__int64 __fastcall sub_7100044DC4(__int64, __int64, __int64, __int64, __int64);");
	set_frame_size(0X7100044DC4, 0X30, 16, 0);
	add_func    (0X7100044E64,0X7100044E98);
	set_func_flags(0X7100044E64,0x1410);
	SetType(0X7100044E64, "__int64 __fastcall sub_7100044E64(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD);");
	set_frame_size(0X7100044E64, 0X20, 0, 0);
	add_func    (0X7100044E98,0X7100044F80);
	set_func_flags(0X7100044E98,0x1410);
	set_frame_size(0X7100044E98, 0X30, 32, 0);
	add_func    (0X7100044F80,0X7100044FC4);
	set_func_flags(0X7100044F80,0x1410);
	SetType(0X7100044F80, "__int64 __fastcall sub_7100044F80(_QWORD, _QWORD);");
	set_frame_size(0X7100044F80, 0X10, 16, 0);
	add_func    (0X7100044FC4,0X7100044FF8);
	set_func_flags(0X7100044FC4,0x1410);
	SetType(0X7100044FC4, "__int64 __fastcall sub_7100044FC4(_QWORD, _QWORD);");
	set_frame_size(0X7100044FC4, 0X10, 16, 0);
	add_func    (0X7100045000,0X71000451EC);
	set_func_flags(0X7100045000,0x1410);
	SetType(0X7100045000, "__int64 __fastcall sub_7100045000(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);");
	set_frame_size(0X7100045000, 0X10, 64, 0);
	add_func    (0X71000451EC,0X71000452B8);
	set_func_flags(0X71000451EC,0x1410);
	set_frame_size(0X71000451EC, 0X10, 64, 0);
	add_func    (0X71000452B8,0X71000452C8);
	set_func_flags(0X71000452B8,0x1400);
	SetType(0X71000452B8, "__int64 __fastcall sub_71000452B8(_QWORD);");
	add_func    (0X71000452D0,0X7100045314);
	set_func_flags(0X71000452D0,0x1410);
	set_frame_size(0X71000452D0, 0, 16, 0);
	add_func    (0X7100045320,0X7100045360);
	set_func_flags(0X7100045320,0x1410);
	SetType(0X7100045320, "__int64 __fastcall sub_7100045320(_QWORD, _QWORD);");
	set_frame_size(0X7100045320, 0, 16, 0);
	add_func    (0X7100045360,0X710004536C);
	set_func_flags(0X7100045360,0x1400);
	SetType(0X7100045360, "__int64 sub_7100045360(void);");
	add_func    (0X710004536C,0X7100045374);
	set_func_flags(0X710004536C,0x1400);
	SetType(0X710004536C, "__int64 __fastcall sub_710004536C(__int64);");
	add_func    (0X7100045380,0X71000453BC);
	set_func_flags(0X7100045380,0x1410);
	set_frame_size(0X7100045380, 0, 32, 0);
	add_func    (0X71000453C0,0X71000454B8);
	set_func_flags(0X71000453C0,0x1410);
	set_frame_size(0X71000453C0, 0X40, 0, 0);
	add_func    (0X71000454C0,0X71000454FC);
	set_func_flags(0X71000454C0,0x1410);
	set_frame_size(0X71000454C0, 0, 32, 0);
	add_func    (0X71000454FC,0X7100045630);
	set_func_flags(0X71000454FC,0x1410);
	set_frame_size(0X71000454FC, 0X90, 48, 0);
	add_func    (0X7100045630,0X7100045984);
	set_func_flags(0X7100045630,0x1410);
	set_frame_size(0X7100045630, 0X10, 96, 0);
	add_func    (0X7100045984,0X7100045A8C);
	set_func_flags(0X7100045984,0x1410);
	set_frame_size(0X7100045984, 0X10, 64, 0);
	add_func    (0X7100045A8C,0X7100045A94);
	set_func_flags(0X7100045A8C,0x1400);
	add_func    (0X7100045A94,0X7100045AEC);
	set_func_flags(0X7100045A94,0x1410);
	set_frame_size(0X7100045A94, 0, 32, 0);
	add_func    (0X7100045AEC,0X7100045AF4);
	set_func_flags(0X7100045AEC,0x1400);
	add_func    (0X7100045AF4,0X7100045B00);
	set_func_flags(0X7100045AF4,0x1400);
	add_func    (0X7100045B00,0X7100045B14);
	set_func_flags(0X7100045B00,0x1400);
	add_func    (0X7100045B14,0X7100045B20);
	set_func_flags(0X7100045B14,0x1400);
	add_func    (0X7100045B20,0X7100045B2C);
	set_func_flags(0X7100045B20,0x1400);
	add_func    (0X7100045B2C,0X7100045BC0);
	set_func_flags(0X7100045B2C,0x1410);
	set_frame_size(0X7100045B2C, 0X20, 32, 0);
	add_func    (0X7100045BC0,0X7100045BD8);
	set_func_flags(0X7100045BC0,0x1400);
	add_func    (0X7100045BD8,0X7100045BE4);
	set_func_flags(0X7100045BD8,0x1400);
	add_func    (0X7100045BE4,0X7100045BF8);
	set_func_flags(0X7100045BE4,0x1400);
	add_func    (0X7100045BF8,0X7100045C00);
	set_func_flags(0X7100045BF8,0x1400);
	add_func    (0X7100045C00,0X7100045C08);
	set_func_flags(0X7100045C00,0x1400);
	add_func    (0X7100045C08,0X7100045D40);
	set_func_flags(0X7100045C08,0x1410);
	set_frame_size(0X7100045C08, 0X90, 48, 0);
	add_func    (0X7100045D40,0X7100045F2C);
	set_func_flags(0X7100045D40,0x1410);
	set_frame_size(0X7100045D40, 0XB0, 64, 0);
	add_func    (0X7100045F2C,0X7100046064);
	set_func_flags(0X7100045F2C,0x1410);
	set_frame_size(0X7100045F2C, 0X90, 48, 0);
	add_func    (0X7100046064,0X7100046110);
	set_func_flags(0X7100046064,0x1410);
	set_frame_size(0X7100046064, 0X20, 16, 0);
	add_func    (0X7100046110,0X7100046118);
	set_func_flags(0X7100046110,0x1400);
	add_func    (0X7100046118,0X7100046170);
	set_func_flags(0X7100046118,0x1410);
	set_frame_size(0X7100046118, 0, 32, 0);
	add_func    (0X7100046170,0X7100046178);
	set_func_flags(0X7100046170,0x1400);
	add_func    (0X7100046178,0X7100046184);
	set_func_flags(0X7100046178,0x1400);
	add_func    (0X7100046184,0X710004618C);
	set_func_flags(0X7100046184,0x1400);
	add_func    (0X710004618C,0X7100046194);
	set_func_flags(0X710004618C,0x1400);
	add_func    (0X7100046194,0X710004638C);
	set_func_flags(0X7100046194,0x1410);
	set_frame_size(0X7100046194, 0XB0, 64, 0);
	add_func    (0X710004638C,0X7100046578);
	set_func_flags(0X710004638C,0x1410);
	set_frame_size(0X710004638C, 0XB0, 64, 0);
	add_func    (0X7100046578,0X7100046580);
	set_func_flags(0X7100046578,0x1400);
	add_func    (0X7100046580,0X7100046634);
	set_func_flags(0X7100046580,0x1410);
	set_frame_size(0X7100046580, 0X20, 16, 0);
	add_func    (0X7100046640,0X7100046658);
	set_func_flags(0X7100046640,0x1410);
	set_frame_size(0X7100046640, 0, 16, 0);
	add_func    (0X7100046658,0X7100046660);
	set_func_flags(0X7100046658,0x1400);
	add_func    (0X7100046660,0X71000467D0);
	set_func_flags(0X7100046660,0x1410);
	set_frame_size(0X7100046660, 0X30, 32, 0);
	add_func    (0X71000467D0,0X71000467DC);
	set_func_flags(0X71000467D0,0x1400);
	add_func    (0X71000467E0,0X71000467EC);
	set_func_flags(0X71000467E0,0x1400);
	add_func    (0X71000467EC,0X71000467F0);
	set_func_flags(0X71000467EC,0x1440);
	add_func    (0X71000467F0,0X71000467F4);
	set_func_flags(0X71000467F0,0x1440);
	add_func    (0X71000467F4,0X71000467FC);
	set_func_flags(0X71000467F4,0x1400);
	add_func    (0X71000467FC,0X7100046804);
	set_func_flags(0X71000467FC,0x1400);
	add_func    (0X7100046804,0X710004680C);
	set_func_flags(0X7100046804,0x1400);
	add_func    (0X710004680C,0X7100046814);
	set_func_flags(0X710004680C,0x1400);
	add_func    (0X7100046814,0X710004681C);
	set_func_flags(0X7100046814,0x1400);
	add_func    (0X710004681C,0X7100046824);
	set_func_flags(0X710004681C,0x1400);
	add_func    (0X7100046824,0X710004682C);
	set_func_flags(0X7100046824,0x1400);
	add_func    (0X710004682C,0X71000468F0);
	set_func_flags(0X710004682C,0x1410);
	set_frame_size(0X710004682C, 0, 32, 0);
	add_func    (0X71000468F0,0X7100046944);
	set_func_flags(0X71000468F0,0x1410);
	set_frame_size(0X71000468F0, 0X20, 16, 0);
	add_func    (0X7100046944,0X7100046950);
	set_func_flags(0X7100046944,0x1400);
	add_func    (0X7100046950,0X7100046954);
	set_func_flags(0X7100046950,0x1440);
	add_func    (0X7100046954,0X7100046978);
	set_func_flags(0X7100046954,0x1410);
	set_frame_size(0X7100046954, 0, 16, 0);
	add_func    (0X7100046978,0X7100046984);
	set_func_flags(0X7100046978,0x1411);
	set_frame_size(0X7100046978, 0, 16, 0);
	add_func    (0X7100046984,0X71000469E8);
	set_func_flags(0X7100046984,0x1410);
	set_frame_size(0X7100046984, 0, 32, 0);
	add_func    (0X71000469E8,0X71000469F0);
	set_func_flags(0X71000469E8,0x1400);
	add_func    (0X71000469F0,0X71000469F4);
	set_func_flags(0X71000469F0,0x1440);
	add_func    (0X71000469F4,0X7100046A24);
	set_func_flags(0X71000469F4,0x1410);
	set_frame_size(0X71000469F4, 0X20, 0, 0);
	add_func    (0X7100046A24,0X7100046A34);
	set_func_flags(0X7100046A24,0x1410);
	set_frame_size(0X7100046A24, 0, 16, 0);
	add_func    (0X7100046A34,0X7100046AEC);
	set_func_flags(0X7100046A34,0x1410);
	set_frame_size(0X7100046A34, 0X20, 0, 0);
	add_func    (0X7100046AEC,0X7100046BAC);
	set_func_flags(0X7100046AEC,0x1410);
	set_frame_size(0X7100046AEC, 0X20, 0, 0);
	add_func    (0X7100046BAC,0X7100046BB4);
	set_func_flags(0X7100046BAC,0x1400);
	add_func    (0X7100046BB4,0X7100046BB8);
	set_func_flags(0X7100046BB4,0x1440);
	add_func    (0X7100046BB8,0X7100046BE8);
	set_func_flags(0X7100046BB8,0x1410);
	set_frame_size(0X7100046BB8, 0X20, 0, 0);
	add_func    (0X7100046BE8,0X7100046BF8);
	set_func_flags(0X7100046BE8,0x1410);
	set_frame_size(0X7100046BE8, 0, 16, 0);
	add_func    (0X7100046BF8,0X7100046C00);
	set_func_flags(0X7100046BF8,0x1400);
	add_func    (0X7100046C00,0X7100046D08);
	set_func_flags(0X7100046C00,0x1410);
	set_frame_size(0X7100046C00, 0X30, 0, 0);
	add_func    (0X7100046D08,0X7100046D54);
	set_func_flags(0X7100046D08,0x1400);
	add_func    (0X7100046D54,0X7100046EC0);
	set_func_flags(0X7100046D54,0x1410);
	set_frame_size(0X7100046D54, 0XC0, 32, 0);
	add_func    (0X7100046EC0,0X7100047058);
	set_func_flags(0X7100046EC0,0x1410);
	set_frame_size(0X7100046EC0, 0XB0, 64, 0);
	add_func    (0X7100047058,0X71000471F0);
	set_func_flags(0X7100047058,0x1410);
	set_frame_size(0X7100047058, 0XB0, 64, 0);
	add_func    (0X71000471F0,0X7100047388);
	set_func_flags(0X71000471F0,0x1410);
	set_frame_size(0X71000471F0, 0XB0, 64, 0);
	add_func    (0X7100047388,0X710004752C);
	set_func_flags(0X7100047388,0x1410);
	set_frame_size(0X7100047388, 0XC0, 32, 0);
	define_local_var(0X7100047388, 0X710004752C, "[bp-0X8]", "result");
	add_func    (0X710004752C,0X7100047748);
	set_func_flags(0X710004752C,0x1410);
	set_frame_size(0X710004752C, 0X110, 48, 0);
	add_func    (0X7100047748,0X7100047964);
	set_func_flags(0X7100047748,0x1410);
	set_frame_size(0X7100047748, 0X110, 48, 0);
	add_func    (0X7100047970,0X71000479E0);
	set_func_flags(0X7100047970,0x1410);
	SetType(0X7100047970, "__int64 sub_7100047970();");
	set_frame_size(0X7100047970, 0, 32, 0);
	add_func    (0X71000479E0,0X7100047D40);
	set_func_flags(0X71000479E0,0x1410);
	SetType(0X71000479E0, "__int64 __fastcall sub_71000479E0(__int64);");
	set_frame_size(0X71000479E0, 0X1A0, 96, 0);
	add_func    (0X7100047D40,0X7100047D78);
	set_func_flags(0X7100047D40,0x1400);
	SetType(0X7100047D40, "__int64 __fastcall sub_7100047D40(__int64 result);");
	add_func    (0X7100047D78,0X7100047DE4);
	set_func_flags(0X7100047D78,0x1410);
	set_frame_size(0X7100047D78, 0, 32, 0);
	add_func    (0X7100047DE4,0X7100047F14);
	set_func_flags(0X7100047DE4,0x1410);
	set_frame_size(0X7100047DE4, 0X20, 32, 0);
	add_func    (0X7100047F20,0X7100047FC0);
	set_func_flags(0X7100047F20,0x1410);
	set_frame_size(0X7100047F20, 0X20, 16, 0);
	add_func    (0X7100047FC0,0X7100047FD4);
	set_func_flags(0X7100047FC0,0x1400);
	add_func    (0X7100047FD4,0X7100047FE8);
	set_func_flags(0X7100047FD4,0x1400);
	add_func    (0X7100047FE8,0X7100048014);
	set_func_flags(0X7100047FE8,0x1410);
	set_frame_size(0X7100047FE8, 0, 16, 0);
	add_func    (0X7100048014,0X7100048050);
	set_func_flags(0X7100048014,0x1410);
	set_frame_size(0X7100048014, 0, 16, 0);
	add_func    (0X7100048050,0X7100048350);
	set_func_flags(0X7100048050,0x1400);
	set_frame_size(0X7100048050, 0X20, 0, 0);
	add_func    (0X7100048350,0X7100048650);
	set_func_flags(0X7100048350,0x1400);
	set_frame_size(0X7100048350, 0X20, 0, 0);
	add_func    (0X7100048650,0X7100048734);
	set_func_flags(0X7100048650,0x1400);
	SetType(0X7100048650, "__int64 __fastcall sub_7100048650(_QWORD, _QWORD);");
	add_func    (0X7100048734,0X71000489DC);
	set_func_flags(0X7100048734,0x1410);
	SetType(0X7100048734, "__int64 __fastcall IPmModule__Initialise(nn::psc::sf::IPmModule **a1, unsigned int PmModuleId, __int64 dependency, unsigned int dependency_size, unsigned int a5);");
	set_frame_size(0X7100048734, 0X30, 64, 0);
	define_local_var(0X7100048734, 0X71000489DC, "[bp-0X28]", "dependencies");
	define_local_var(0X7100048734, 0X71000489DC, "[bp-0X10]", "handle");
	add_func    (0X71000489DC,0X7100048B28);
	set_func_flags(0X71000489DC,0x1410);
	SetType(0X71000489DC, "__int64 __fastcall sub_71000489DC(__int64, __int64 *);");
	set_frame_size(0X71000489DC, 0X20, 64, 0);
	add_func    (0X7100048B28,0X7100048BD0);
	set_func_flags(0X7100048B28,0x1410);
	SetType(0X7100048B28, "__int64 __fastcall sub_7100048B28(_QWORD);");
	set_frame_size(0X7100048B28, 0, 48, 0);
	add_func    (0X7100048BD0,0X7100048CF8);
	set_func_flags(0X7100048BD0,0x1410);
	SetType(0X7100048BD0, "__int64 __fastcall sub_7100048BD0(nn::psc::sf::IPmModule **this);");
	set_frame_size(0X7100048BD0, 0, 32, 0);
	add_func    (0X7100048CF8,0X7100048D18);
	set_func_flags(0X7100048CF8,0x1400);
	SetType(0X7100048CF8, "__int64 __fastcall GetIpmModuleRequest(nn::psc::sf::IPmModule **this, nn::psc::PmState out_request, int out_flags);");
	add_func    (0X7100048D18,0X7100048D64);
	set_func_flags(0X7100048D18,0x1410);
	SetType(0X7100048D18, "__int64 __fastcall IpmModule__Acknowledge(nn::psc::sf::IPmModule **a1, __int64 request_id, int a3);");
	set_frame_size(0X7100048D18, 0X10, 16, 0);
	add_func    (0X7100048D64,0X7100048D6C);
	set_func_flags(0X7100048D64,0x1400);
	SetType(0X7100048D64, "nn::os::SystemEventType *__fastcall gIPmModuleService__GetEvent(nn::psc::sf::IPmModule *);");
	add_func    (0X7100048D6C,0X7100048D80);
	set_func_flags(0X7100048D6C,0x1400);
	SetType(0X7100048D6C, "nn::psc::sf::IPmModule *__fastcall nn__psc__sf__IPmModule__IPmModule(nn::psc::sf::IPmModule *result);");
	add_func    (0X7100048D80,0X7100048EA8);
	set_func_flags(0X7100048D80,0x1410);
	set_frame_size(0X7100048D80, 0X20, 16, 0);
	add_func    (0X7100048EA8,0X71000491FC);
	set_func_flags(0X7100048EA8,0x1410);
	SetType(0X7100048EA8, "__int64 __fastcall sub_7100048EA8(_QWORD, _QWORD);");
	set_frame_size(0X7100048EA8, 0X10, 96, 0);
	add_func    (0X71000491FC,0X7100049304);
	set_func_flags(0X71000491FC,0x1410);
	set_frame_size(0X71000491FC, 0X10, 64, 0);
	add_func    (0X7100049304,0X710004930C);
	set_func_flags(0X7100049304,0x1400);
	add_func    (0X710004930C,0X7100049364);
	set_func_flags(0X710004930C,0x1410);
	set_frame_size(0X710004930C, 0, 32, 0);
	add_func    (0X7100049364,0X710004936C);
	set_func_flags(0X7100049364,0x1400);
	add_func    (0X710004936C,0X7100049400);
	set_func_flags(0X710004936C,0x1410);
	set_frame_size(0X710004936C, 0X20, 32, 0);
	add_func    (0X7100049400,0X7100049408);
	set_func_flags(0X7100049400,0x1400);
	add_func    (0X7100049408,0X7100049410);
	set_func_flags(0X7100049408,0x1400);
	add_func    (0X7100049410,0X71000494BC);
	set_func_flags(0X7100049410,0x1410);
	set_frame_size(0X7100049410, 0X20, 16, 0);
	add_func    (0X71000494BC,0X71000494C4);
	set_func_flags(0X71000494BC,0x1400);
	add_func    (0X71000494C4,0X710004951C);
	set_func_flags(0X71000494C4,0x1410);
	set_frame_size(0X71000494C4, 0, 32, 0);
	add_func    (0X710004951C,0X7100049524);
	set_func_flags(0X710004951C,0x1400);
	add_func    (0X7100049524,0X710004953C);
	set_func_flags(0X7100049524,0x1400);
	add_func    (0X710004953C,0X7100049548);
	set_func_flags(0X710004953C,0x1400);
	add_func    (0X7100049548,0X7100049554);
	set_func_flags(0X7100049548,0x1400);
	add_func    (0X7100049554,0X7100049560);
	set_func_flags(0X7100049554,0x1400);
	add_func    (0X7100049560,0X7100049570);
	set_func_flags(0X7100049560,0x1400);
	add_func    (0X7100049570,0X7100049578);
	set_func_flags(0X7100049570,0x1400);
	add_func    (0X7100049578,0X7100049580);
	set_func_flags(0X7100049578,0x1400);
	add_func    (0X7100049580,0X710004979C);
	set_func_flags(0X7100049580,0x1410);
	set_frame_size(0X7100049580, 0X90, 96, 0);
	add_func    (0X710004979C,0X71000497A4);
	set_func_flags(0X710004979C,0x1400);
	add_func    (0X71000497A4,0X7100049858);
	set_func_flags(0X71000497A4,0x1410);
	set_frame_size(0X71000497A4, 0X20, 16, 0);
	add_func    (0X7100049860,0X71000498A8);
	set_func_flags(0X7100049860,0x1410);
	SetType(0X7100049860, "__int64 __fastcall SetSys_GetSettingsItemValue(__int64, __int64, _BYTE *, _BYTE *);");
	set_frame_size(0X7100049860, 0X10, 16, 0);
	add_func    (0X71000498B0,0X71000499A8);
	set_func_flags(0X71000498B0,0x1410);
	SetType(0X71000498B0, "__int64 __fastcall sub_71000498B0(_QWORD *, __int64, __int64, _BYTE *, _BYTE *);");
	set_frame_size(0X71000498B0, 0XB0, 64, 0);
	add_func    (0X71000499B0,0X71000499E8);
	set_func_flags(0X71000499B0,0x1410);
	SetType(0X71000499B0, "__int64 SetSys__GetQuestFlag_();");
	set_frame_size(0X71000499B0, 0X10, 16, 0);
	add_func    (0X71000499E8,0X7100049AD4);
	set_func_flags(0X71000499E8,0x1410);
	set_frame_size(0X71000499E8, 0X90, 32, 0);
	add_func    (0X7100049AD4,0X7100049C70);
	set_func_flags(0X7100049AD4,0x1410);
	set_frame_size(0X7100049AD4, 0X90, 64, 0);
	add_func    (0X7100049C70,0X7100049D54);
	set_func_flags(0X7100049C70,0x1410);
	SetType(0X7100049C70, "__int64 __fastcall sub_7100049C70(_QWORD, _QWORD, _QWORD);");
	set_frame_size(0X7100049C70, 0X90, 32, 0);
	add_func    (0X7100049D54,0X7100049EDC);
	set_func_flags(0X7100049D54,0x1410);
	set_frame_size(0X7100049D54, 0XB0, 32, 0);
	add_func    (0X7100049EE0,0X7100049F54);
	set_func_flags(0X7100049EE0,0x1410);
	SetType(0X7100049EE0, "__int64 __fastcall SetSys_GetQuestFlag(__int64);");
	set_frame_size(0X7100049EE0, 0X10, 32, 0);
	add_func    (0X7100049F54,0X710004A0F0);
	set_func_flags(0X7100049F54,0x1410);
	set_frame_size(0X7100049F54, 0X90, 64, 0);
	add_func    (0X710004A0F0,0X710004A1DC);
	set_func_flags(0X710004A0F0,0x1410);
	SetType(0X710004A0F0, "__int64 __fastcall sub_710004A0F0(_QWORD, _QWORD, _QWORD);");
	set_frame_size(0X710004A0F0, 0X90, 32, 0);
	add_func    (0X710004A1DC,0X710004A368);
	set_func_flags(0X710004A1DC,0x1410);
	set_frame_size(0X710004A1DC, 0XB0, 32, 0);
	add_func    (0X710004A370,0X710004A5BC);
	set_func_flags(0X710004A370,0x1410);
	SetType(0X710004A370, "__int64 __fastcall GetService_SetSys(__int64 *);");
	set_frame_size(0X710004A370, 0X20, 32, 0);
	add_func    (0X710004A5BC,0X710004A5D4);
	set_func_flags(0X710004A5BC,0x1400);
	add_func    (0X710004A5D4,0X710004A5DC);
	set_func_flags(0X710004A5D4,0x1400);
	add_func    (0X710004A5DC,0X710004A68C);
	set_func_flags(0X710004A5DC,0x1410);
	set_frame_size(0X710004A5DC, 0XA0, 48, 0);
	add_func    (0X710004A68C,0X710004A694);
	set_func_flags(0X710004A68C,0x1400);
	add_func    (0X710004A694,0X710004A6A0);
	set_func_flags(0X710004A694,0x1400);
	add_func    (0X710004A6A0,0X710004A6BC);
	set_func_flags(0X710004A6A0,0x1400);
	add_func    (0X710004A6BC,0X710004A6D8);
	set_func_flags(0X710004A6BC,0x1400);
	add_func    (0X710004A6D8,0X710004A6E8);
	set_func_flags(0X710004A6D8,0x1400);
	add_func    (0X710004A6E8,0X710004A6F8);
	set_func_flags(0X710004A6E8,0x1400);
	add_func    (0X710004A6F8,0X710004A704);
	set_func_flags(0X710004A6F8,0x1400);
	add_func    (0X710004A704,0X710004A710);
	set_func_flags(0X710004A704,0x1400);
	add_func    (0X710004A710,0X710004A720);
	set_func_flags(0X710004A710,0x1400);
	add_func    (0X710004A720,0X710004A72C);
	set_func_flags(0X710004A720,0x1400);
	add_func    (0X710004A72C,0X710004A738);
	set_func_flags(0X710004A72C,0x1400);
	add_func    (0X710004A738,0X710004A750);
	set_func_flags(0X710004A738,0x1400);
	add_func    (0X710004A750,0X710004A768);
	set_func_flags(0X710004A750,0x1400);
	add_func    (0X710004A768,0X710004A774);
	set_func_flags(0X710004A768,0x1400);
	add_func    (0X710004A774,0X710004A780);
	set_func_flags(0X710004A774,0x1400);
	add_func    (0X710004A780,0X710004A78C);
	set_func_flags(0X710004A780,0x1400);
	add_func    (0X710004A78C,0X710004A798);
	set_func_flags(0X710004A78C,0x1400);
	add_func    (0X710004A798,0X710004A7A4);
	set_func_flags(0X710004A798,0x1400);
	add_func    (0X710004A7A4,0X710004A7B4);
	set_func_flags(0X710004A7A4,0x1400);
	add_func    (0X710004A7B4,0X710004A7C4);
	set_func_flags(0X710004A7B4,0x1400);
	add_func    (0X710004A7C4,0X710004A7D4);
	set_func_flags(0X710004A7C4,0x1400);
	add_func    (0X710004A7D4,0X710004A7F0);
	set_func_flags(0X710004A7D4,0x1400);
	add_func    (0X710004A7F0,0X710004A80C);
	set_func_flags(0X710004A7F0,0x1400);
	add_func    (0X710004A80C,0X710004A818);
	set_func_flags(0X710004A80C,0x1400);
	add_func    (0X710004A818,0X710004A828);
	set_func_flags(0X710004A818,0x1400);
	add_func    (0X710004A828,0X710004A834);
	set_func_flags(0X710004A828,0x1400);
	add_func    (0X710004A834,0X710004A844);
	set_func_flags(0X710004A834,0x1400);
	add_func    (0X710004A844,0X710004A850);
	set_func_flags(0X710004A844,0x1400);
	add_func    (0X710004A850,0X710004A860);
	set_func_flags(0X710004A850,0x1400);
	add_func    (0X710004A860,0X710004A86C);
	set_func_flags(0X710004A860,0x1400);
	add_func    (0X710004A86C,0X710004A878);
	set_func_flags(0X710004A86C,0x1400);
	add_func    (0X710004A878,0X710004A894);
	set_func_flags(0X710004A878,0x1400);
	add_func    (0X710004A894,0X710004A8B0);
	set_func_flags(0X710004A894,0x1400);
	add_func    (0X710004A8B0,0X710004A8BC);
	set_func_flags(0X710004A8B0,0x1400);
	add_func    (0X710004A8BC,0X710004A8CC);
	set_func_flags(0X710004A8BC,0x1400);
	add_func    (0X710004A8CC,0X710004A8E4);
	set_func_flags(0X710004A8CC,0x1400);
	add_func    (0X710004A8E4,0X710004A924);
	set_func_flags(0X710004A8E4,0x1410);
	set_frame_size(0X710004A8E4, 0X10, 16, 0);
	add_func    (0X710004A924,0X710004A930);
	set_func_flags(0X710004A924,0x1400);
	add_func    (0X710004A930,0X710004A93C);
	set_func_flags(0X710004A930,0x1400);
	add_func    (0X710004A93C,0X710004A94C);
	set_func_flags(0X710004A93C,0x1400);
	add_func    (0X710004A94C,0X710004A95C);
	set_func_flags(0X710004A94C,0x1400);
	add_func    (0X710004A95C,0X710004A96C);
	set_func_flags(0X710004A95C,0x1400);
	add_func    (0X710004A96C,0X710004A980);
	set_func_flags(0X710004A96C,0x1400);
	SetType(0X710004A96C, "__int64 __fastcall sub_710004A96C(__int64, unsigned int, unsigned int);");
	add_func    (0X710004A980,0X710004A98C);
	set_func_flags(0X710004A980,0x1400);
	SetType(0X710004A980, "__int64 __fastcall sub_710004A980(__int64, __int64);");
	add_func    (0X710004A98C,0X710004A99C);
	set_func_flags(0X710004A98C,0x1400);
	SetType(0X710004A98C, "__int64 __fastcall sub_710004A98C(__int64, char);");
	add_func    (0X710004A99C,0X710004A9A8);
	set_func_flags(0X710004A99C,0x1400);
	SetType(0X710004A99C, "__int64 __fastcall sub_710004A99C(__int64, __int64);");
	add_func    (0X710004A9A8,0X710004A9B8);
	set_func_flags(0X710004A9A8,0x1400);
	add_func    (0X710004A9B8,0X710004A9C4);
	set_func_flags(0X710004A9B8,0x1400);
	add_func    (0X710004A9C4,0X710004A9D0);
	set_func_flags(0X710004A9C4,0x1400);
	add_func    (0X710004A9D0,0X710004A9DC);
	set_func_flags(0X710004A9D0,0x1400);
	add_func    (0X710004A9DC,0X710004A9E8);
	set_func_flags(0X710004A9DC,0x1400);
	add_func    (0X710004A9E8,0X710004A9F4);
	set_func_flags(0X710004A9E8,0x1400);
	add_func    (0X710004A9F4,0X710004AA00);
	set_func_flags(0X710004A9F4,0x1400);
	add_func    (0X710004AA00,0X710004AA0C);
	set_func_flags(0X710004AA00,0x1400);
	add_func    (0X710004AA0C,0X710004AA20);
	set_func_flags(0X710004AA0C,0x1400);
	add_func    (0X710004AA20,0X710004AA30);
	set_func_flags(0X710004AA20,0x1400);
	add_func    (0X710004AA30,0X710004AA3C);
	set_func_flags(0X710004AA30,0x1400);
	add_func    (0X710004AA3C,0X710004AA48);
	set_func_flags(0X710004AA3C,0x1400);
	add_func    (0X710004AA48,0X710004AA54);
	set_func_flags(0X710004AA48,0x1400);
	add_func    (0X710004AA54,0X710004AA64);
	set_func_flags(0X710004AA54,0x1400);
	add_func    (0X710004AA64,0X710004AA70);
	set_func_flags(0X710004AA64,0x1400);
	add_func    (0X710004AA70,0X710004AA7C);
	set_func_flags(0X710004AA70,0x1400);
	add_func    (0X710004AA7C,0X710004AA8C);
	set_func_flags(0X710004AA7C,0x1400);
	add_func    (0X710004AA8C,0X710004AA98);
	set_func_flags(0X710004AA8C,0x1400);
	add_func    (0X710004AA98,0X710004AAA8);
	set_func_flags(0X710004AA98,0x1400);
	add_func    (0X710004AAA8,0X710004AAB4);
	set_func_flags(0X710004AAA8,0x1400);
	add_func    (0X710004AAB4,0X710004AAC0);
	set_func_flags(0X710004AAB4,0x1400);
	add_func    (0X710004AAC0,0X710004AACC);
	set_func_flags(0X710004AAC0,0x1400);
	add_func    (0X710004AACC,0X710004AADC);
	set_func_flags(0X710004AACC,0x1400);
	add_func    (0X710004AADC,0X710004AAE8);
	set_func_flags(0X710004AADC,0x1400);
	add_func    (0X710004AAE8,0X710004AAF4);
	set_func_flags(0X710004AAE8,0x1400);
	add_func    (0X710004AAF4,0X710004AB00);
	set_func_flags(0X710004AAF4,0x1400);
	add_func    (0X710004AB00,0X710004AB10);
	set_func_flags(0X710004AB00,0x1400);
	add_func    (0X710004AB10,0X710004AB1C);
	set_func_flags(0X710004AB10,0x1400);
	add_func    (0X710004AB1C,0X710004AB28);
	set_func_flags(0X710004AB1C,0x1400);
	add_func    (0X710004AB28,0X710004AB38);
	set_func_flags(0X710004AB28,0x1400);
	add_func    (0X710004AB38,0X710004AB48);
	set_func_flags(0X710004AB38,0x1400);
	add_func    (0X710004AB48,0X710004AB54);
	set_func_flags(0X710004AB48,0x1400);
	add_func    (0X710004AB54,0X710004AB60);
	set_func_flags(0X710004AB54,0x1400);
	add_func    (0X710004AB60,0X710004AB70);
	set_func_flags(0X710004AB60,0x1400);
	add_func    (0X710004AB70,0X710004AB7C);
	set_func_flags(0X710004AB70,0x1400);
	add_func    (0X710004AB7C,0X710004AB88);
	set_func_flags(0X710004AB7C,0x1400);
	add_func    (0X710004AB88,0X710004AB94);
	set_func_flags(0X710004AB88,0x1400);
	add_func    (0X710004AB94,0X710004ABA0);
	set_func_flags(0X710004AB94,0x1400);
	add_func    (0X710004ABA0,0X710004ABAC);
	set_func_flags(0X710004ABA0,0x1400);
	add_func    (0X710004ABAC,0X710004ABB8);
	set_func_flags(0X710004ABAC,0x1400);
	add_func    (0X710004ABB8,0X710004ABC4);
	set_func_flags(0X710004ABB8,0x1400);
	add_func    (0X710004ABC4,0X710004ABD4);
	set_func_flags(0X710004ABC4,0x1400);
	add_func    (0X710004ABD4,0X710004ABE0);
	set_func_flags(0X710004ABD4,0x1400);
	add_func    (0X710004ABE0,0X710004ABEC);
	set_func_flags(0X710004ABE0,0x1400);
	add_func    (0X710004ABEC,0X710004ABF8);
	set_func_flags(0X710004ABEC,0x1400);
	add_func    (0X710004ABF8,0X710004AC04);
	set_func_flags(0X710004ABF8,0x1400);
	add_func    (0X710004AC04,0X710004AC10);
	set_func_flags(0X710004AC04,0x1400);
	add_func    (0X710004AC10,0X710004AC1C);
	set_func_flags(0X710004AC10,0x1400);
	add_func    (0X710004AC1C,0X710004AC2C);
	set_func_flags(0X710004AC1C,0x1400);
	add_func    (0X710004AC2C,0X710004AC48);
	set_func_flags(0X710004AC2C,0x1400);
	add_func    (0X710004AC48,0X710004AC64);
	set_func_flags(0X710004AC48,0x1400);
	add_func    (0X710004AC64,0X710004AC70);
	set_func_flags(0X710004AC64,0x1400);
	add_func    (0X710004AC70,0X710004AC80);
	set_func_flags(0X710004AC70,0x1400);
	add_func    (0X710004AC80,0X710004AC8C);
	set_func_flags(0X710004AC80,0x1400);
	add_func    (0X710004AC8C,0X710004AC9C);
	set_func_flags(0X710004AC8C,0x1400);
	add_func    (0X710004AC9C,0X710004ACA8);
	set_func_flags(0X710004AC9C,0x1400);
	add_func    (0X710004ACA8,0X710004ACB8);
	set_func_flags(0X710004ACA8,0x1400);
	add_func    (0X710004ACB8,0X710004ACC4);
	set_func_flags(0X710004ACB8,0x1400);
	add_func    (0X710004ACC4,0X710004ACD0);
	set_func_flags(0X710004ACC4,0x1400);
	add_func    (0X710004ACD0,0X710004ACDC);
	set_func_flags(0X710004ACD0,0x1400);
	add_func    (0X710004ACDC,0X710004ACE8);
	set_func_flags(0X710004ACDC,0x1400);
	add_func    (0X710004ACE8,0X710004ACF4);
	set_func_flags(0X710004ACE8,0x1400);
	add_func    (0X710004ACF4,0X710004AD04);
	set_func_flags(0X710004ACF4,0x1400);
	add_func    (0X710004AD04,0X710004AD10);
	set_func_flags(0X710004AD04,0x1400);
	add_func    (0X710004AD10,0X710004AD20);
	set_func_flags(0X710004AD10,0x1400);
	add_func    (0X710004AD20,0X710004AD2C);
	set_func_flags(0X710004AD20,0x1400);
	add_func    (0X710004AD2C,0X710004AD3C);
	set_func_flags(0X710004AD2C,0x1400);
	add_func    (0X710004AD3C,0X710004AD48);
	set_func_flags(0X710004AD3C,0x1400);
	add_func    (0X710004AD48,0X710004AD58);
	set_func_flags(0X710004AD48,0x1400);
	add_func    (0X710004AD58,0X710004AD64);
	set_func_flags(0X710004AD58,0x1400);
	add_func    (0X710004AD64,0X710004AD74);
	set_func_flags(0X710004AD64,0x1400);
	SetType(0X710004AD64, "__int64 __fastcall sub_710004AD64(__int64, char);");
	add_func    (0X710004AD74,0X710004AD80);
	set_func_flags(0X710004AD74,0x1400);
	SetType(0X710004AD74, "__int64 __fastcall sub_710004AD74(__int64, __int64);");
	add_func    (0X710004AD80,0X710004AD90);
	set_func_flags(0X710004AD80,0x1400);
	add_func    (0X710004AD90,0X710004AD9C);
	set_func_flags(0X710004AD90,0x1400);
	add_func    (0X710004AD9C,0X710004ADAC);
	set_func_flags(0X710004AD9C,0x1400);
	add_func    (0X710004ADAC,0X710004ADB8);
	set_func_flags(0X710004ADAC,0x1400);
	add_func    (0X710004ADB8,0X710004ADC8);
	set_func_flags(0X710004ADB8,0x1400);
	add_func    (0X710004ADC8,0X710004ADD4);
	set_func_flags(0X710004ADC8,0x1400);
	add_func    (0X710004ADD4,0X710004ADE4);
	set_func_flags(0X710004ADD4,0x1400);
	add_func    (0X710004ADE4,0X710004ADF0);
	set_func_flags(0X710004ADE4,0x1400);
	add_func    (0X710004ADF0,0X710004ADFC);
	set_func_flags(0X710004ADF0,0x1400);
	add_func    (0X710004ADFC,0X710004AE08);
	set_func_flags(0X710004ADFC,0x1400);
	add_func    (0X710004AE08,0X710004AE14);
	set_func_flags(0X710004AE08,0x1400);
	add_func    (0X710004AE14,0X710004AE20);
	set_func_flags(0X710004AE14,0x1400);
	add_func    (0X710004AE20,0X710004AE2C);
	set_func_flags(0X710004AE20,0x1400);
	add_func    (0X710004AE2C,0X710004AE38);
	set_func_flags(0X710004AE2C,0x1400);
	add_func    (0X710004AE38,0X710004AE44);
	set_func_flags(0X710004AE38,0x1400);
	add_func    (0X710004AE44,0X710004AE50);
	set_func_flags(0X710004AE44,0x1400);
	add_func    (0X710004AE50,0X710004AE60);
	set_func_flags(0X710004AE50,0x1400);
	add_func    (0X710004AE60,0X710004AE6C);
	set_func_flags(0X710004AE60,0x1400);
	add_func    (0X710004AE6C,0X710004AE84);
	set_func_flags(0X710004AE6C,0x1400);
	add_func    (0X710004AE84,0X710004AE94);
	set_func_flags(0X710004AE84,0x1400);
	add_func    (0X710004AE94,0X710004AEA0);
	set_func_flags(0X710004AE94,0x1400);
	add_func    (0X710004AEA0,0X710004AEB0);
	set_func_flags(0X710004AEA0,0x1400);
	add_func    (0X710004AEB0,0X710004AEC8);
	set_func_flags(0X710004AEB0,0x1400);
	add_func    (0X710004AEC8,0X710004AEE0);
	set_func_flags(0X710004AEC8,0x1400);
	add_func    (0X710004AEE0,0X710004AEEC);
	set_func_flags(0X710004AEE0,0x1400);
	add_func    (0X710004AEEC,0X710004AEF8);
	set_func_flags(0X710004AEEC,0x1400);
	add_func    (0X710004AEF8,0X710004AF04);
	set_func_flags(0X710004AEF8,0x1400);
	add_func    (0X710004AF04,0X710004AF10);
	set_func_flags(0X710004AF04,0x1400);
	add_func    (0X710004AF10,0X710004AF1C);
	set_func_flags(0X710004AF10,0x1400);
	add_func    (0X710004AF1C,0X710004AF28);
	set_func_flags(0X710004AF1C,0x1400);
	add_func    (0X710004AF28,0X710004AF34);
	set_func_flags(0X710004AF28,0x1400);
	add_func    (0X710004AF34,0X710004AF40);
	set_func_flags(0X710004AF34,0x1400);
	add_func    (0X710004AF40,0X710004AF4C);
	set_func_flags(0X710004AF40,0x1400);
	add_func    (0X710004AF4C,0X710004AF68);
	set_func_flags(0X710004AF4C,0x1400);
	add_func    (0X710004AF68,0X710004AF84);
	set_func_flags(0X710004AF68,0x1400);
	add_func    (0X710004AF84,0X710004AF90);
	set_func_flags(0X710004AF84,0x1400);
	add_func    (0X710004AF90,0X710004AFA0);
	set_func_flags(0X710004AF90,0x1400);
	add_func    (0X710004AFA0,0X710004AFAC);
	set_func_flags(0X710004AFA0,0x1400);
	add_func    (0X710004AFAC,0X710004AFB8);
	set_func_flags(0X710004AFAC,0x1400);
	add_func    (0X710004AFB8,0X710004AFC4);
	set_func_flags(0X710004AFB8,0x1400);
	add_func    (0X710004AFC4,0X710004AFD0);
	set_func_flags(0X710004AFC4,0x1400);
	add_func    (0X710004AFD0,0X710004AFDC);
	set_func_flags(0X710004AFD0,0x1400);
	add_func    (0X710004AFDC,0X710004AFEC);
	set_func_flags(0X710004AFDC,0x1400);
	add_func    (0X710004AFEC,0X710004AFF8);
	set_func_flags(0X710004AFEC,0x1400);
	add_func    (0X710004AFF8,0X710004B008);
	set_func_flags(0X710004AFF8,0x1400);
	add_func    (0X710004B008,0X710004B014);
	set_func_flags(0X710004B008,0x1400);
	add_func    (0X710004B014,0X710004B024);
	set_func_flags(0X710004B014,0x1400);
	add_func    (0X710004B024,0X710004B034);
	set_func_flags(0X710004B024,0x1400);
	add_func    (0X710004B034,0X710004B044);
	set_func_flags(0X710004B034,0x1400);
	add_func    (0X710004B044,0X710004B050);
	set_func_flags(0X710004B044,0x1400);
	add_func    (0X710004B050,0X710004B060);
	set_func_flags(0X710004B050,0x1400);
	add_func    (0X710004B060,0X710004B06C);
	set_func_flags(0X710004B060,0x1400);
	add_func    (0X710004B06C,0X710004B07C);
	set_func_flags(0X710004B06C,0x1400);
	add_func    (0X710004B07C,0X710004B088);
	set_func_flags(0X710004B07C,0x1400);
	add_func    (0X710004B088,0X710004B094);
	set_func_flags(0X710004B088,0x1400);
	add_func    (0X710004B094,0X710004B0A0);
	set_func_flags(0X710004B094,0x1400);
	add_func    (0X710004B0A0,0X710004B0AC);
	set_func_flags(0X710004B0A0,0x1400);
	add_func    (0X710004B0AC,0X710004B0B8);
	set_func_flags(0X710004B0AC,0x1400);
	add_func    (0X710004B0B8,0X710004B0C4);
	set_func_flags(0X710004B0B8,0x1400);
	add_func    (0X710004B0C4,0X710004B0D4);
	set_func_flags(0X710004B0C4,0x1400);
	add_func    (0X710004B0D4,0X710004B0E0);
	set_func_flags(0X710004B0D4,0x1400);
	add_func    (0X710004B0E0,0X710004B0F0);
	set_func_flags(0X710004B0E0,0x1400);
	add_func    (0X710004B0F0,0X710004B0FC);
	set_func_flags(0X710004B0F0,0x1400);
	add_func    (0X710004B0FC,0X710004B10C);
	set_func_flags(0X710004B0FC,0x1400);
	add_func    (0X710004B10C,0X710004B118);
	set_func_flags(0X710004B10C,0x1400);
	add_func    (0X710004B118,0X710004B124);
	set_func_flags(0X710004B118,0x1400);
	add_func    (0X710004B124,0X710004B130);
	set_func_flags(0X710004B124,0x1400);
	add_func    (0X710004B130,0X710004B140);
	set_func_flags(0X710004B130,0x1400);
	add_func    (0X710004B140,0X710004B15C);
	set_func_flags(0X710004B140,0x1400);
	add_func    (0X710004B15C,0X710004B178);
	set_func_flags(0X710004B15C,0x1400);
	add_func    (0X710004B178,0X710004B194);
	set_func_flags(0X710004B178,0x1400);
	add_func    (0X710004B194,0X710004B1B0);
	set_func_flags(0X710004B194,0x1400);
	add_func    (0X710004B1B0,0X710004B1CC);
	set_func_flags(0X710004B1B0,0x1400);
	add_func    (0X710004B1CC,0X710004B1E8);
	set_func_flags(0X710004B1CC,0x1400);
	add_func    (0X710004B1E8,0X710004B204);
	set_func_flags(0X710004B1E8,0x1400);
	add_func    (0X710004B204,0X710004B220);
	set_func_flags(0X710004B204,0x1400);
	add_func    (0X710004B220,0X710004B230);
	set_func_flags(0X710004B220,0x1400);
	add_func    (0X710004B230,0X710004B240);
	set_func_flags(0X710004B230,0x1400);
	add_func    (0X710004B240,0X710004B25C);
	set_func_flags(0X710004B240,0x1400);
	add_func    (0X710004B25C,0X710004B278);
	set_func_flags(0X710004B25C,0x1400);
	add_func    (0X710004B278,0X710004B284);
	set_func_flags(0X710004B278,0x1400);
	add_func    (0X710004B284,0X710004B294);
	set_func_flags(0X710004B284,0x1400);
	add_func    (0X710004B294,0X710004B2A0);
	set_func_flags(0X710004B294,0x1400);
	add_func    (0X710004B2A0,0X710004B2B0);
	set_func_flags(0X710004B2A0,0x1400);
	add_func    (0X710004B2B0,0X710004B2CC);
	set_func_flags(0X710004B2B0,0x1400);
	add_func    (0X710004B2CC,0X710004B2E8);
	set_func_flags(0X710004B2CC,0x1400);
	add_func    (0X710004B2E8,0X710004B2F4);
	set_func_flags(0X710004B2E8,0x1400);
	add_func    (0X710004B2F4,0X710004B304);
	set_func_flags(0X710004B2F4,0x1400);
	add_func    (0X710004B304,0X710004B310);
	set_func_flags(0X710004B304,0x1400);
	add_func    (0X710004B310,0X710004B31C);
	set_func_flags(0X710004B310,0x1400);
	add_func    (0X710004B31C,0X710004B324);
	set_func_flags(0X710004B31C,0x1400);
	add_func    (0X710004B324,0X710004B32C);
	set_func_flags(0X710004B324,0x1400);
	add_func    (0X710004B32C,0X710004B410);
	set_func_flags(0X710004B32C,0x1410);
	set_frame_size(0X710004B32C, 0X90, 32, 0);
	add_func    (0X710004B410,0X710004B5DC);
	set_func_flags(0X710004B410,0x1410);
	set_frame_size(0X710004B410, 0X90, 64, 0);
	add_func    (0X710004B5DC,0X710004B6E0);
	set_func_flags(0X710004B5DC,0x1410);
	set_frame_size(0X710004B5DC, 0X90, 32, 0);
	add_func    (0X710004B6E0,0X710004B7DC);
	set_func_flags(0X710004B6E0,0x1410);
	set_frame_size(0X710004B6E0, 0X90, 32, 0);
	add_func    (0X710004B7DC,0X710004B8E0);
	set_func_flags(0X710004B7DC,0x1410);
	set_frame_size(0X710004B7DC, 0X90, 32, 0);
	add_func    (0X710004B8E0,0X710004B9CC);
	set_func_flags(0X710004B8E0,0x1410);
	set_frame_size(0X710004B8E0, 0X90, 32, 0);
	add_func    (0X710004B9CC,0X710004BAB8);
	set_func_flags(0X710004B9CC,0x1410);
	set_frame_size(0X710004B9CC, 0X90, 32, 0);
	add_func    (0X710004BAB8,0X710004BBAC);
	set_func_flags(0X710004BAB8,0x1410);
	set_frame_size(0X710004BAB8, 0X90, 32, 0);
	add_func    (0X710004BBAC,0X710004BCC8);
	set_func_flags(0X710004BBAC,0x1410);
	set_frame_size(0X710004BBAC, 0X70, 48, 0);
	add_func    (0X710004BCC8,0X710004BDBC);
	set_func_flags(0X710004BCC8,0x1410);
	set_frame_size(0X710004BCC8, 0X70, 64, 0);
	add_func    (0X710004BDBC,0X710004BEA8);
	set_func_flags(0X710004BDBC,0x1410);
	set_frame_size(0X710004BDBC, 0X90, 32, 0);
	add_func    (0X710004BEA8,0X710004BF9C);
	set_func_flags(0X710004BEA8,0x1410);
	set_frame_size(0X710004BEA8, 0X90, 32, 0);
	add_func    (0X710004BF9C,0X710004C094);
	set_func_flags(0X710004BF9C,0x1410);
	set_frame_size(0X710004BF9C, 0X90, 32, 0);
	add_func    (0X710004C094,0X710004C29C);
	set_func_flags(0X710004C094,0x1410);
	set_frame_size(0X710004C094, 0XC0, 64, 0);
	add_func    (0X710004C29C,0X710004C4A4);
	set_func_flags(0X710004C29C,0x1410);
	set_frame_size(0X710004C29C, 0XC0, 96, 0);
	add_func    (0X710004C4A4,0X710004C598);
	set_func_flags(0X710004C4A4,0x1410);
	set_frame_size(0X710004C4A4, 0X90, 32, 0);
	add_func    (0X710004C598,0X710004C6B4);
	set_func_flags(0X710004C598,0x1410);
	set_frame_size(0X710004C598, 0X70, 48, 0);
	add_func    (0X710004C6B4,0X710004C880);
	set_func_flags(0X710004C6B4,0x1410);
	set_frame_size(0X710004C6B4, 0X90, 64, 0);
	add_func    (0X710004C880,0X710004CA58);
	set_func_flags(0X710004C880,0x1410);
	set_frame_size(0X710004C880, 0X90, 64, 0);
	add_func    (0X710004CA58,0X710004CB4C);
	set_func_flags(0X710004CA58,0x1410);
	set_frame_size(0X710004CA58, 0X70, 64, 0);
	add_func    (0X710004CB4C,0X710004CC34);
	set_func_flags(0X710004CB4C,0x1410);
	SetType(0X710004CB4C, "__int64 __fastcall sub_710004CB4C(_QWORD, _QWORD, _QWORD, _QWORD);");
	set_frame_size(0X710004CB4C, 0X90, 32, 0);
	add_func    (0X710004CC34,0X710004CD20);
	set_func_flags(0X710004CC34,0x1410);
	set_frame_size(0X710004CC34, 0X90, 32, 0);
	add_func    (0X710004CD20,0X710004CE04);
	set_func_flags(0X710004CD20,0x1410);
	set_frame_size(0X710004CD20, 0X90, 32, 0);
	add_func    (0X710004CE04,0X710004CF08);
	set_func_flags(0X710004CE04,0x1410);
	set_frame_size(0X710004CE04, 0X90, 32, 0);
	add_func    (0X710004CF08,0X710004D014);
	set_func_flags(0X710004CF08,0x1410);
	set_frame_size(0X710004CF08, 0X90, 32, 0);
	add_func    (0X710004D014,0X710004D108);
	set_func_flags(0X710004D014,0x1410);
	set_frame_size(0X710004D014, 0X90, 32, 0);
	add_func    (0X710004D108,0X710004D1FC);
	set_func_flags(0X710004D108,0x1410);
	set_frame_size(0X710004D108, 0X90, 32, 0);
	add_func    (0X710004D1FC,0X710004D2F4);
	set_func_flags(0X710004D1FC,0x1410);
	set_frame_size(0X710004D1FC, 0X90, 32, 0);
	add_func    (0X710004D2F4,0X710004D480);
	set_func_flags(0X710004D2F4,0x1410);
	set_frame_size(0X710004D2F4, 0XB0, 32, 0);
	add_func    (0X710004D480,0X710004D56C);
	set_func_flags(0X710004D480,0x1410);
	set_frame_size(0X710004D480, 0X90, 32, 0);
	add_func    (0X710004D56C,0X710004D664);
	set_func_flags(0X710004D56C,0x1410);
	set_frame_size(0X710004D56C, 0X90, 32, 0);
	add_func    (0X710004D664,0X710004D748);
	set_func_flags(0X710004D664,0x1410);
	set_frame_size(0X710004D664, 0X90, 32, 0);
	add_func    (0X710004D748,0X710004D84C);
	set_func_flags(0X710004D748,0x1410);
	set_frame_size(0X710004D748, 0X90, 32, 0);
	add_func    (0X710004D84C,0X710004D95C);
	set_func_flags(0X710004D84C,0x1410);
	set_frame_size(0X710004D84C, 0X90, 32, 0);
	add_func    (0X710004D95C,0X710004DA60);
	set_func_flags(0X710004D95C,0x1410);
	set_frame_size(0X710004D95C, 0X90, 32, 0);
	add_func    (0X710004DA60,0X710004DB6C);
	set_func_flags(0X710004DA60,0x1410);
	set_frame_size(0X710004DA60, 0X90, 32, 0);
	add_func    (0X710004DB6C,0X710004DCF8);
	set_func_flags(0X710004DB6C,0x1410);
	set_frame_size(0X710004DB6C, 0XB0, 32, 0);
	add_func    (0X710004DCF8,0X710004DDFC);
	set_func_flags(0X710004DCF8,0x1410);
	set_frame_size(0X710004DCF8, 0X90, 32, 0);
	add_func    (0X710004DDFC,0X710004DEF0);
	set_func_flags(0X710004DDFC,0x1410);
	set_frame_size(0X710004DDFC, 0X90, 32, 0);
	add_func    (0X710004DEF0,0X710004DFE8);
	set_func_flags(0X710004DEF0,0x1410);
	set_frame_size(0X710004DEF0, 0X90, 32, 0);
	add_func    (0X710004DFE8,0X710004E0D4);
	set_func_flags(0X710004DFE8,0x1410);
	set_frame_size(0X710004DFE8, 0X90, 32, 0);
	add_func    (0X710004E0D4,0X710004E1C0);
	set_func_flags(0X710004E0D4,0x1410);
	set_frame_size(0X710004E0D4, 0X90, 32, 0);
	add_func    (0X710004E1C0,0X710004E2EC);
	set_func_flags(0X710004E1C0,0x1410);
	set_frame_size(0X710004E1C0, 0X70, 64, 0);
	add_func    (0X710004E2EC,0X710004E438);
	set_func_flags(0X710004E2EC,0x1410);
	set_frame_size(0X710004E2EC, 0X90, 32, 0);
	add_func    (0X710004E438,0X710004E52C);
	set_func_flags(0X710004E438,0x1410);
	set_frame_size(0X710004E438, 0X90, 32, 0);
	add_func    (0X710004E52C,0X710004E6B8);
	set_func_flags(0X710004E52C,0x1410);
	set_frame_size(0X710004E52C, 0XB0, 32, 0);
	add_func    (0X710004E6B8,0X710004E844);
	set_func_flags(0X710004E6B8,0x1410);
	set_frame_size(0X710004E6B8, 0XB0, 32, 0);
	add_func    (0X710004E850,0X710004E87C);
	set_func_flags(0X710004E850,0x1410);
	SetType(0X710004E850, "__int64 __fastcall SetSys_GetExternalSteadyClockSourceId_W(__int64);");
	set_frame_size(0X710004E850, 0X10, 16, 0);
	add_func    (0X710004E880,0X710004E8AC);
	set_func_flags(0X710004E880,0x1410);
	SetType(0X710004E880, "__int64 __fastcall SetSys_SetExternalSteadyClockSourceId_(__int64);");
	set_frame_size(0X710004E880, 0X10, 16, 0);
	add_func    (0X710004E8B0,0X710004E8E8);
	set_func_flags(0X710004E8B0,0x1410);
	SetType(0X710004E8B0, "__int64 SetSys_GetExternalSteadyClockInternalOffset_();");
	set_frame_size(0X710004E8B0, 0X10, 16, 0);
	add_func    (0X710004E8F0,0X710004E91C);
	set_func_flags(0X710004E8F0,0x1410);
	SetType(0X710004E8F0, "__int64 __fastcall SetSys__SetExternalSteadyClockInternalOffset_(__int64 offset_seconds);");
	set_frame_size(0X710004E8F0, 0X10, 16, 0);
	add_func    (0X710004E920,0X710004E94C);
	set_func_flags(0X710004E920,0x1410);
	SetType(0X710004E920, "__int64 __fastcall SetSys_GetUserSystemClockContext_W(__int64);");
	set_frame_size(0X710004E920, 0X10, 16, 0);
	add_func    (0X710004E950,0X710004E97C);
	set_func_flags(0X710004E950,0x1410);
	SetType(0X710004E950, "__int64 __fastcall SetSys_SetUserSystemClockContext_(SystemClockContext *context);");
	set_frame_size(0X710004E950, 0X10, 16, 0);
	add_func    (0X710004E980,0X710004E9AC);
	set_func_flags(0X710004E980,0x1410);
	SetType(0X710004E980, "__int64 __fastcall SetSys_GetNetworkSystemClockContext_(__int64);");
	set_frame_size(0X710004E980, 0X10, 16, 0);
	add_func    (0X710004E9B0,0X710004E9DC);
	set_func_flags(0X710004E9B0,0x1410);
	SetType(0X710004E9B0, "__int64 __fastcall SetSys_SetNetworkSystemClockContext_(SystemClockContext *context);");
	set_frame_size(0X710004E9B0, 0X10, 16, 0);
	add_func    (0X710004E9E0,0X710004EA18);
	set_func_flags(0X710004E9E0,0x1410);
	SetType(0X710004E9E0, "__int64 SetSys_IsUserSystemClockAutomaticCorrectionEnabled_();");
	set_frame_size(0X710004E9E0, 0X10, 16, 0);
	add_func    (0X710004EA20,0X710004EA4C);
	set_func_flags(0X710004EA20,0x1410);
	SetType(0X710004EA20, "__int64 __fastcall SetSys_SetUserSystemClockAutomaticCorrection_(bool);");
	set_frame_size(0X710004EA20, 0X10, 16, 0);
	add_func    (0X710004EA50,0X710004EA7C);
	set_func_flags(0X710004EA50,0x1410);
	SetType(0X710004EA50, "__int64 __fastcall SetSys_GetUserSystemClockAutomaticCorrectionUpdatedTime_(__int64);");
	set_frame_size(0X710004EA50, 0X10, 16, 0);
	add_func    (0X710004EA80,0X710004EAAC);
	set_func_flags(0X710004EA80,0x1410);
	SetType(0X710004EA80, "__int64 __fastcall SetSys_SetUserSystemClockAutoCorrectionUpdatedTime_(SystemClockContext *);");
	set_frame_size(0X710004EA80, 0X10, 16, 0);
	add_func    (0X710004EAB0,0X710004EB24);
	set_func_flags(0X710004EAB0,0x1410);
	SetType(0X710004EAB0, "__int64 __fastcall SetSys_GetExternalSteadyClockSourceId(__int64);");
	set_frame_size(0X710004EAB0, 0X10, 32, 0);
	add_func    (0X710004EB30,0X710004EBA4);
	set_func_flags(0X710004EB30,0x1410);
	SetType(0X710004EB30, "__int64 __fastcall SetSys_SetExternalSteadyClockSourceId(__int64);");
	set_frame_size(0X710004EB30, 0X10, 32, 0);
	add_func    (0X710004EBB0,0X710004EC24);
	set_func_flags(0X710004EBB0,0x1410);
	SetType(0X710004EBB0, "__int64 __fastcall SetSys_GetExternalSteadyClockInternalOffset(__int64);");
	set_frame_size(0X710004EBB0, 0X10, 32, 0);
	add_func    (0X710004EC30,0X710004ECA4);
	set_func_flags(0X710004EC30,0x1410);
	SetType(0X710004EC30, "__int64 __fastcall SetSys__SetExternalSteadyClockInternalOffset(__int64 offset);");
	set_frame_size(0X710004EC30, 0X10, 32, 0);
	add_func    (0X710004ECB0,0X710004ED24);
	set_func_flags(0X710004ECB0,0x1410);
	SetType(0X710004ECB0, "__int64 __fastcall SetSys_GetUserSystemClockContext(__int64);");
	set_frame_size(0X710004ECB0, 0X10, 32, 0);
	add_func    (0X710004ED30,0X710004EDA4);
	set_func_flags(0X710004ED30,0x1410);
	SetType(0X710004ED30, "__int64 __fastcall SetSys_SetUserSystemClockContext(SystemClockContext *context);");
	set_frame_size(0X710004ED30, 0X10, 32, 0);
	add_func    (0X710004EDB0,0X710004EE24);
	set_func_flags(0X710004EDB0,0x1410);
	SetType(0X710004EDB0, "__int64 __fastcall SetSys_GetNetworkSystemClockContext(__int64);");
	set_frame_size(0X710004EDB0, 0X10, 32, 0);
	add_func    (0X710004EE30,0X710004EEA4);
	set_func_flags(0X710004EE30,0x1410);
	SetType(0X710004EE30, "__int64 __fastcall SetSys_SetNetworkSystemClockContext(SystemClockContext *context);");
	set_frame_size(0X710004EE30, 0X10, 32, 0);
	add_func    (0X710004EEB0,0X710004EF24);
	set_func_flags(0X710004EEB0,0x1410);
	SetType(0X710004EEB0, "__int64 __fastcall SetSys_IsUserSystemClockAutomaticCorrectionEnabled(__int64);");
	set_frame_size(0X710004EEB0, 0X10, 32, 0);
	add_func    (0X710004EF30,0X710004EFA4);
	set_func_flags(0X710004EF30,0x1410);
	SetType(0X710004EF30, "__int64 __fastcall SetSys_SetUserSystemClockAutomaticCorrection(bool automatic_correction);");
	set_frame_size(0X710004EF30, 0X10, 32, 0);
	add_func    (0X710004EFB0,0X710004F024);
	set_func_flags(0X710004EFB0,0x1410);
	SetType(0X710004EFB0, "__int64 __fastcall SetSys_GetUserSystemClockAutomaticCorrectionUpdatedTime(__int64);");
	set_frame_size(0X710004EFB0, 0X10, 32, 0);
	add_func    (0X710004F030,0X710004F0A4);
	set_func_flags(0X710004F030,0x1410);
	SetType(0X710004F030, "__int64 __fastcall SetSys_SetUserSystemClockAutoCorrectionUpdatedTime(SystemClockContext *clock_context);");
	set_frame_size(0X710004F030, 0X10, 32, 0);
	add_func    (0X710004F0B0,0X710004F0DC);
	set_func_flags(0X710004F0B0,0x1410);
	SetType(0X710004F0B0, "__int64 __fastcall SetSys_GetDeviceTimeZoneLocationName_(__int64);");
	set_frame_size(0X710004F0B0, 0X10, 16, 0);
	add_func    (0X710004F0E0,0X710004F10C);
	set_func_flags(0X710004F0E0,0x1410);
	SetType(0X710004F0E0, "__int64 __fastcall SetSys_SetDeviceTimeZoneLocationName_(__int64);");
	set_frame_size(0X710004F0E0, 0X10, 16, 0);
	add_func    (0X710004F110,0X710004F13C);
	set_func_flags(0X710004F110,0x1410);
	SetType(0X710004F110, "__int64 __fastcall SetSys_GetDeviceTimeZoneLocationUpdatedTime_(__int64);");
	set_frame_size(0X710004F110, 0X10, 16, 0);
	add_func    (0X710004F140,0X710004F16C);
	set_func_flags(0X710004F140,0x1410);
	SetType(0X710004F140, "__int64 __fastcall SetSys_SetDeviceTimeZoneLocationUpdatedTime_(__int64);");
	set_frame_size(0X710004F140, 0X10, 16, 0);
	add_func    (0X710004F170,0X710004F1E4);
	set_func_flags(0X710004F170,0x1410);
	SetType(0X710004F170, "__int64 __fastcall SetSys_GetDeviceTimeZoneLocationName(__int64);");
	set_frame_size(0X710004F170, 0X10, 32, 0);
	add_func    (0X710004F1F0,0X710004F264);
	set_func_flags(0X710004F1F0,0x1410);
	SetType(0X710004F1F0, "__int64 __fastcall SetSys_SetDeviceTimeZoneLocationName(__int64);");
	set_frame_size(0X710004F1F0, 0X10, 32, 0);
	add_func    (0X710004F270,0X710004F2E4);
	set_func_flags(0X710004F270,0x1410);
	SetType(0X710004F270, "__int64 __fastcall SetSys_GetDeviceTimeZoneLocationUpdatedTime(__int64);");
	set_frame_size(0X710004F270, 0X10, 32, 0);
	add_func    (0X710004F2F0,0X710004F364);
	set_func_flags(0X710004F2F0,0x1410);
	SetType(0X710004F2F0, "__int64 __fastcall SetSys_SetDeviceTimeZoneLocationUpdatedTime(__int64);");
	set_frame_size(0X710004F2F0, 0X10, 32, 0);
	add_func    (0X710004F364,0X710004F3A4);
	set_func_flags(0X710004F364,0x1410);
	SetType(0X710004F364, "__int64 __fastcall nn__srepo__SystemReport__SystemReport(nn::srepo::SystemReport *this, unsigned __int8 *event_id);");
	set_frame_size(0X710004F364, 0X20, 0, 0);
	add_func    (0X710004F3B0,0X710004F6FC);
	set_func_flags(0X710004F3B0,0x1410);
	SetType(0X710004F3B0, "__int64 __fastcall nn__srepo__SystemReport__SetEventId(nn::srepo::SystemReport *this, const char *name);");
	set_frame_size(0X710004F3B0, 0X10, 32, 0);
	define_local_var(0X710004F3B0, 0X710004F6FC, "[bp-0X8]", "name_len");
	add_func    (0X710004F6FC,0X710004F708);
	set_func_flags(0X710004F6FC,0x1400);
	SetType(0X710004F6FC, "bool __fastcall sub_710004F6FC(_QWORD *, __int64, __int64);");
	add_func    (0X710004F708,0X710004F718);
	set_func_flags(0X710004F708,0x1400);
	SetType(0X710004F708, "__int64 __fastcall nn__srepo__SystemReport__SetApplicationId(nn::srepo::SystemReport *this, _QWORD *a2);");
	add_func    (0X710004F718,0X710004F728);
	set_func_flags(0X710004F718,0x1400);
	SetType(0X710004F718, "__int64 __fastcall sub_710004F718(nn::srepo::SystemReport *this, unsigned __int8 *a2, __int64 a3);");
	add_func    (0X710004F728,0X710004F738);
	set_func_flags(0X710004F728,0x1400);
	add_func    (0X710004F738,0X710004F748);
	set_func_flags(0X710004F738,0x1400);
	add_func    (0X710004F748,0X710004F758);
	set_func_flags(0X710004F748,0x1400);
	SetType(0X710004F748, "__int64 __fastcall sub_710004F748(_QWORD *, __int64, char);");
	add_func    (0X710004F758,0X710004F8EC);
	set_func_flags(0X710004F758,0x1410);
	SetType(0X710004F758, "__int64 __fastcall nn__srepo__SystemReport__Report(nn::srepo::SystemReport *this);");
	set_frame_size(0X710004F758, 0X40, 16, 0);
	define_local_var(0X710004F758, 0X710004F8EC, "[bp-0X40]", "buffer");
	define_local_var(0X710004F758, 0X710004F8EC, "[bp-0X30]", "report");
	add_func    (0X710004F8F0,0X710004F984);
	set_func_flags(0X710004F8F0,0x1400);
	SetType(0X710004F8F0, "bool __fastcall GetNameLen(_QWORD *out_name_len, const char *name);");
	add_func    (0X710004F990,0X710004FA2C);
	set_func_flags(0X710004F990,0x1400);
	SetType(0X710004F990, "__int64 __fastcall sub_710004F990(unsigned __int64 *out_len, unsigned __int8 *str);");
	add_func    (0X710004FA30,0X710004FAF4);
	set_func_flags(0X710004FA30,0x1400);
	add_func    (0X710004FAF4,0X710004FB40);
	set_func_flags(0X710004FAF4,0x1410);
	SetType(0X710004FAF4, "bool __fastcall ResetReport_Maybe(_QWORD *current_size, __int64 address, __int64 total_size);");
	set_frame_size(0X710004FAF4, 0X40, 0, 0);
	add_func    (0X710004FB40,0X710004FCD4);
	set_func_flags(0X710004FB40,0x1410);
	SetType(0X710004FB40, "__int64 __fastcall sub_710004FB40(_QWORD *, unsigned __int8 *, __int64, unsigned __int64, __int64);");
	set_frame_size(0X710004FB40, 0X40, 32, 0);
	add_func    (0X710004FCE0,0X710004FED8);
	set_func_flags(0X710004FCE0,0x1410);
	SetType(0X710004FCE0, "__int64 __fastcall sub_710004FCE0(__int64, __int64, unsigned __int8 *);");
	set_frame_size(0X710004FCE0, 0X80, 32, 0);
	add_func    (0X710004FED8,0X710004FFE8);
	set_func_flags(0X710004FED8,0x1410);
	SetType(0X710004FED8, "__int64 __fastcall sub_710004FED8(unsigned __int64 *, unsigned __int8 *, __int64, __int64, unsigned __int64, __int64, unsigned __int64);");
	set_frame_size(0X710004FED8, 0X40, 32, 0);
	add_func    (0X710004FFE8,0X7100050124);
	set_func_flags(0X710004FFE8,0x1410);
	set_frame_size(0X710004FFE8, 0X50, 32, 0);
	add_func    (0X7100050124,0X710005027C);
	set_func_flags(0X7100050124,0x1410);
	set_frame_size(0X7100050124, 0X50, 32, 0);
	add_func    (0X710005027C,0X710005038C);
	set_func_flags(0X710005027C,0x1410);
	SetType(0X710005027C, "__int64 __fastcall sub_710005027C(unsigned __int64 *, __int64, char, __int64, unsigned __int64, __int64, unsigned __int64);");
	set_frame_size(0X710005027C, 0X40, 32, 0);
	add_func    (0X7100050390,0X7100050494);
	set_func_flags(0X7100050390,0x1410);
	SetType(0X7100050390, "__int64 __fastcall sub_7100050390(_QWORD *, __int64, __int64, __int64);");
	set_frame_size(0X7100050390, 0XA0, 16, 0);
	add_func    (0X71000504A0,0X71000504B4);
	set_func_flags(0X71000504A0,0x1400);
	SetType(0X71000504A0, "__int64 __fastcall sub_71000504A0(__int64 result);");
	add_func    (0X71000504B4,0X71000504E8);
	set_func_flags(0X71000504B4,0x1410);
	SetType(0X71000504B4, "__int64 __fastcall sub_71000504B4(_QWORD, _QWORD);");
	set_frame_size(0X71000504B4, 0X20, 16, 0);
	add_func    (0X71000504E8,0X71000504EC);
	set_func_flags(0X71000504E8,0x1440);
	add_func    (0X71000504F0,0X7100050BE8);
	set_func_flags(0X71000504F0,0x1410);
	set_frame_size(0X71000504F0, 0XF0, 64, 0);
	add_func    (0X7100050BE8,0X7100050BEC);
	set_func_flags(0X7100050BE8,0x14c0);
	SetType(0X7100050BE8, "__int64 __fastcall j_delete_5(__int64 result);");
	add_func    (0X7100050BEC,0X7100050C18);
	set_func_flags(0X7100050BEC,0x1410);
	set_frame_size(0X7100050BEC, 0X10, 16, 0);
	add_func    (0X7100050C20,0X7100050D0C);
	set_func_flags(0X7100050C20,0x1410);
	set_frame_size(0X7100050C20, 0X40, 32, 0);
	add_func    (0X7100050D0C,0X7100050E58);
	set_func_flags(0X7100050D0C,0x1410);
	set_frame_size(0X7100050D0C, 0X10, 32, 0);
	add_func    (0X7100050E60,0X7100051324);
	set_func_flags(0X7100050E60,0x1400);
	add_func    (0X7100051330,0X7100051484);
	set_func_flags(0X7100051330,0x1400);
	add_func    (0X7100051484,0X7100051508);
	set_func_flags(0X7100051484,0x1410);
	set_frame_size(0X7100051484, 0, 32, 0);
	add_func    (0X7100051508,0X7100051518);
	set_func_flags(0X7100051508,0x1400);
	add_func    (0X7100051518,0X7100051680);
	set_func_flags(0X7100051518,0x1410);
	set_frame_size(0X7100051518, 0X30, 48, 0);
	define_local_var(0X7100051518, 0X7100051680, "[bp-0X18]", "result");
	add_func    (0X7100051680,0X7100051730);
	set_func_flags(0X7100051680,0x1410);
	set_frame_size(0X7100051680, 0X30, 32, 0);
	add_func    (0X7100051730,0X7100051744);
	set_func_flags(0X7100051730,0x1400);
	add_func    (0X7100051744,0X71000517A0);
	set_func_flags(0X7100051744,0x1410);
	set_frame_size(0X7100051744, 0, 32, 0);
	add_func    (0X71000517A0,0X71000517AC);
	set_func_flags(0X71000517A0,0x1400);
	add_func    (0X71000517B0,0X710005182C);
	set_func_flags(0X71000517B0,0x1410);
	set_frame_size(0X71000517B0, 0X20, 16, 0);
	add_func    (0X7100051830,0X710005185C);
	set_func_flags(0X7100051830,0x1411);
	set_frame_size(0X7100051830, 0X20, 0, 0);
	add_func    (0X7100051860,0X7100051A74);
	set_func_flags(0X7100051860,0x1410);
	SetType(0X7100051860, "unsigned int *sub_7100051860();");
	set_frame_size(0X7100051860, 0X20, 48, 0);
	add_func    (0X7100051A80,0X7100051AB8);
	set_func_flags(0X7100051A80,0x1410);
	SetType(0X7100051A80, "__int64 GetService_SRepo();");
	set_frame_size(0X7100051A80, 0, 32, 0);
	add_func    (0X7100051AB8,0X7100051E0C);
	set_func_flags(0X7100051AB8,0x1410);
	SetType(0X7100051AB8, "__int64 __fastcall sub_7100051AB8(__int64 *, __int64 *);");
	set_frame_size(0X7100051AB8, 0X10, 96, 0);
	add_func    (0X7100051E0C,0X7100051F14);
	set_func_flags(0X7100051E0C,0x1410);
	SetType(0X7100051E0C, "__int64 __fastcall sub_7100051E0C(__int64, __int64 *, __int64, unsigned int);");
	set_frame_size(0X7100051E0C, 0X10, 64, 0);
	add_func    (0X7100051F14,0X7100051F1C);
	set_func_flags(0X7100051F14,0x1400);
	add_func    (0X7100051F1C,0X7100051F74);
	set_func_flags(0X7100051F1C,0x1410);
	set_frame_size(0X7100051F1C, 0, 32, 0);
	add_func    (0X7100051F74,0X7100051F7C);
	set_func_flags(0X7100051F74,0x1400);
	add_func    (0X7100051F7C,0X7100051F9C);
	set_func_flags(0X7100051F7C,0x1400);
	SetType(0X7100051F7C, "__int64 __fastcall nn__srepo__detail__ipc__ISrepoService__SaveReport(__int64, _QWORD *, __int64, _QWORD *);");
	add_func    (0X7100051F9C,0X7100051FBC);
	set_func_flags(0X7100051F9C,0x1400);
	add_func    (0X7100051FBC,0X7100051FDC);
	set_func_flags(0X7100051FBC,0x1400);
	SetType(0X7100051FBC, "__int64 __fastcall nn__srepo__detail__ipc__ISrepoService__SaveReportForAntiPiracy(__int64, _QWORD *, __int64, _QWORD *);");
	add_func    (0X7100051FDC,0X7100051FFC);
	set_func_flags(0X7100051FDC,0x1400);
	add_func    (0X7100051FFC,0X71000520EC);
	set_func_flags(0X7100051FFC,0x1410);
	set_frame_size(0X7100051FFC, 0X50, 64, 0);
	add_func    (0X71000520EC,0X7100052104);
	set_func_flags(0X71000520EC,0x1400);
	add_func    (0X7100052104,0X7100052110);
	set_func_flags(0X7100052104,0x1400);
	add_func    (0X7100052110,0X710005211C);
	set_func_flags(0X7100052110,0x1400);
	add_func    (0X710005211C,0X7100052128);
	set_func_flags(0X710005211C,0x1400);
	add_func    (0X7100052128,0X7100052134);
	set_func_flags(0X7100052128,0x1400);
	add_func    (0X7100052134,0X7100052148);
	set_func_flags(0X7100052134,0x1400);
	add_func    (0X7100052148,0X7100052158);
	set_func_flags(0X7100052148,0x1400);
	add_func    (0X7100052158,0X7100052168);
	set_func_flags(0X7100052158,0x1400);
	add_func    (0X7100052168,0X7100052178);
	set_func_flags(0X7100052168,0x1400);
	add_func    (0X7100052178,0X7100052188);
	set_func_flags(0X7100052178,0x1400);
	add_func    (0X7100052188,0X7100052194);
	set_func_flags(0X7100052188,0x1400);
	add_func    (0X7100052194,0X71000521A0);
	set_func_flags(0X7100052194,0x1400);
	add_func    (0X71000521A0,0X71000521AC);
	set_func_flags(0X71000521A0,0x1400);
	add_func    (0X71000521AC,0X71000521C4);
	set_func_flags(0X71000521AC,0x1400);
	add_func    (0X71000521C4,0X71000521D8);
	set_func_flags(0X71000521C4,0x1400);
	add_func    (0X71000521D8,0X71000521EC);
	set_func_flags(0X71000521D8,0x1400);
	add_func    (0X71000521EC,0X71000521FC);
	set_func_flags(0X71000521EC,0x1400);
	add_func    (0X71000521FC,0X710005220C);
	set_func_flags(0X71000521FC,0x1400);
	add_func    (0X710005220C,0X7100052220);
	set_func_flags(0X710005220C,0x1400);
	add_func    (0X7100052220,0X710005222C);
	set_func_flags(0X7100052220,0x1400);
	add_func    (0X710005222C,0X71000522F0);
	set_func_flags(0X710005222C,0x1410);
	set_frame_size(0X710005222C, 0X20, 64, 0);
	add_func    (0X71000522F0,0X71000522FC);
	set_func_flags(0X71000522F0,0x1400);
	add_func    (0X71000522FC,0X710005234C);
	set_func_flags(0X71000522FC,0x1410);
	set_frame_size(0X71000522FC, 0X30, 16, 0);
	add_func    (0X710005234C,0X7100052358);
	set_func_flags(0X710005234C,0x1400);
	add_func    (0X7100052358,0X7100052364);
	set_func_flags(0X7100052358,0x1400);
	add_func    (0X7100052364,0X7100052374);
	set_func_flags(0X7100052364,0x1400);
	add_func    (0X7100052374,0X7100052380);
	set_func_flags(0X7100052374,0x1400);
	add_func    (0X7100052380,0X710005238C);
	set_func_flags(0X7100052380,0x1400);
	add_func    (0X710005238C,0X7100052398);
	set_func_flags(0X710005238C,0x1400);
	add_func    (0X7100052398,0X71000523A8);
	set_func_flags(0X7100052398,0x1400);
	add_func    (0X71000523A8,0X71000523B0);
	set_func_flags(0X71000523A8,0x1400);
	add_func    (0X71000523B0,0X71000523B8);
	set_func_flags(0X71000523B0,0x1400);
	add_func    (0X71000523B8,0X71000525A8);
	set_func_flags(0X71000523B8,0x1410);
	SetType(0X71000523B8, "__int64 __fastcall sub_71000523B8(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);");
	set_frame_size(0X71000523B8, 0XB0, 96, 0);
	add_func    (0X71000525A8,0X71000527B8);
	set_func_flags(0X71000525A8,0x1410);
	set_frame_size(0X71000525A8, 0XC0, 96, 0);
	add_func    (0X71000527B8,0X7100052A8C);
	set_func_flags(0X71000527B8,0x1410);
	set_frame_size(0X71000527B8, 0XA0, 96, 0);
	add_func    (0X7100052A8C,0X7100052B38);
	set_func_flags(0X7100052A8C,0x1410);
	set_frame_size(0X7100052A8C, 0X20, 16, 0);
	add_func    (0X7100052B38,0X7100052B40);
	set_func_flags(0X7100052B38,0x1400);
	add_func    (0X7100052B40,0X7100052B98);
	set_func_flags(0X7100052B40,0x1410);
	set_frame_size(0X7100052B40, 0, 32, 0);
	add_func    (0X7100052B98,0X7100052BA0);
	set_func_flags(0X7100052B98,0x1400);
	add_func    (0X7100052BA0,0X7100052BAC);
	set_func_flags(0X7100052BA0,0x1400);
	add_func    (0X7100052BAC,0X7100052BB8);
	set_func_flags(0X7100052BAC,0x1400);
	add_func    (0X7100052BB8,0X7100052BC4);
	set_func_flags(0X7100052BB8,0x1400);
	add_func    (0X7100052BC4,0X7100052BCC);
	set_func_flags(0X7100052BC4,0x1400);
	add_func    (0X7100052BCC,0X7100052BD4);
	set_func_flags(0X7100052BCC,0x1400);
	add_func    (0X7100052BD4,0X7100052D14);
	set_func_flags(0X7100052BD4,0x1410);
	set_frame_size(0X7100052BD4, 0X90, 48, 0);
	add_func    (0X7100052D14,0X7100052E48);
	set_func_flags(0X7100052D14,0x1410);
	set_frame_size(0X7100052D14, 0X90, 48, 0);
	add_func    (0X7100052E48,0X7100052F88);
	set_func_flags(0X7100052E48,0x1410);
	set_frame_size(0X7100052E48, 0X90, 48, 0);
	add_func    (0X7100052F88,0X71000530C4);
	set_func_flags(0X7100052F88,0x1410);
	set_frame_size(0X7100052F88, 0X70, 80, 0);
	add_func    (0X71000530C4,0X71000532AC);
	set_func_flags(0X71000530C4,0x1410);
	set_frame_size(0X71000530C4, 0XB0, 64, 0);
	add_func    (0X71000532AC,0X71000534B4);
	set_func_flags(0X71000532AC,0x1410);
	set_frame_size(0X71000532AC, 0XA0, 96, 0);
	add_func    (0X71000534B4,0X71000536D4);
	set_func_flags(0X71000534B4,0x1410);
	set_frame_size(0X71000534B4, 0X70, 96, 0);
	add_func    (0X71000536D4,0X7100053780);
	set_func_flags(0X71000536D4,0x1410);
	set_frame_size(0X71000536D4, 0X20, 16, 0);
	add_func    (0X7100053780,0X7100053788);
	set_func_flags(0X7100053780,0x1400);
	add_func    (0X7100053788,0X71000537E0);
	set_func_flags(0X7100053788,0x1410);
	set_frame_size(0X7100053788, 0, 32, 0);
	add_func    (0X71000537E0,0X71000537E8);
	set_func_flags(0X71000537E0,0x1400);
	add_func    (0X71000537E8,0X71000537F4);
	set_func_flags(0X71000537E8,0x1400);
	add_func    (0X71000537F4,0X71000537FC);
	set_func_flags(0X71000537F4,0x1400);
	add_func    (0X71000537FC,0X7100053804);
	set_func_flags(0X71000537FC,0x1400);
	add_func    (0X7100053804,0X7100053A3C);
	set_func_flags(0X7100053804,0x1410);
	set_frame_size(0X7100053804, 0XD0, 96, 0);
	add_func    (0X7100053A3C,0X7100053B84);
	set_func_flags(0X7100053A3C,0x1410);
	set_frame_size(0X7100053A3C, 0X70, 80, 0);
	add_func    (0X7100053B84,0X7100053CC4);
	set_func_flags(0X7100053B84,0x1410);
	set_frame_size(0X7100053B84, 0X90, 48, 0);
	add_func    (0X7100053CC4,0X7100053DF0);
	set_func_flags(0X7100053CC4,0x1410);
	set_frame_size(0X7100053CC4, 0X70, 64, 0);
	add_func    (0X7100053DF0,0X7100053F30);
	set_func_flags(0X7100053DF0,0x1410);
	set_frame_size(0X7100053DF0, 0X90, 48, 0);
	add_func    (0X7100053F30,0X7100053F38);
	set_func_flags(0X7100053F30,0x1400);
	add_func    (0X7100053F38,0X7100053FEC);
	set_func_flags(0X7100053F38,0x1410);
	set_frame_size(0X7100053F38, 0X20, 16, 0);
	add_func    (0X7100053FEC,0X7100054000);
	set_func_flags(0X7100053FEC,0x1400);
	add_func    (0X7100054000,0X7100054018);
	set_func_flags(0X7100054000,0x1400);
	add_func    (0X7100054018,0X7100054030);
	set_func_flags(0X7100054018,0x1400);
	SetType(0X7100054018, "__int64 __fastcall sub_7100054018(__int64 *);");
	add_func    (0X7100054030,0X7100054048);
	set_func_flags(0X7100054030,0x1400);
	add_func    (0X7100054048,0X7100054060);
	set_func_flags(0X7100054048,0x1400);
	add_func    (0X7100054060,0X7100054078);
	set_func_flags(0X7100054060,0x1400);
	add_func    (0X7100054080,0X7100054088);
	set_func_flags(0X7100054080,0x1400);
	SetType(0X7100054080, "__int64 GetStaticServiceUser();");
	add_func    (0X7100054090,0X7100054330);
	set_func_flags(0X7100054090,0x1410);
	SetType(0X7100054090, "__int64 __fastcall GetStaticService(int type);");
	set_frame_size(0X7100054090, 0X30, 32, 0);
	add_func    (0X7100054330,0X7100054478);
	set_func_flags(0X7100054330,0x1410);
	SetType(0X7100054330, "__int64 sub_7100054330();");
	set_frame_size(0X7100054330, 0X20, 0, 0);
	add_func    (0X7100054480,0X7100054558);
	set_func_flags(0X7100054480,0x1410);
	SetType(0X7100054480, "__int64 __fastcall GetStandardLocalSystemClock(__int64 *out_local_system_clock);");
	set_frame_size(0X7100054480, 0X20, 16, 0);
	add_func    (0X7100054558,0X710005455C);
	set_func_flags(0X7100054558,0x1440);
	add_func    (0X7100054560,0X7100054650);
	set_func_flags(0X7100054560,0x1410);
	SetType(0X7100054560, "__int64 sub_7100054560();");
	set_frame_size(0X7100054560, 0, 32, 0);
	add_func    (0X7100054650,0X7100054690);
	set_func_flags(0X7100054650,0x1410);
	SetType(0X7100054650, "unsigned int *TimeSharedMemory_GetSetLocalSystemClockContext();");
	set_frame_size(0X7100054650, 0X30, 16, 0);
	define_local_var(0X7100054650, 0X7100054690, "[bp-0X20]", "out_context");
	add_func    (0X7100054690,0X710005469C);
	set_func_flags(0X7100054690,0x1400);
	SetType(0X7100054690, "GlueLockFreeAtomics *TimeSharedMemoryLocal_Init();");
	add_func    (0X710005469C,0X71000546DC);
	set_func_flags(0X710005469C,0x1410);
	SetType(0X710005469C, "unsigned int *TimeSharedMemory_GetSetNetworkSystemClockContext();");
	set_frame_size(0X710005469C, 0X30, 16, 0);
	define_local_var(0X710005469C, 0X71000546DC, "[bp-0X20]", "clock_context");
	add_func    (0X71000546E0,0X71000546EC);
	set_func_flags(0X71000546E0,0x1400);
	SetType(0X71000546E0, "GlueLockFreeAtomics *TimeSharedMemoryNetwork_Init();");
	add_func    (0X71000546F0,0X7100054794);
	set_func_flags(0X71000546F0,0x1410);
	SetType(0X71000546F0, "SystemClock_Wrap *__fastcall StandardLocalSystemClock_GetOperationEventReadableHandle(__int64, unsigned int);");
	set_frame_size(0X71000546F0, 0X20, 32, 0);
	define_local_var(0X71000546F0, 0X7100054794, "[bp-0X8]", "local_system_clock");
	add_func    (0X71000547A0,0X7100054838);
	set_func_flags(0X71000547A0,0x1410);
	SetType(0X71000547A0, "__int64 __fastcall TimeZoneService_GetDeviceLocationNameOperationEventReadableHandle(nn::os::SystemEventType *, unsigned int);");
	set_frame_size(0X71000547A0, 0X10, 32, 0);
	add_func    (0X7100054838,0X710005483C);
	set_func_flags(0X7100054838,0x1440);
	add_func    (0X7100054840,0X7100054890);
	set_func_flags(0X7100054840,0x1410);
	SetType(0X7100054840, "unsigned __int64 __fastcall sub_7100054840(TimeZone::CalendarTime *calendar_time, _QWORD *out_times);");
	set_frame_size(0X7100054840, 0X20, 0, 0);
	add_func    (0X7100054890,0X71000548CC);
	set_func_flags(0X7100054890,0x1410);
	SetType(0X7100054890, "__int64 __fastcall TimeSharedMemory_GetNetworkSystemClockContext_(SystemClockContext *clock_context);");
	set_frame_size(0X7100054890, 0, 16, 0);
	add_func    (0X71000548D0,0X710005492C);
	set_func_flags(0X71000548D0,0x1410);
	SetType(0X71000548D0, "__int64 __fastcall TimeSharedMemory__GetContinuousTimePoint_(__int64);");
	set_frame_size(0X71000548D0, 0X20, 0, 0);
	add_func    (0X710005492C,0X7100054968);
	set_func_flags(0X710005492C,0x1410);
	SetType(0X710005492C, "__int64 __fastcall TimeSharedMemory_GetTimeFromContinuousTimePoint(__int64 time);");
	set_frame_size(0X710005492C, 0, 16, 0);
	add_func    (0X7100054968,0X71000549A4);
	set_func_flags(0X7100054968,0x1410);
	SetType(0X7100054968, "__int64 __fastcall TimeSharedMemory_GetLocalSystemClockContext_(SystemClockContext *out_ctx);");
	set_frame_size(0X7100054968, 0, 16, 0);
	add_func    (0X71000549B0,0X7100054A48);
	set_func_flags(0X71000549B0,0x1410);
	SetType(0X71000549B0, "__int64 __fastcall TimeZoneService_ToCalendarTimeWithMyRule(TimeZone::CalendarTime *calendar_time, TimeZone::CalendarAdditionalInfo *additional_info, __int64 *time);");
	set_frame_size(0X71000549B0, 0X40, 0, 0);
	define_local_var(0X71000549B0, 0X7100054A48, "[bp-0X38]", "additional");
	add_func    (0X7100054A50,0X7100054A54);
	set_func_flags(0X7100054A50,0x1480);
	SetType(0X7100054A50, "unsigned __int64 __fastcall sub_7100054A50(__int64);");
	add_func    (0X7100054A60,0X7100054AE4);
	set_func_flags(0X7100054A60,0x1410);
	SetType(0X7100054A60, "__int64 __fastcall TimeZoneService_ToPosixTimeWithMyRule(__int64 out_count, __int64 out_times_ptr, int num_times, TimeZone::CalendarTime *calendar);");
	set_frame_size(0X7100054A60, 0X10, 16, 0);
	define_local_var(0X7100054A60, 0X7100054AE4, "[bp-0X10]", "buff");
	add_func    (0X7100054AF0,0X7100054AF4);
	set_func_flags(0X7100054AF0,0x14c0);
	SetType(0X7100054AF0, "__int64 __fastcall j_CalendarTimeToUnixEpoch(TimeZone::CalendarTime *calendar_time);");
	add_func    (0X7100054AF4,0X7100054B30);
	set_func_flags(0X7100054AF4,0x1400);
	SetType(0X7100054AF4, "GlueLockFreeAtomics *__fastcall TimeSharedMemory_InitSystemClockContexts(GlueLockFreeAtomics *this);");
	add_func    (0X7100054B30,0X7100054B80);
	set_func_flags(0X7100054B30,0x1410);
	SetType(0X7100054B30, "unsigned int *__fastcall TimeSharedMemory_SetSystemClockContext(GlueLockFreeAtomics *this, SystemClockContext *context);");
	set_frame_size(0X7100054B30, 0, 32, 0);
	add_func    (0X7100054B80,0X7100054C2C);
	set_func_flags(0X7100054B80,0x1410);
	SetType(0X7100054B80, "unsigned __int64 __fastcall TimeSharedMemory_Setup(TimeSharedMemory *this, StaticService_Wrap2 **static_service);");
	set_frame_size(0X7100054B80, 0X10, 32, 0);
	define_local_var(0X7100054B80, 0X7100054C2C, "[bp-0X8]", "shared_mem_handle");
	add_func    (0X7100054C30,0X7100054D00);
	set_func_flags(0X7100054C30,0x1410);
	SetType(0X7100054C30, "__int64 __fastcall TimeSharedMemory__GetContinuousTimePoint(TimeSharedMemory *this, ContinuousAdjustmentTimePoint *out_time_point);");
	set_frame_size(0X7100054C30, 0X10, 64, 0);
	add_func    (0X7100054D00,0X7100054D70);
	set_func_flags(0X7100054D00,0x1410);
	SetType(0X7100054D00, "__int64 __fastcall sub_7100054D00(TimeSharedMemory *this, _QWORD *out_time);");
	set_frame_size(0X7100054D00, 0X40, 0, 0);
	define_local_var(0X7100054D00, 0X7100054D70, "[bp-0X40]", "context");
	add_func    (0X7100054D70,0X7100054E84);
	set_func_flags(0X7100054D70,0x1410);
	SetType(0X7100054D70, "__int64 __fastcall sub_7100054D70(TimeSharedMemory *this, _QWORD *out_time, SystemClockContext *context);");
	set_frame_size(0X7100054D70, 0X40, 32, 0);
	define_local_var(0X7100054D70, 0X7100054E84, "[bp-0X38]", "contin_time_point");
	add_func    (0X7100054E90,0X7100054EE4);
	set_func_flags(0X7100054E90,0x1400);
	SetType(0X7100054E90, "TimeSharedMemory *__fastcall TimeSharedMemory_GetLocalSystemClockContext(TimeSharedMemory *this, SystemClockContext *out_context);");
	set_frame_size(0X7100054E90, 0X20, 0, 0);
	define_local_var(0X7100054E90, 0X7100054EE4, "[bp-0X20]", "clock_ctx");
	add_func    (0X7100054EF0,0X7100054F44);
	set_func_flags(0X7100054EF0,0x1400);
	SetType(0X7100054EF0, "TimeSharedMemory *__fastcall TimeSharedMemory_GetNetworkSystemClockContext(TimeSharedMemory *this, SystemClockContext *out_context);");
	set_frame_size(0X7100054EF0, 0X20, 0, 0);
	add_func    (0X7100054F44,0X7100054F48);
	set_func_flags(0X7100054F44,0x1440);
	SetType(0X7100054F44, "__int64 __fastcall nullsub_68(_QWORD);");
	add_func    (0X7100054F48,0X7100054F4C);
	set_func_flags(0X7100054F48,0x1440);
	add_func    (0X7100054F4C,0X71000550A4);
	set_func_flags(0X7100054F4C,0x1410);
	SetType(0X7100054F4C, "__int64 __fastcall GetService_TimeU(__int64, __int64 *);");
	set_frame_size(0X7100054F4C, 0X20, 32, 0);
	add_func    (0X71000550A4,0X71000551FC);
	set_func_flags(0X71000550A4,0x1410);
	SetType(0X71000550A4, "__int64 __fastcall GetService_TimeA(__int64, __int64 *);");
	set_frame_size(0X71000550A4, 0X20, 32, 0);
	add_func    (0X71000551FC,0X7100055354);
	set_func_flags(0X71000551FC,0x1410);
	SetType(0X71000551FC, "__int64 __fastcall GetService_TimeS(__int64, __int64 *);");
	set_frame_size(0X71000551FC, 0X20, 32, 0);
	add_func    (0X7100055354,0X71000554AC);
	set_func_flags(0X7100055354,0x1410);
	SetType(0X7100055354, "__int64 __fastcall GetService_TimeR(__int64, __int64 *);");
	set_frame_size(0X7100055354, 0X20, 32, 0);
	add_func    (0X71000554AC,0X7100055604);
	set_func_flags(0X71000554AC,0x1410);
	SetType(0X71000554AC, "__int64 __fastcall GetService_TimeSU(__int64, __int64 *);");
	set_frame_size(0X71000554AC, 0X20, 32, 0);
	add_func    (0X7100055604,0X7100055694);
	set_func_flags(0X7100055604,0x1410);
	SetType(0X7100055604, "__int64 sub_7100055604();");
	set_frame_size(0X7100055604, 0X20, 0, 0);
	add_func    (0X7100055694,0X71000559E8);
	set_func_flags(0X7100055694,0x1410);
	SetType(0X7100055694, "__int64 __fastcall sub_7100055694(__int64 *, __int64 *);");
	set_frame_size(0X7100055694, 0X10, 96, 0);
	add_func    (0X71000559E8,0X7100055AF0);
	set_func_flags(0X71000559E8,0x1410);
	SetType(0X71000559E8, "__int64 __fastcall sub_71000559E8(_QWORD, _QWORD, _QWORD, _QWORD);");
	set_frame_size(0X71000559E8, 0X10, 64, 0);
	add_func    (0X7100055AF0,0X7100055AF8);
	set_func_flags(0X7100055AF0,0x1400);
	add_func    (0X7100055AF8,0X7100055B50);
	set_func_flags(0X7100055AF8,0x1410);
	set_frame_size(0X7100055AF8, 0, 32, 0);
	add_func    (0X7100055B50,0X7100055B58);
	set_func_flags(0X7100055B50,0x1400);
	add_func    (0X7100055B58,0X7100055BEC);
	set_func_flags(0X7100055B58,0x1410);
	SetType(0X7100055B58, "__int64 __fastcall sub_7100055B58(__int64, __int64 **);");
	set_frame_size(0X7100055B58, 0X20, 32, 0);
	add_func    (0X7100055BEC,0X7100055C80);
	set_func_flags(0X7100055BEC,0x1410);
	SetType(0X7100055BEC, "__int64 __fastcall sub_7100055BEC(__int64, __int64 **);");
	set_frame_size(0X7100055BEC, 0X20, 32, 0);
	add_func    (0X7100055C80,0X7100055D14);
	set_func_flags(0X7100055C80,0x1410);
	set_frame_size(0X7100055C80, 0X20, 32, 0);
	add_func    (0X7100055D14,0X7100055DA8);
	set_func_flags(0X7100055D14,0x1410);
	set_frame_size(0X7100055D14, 0X20, 32, 0);
	add_func    (0X7100055DA8,0X7100055E3C);
	set_func_flags(0X7100055DA8,0x1410);
	SetType(0X7100055DA8, "__int64 __fastcall sub_7100055DA8(__int64, __int64 **);");
	set_frame_size(0X7100055DA8, 0X20, 32, 0);
	add_func    (0X7100055E3C,0X7100055ED0);
	set_func_flags(0X7100055E3C,0x1410);
	SetType(0X7100055E3C, "__int64 __fastcall nn__timesrv__detail__service__IStaticService__GetEphemeralNetworkSystemClock_0(GlueStaticService_Wrap *this, __int64 **out_service);");
	set_frame_size(0X7100055E3C, 0X20, 32, 0);
	add_func    (0X7100055ED0,0X7100055EDC);
	set_func_flags(0X7100055ED0,0x1400);
	add_func    (0X7100055EDC,0X7100055EE8);
	set_func_flags(0X7100055EDC,0x1400);
	add_func    (0X7100055EE8,0X7100055EF4);
	set_func_flags(0X7100055EE8,0x1400);
	add_func    (0X7100055EF4,0X7100055F00);
	set_func_flags(0X7100055EF4,0x1400);
	add_func    (0X7100055F00,0X7100055F10);
	set_func_flags(0X7100055F00,0x1400);
	add_func    (0X7100055F10,0X7100055F1C);
	set_func_flags(0X7100055F10,0x1400);
	add_func    (0X7100055F1C,0X7100055F28);
	set_func_flags(0X7100055F1C,0x1400);
	add_func    (0X7100055F28,0X7100055F34);
	set_func_flags(0X7100055F28,0x1400);
	add_func    (0X7100055F34,0X7100055F40);
	set_func_flags(0X7100055F34,0x1400);
	add_func    (0X7100055F40,0X7100055F54);
	set_func_flags(0X7100055F40,0x1400);
	add_func    (0X7100055F54,0X7100055F74);
	set_func_flags(0X7100055F54,0x1400);
	add_func    (0X7100055F74,0X7100055F8C);
	set_func_flags(0X7100055F74,0x1400);
	add_func    (0X7100055F8C,0X7100055FA4);
	set_func_flags(0X7100055F8C,0x1400);
	add_func    (0X7100055FA4,0X7100055FAC);
	set_func_flags(0X7100055FA4,0x1400);
	add_func    (0X7100055FAC,0X7100055FB4);
	set_func_flags(0X7100055FAC,0x1400);
	SetType(0X7100055FAC, "__int64 __fastcall sub_7100055FAC(__int64);");
	add_func    (0X7100055FB4,0X7100056060);
	set_func_flags(0X7100055FB4,0x1410);
	SetType(0X7100055FB4, "nn::lmem::detail::HeapHead **__fastcall sub_7100055FB4(nn::lmem::detail::HeapHead **heap, unsigned int a2);");
	set_frame_size(0X7100055FB4, 0X20, 16, 0);
	add_func    (0X7100056060,0X7100056068);
	set_func_flags(0X7100056060,0x1400);
	add_func    (0X7100056068,0X71000560C0);
	set_func_flags(0X7100056068,0x1410);
	set_frame_size(0X7100056068, 0, 32, 0);
	add_func    (0X71000560C0,0X71000560C8);
	set_func_flags(0X71000560C0,0x1400);
	add_func    (0X71000560C8,0X71000560D4);
	set_func_flags(0X71000560C8,0x1400);
	SetType(0X71000560C8, "__int64 __fastcall nn__timesrv__detail__service__ISystemClock__GetCurrentTime(__int64, _QWORD *);");
	add_func    (0X71000560D4,0X71000560E0);
	set_func_flags(0X71000560D4,0x1400);
	SetType(0X71000560D4, "__int64 __fastcall nn__timesrv__detail__service__ISystemClock__SetCurrentTime(__int64, __int64);");
	add_func    (0X71000560E0,0X71000560EC);
	set_func_flags(0X71000560E0,0x1400);
	SetType(0X71000560E0, "__int64 __fastcall nn__timesrv__detail__service__ISystemClock__GetSystemClockContext(SystemClock_Wrap *this, SystemClockContext *out_context);");
	add_func    (0X71000560EC,0X71000560F8);
	set_func_flags(0X71000560EC,0x1400);
	add_func    (0X71000560F8,0X7100056104);
	set_func_flags(0X71000560F8,0x1400);
	SetType(0X71000560F8, "__int64 __fastcall nn__timesrv__detail__service__ISystemClock__GetOperationEventReadableHandle(__int64, __int64);");
	add_func    (0X7100056104,0X710005610C);
	set_func_flags(0X7100056104,0x1400);
	SetType(0X7100056104, "__int64 __fastcall sub_7100056104(__int64);");
	add_func    (0X710005610C,0X7100056114);
	set_func_flags(0X710005610C,0x1400);
	SetType(0X710005610C, "__int64 __fastcall sub_710005610C(__int64);");
	add_func    (0X7100056114,0X7100056248);
	set_func_flags(0X7100056114,0x1410);
	SetType(0X7100056114, "__int64 __fastcall nn__timesrv__detail__service__SystemClock__GetSystemClockContext(SystemClock *this, _QWORD *a2, unsigned int a3);");
	set_frame_size(0X7100056114, 0X70, 64, 0);
	add_func    (0X7100056248,0X71000562F4);
	set_func_flags(0X7100056248,0x1410);
	set_frame_size(0X7100056248, 0X20, 16, 0);
	add_func    (0X71000562F4,0X71000562FC);
	set_func_flags(0X71000562F4,0x1400);
	add_func    (0X71000562FC,0X7100056354);
	set_func_flags(0X71000562FC,0x1410);
	set_frame_size(0X71000562FC, 0, 32, 0);
}

static Functions_2(void) {

	add_func    (0X7100056354,0X710005635C);
	set_func_flags(0X7100056354,0x1400);
	add_func    (0X710005635C,0X7100056368);
	set_func_flags(0X710005635C,0x1400);
	add_func    (0X7100056368,0X7100056374);
	set_func_flags(0X7100056368,0x1400);
	add_func    (0X7100056374,0X7100056380);
	set_func_flags(0X7100056374,0x1400);
	add_func    (0X7100056380,0X710005638C);
	set_func_flags(0X7100056380,0x1400);
	add_func    (0X710005638C,0X7100056398);
	set_func_flags(0X710005638C,0x1400);
	add_func    (0X7100056398,0X71000563A4);
	set_func_flags(0X7100056398,0x1400);
	add_func    (0X71000563A4,0X71000563B0);
	set_func_flags(0X71000563A4,0x1400);
	add_func    (0X71000563B0,0X71000563B8);
	set_func_flags(0X71000563B0,0x1400);
	add_func    (0X71000563B8,0X71000563C0);
	set_func_flags(0X71000563B8,0x1400);
	add_func    (0X71000563C0,0X71000564F4);
	set_func_flags(0X71000563C0,0x1410);
	set_frame_size(0X71000563C0, 0X70, 64, 0);
	add_func    (0X71000564F4,0X71000565A0);
	set_func_flags(0X71000564F4,0x1410);
	set_frame_size(0X71000564F4, 0X20, 16, 0);
	add_func    (0X71000565A0,0X71000565A8);
	set_func_flags(0X71000565A0,0x1400);
	add_func    (0X71000565A8,0X7100056600);
	set_func_flags(0X71000565A8,0x1410);
	set_frame_size(0X71000565A8, 0, 32, 0);
	add_func    (0X7100056600,0X7100056608);
	set_func_flags(0X7100056600,0x1400);
	add_func    (0X7100056608,0X7100056614);
	set_func_flags(0X7100056608,0x1400);
	add_func    (0X7100056614,0X7100056620);
	set_func_flags(0X7100056614,0x1400);
	add_func    (0X7100056620,0X710005662C);
	set_func_flags(0X7100056620,0x1400);
	add_func    (0X710005662C,0X7100056650);
	set_func_flags(0X710005662C,0x1400);
	add_func    (0X7100056650,0X7100056664);
	set_func_flags(0X7100056650,0x1400);
	add_func    (0X7100056664,0X7100056670);
	set_func_flags(0X7100056664,0x1400);
	add_func    (0X7100056670,0X710005667C);
	set_func_flags(0X7100056670,0x1400);
	add_func    (0X710005667C,0X7100056690);
	set_func_flags(0X710005667C,0x1400);
	add_func    (0X7100056690,0X71000566A4);
	set_func_flags(0X7100056690,0x1400);
	add_func    (0X71000566A4,0X71000566B0);
	set_func_flags(0X71000566A4,0x1400);
	add_func    (0X71000566B0,0X71000566C0);
	set_func_flags(0X71000566B0,0x1400);
	add_func    (0X71000566C0,0X71000566CC);
	set_func_flags(0X71000566C0,0x1400);
	add_func    (0X71000566CC,0X71000566F0);
	set_func_flags(0X71000566CC,0x1400);
	add_func    (0X71000566F0,0X710005670C);
	set_func_flags(0X71000566F0,0x1400);
	add_func    (0X710005670C,0X7100056714);
	set_func_flags(0X710005670C,0x1400);
	add_func    (0X7100056714,0X710005671C);
	set_func_flags(0X7100056714,0x1400);
	add_func    (0X710005671C,0X7100056860);
	set_func_flags(0X710005671C,0x1410);
	set_frame_size(0X710005671C, 0X70, 64, 0);
	add_func    (0X7100056860,0X71000569AC);
	set_func_flags(0X7100056860,0x1410);
	set_frame_size(0X7100056860, 0X70, 64, 0);
	add_func    (0X71000569AC,0X7100056BAC);
	set_func_flags(0X71000569AC,0x1410);
	set_frame_size(0X71000569AC, 0X90, 96, 0);
	add_func    (0X7100056BAC,0X7100056DC4);
	set_func_flags(0X7100056BAC,0x1410);
	set_frame_size(0X7100056BAC, 0XB0, 64, 0);
	add_func    (0X7100056DC4,0X7100056EF0);
	set_func_flags(0X7100056DC4,0x1410);
	set_frame_size(0X7100056DC4, 0X70, 64, 0);
	add_func    (0X7100056EF0,0X7100057050);
	set_func_flags(0X7100056EF0,0x1410);
	set_frame_size(0X7100056EF0, 0X90, 48, 0);
	add_func    (0X7100057050,0X7100057258);
	set_func_flags(0X7100057050,0x1410);
	set_frame_size(0X7100057050, 0XB0, 64, 0);
	add_func    (0X7100057258,0X7100057444);
	set_func_flags(0X7100057258,0x1410);
	set_frame_size(0X7100057258, 0XA0, 96, 0);
	add_func    (0X7100057444,0X7100057658);
	set_func_flags(0X7100057444,0x1410);
	set_frame_size(0X7100057444, 0XA0, 96, 0);
	add_func    (0X7100057658,0X71000577A4);
	set_func_flags(0X7100057658,0x1410);
	set_frame_size(0X7100057658, 0X70, 80, 0);
	add_func    (0X71000577A4,0X71000579A4);
	set_func_flags(0X71000577A4,0x1410);
	set_frame_size(0X71000577A4, 0XC0, 96, 0);
	add_func    (0X71000579A4,0X7100057B94);
	set_func_flags(0X71000579A4,0x1410);
	set_frame_size(0X71000579A4, 0X90, 96, 0);
	add_func    (0X7100057B94,0X7100057CE4);
	set_func_flags(0X7100057B94,0x1410);
	set_frame_size(0X7100057B94, 0X90, 48, 0);
	add_func    (0X7100057CE4,0X7100057EC8);
	set_func_flags(0X7100057CE4,0x1410);
	set_frame_size(0X7100057CE4, 0XB0, 64, 0);
	add_func    (0X7100057EC8,0X71000580EC);
	set_func_flags(0X7100057EC8,0x1410);
	set_frame_size(0X7100057EC8, 0XA0, 96, 0);
	add_func    (0X71000580EC,0X71000582F8);
	set_func_flags(0X71000580EC,0x1410);
	set_frame_size(0X71000580EC, 0XB0, 96, 0);
	add_func    (0X71000582F8,0X7100058300);
	set_func_flags(0X71000582F8,0x1400);
	add_func    (0X7100058300,0X71000583B4);
	set_func_flags(0X7100058300,0x1410);
	set_frame_size(0X7100058300, 0X20, 16, 0);
	add_func    (0X71000583C0,0X71000584E4);
	set_func_flags(0X71000583C0,0x1400);
	SetType(0X71000583C0, "__int64 __fastcall CalendarTimeToUnixEpoch(TimeZone::CalendarTime *calendar_time);");
	add_func    (0X71000584F0,0X7100058758);
	set_func_flags(0X71000584F0,0x1400);
	SetType(0X71000584F0, "unsigned __int64 __fastcall sub_71000584F0(__int64 *time);");
	add_func    (0X7100058760,0X71000587D0);
	set_func_flags(0X7100058760,0x1410);
	SetType(0X7100058760, "void __fastcall Setup_time();");
	set_frame_size(0X7100058760, 0X20, 0, 0);
	add_func    (0X71000587D0,0X71000587D4);
	set_func_flags(0X71000587D0,0x1480);
	add_func    (0X71000587D4,0X71000587E8);
	set_func_flags(0X71000587D4,0x1400);
	add_func    (0X71000587F0,0X710005883C);
	set_func_flags(0X71000587F0,0x1410);
	SetType(0X71000587F0, "__int64 Setup_timeIpcServer();");
	set_frame_size(0X71000587F0, 0X20, 0, 0);
	add_func    (0X7100058840,0X710005884C);
	set_func_flags(0X7100058840,0x1400);
	SetType(0X7100058840, "__int64 __fastcall sub_7100058840();");
	add_func    (0X7100058850,0X710005886C);
	set_func_flags(0X7100058850,0x1400);
	SetType(0X7100058850, "__int64 sub_7100058850();");
	add_func    (0X710005886C,0X7100058878);
	set_func_flags(0X710005886C,0x1400);
	SetType(0X710005886C, "void __fastcall GlueTime40__GlueTime40(GlueTime40 *this);");
	add_func    (0X7100058878,0X71000588F8);
	set_func_flags(0X7100058878,0x1410);
	SetType(0X7100058878, "void __fastcall GlueTime40__SetFilesystemPosixTime(GlueTime40 *this);");
	set_frame_size(0X7100058878, 0X40, 0, 0);
	define_local_var(0X7100058878, 0X71000588F8, "[bp-0X28]", "calendar_time");
	define_local_var(0X7100058878, 0X71000588F8, "[bp-0X8]", "current_time");
	add_func    (0X71000588F8,0X7100058924);
	set_func_flags(0X71000588F8,0x1410);
	SetType(0X71000588F8, "__int64 SetupServiceManagerAndTimeZoneBinary();");
	set_frame_size(0X71000588F8, 0X10, 16, 0);
	add_func    (0X7100058924,0X7100058928);
	set_func_flags(0X7100058924,0x1480);
	SetType(0X7100058924, "void __fastcall sub_7100058924();");
	add_func    (0X7100058928,0X7100058B98);
	set_func_flags(0X7100058928,0x1410);
	SetType(0X7100058928, "__int64 __fastcall Time__Initialise(GlueTime *this);");
	set_frame_size(0X7100058928, 0X60, 32, 0);
	define_local_var(0X7100058928, 0X7100058B98, "[bp-0X50]", "service_manager");
	define_local_var(0X7100058928, 0X7100058B98, "[bp-0X48]", "out_service");
	define_local_var(0X7100058928, 0X7100058B98, "[bp-0X8]", "time");
	add_func    (0X7100058B98,0X7100058C50);
	set_func_flags(0X7100058B98,0x1410);
	SetType(0X7100058B98, "__int64 __fastcall SetupStandardSteadyClockCore(GlueTime *this);");
	set_frame_size(0X7100058B98, 0X40, 32, 0);
	define_local_var(0X7100058B98, 0X7100058C50, "[bp-0X38]", "rtc_offset");
	define_local_var(0X7100058B98, 0X7100058C50, "[bp-0X30]", "steady_clock_source_id");
	define_local_var(0X7100058B98, 0X7100058C50, "[bp-0X18]", "ExternalSteadyClockInternalOffset_ns");
	define_local_var(0X7100058B98, 0X7100058C50, "[bp-0X10]", "external_clock_source_id");
	add_func    (0X7100058C50,0X7100058CF0);
	set_func_flags(0X7100058C50,0x1410);
	SetType(0X7100058C50, "__int64 SetupTimeZoneServiceCore();");
	set_frame_size(0X7100058C50, 0XB0, 0, 0);
	define_local_var(0X7100058C50, 0X7100058CF0, "[bp-0XA8]", "location_name");
	define_local_var(0X7100058C50, 0X7100058CF0, "[bp-0X78]", "rule_size");
	define_local_var(0X7100058C50, 0X7100058CF0, "[bp-0X70]", "rule_version");
	define_local_var(0X7100058C50, 0X7100058CF0, "[bp-0X60]", "time_point");
	define_local_var(0X7100058C50, 0X7100058CF0, "[bp-0X48]", "name");
	define_local_var(0X7100058C50, 0X7100058CF0, "[bp-0X8]", "rule");
	add_func    (0X7100058CF0,0X7100058D64);
	set_func_flags(0X7100058CF0,0x1410);
	SetType(0X7100058CF0, "void __fastcall Time__Shutdown(GlueTime *this);");
	set_frame_size(0X7100058CF0, 0X20, 0, 0);
	add_func    (0X7100058D64,0X7100058D80);
	set_func_flags(0X7100058D64,0x1410);
	SetType(0X7100058D64, "__int64 __fastcall sub_7100058D64(__int64);");
	set_frame_size(0X7100058D64, 0, 16, 0);
	add_func    (0X7100058D80,0X7100058D84);
	set_func_flags(0X7100058D80,0x14c0);
	SetType(0X7100058D80, "__int64 j_ReadOrParseTimeZoneBinary();");
	add_func    (0X7100058D84,0X7100058E04);
	set_func_flags(0X7100058D84,0x1410);
	SetType(0X7100058D84, "__int64 __fastcall TimeZone_GetRule(_QWORD *out_rule, unsigned __int64 *out_rule_size, TimeZone::LocationName *name);");
	set_frame_size(0X7100058D84, 0X110, 48, 0);
	define_local_var(0X7100058D84, 0X7100058E04, "[bp-0X100]", "out_file_path");
	add_func    (0X7100058E10,0X7100058EA8);
	set_func_flags(0X7100058E10,0x1410);
	SetType(0X7100058E10, "__int64 TimeZoneBinaryList_GetCount();");
	set_frame_size(0X7100058E10, 0X120, 0, 0);
	define_local_var(0X7100058E10, 0X7100058EA8, "[bp-0X8]", "num_bytes_read");
	add_func    (0X7100058EA8,0X7100058EE8);
	set_func_flags(0X7100058EA8,0x1410);
	SetType(0X7100058EA8, "bool __fastcall TimeZoneBinary_TimeZoneBinaryInvalid(TimeZone::LocationName *name);");
	set_frame_size(0X7100058EA8, 0X120, 0, 0);
	add_func    (0X7100058EF0,0X7100059054);
	set_func_flags(0X7100058EF0,0x1410);
	SetType(0X7100058EF0, "__int64 __fastcall TimeZoneBinary_LoadLocationList(_DWORD *out_count, TimeZone::LocationName *names_ptr, unsigned __int64 names_size, int name_index);");
	set_frame_size(0X7100058EF0, 0X120, 32, 0);
	define_local_var(0X7100058EF0, 0X7100059054, "[bp-0X120]", "binary_list_path");
	define_local_var(0X7100058EF0, 0X7100059054, "[bp-0XF8]", "current_name_len");
	define_local_var(0X7100058EF0, 0X7100059054, "[bp-0X8]", "binary_list_size_bytes");
	add_func    (0X7100059054,0X71000590B0);
	set_func_flags(0X7100059054,0x1410);
	SetType(0X7100059054, "__int64 __fastcall TimeZone_GetVersionString(__int128 *out_rule_version);");
	set_frame_size(0X7100059054, 0X110, 32, 0);
	define_local_var(0X7100059054, 0X71000590B0, "[bp-0X108]", "out_read_size");
	add_func    (0X71000590B0,0X710005911C);
	set_func_flags(0X71000590B0,0x1410);
	SetType(0X71000590B0, "__int64 MountTimeZoneBinary();");
	set_frame_size(0X71000590B0, 0X20, 0, 0);
	add_func    (0X7100059120,0X710005914C);
	set_func_flags(0X7100059120,0x1400);
	SetType(0X7100059120, "void __fastcall TimeZone_BinaryZoneInfoString(char *out_zone_info, const char *name_string);");
	add_func    (0X7100059150,0X7100059178);
	set_func_flags(0X7100059150,0x1400);
	SetType(0X7100059150, "void __fastcall TimeZoneBinaryList_GetPath(char *out_path);");
	add_func    (0X7100059180,0X7100059198);
	set_func_flags(0X7100059180,0x1400);
	SetType(0X7100059180, "__int64 __fastcall TimeZone_GetBinaryVersionPath(_BYTE *);");
	add_func    (0X71000591A0,0X7100059220);
	set_func_flags(0X71000591A0,0x1410);
	SetType(0X71000591A0, "__int64 __fastcall GetFileSize(_QWORD *out_file_size, const char *path);");
	set_frame_size(0X71000591A0, 0X10, 32, 0);
	add_func    (0X7100059220,0X71000592E8);
	set_func_flags(0X7100059220,0x1410);
	SetType(0X7100059220, "__int64 __fastcall TimeZone_ReadBinary(unsigned __int64 *out_read_size, __int64 out_buffer, unsigned __int64 size, const char *file_path);");
	set_frame_size(0X7100059220, 0X10, 48, 0);
	add_func    (0X71000592E8,0X7100059308);
	set_func_flags(0X71000592E8,0x1400);
	SetType(0X71000592E8, "StandardSteadyClockResource *__fastcall nn__timemgr__detail__core__StandardSteadyClockResource__StandardSteadyClockResource(StandardSteadyClockResource *this);");
	add_func    (0X7100059308,0X710005930C);
	set_func_flags(0X7100059308,0x1440);
	SetType(0X7100059308, "__int64 __fastcall nullsub_70(_QWORD);");
	add_func    (0X710005930C,0X7100059330);
	set_func_flags(0X710005930C,0x1410);
	SetType(0X710005930C, "__int64 __fastcall sub_710005930C(__int64);");
	set_frame_size(0X710005930C, 0X20, 0, 0);
	add_func    (0X7100059330,0X7100059388);
	set_func_flags(0X7100059330,0x1410);
	SetType(0X7100059330, "__int64 __fastcall StandardSteadyClockResource__GetResetDetected(StandardSteadyClockResource *this);");
	set_frame_size(0X7100059330, 0X20, 16, 0);
	add_func    (0X7100059388,0X71000593CC);
	set_func_flags(0X7100059388,0x1410);
	SetType(0X7100059388, "__int64 __fastcall StandardSteadyClockResource__GetRtcTimeInSeconds(StandardSteadyClockResource *this, _QWORD *out_time);");
	set_frame_size(0X7100059388, 0X20, 0, 0);
	add_func    (0X71000593CC,0X71000595F0);
	set_func_flags(0X71000593CC,0x1410);
	SetType(0X71000593CC, "void __fastcall StandardSteadyClockResource__Initialise(StandardSteadyClockResource *this, _QWORD *out_clock_source_id, __int64 *external_clock_source_id);");
	set_frame_size(0X71000593CC, 0X20, 32, 0);
	add_func    (0X71000595F0,0X71000595F8);
	set_func_flags(0X71000595F0,0x1400);
	SetType(0X71000595F0, "s64 __fastcall StandardSteadyClockResource__GetTime(StandardSteadyClockResource *this);");
	add_func    (0X71000595F8,0X7100059664);
	set_func_flags(0X71000595F8,0x1410);
	SetType(0X71000595F8, "void __fastcall StandardSteadyClockResource__UpdateTime(StandardSteadyClockResource *this);");
	set_frame_size(0X71000595F8, 0, 32, 0);
	add_func    (0X7100059664,0X7100059768);
	set_func_flags(0X7100059664,0x1410);
	SetType(0X7100059664, "__int64 __fastcall StandardSteadyClockResource__SetCurrentTime(StandardSteadyClockResource *this);");
	set_frame_size(0X7100059664, 0X10, 48, 0);
	define_local_var(0X7100059664, 0X7100059768, "[bp-0X8]", "rtc_time_s");
	add_func    (0X7100059768,0X7100059790);
	set_func_flags(0X7100059768,0x1410);
	SetType(0X7100059768, "__int64 __fastcall EnableAlarmId0(StandardSteadyClockResource *this, __int64 time_remaining);");
	set_frame_size(0X7100059768, 0, 16, 0);
	add_func    (0X7100059790,0X71000597B4);
	set_func_flags(0X7100059790,0x1410);
	SetType(0X7100059790, "__int64 Rtc_DisableAlarm_Id0();");
	set_frame_size(0X7100059790, 0, 16, 0);
	add_func    (0X71000597C0,0X7100059808);
	set_func_flags(0X71000597C0,0x1410);
	SetType(0X71000597C0, "__int64 __fastcall Rtc_GetTimeInSeconds_0(__int64, unsigned int);");
	set_frame_size(0X71000597C0, 0X20, 16, 0);
	add_func    (0X7100059810,0X710005985C);
	set_func_flags(0X7100059810,0x1410);
	SetType(0X7100059810, "__int64 __fastcall Rtc_GetRtcResetDetected_(unsigned int device_code);");
	set_frame_size(0X7100059810, 0X10, 32, 0);
	define_local_var(0X7100059810, 0X710005985C, "[bp-0X4]", "rtc_detected");
	add_func    (0X7100059860,0X7100059898);
	set_func_flags(0X7100059860,0x1410);
	SetType(0X7100059860, "__int64 __fastcall Rtc_ClearRtcResetDetected_(unsigned int);");
	set_frame_size(0X7100059860, 0, 32, 0);
	add_func    (0X71000598A0,0X7100059A00);
	set_func_flags(0X71000598A0,0x1410);
	SetType(0X71000598A0, "__int64 __fastcall EnableAlarmInFuture(unsigned int device_code, unsigned int alarm_id, __int64 *future_time);");
	set_frame_size(0X71000598A0, 0X10, 64, 0);
	define_local_var(0X71000598A0, 0X7100059A00, "[bp-0X8]", "time");
	add_func    (0X7100059A00,0X7100059A5C);
	set_func_flags(0X7100059A00,0x1410);
	SetType(0X7100059A00, "__int64 __fastcall Rtc_DisableAlarm_(unsigned int device_code, unsigned int alarm_id);");
	set_frame_size(0X7100059A00, 0X20, 16, 0);
	add_func    (0X7100059A60,0X7100059A84);
	set_func_flags(0X7100059A60,0x1410);
	SetType(0X7100059A60, "__int64 SetSys_GetExternalSteadyClockSourceId_W_();");
	set_frame_size(0X7100059A60, 0X10, 16, 0);
	add_func    (0X7100059A90,0X7100059A94);
	set_func_flags(0X7100059A90,0x14c0);
	SetType(0X7100059A90, "__int64 __fastcall j_SetSys_SetExternalSteadyClockSourceId_(__int64);");
	add_func    (0X7100059AA0,0X7100059AC0);
	set_func_flags(0X7100059AA0,0x1410);
	SetType(0X7100059AA0, "__int64 SetSys_GetExternalSteadyClockInternalOffset_Seconds();");
	set_frame_size(0X7100059AA0, 0, 16, 0);
	add_func    (0X7100059AC0,0X7100059AE0);
	set_func_flags(0X7100059AC0,0x1400);
	SetType(0X7100059AC0, "__int64 __fastcall SetSys__SetExternalSteadyClockInternalOffset__(__int64 offset_ns);");
	add_func    (0X7100059AE0,0X7100059AE8);
	set_func_flags(0X7100059AE0,0x1400);
	SetType(0X7100059AE0, "__int64 __usercall SetSys_GetUserSystemClockContext_W_@<X0>(__int64@<X8>);");
	add_func    (0X7100059AF0,0X7100059AF4);
	set_func_flags(0X7100059AF0,0x14c0);
	SetType(0X7100059AF0, "__int64 __fastcall j_SetSys_SetUserSystemClockContext_(SystemClockContext *context);");
	add_func    (0X7100059B00,0X7100059B08);
	set_func_flags(0X7100059B00,0x1400);
	SetType(0X7100059B00, "__int64 __usercall SetSys_GetNetworkSystemClockContext_W@<X0>(__int64@<X8>);");
	add_func    (0X7100059B10,0X7100059B14);
	set_func_flags(0X7100059B10,0x14c0);
	SetType(0X7100059B10, "__int64 __fastcall j_SetSys_SetNetworkSystemClockContext_(SystemClockContext *context);");
	add_func    (0X7100059B20,0X7100059B24);
	set_func_flags(0X7100059B20,0x14c0);
	SetType(0X7100059B20, "__int64 j_SetSys_IsUserSystemClockAutomaticCorrectionEnabled_(void);");
	add_func    (0X7100059B30,0X7100059B34);
	set_func_flags(0X7100059B30,0x14c0);
	SetType(0X7100059B30, "__int64 __fastcall j_SetSys_SetUserSystemClockAutomaticCorrection_(__int64);");
	add_func    (0X7100059B40,0X7100059B48);
	set_func_flags(0X7100059B40,0x1400);
	SetType(0X7100059B40, "__int64 __usercall SetSys_GetUserSystemClockAutomaticCorrectionUpdatedTime__@<X0>(__int64@<X8>);");
	add_func    (0X7100059B50,0X7100059B54);
	set_func_flags(0X7100059B50,0x14c0);
	SetType(0X7100059B50, "__int64 __fastcall j_SetSys_SetUserSystemClockAutoCorrectionUpdatedTime_(__int64);");
	add_func    (0X7100059B60,0X7100059B68);
	set_func_flags(0X7100059B60,0x1400);
	SetType(0X7100059B60, "__int64 __usercall SetSys_GetDeviceTimeZoneLocationName__@<X0>(__int64@<X8>);");
	add_func    (0X7100059B70,0X7100059B74);
	set_func_flags(0X7100059B70,0x14c0);
	SetType(0X7100059B70, "__int64 __fastcall j_SetSys_SetDeviceTimeZoneLocationName_(__int64);");
	add_func    (0X7100059B80,0X7100059B88);
	set_func_flags(0X7100059B80,0x1400);
	SetType(0X7100059B80, "__int64 __usercall SetSys_GetDeviceTimeZoneLocationUpdatedTime__@<X0>(SteadyClockTimePoint *a1@<X8>);");
	add_func    (0X7100059B90,0X7100059B94);
	set_func_flags(0X7100059B90,0x14c0);
	SetType(0X7100059B90, "__int64 __fastcall j_SetSys_SetDeviceTimeZoneLocationUpdatedTime_(__int64);");
	add_func    (0X7100059BA0,0X7100059BF4);
	set_func_flags(0X7100059BA0,0x1410);
	SetType(0X7100059BA0, "__int64 SetSys_GetStandardNetworkClockSufficientAccuracyMinutes();");
	set_frame_size(0X7100059BA0, 0X10, 16, 0);
	add_func    (0X7100059C00,0X7100059C54);
	set_func_flags(0X7100059C00,0x1410);
	SetType(0X7100059C00, "__int64 SetSys_GetStandardSteadyClockTestOffsetMinutes();");
	set_frame_size(0X7100059C00, 0X10, 16, 0);
	add_func    (0X7100059C60,0X7100059CB4);
	set_func_flags(0X7100059C60,0x1410);
	SetType(0X7100059C60, "__int64 SetSys_GetStandardSteadyClockRtcUdpateIntervalNanoseconds();");
	set_frame_size(0X7100059C60, 0X10, 16, 0);
	add_func    (0X7100059CC0,0X7100059D10);
	set_func_flags(0X7100059CC0,0x1410);
	SetType(0X7100059CC0, "__int64 SetSys_GetNotifyTimeToFsIntervalSeconds();");
	set_frame_size(0X7100059CC0, 0X10, 16, 0);
	add_func    (0X7100059D10,0X7100059D54);
	set_func_flags(0X7100059D10,0x1410);
	SetType(0X7100059D10, "__int64 SetSys_GetStandardUserClockInitialYear();");
	set_frame_size(0X7100059D10, 0X10, 16, 0);
	add_func    (0X7100059D54,0X7100059D98);
	set_func_flags(0X7100059D54,0x1410);
	SetType(0X7100059D54, "void __fastcall GlueTime58PmStateChangeHandler__GlueTime58PmStateChangeHandler(GlueTime58PmStateChangeHandler *this, GlueTime58Sub *sub58);");
	set_frame_size(0X7100059D54, 0X10, 16, 0);
	add_func    (0X7100059D98,0X7100059D9C);
	set_func_flags(0X7100059D98,0x1480);
	add_func    (0X7100059D9C,0X7100059DA8);
	set_func_flags(0X7100059D9C,0x1400);
	SetType(0X7100059D9C, "GlueTime58PmStateChangeHandler *__fastcall sub_7100059D9C(GlueTime58PmStateChangeHandler *result);");
	add_func    (0X7100059DA8,0X7100059DB8);
	set_func_flags(0X7100059DA8,0x1400);
	SetType(0X7100059DA8, "__int64 __fastcall sub_7100059DA8(GlueTime58PmStateChangeHandler *a1);");
	add_func    (0X7100059DB8,0X7100059DE4);
	set_func_flags(0X7100059DB8,0x1410);
	SetType(0X7100059DB8, "void __fastcall sub_7100059DB8(GlueTime58PmStateChangeHandler *this);");
	set_frame_size(0X7100059DB8, 0X20, 0, 0);
	add_func    (0X7100059DE4,0X7100059DEC);
	set_func_flags(0X7100059DE4,0x1400);
	SetType(0X7100059DE4, "GlueTime58PmStateChangeHandler *__fastcall sub_7100059DE4(GlueTime58PmStateChangeHandler *this);");
	add_func    (0X7100059DEC,0X7100059FAC);
	set_func_flags(0X7100059DEC,0x1410);
	SetType(0X7100059DEC, "void __fastcall GlueTime58__GlueTime58(GlueTime58 *this, StaticService_Wrap **service_manager, StandardSteadyClockResource *steady_clock_resource, GlueTime40 *glue40);");
	set_frame_size(0X7100059DEC, 0X20, 48, 0);
	add_func    (0X7100059FAC,0X7100059FB0);
	set_func_flags(0X7100059FAC,0x1480);
	SetType(0X7100059FAC, "_BYTE *__fastcall timeWorkerThreadFunc(GlueTime58 *);");
	add_func    (0X7100059FB0,0X710005A0A4);
	set_func_flags(0X7100059FB0,0x1410);
	SetType(0X7100059FB0, "void __fastcall GlueTime58__Finalise(GlueTime58 *this);");
	set_frame_size(0X7100059FB0, 0, 32, 0);
	add_func    (0X710005A0A4,0X710005A0A8);
	set_func_flags(0X710005A0A4,0x14c0);
	SetType(0X710005A0A4, "__int64 __fastcall nn__os__StartThread(nn::os::ThreadType *a1);");
	add_func    (0X710005A0B0,0X710005A424);
	set_func_flags(0X710005A0B0,0x1410);
	SetType(0X710005A0B0, "_BYTE *__fastcall TimeWorker_MainThreadFunc(GlueTime58 *this);");
	set_frame_size(0X710005A0B0, 0X100, 96, 0);
	define_local_var(0X710005A0B0, 0X710005A424, "[bp-0XD0]", "local_clock_event");
	define_local_var(0X710005A0B0, 0X710005A424, "[bp-0X90]", "unk_358_event");
	define_local_var(0X710005A0B0, 0X710005A424, "[bp-0X48]", "context");
	add_func    (0X710005A424,0X710005A428);
	set_func_flags(0X710005A424,0x1440);
	SetType(0X710005A424, "void nullsub_71();");
	add_func    (0X710005A428,0X710005A42C);
	set_func_flags(0X710005A428,0x1440);
	add_func    (0X710005A42C,0X710005A430);
	set_func_flags(0X710005A42C,0x1440);
	add_func    (0X710005A430,0X710005A434);
	set_func_flags(0X710005A430,0x1440);
	add_func    (0X710005A434,0X710005A438);
	set_func_flags(0X710005A434,0x1440);
	add_func    (0X710005A438,0X710005A43C);
	set_func_flags(0X710005A438,0x1440);
	add_func    (0X710005A43C,0X710005A440);
	set_func_flags(0X710005A43C,0x1440);
	add_func    (0X710005A440,0X710005A444);
	set_func_flags(0X710005A440,0x1440);
	add_func    (0X710005A450,0X710005A5A0);
	set_func_flags(0X710005A450,0x1410);
	SetType(0X710005A450, "char *__fastcall MultiWait_LinkLotsOfEvents(__int64 (__fastcall **)(__int64), __int64, int, __int64 *, __int64 *, _QWORD *, __int64 *, __int64 *, __int64, __int64, __int64, __int64);");
	set_frame_size(0X710005A450, 0XE0, 96, 0);
	add_func    (0X710005A5A0,0X710005A6D8);
	set_func_flags(0X710005A5A0,0x1410);
	SetType(0X710005A5A0, "__int64 *__fastcall sub_710005A5A0(__int64 (__fastcall **)(__int64), __int64, int, __int64 *, __int64 *, __int64 *, __int64 *, __int64 *, __int64);");
	set_frame_size(0X710005A5A0, 0XD0, 96, 0);
	add_func    (0X710005A6E0,0X710005A800);
	set_func_flags(0X710005A6E0,0x1410);
	SetType(0X710005A6E0, "__int64 *__fastcall sub_710005A6E0(__int64 (__fastcall **)(__int64), __int64, __int64, __int64 *, __int64 *, __int64 *);");
	set_frame_size(0X710005A6E0, 0XE0, 64, 0);
	add_func    (0X710005A800,0X710005A848);
	set_func_flags(0X710005A800,0x1410);
	SetType(0X710005A800, "__int64 __fastcall GlueTime58PmStateChangeHandler__InitialiseIPmModule(GlueTime58PmStateChangeHandler *this);");
	set_frame_size(0X710005A800, 0X10, 16, 0);
	add_func    (0X710005A850,0X710005A85C);
	set_func_flags(0X710005A850,0x1400);
	SetType(0X710005A850, "nn::os::SystemEventType *gIPmModuleService__GetEvent_();");
	add_func    (0X710005A860,0X710005A944);
	set_func_flags(0X710005A860,0x1410);
	SetType(0X710005A860, "void __fastcall HandleTimePowerStateChange();");
	set_frame_size(0X710005A860, 0X10, 32, 0);
	define_local_var(0X710005A860, 0X710005A944, "[bp-0X8]", "flags");
	define_local_var(0X710005A860, 0X710005A944, "[bp-0X4]", "request_id");
	add_func    (0X710005A950,0X710005A95C);
	set_func_flags(0X710005A950,0x1400);
	SetType(0X710005A950, "__int64 sub_710005A950();");
	add_func    (0X710005A960,0X710005A99C);
	set_func_flags(0X710005A960,0x1410);
	SetType(0X710005A960, "__int64 sub_710005A960();");
	set_frame_size(0X710005A960, 0X20, 0, 0);
	add_func    (0X710005A99C,0X710005A9D8);
	set_func_flags(0X710005A99C,0x1410);
	SetType(0X710005A99C, "void __fastcall GlueTime58Sub__GlueTime58Sub(GlueTime58Sub *this, StandardSteadyClockResource *steady_clock_resource);");
	set_frame_size(0X710005A99C, 0, 32, 0);
	add_func    (0X710005A9D8,0X710005A9DC);
	set_func_flags(0X710005A9D8,0x1440);
	SetType(0X710005A9D8, "__int64 __fastcall nullsub_79(__int64);");
	add_func    (0X710005A9DC,0X710005A9E4);
	set_func_flags(0X710005A9DC,0x1400);
	SetType(0X710005A9DC, "nn::os::TimerEventType *__fastcall GlueTime58Sub__GetTimerEvent(GlueTime58Sub *this);");
	add_func    (0X710005A9E4,0X710005AA18);
	set_func_flags(0X710005A9E4,0x1410);
	SetType(0X710005A9E4, "void __fastcall sub_710005A9E4(__int64 a1);");
	set_frame_size(0X710005A9E4, 0X20, 0, 0);
	add_func    (0X710005AA18,0X710005AB6C);
	set_func_flags(0X710005AA18,0x1410);
	SetType(0X710005AA18, "void __fastcall sub_710005AA18(GlueTime58Sub *this);");
	set_frame_size(0X710005AA18, 0X30, 16, 0);
	define_local_var(0X710005AA18, 0X710005AB6C, "[bp-0X30]", "closest_alarm_info");
	define_local_var(0X710005AA18, 0X710005AB6C, "[bp-0X8]", "closest_alarm_time");
	add_func    (0X710005AB6C,0X710005AB90);
	set_func_flags(0X710005AB6C,0x1410);
	SetType(0X710005AB6C, "__int64 CheckAndSignalAlarms_();");
	set_frame_size(0X710005AB6C, 0, 16, 0);
	add_func    (0X710005AB90,0X710005AD10);
	set_func_flags(0X710005AB90,0x1410);
	SetType(0X710005AB90, "void __fastcall sub_710005AB90(GlueTime58Sub *this);");
	set_frame_size(0X710005AB90, 0X30, 32, 0);
	define_local_var(0X710005AB90, 0X710005AD10, "[bp-0X18]", "alarm_time");
	define_local_var(0X710005AB90, 0X710005AD10, "[bp-0X10]", "alarm_info");
	add_func    (0X710005AD10,0X710005AD68);
	set_func_flags(0X710005AD10,0x1410);
	SetType(0X710005AD10, "void __fastcall sub_710005AD10(GlueTime58Sub *this);");
	set_frame_size(0X710005AD10, 0X20, 0, 0);
	add_func    (0X710005AD70,0X710005AE20);
	set_func_flags(0X710005AD70,0x1410);
	SetType(0X710005AD70, "__int64 __fastcall SystemReport_ReportLaunch(bool rtc_reset, __int64 time);");
	set_frame_size(0X710005AD70, 0X50, 32, 0);
	add_func    (0X710005AE20,0X710005AF20);
	set_func_flags(0X710005AE20,0x1410);
	SetType(0X710005AE20, "__int64 __fastcall UpdateGlobalNetworkSystemClockContext(SystemClockContext *context, __int64 *current_time);");
	set_frame_size(0X710005AE20, 0X50, 32, 0);
	add_func    (0X710005AF20,0X710005B020);
	set_func_flags(0X710005AF20,0x1410);
	SetType(0X710005AF20, "__int64 __fastcall UpdateGlobalEphemeralSystemClockContext(SystemClockContext *context, __int64 *current_time);");
	set_frame_size(0X710005AF20, 0X50, 32, 0);
	define_local_var(0X710005AF20, 0X710005B020, "[bp-0X50]", "system_report");
	add_func    (0X710005B020,0X710005B1F8);
	set_func_flags(0X710005B020,0x1410);
	SetType(0X710005B020, "void __fastcall Unk4440__Unk4440(GlueTime458 *this, GlueTime *time);");
	set_frame_size(0X710005B020, 0X10, 80, 0);
	add_func    (0X710005B200,0X710005B2F8);
	set_func_flags(0X710005B200,0x1410);
	SetType(0X710005B200, "void __fastcall GlueTime458__Finalise(GlueTime458 *this);");
	set_frame_size(0X710005B200, 0, 32, 0);
	add_func    (0X710005B2F8,0X710005B31C);
	set_func_flags(0X710005B2F8,0x1410);
	set_frame_size(0X710005B2F8, 0X20, 0, 0);
	add_func    (0X710005B31C,0X710005B848);
	set_func_flags(0X710005B31C,0x1410);
	SetType(0X710005B31C, "__int64 __fastcall sub_710005B31C(__int64);");
	set_frame_size(0X710005B31C, 0X20, 16, 0);
	add_func    (0X710005B848,0X710005B8A0);
	set_func_flags(0X710005B848,0x1410);
	SetType(0X710005B848, "__int64 __fastcall sub_710005B848(__int64, __int64);");
	set_frame_size(0X710005B848, 0X20, 16, 0);
	add_func    (0X710005B8A0,0X710005B8CC);
	set_func_flags(0X710005B8A0,0x1400);
	SetType(0X710005B8A0, "unsigned __int64 __fastcall sub_710005B8A0(__int64, _QWORD *, __int64);");
	add_func    (0X710005B8CC,0X710005B8D0);
	set_func_flags(0X710005B8CC,0x1440);
	add_func    (0X710005B8D0,0X710005B8F4);
	set_func_flags(0X710005B8D0,0x1410);
	set_frame_size(0X710005B8D0, 0, 16, 0);
	add_func    (0X710005B8F4,0X710005B900);
	set_func_flags(0X710005B8F4,0x1411);
	set_frame_size(0X710005B8F4, 0, 16, 0);
	add_func    (0X710005B900,0X710005B99C);
	set_func_flags(0X710005B900,0x1410);
	set_frame_size(0X710005B900, 0, 32, 0);
	add_func    (0X710005B99C,0X710005B9A4);
	set_func_flags(0X710005B99C,0x1400);
	add_func    (0X710005B9A4,0X710005B9A8);
	set_func_flags(0X710005B9A4,0x1440);
	add_func    (0X710005B9A8,0X710005BBA8);
	set_func_flags(0X710005B9A8,0x1410);
	set_frame_size(0X710005B9A8, 0X20, 16, 0);
	add_func    (0X710005BBA8,0X710005BC04);
	set_func_flags(0X710005BBA8,0x1410);
	set_frame_size(0X710005BBA8, 0X20, 16, 0);
	add_func    (0X710005BC04,0X710005BC10);
	set_func_flags(0X710005BC04,0x1400);
	add_func    (0X710005BC10,0X710005BC14);
	set_func_flags(0X710005BC10,0x1440);
	add_func    (0X710005BC14,0X710005BC1C);
	set_func_flags(0X710005BC14,0x1400);
	add_func    (0X710005BC1C,0X710005BC78);
	set_func_flags(0X710005BC1C,0x1410);
	set_frame_size(0X710005BC1C, 0X20, 16, 0);
	add_func    (0X710005BC78,0X710005BC84);
	set_func_flags(0X710005BC78,0x1400);
	SetType(0X710005BC78, "__int64 __fastcall sub_710005BC78(__int64);");
	add_func    (0X710005BC84,0X710005C138);
	set_func_flags(0X710005BC84,0x1410);
	SetType(0X710005BC84, "_DWORD *__fastcall sub_710005BC84(__int64);");
	set_frame_size(0X710005BC84, 0, 48, 0);
	add_func    (0X710005C138,0X710005C13C);
	set_func_flags(0X710005C138,0x1440);
	add_func    (0X710005C13C,0X710005C140);
	set_func_flags(0X710005C13C,0x1440);
	add_func    (0X710005C140,0X710005C16C);
	set_func_flags(0X710005C140,0x1410);
	SetType(0X710005C140, "__int64 __fastcall nn__timesrv__detail__service__IStaticService__GetStandardUserSystemClock(GlueStaticService_Wrap *this, __int64 *a2);");
	set_frame_size(0X710005C140, 0X10, 16, 0);
	add_func    (0X710005C16C,0X710005C198);
	set_func_flags(0X710005C16C,0x1410);
	SetType(0X710005C16C, "__int64 __fastcall nn__timesrv__detail__service__IStaticService__GetStandardNetworkSystemClock(GlueStaticService_Wrap *this, __int64 *a2);");
	set_frame_size(0X710005C16C, 0X10, 16, 0);
	add_func    (0X710005C198,0X710005C1C4);
	set_func_flags(0X710005C198,0x1410);
	SetType(0X710005C198, "__int64 __fastcall nn__timesrv__detail__service__IStaticService__GetStandardSteadyClock(GlueStaticService_Wrap *this, __int64 *a2);");
	set_frame_size(0X710005C198, 0X10, 16, 0);
	add_func    (0X710005C1C4,0X710005C1F0);
	set_func_flags(0X710005C1C4,0x1410);
	SetType(0X710005C1C4, "__int64 __fastcall nn__timesrv__detail__service__IStaticService__GetTimeZoneService(GlueStaticService_Wrap *this, __int64 **a2);");
	set_frame_size(0X710005C1C4, 0X10, 16, 0);
	add_func    (0X710005C1F0,0X710005C21C);
	set_func_flags(0X710005C1F0,0x1410);
	SetType(0X710005C1F0, "__int64 __fastcall nn__timesrv__detail__service__IStaticService__GetStandardLocalSystemClock(GlueStaticService_Wrap *this, __int64 *a2);");
	set_frame_size(0X710005C1F0, 0X10, 16, 0);
	add_func    (0X710005C21C,0X710005C248);
	set_func_flags(0X710005C21C,0x1410);
	SetType(0X710005C21C, "__int64 __fastcall nn__timesrv__detail__service__IStaticService__GetEphemeralNetworkSystemClock(GlueStaticService_Wrap *this, __int64 *a2);");
	set_frame_size(0X710005C21C, 0X10, 16, 0);
	add_func    (0X710005C248,0X710005C250);
	set_func_flags(0X710005C248,0x1400);
	SetType(0X710005C248, "__int64 __fastcall nn__timesrv__detail__service__IStaticService__GetSharedMemoryNativeHandle(GlueStaticService_Wrap *this, __int64);");
	add_func    (0X710005C250,0X710005C258);
	set_func_flags(0X710005C250,0x1400);
	SetType(0X710005C250, "__int64 __fastcall nn__timesrv__detail__service__IStaticService__SetStandardSteadyClockInternalOffset(StaticService_Wrap *this, __int64);");
	add_func    (0X710005C258,0X710005C260);
	set_func_flags(0X710005C258,0x1400);
	SetType(0X710005C258, "__int64 __fastcall nn__timesrv__detail__service__IStaticService__GetStandardSteadyClockRtcValue(GlueStaticService_Wrap *this, _QWORD *);");
	add_func    (0X710005C260,0X710005C268);
	set_func_flags(0X710005C260,0x1400);
	SetType(0X710005C260, "__int64 __fastcall nn__timesrv__detail__service__IStaticService__IsStandardUserSystemClockAutomaticCorrectionEnabled(GlueStaticService_Wrap *this, bool *out_automatic_correction);");
	add_func    (0X710005C268,0X710005C270);
	set_func_flags(0X710005C268,0x1400);
	SetType(0X710005C268, "__int64 __fastcall nn__timesrv__detail__service__IStaticService__SetStandardUserSystemClockAutomaticCorrectionEnabled(GlueStaticService_Wrap *this, bool);");
	add_func    (0X710005C270,0X710005C278);
	set_func_flags(0X710005C270,0x1400);
	SetType(0X710005C270, "__int64 __fastcall nn__timesrv__detail__service__IStaticService__GetStandardUserSystemClockInitialYear(GlueStaticService_Wrap *this, _DWORD *);");
	add_func    (0X710005C278,0X710005C280);
	set_func_flags(0X710005C278,0x1400);
	SetType(0X710005C278, "__int64 __fastcall nn__timesrv__detail__service__IStaticService__IsStandardNetworkSystemClockAccuracySufficient(GlueStaticService_Wrap *this);");
	add_func    (0X710005C280,0X710005C288);
	set_func_flags(0X710005C280,0x1400);
	SetType(0X710005C280, "__int64 __fastcall nn__timesrv__detail__service__IStaticService__GetStandardUserSystemClockAutomaticCorrectionUpdatedTime(StaticService_Wrap *this);");
	add_func    (0X710005C288,0X710005C290);
	set_func_flags(0X710005C288,0x1400);
	SetType(0X710005C288, "__int64 __fastcall nn__timesrv__detail__service__IStaticService__CalculateMonotonicSystemClockBaseTimePoint(GlueStaticService_Wrap *this);");
	add_func    (0X710005C290,0X710005C298);
	set_func_flags(0X710005C290,0x1400);
	SetType(0X710005C290, "__int64 __fastcall nn__timesrv__detail__service__IStaticService__GetClockSnapshot(GlueStaticService_Wrap *this);");
	add_func    (0X710005C298,0X710005C2A0);
	set_func_flags(0X710005C298,0x1400);
	SetType(0X710005C298, "__int64 __fastcall nn__timesrv__detail__service__IStaticService__GetClockSnapshotFromSystemClockContext(GlueStaticService_Wrap *this, ClockSnapshot *, SystemClockContext *, SystemClockContext *, __int64);");
	add_func    (0X710005C2A0,0X710005C2A8);
	set_func_flags(0X710005C2A0,0x1400);
	SetType(0X710005C2A0, "__int64 __fastcall nn__timesrv__detail__service__IStaticService__CalculateStandardUserSystemClockDifferenceByUser(GlueStaticService_Wrap *this);");
	add_func    (0X710005C2A8,0X710005C2B0);
	set_func_flags(0X710005C2A8,0x1400);
	SetType(0X710005C2A8, "__int64 __fastcall nn__timesrv__detail__service__IStaticService__CalculateSpanBetween(GlueStaticService_Wrap *this);");
	add_func    (0X710005C2B0,0X710005C3B8);
	set_func_flags(0X710005C2B0,0x1410);
	SetType(0X710005C2B0, "__int64 __fastcall ServiceHandler_time_w(__int64, __int64 (__fastcall ***)(__int64, __int64 *), __int64 *);");
	set_frame_size(0X710005C2B0, 0X30, 0, 0);
	add_func    (0X710005C3B8,0X710005C860);
	set_func_flags(0X710005C3B8,0x1410);
	SetType(0X710005C3B8, "__int64 __fastcall ServiceHandler_time(__int64 *, __int64, __int64 (__fastcall ***)(__int64, __int64 *), _QWORD *, int);");
	set_frame_size(0X710005C3B8, 0XC0, 32, 0);
	add_func    (0X710005C860,0X710005CA34);
	set_func_flags(0X710005C860,0x1410);
	SetType(0X710005C860, "__int64 __fastcall sub_710005C860(_QWORD *, __int64, __int64 (__fastcall ***)(__int64, __int64 *), __int64 *);");
	set_frame_size(0X710005C860, 0XE0, 32, 0);
	add_func    (0X710005CA34,0X710005CC08);
	set_func_flags(0X710005CA34,0x1410);
	SetType(0X710005CA34, "__int64 __fastcall sub_710005CA34(_QWORD, _QWORD, _QWORD, _QWORD);");
	set_frame_size(0X710005CA34, 0XE0, 32, 0);
	add_func    (0X710005CC08,0X710005CDDC);
	set_func_flags(0X710005CC08,0x1410);
	SetType(0X710005CC08, "__int64 __fastcall sub_710005CC08(_QWORD, _QWORD, _QWORD, _QWORD);");
	set_frame_size(0X710005CC08, 0XE0, 32, 0);
	add_func    (0X710005CDDC,0X710005CFB0);
	set_func_flags(0X710005CDDC,0x1410);
	SetType(0X710005CDDC, "__int64 __fastcall sub_710005CDDC(_QWORD, _QWORD, _QWORD, _QWORD);");
	set_frame_size(0X710005CDDC, 0XE0, 32, 0);
	add_func    (0X710005CFB0,0X710005D184);
	set_func_flags(0X710005CFB0,0x1410);
	SetType(0X710005CFB0, "__int64 __fastcall sub_710005CFB0(_QWORD, _QWORD, _QWORD, _QWORD);");
	set_frame_size(0X710005CFB0, 0XE0, 32, 0);
	add_func    (0X710005D184,0X710005D358);
	set_func_flags(0X710005D184,0x1410);
	SetType(0X710005D184, "__int64 __fastcall sub_710005D184(_QWORD, _QWORD, _QWORD, _QWORD);");
	set_frame_size(0X710005D184, 0XE0, 32, 0);
	add_func    (0X710005D358,0X710005D4FC);
	set_func_flags(0X710005D358,0x1410);
	SetType(0X710005D358, "__int64 __fastcall sub_710005D358(_QWORD, _QWORD, _QWORD, _QWORD);");
	set_frame_size(0X710005D358, 0XC0, 32, 0);
	define_local_var(0X710005D358, 0X710005D4FC, "[bp-0X8]", "result");
	add_func    (0X710005D4FC,0X710005D664);
	set_func_flags(0X710005D4FC,0x1410);
	SetType(0X710005D4FC, "__int64 __fastcall sub_710005D4FC(_QWORD, _QWORD, _QWORD, _QWORD);");
	set_frame_size(0X710005D4FC, 0XC0, 32, 0);
	add_func    (0X710005D664,0X710005D7C8);
	set_func_flags(0X710005D664,0x1410);
	SetType(0X710005D664, "__int64 __fastcall sub_710005D664(_QWORD, _QWORD, _QWORD, _QWORD);");
	set_frame_size(0X710005D664, 0XC0, 32, 0);
	add_func    (0X710005D7C8,0X710005D91C);
	set_func_flags(0X710005D7C8,0x1410);
	SetType(0X710005D7C8, "__int64 __fastcall sub_710005D7C8(_QWORD, _QWORD, _QWORD, _QWORD);");
	set_frame_size(0X710005D7C8, 0XC0, 32, 0);
	add_func    (0X710005D91C,0X710005DA84);
	set_func_flags(0X710005D91C,0x1410);
	SetType(0X710005D91C, "__int64 __fastcall sub_710005D91C(_QWORD, _QWORD, _QWORD, _QWORD);");
	set_frame_size(0X710005D91C, 0XC0, 32, 0);
	add_func    (0X710005DA84,0X710005DBE8);
	set_func_flags(0X710005DA84,0x1410);
	SetType(0X710005DA84, "__int64 __fastcall sub_710005DA84(_QWORD *, __int64, __int64 (__fastcall ***)(__int64, __int64 *), __int64 *);");
	set_frame_size(0X710005DA84, 0XC0, 32, 0);
	add_func    (0X710005DBE8,0X710005DD58);
	set_func_flags(0X710005DBE8,0x1410);
	SetType(0X710005DBE8, "__int64 __fastcall sub_710005DBE8(_QWORD, _QWORD, _QWORD, _QWORD);");
	set_frame_size(0X710005DBE8, 0XE0, 32, 0);
	add_func    (0X710005DD58,0X710005DEF0);
	set_func_flags(0X710005DD58,0x1410);
	SetType(0X710005DD58, "__int64 __fastcall sub_710005DD58(_QWORD, _QWORD, _QWORD, _QWORD);");
	set_frame_size(0X710005DD58, 0XE0, 48, 0);
	add_func    (0X710005DEF0,0X710005E09C);
	set_func_flags(0X710005DEF0,0x1410);
	SetType(0X710005DEF0, "__int64 __fastcall sub_710005DEF0(_QWORD, _QWORD, _QWORD, _QWORD);");
	set_frame_size(0X710005DEF0, 0XD0, 32, 0);
	add_func    (0X710005E09C,0X710005E278);
	set_func_flags(0X710005E09C,0x1410);
	SetType(0X710005E09C, "__int64 __fastcall sub_710005E09C(_QWORD, _QWORD, _QWORD, _QWORD);");
	set_frame_size(0X710005E09C, 0X100, 64, 0);
	add_func    (0X710005E278,0X710005E440);
	set_func_flags(0X710005E278,0x1410);
	SetType(0X710005E278, "__int64 __fastcall sub_710005E278(_QWORD, _QWORD, _QWORD, _QWORD);");
	set_frame_size(0X710005E278, 0XD0, 64, 0);
	add_func    (0X710005E440,0X710005E608);
	set_func_flags(0X710005E440,0x1410);
	SetType(0X710005E440, "__int64 __fastcall sub_710005E440(_QWORD, _QWORD, _QWORD, _QWORD);");
	set_frame_size(0X710005E440, 0XD0, 64, 0);
	add_func    (0X710005E608,0X710005E710);
	set_func_flags(0X710005E608,0x1410);
	set_frame_size(0X710005E608, 0X30, 0, 0);
	add_func    (0X710005E710,0X710005E930);
	set_func_flags(0X710005E710,0x1410);
	set_frame_size(0X710005E710, 0XC0, 32, 0);
	add_func    (0X710005E930,0X710005EA98);
	set_func_flags(0X710005E930,0x1410);
	set_frame_size(0X710005E930, 0XC0, 32, 0);
	add_func    (0X710005EA98,0X710005EC08);
	set_func_flags(0X710005EA98,0x1410);
	set_frame_size(0X710005EA98, 0XE0, 32, 0);
	add_func    (0X710005EC08,0X710005ED68);
	set_func_flags(0X710005EC08,0x1410);
	set_frame_size(0X710005EC08, 0XE0, 32, 0);
	add_func    (0X710005ED68,0X710005EF0C);
	set_func_flags(0X710005ED68,0x1410);
	set_frame_size(0X710005ED68, 0XC0, 32, 0);
	define_local_var(0X710005ED68, 0X710005EF0C, "[bp-0X8]", "result");
	add_func    (0X710005EF0C,0X710005F014);
	set_func_flags(0X710005EF0C,0x1410);
	set_frame_size(0X710005EF0C, 0X30, 0, 0);
	add_func    (0X710005F014,0X710005F2AC);
	set_func_flags(0X710005F014,0x1410);
	set_frame_size(0X710005F014, 0XC0, 32, 0);
	add_func    (0X710005F2AC,0X710005F41C);
	set_func_flags(0X710005F2AC,0x1410);
	set_frame_size(0X710005F2AC, 0XE0, 32, 0);
	add_func    (0X710005F41C,0X710005F584);
	set_func_flags(0X710005F41C,0x1410);
	set_frame_size(0X710005F41C, 0XC0, 32, 0);
	add_func    (0X710005F584,0X710005F6EC);
	set_func_flags(0X710005F584,0x1410);
	set_frame_size(0X710005F584, 0XC0, 32, 0);
	add_func    (0X710005F6EC,0X710005F850);
	set_func_flags(0X710005F6EC,0x1410);
	set_frame_size(0X710005F6EC, 0XC0, 32, 0);
	add_func    (0X710005F850,0X710005F9B8);
	set_func_flags(0X710005F850,0x1410);
	set_frame_size(0X710005F850, 0XC0, 32, 0);
	add_func    (0X710005F9B8,0X710005FB20);
	set_func_flags(0X710005F9B8,0x1410);
	set_frame_size(0X710005F9B8, 0XC0, 32, 0);
	add_func    (0X710005FB20,0X710005FC28);
	set_func_flags(0X710005FB20,0x1410);
	set_frame_size(0X710005FB20, 0X30, 0, 0);
	add_func    (0X710005FC28,0X710005FCA0);
	set_func_flags(0X710005FC28,0x1400);
	add_func    (0X710005FCA0,0X710005FE24);
	set_func_flags(0X710005FCA0,0x1410);
	set_frame_size(0X710005FCA0, 0XD0, 64, 0);
	add_func    (0X710005FE24,0X710005FF94);
	set_func_flags(0X710005FE24,0x1410);
	set_frame_size(0X710005FE24, 0XD0, 64, 0);
	add_func    (0X710005FF94,0X71000600FC);
	set_func_flags(0X710005FF94,0x1410);
	set_frame_size(0X710005FF94, 0XC0, 32, 0);
	add_func    (0X71000600FC,0X71000602EC);
	set_func_flags(0X71000600FC,0x1410);
	set_frame_size(0X71000600FC, 0XC0, 64, 0);
	add_func    (0X71000602EC,0X71000604B0);
	set_func_flags(0X71000602EC,0x1410);
	set_frame_size(0X71000602EC, 0XE0, 64, 0);
	add_func    (0X71000604B0,0X7100060618);
	set_func_flags(0X71000604B0,0x1410);
	set_frame_size(0X71000604B0, 0XD0, 32, 0);
	add_func    (0X7100060618,0X71000607A8);
	set_func_flags(0X7100060618,0x1410);
	set_frame_size(0X7100060618, 0XE0, 64, 0);
	add_func    (0X71000607A8,0X7100060970);
	set_func_flags(0X71000607A8,0x1410);
	set_frame_size(0X71000607A8, 0XE0, 64, 0);
	add_func    (0X7100060970,0X7100060B10);
	set_func_flags(0X7100060970,0x1410);
	set_frame_size(0X7100060970, 0XE0, 32, 0);
	add_func    (0X7100060B10,0X7100060CB4);
	set_func_flags(0X7100060B10,0x1410);
	set_frame_size(0X7100060B10, 0XC0, 32, 0);
	define_local_var(0X7100060B10, 0X7100060CB4, "[bp-0X8]", "result");
	add_func    (0X7100060CB4,0X7100060EA4);
	set_func_flags(0X7100060CB4,0x1410);
	set_frame_size(0X7100060CB4, 0XF0, 48, 0);
	add_func    (0X7100060EA4,0X7100061038);
	set_func_flags(0X7100060EA4,0x1410);
	set_frame_size(0X7100060EA4, 0XC0, 64, 0);
	add_func    (0X7100061038,0X7100061230);
	set_func_flags(0X7100061038,0x1410);
	set_frame_size(0X7100061038, 0XE0, 48, 0);
	add_func    (0X7100061230,0X7100061410);
	set_func_flags(0X7100061230,0x1410);
	set_frame_size(0X7100061230, 0XC0, 64, 0);
	add_func    (0X7100061410,0X7100061584);
	set_func_flags(0X7100061410,0x1410);
	SetType(0X7100061410, "void __fastcall nn__timesrv__detail__service__StaticService__StaticService(GlueStaticService *this, StaticServiceSetupInfo *info, GlueTime *time, nn::lmem::detail::HeapHead *heap);");
	set_frame_size(0X7100061410, 0X10, 32, 0);
	add_func    (0X7100061584,0X71000615D0);
	set_func_flags(0X7100061584,0x1410);
	SetType(0X7100061584, "void __fastcall GlueStaticService__Finalise(GlueStaticService *this);");
	set_frame_size(0X7100061584, 0X20, 0, 0);
	add_func    (0X71000615D0,0X7100061604);
	set_func_flags(0X71000615D0,0x1410);
	SetType(0X71000615D0, "__int64 __fastcall nn__timesrv__detail__service__StaticService__GetStandardUserSystemClock(GlueStaticService *this, __int64 *a2);");
	set_frame_size(0X71000615D0, 0X10, 16, 0);
	add_func    (0X7100061604,0X7100061638);
	set_func_flags(0X7100061604,0x1410);
	SetType(0X7100061604, "__int64 __fastcall nn__timesrv__detail__service__StaticService__GetStandardNetworkSystemClock(GlueStaticService *this, __int64 *a2);");
	set_frame_size(0X7100061604, 0X10, 16, 0);
	add_func    (0X7100061638,0X710006166C);
	set_func_flags(0X7100061638,0x1410);
	SetType(0X7100061638, "__int64 __fastcall nn__timesrv__detail__service__StaticService__GetEphemeralNetworkSystemClock(GlueStaticService *this, __int64 *a2);");
	set_frame_size(0X7100061638, 0X10, 16, 0);
	add_func    (0X710006166C,0X710006167C);
	set_func_flags(0X710006166C,0x1400);
	SetType(0X710006166C, "__int64 __fastcall nn__timesrv__detail__service__StaticService__GetSharedMemoryNativeHandle(GlueStaticService *this, __int64);");
	add_func    (0X710006167C,0X71000616B0);
	set_func_flags(0X710006167C,0x1410);
	SetType(0X710006167C, "__int64 __fastcall nn__timesrv__detail__service__StaticService__GetStandardLocalSystemClock(GlueStaticService *a1, __int64 *a2);");
	set_frame_size(0X710006167C, 0X10, 16, 0);
	add_func    (0X71000616B0,0X71000616E4);
	set_func_flags(0X71000616B0,0x1410);
	SetType(0X71000616B0, "__int64 __fastcall nn__timesrv__detail__service__StaticService__GetStandardSteadyClock(GlueStaticService *this, __int64 *a2);");
	set_frame_size(0X71000616B0, 0X10, 16, 0);
	add_func    (0X71000616E4,0X7100061868);
	set_func_flags(0X71000616E4,0x1410);
	SetType(0X71000616E4, "__int64 __fastcall nn__timesrv__detail__service__StaticService__GetTimeZoneService(GlueStaticService *this, __int64 **out_service);");
	set_frame_size(0X71000616E4, 0X20, 48, 0);
	add_func    (0X7100061868,0X7100061898);
	set_func_flags(0X7100061868,0x1410);
	SetType(0X7100061868, "__int64 __fastcall nn__timesrv__detail__service__StaticService__SetStandardSteadyClockInternalOffset(StaticService *this, __int64 offset);");
	set_frame_size(0X7100061868, 0, 16, 0);
	add_func    (0X7100061898,0X71000618D8);
	set_func_flags(0X7100061898,0x1410);
	SetType(0X7100061898, "__int64 __fastcall nn__timesrv__detail__service__StaticService__GetStandardSteadyClockRtcValue(GlueStaticService *this, _QWORD *out_rtc_value);");
	set_frame_size(0X7100061898, 0X20, 0, 0);
	add_func    (0X71000618D8,0X71000618E8);
	set_func_flags(0X71000618D8,0x1400);
	SetType(0X71000618D8, "__int64 __fastcall nn__timesrv__detail__service__StaticService__IsStandardUserSystemClockAutomaticCorrectionEnabled(GlueStaticService *this, bool *a2);");
	add_func    (0X71000618E8,0X71000618F8);
	set_func_flags(0X71000618E8,0x1400);
	SetType(0X71000618E8, "__int64 __fastcall nn__timesrv__detail__service__StaticService__SetStandardUserSystemClockAutomaticCorrectionEnabled(GlueStaticService *this, bool);");
	add_func    (0X71000618F8,0X7100061908);
	set_func_flags(0X71000618F8,0x1400);
	SetType(0X71000618F8, "__int64 __fastcall nn__timesrv__detail__service__StaticService__IsStandardNetworkSystemClockAccuracySufficient(GlueStaticService *this);");
	add_func    (0X7100061908,0X7100061918);
	set_func_flags(0X7100061908,0x1400);
	SetType(0X7100061908, "__int64 __fastcall nn__timesrv__detail__service__StaticService__GetStandardUserSystemClockAutomaticCorrectionUpdatedTime(GlueStaticService *this);");
	add_func    (0X7100061918,0X7100061928);
	set_func_flags(0X7100061918,0x1400);
	SetType(0X7100061918, "__int64 __fastcall nn__timesrv__detail__service__StaticService__CalculateMonotonicSystemClockBaseTimePoint(GlueStaticService *this);");
	add_func    (0X7100061928,0X7100061938);
	set_func_flags(0X7100061928,0x1400);
	SetType(0X7100061928, "__int64 __fastcall nn__timesrv__detail__service__StaticService__GetClockSnapshot(GlueStaticService *this);");
	add_func    (0X7100061938,0X7100061948);
	set_func_flags(0X7100061938,0x1400);
	SetType(0X7100061938, "__int64 __fastcall nn__timesrv__detail__service__StaticService__GetClockSnapshotFromSystemClockContext(GlueStaticService *this, ClockSnapshot *out_snapshot, SystemClockContext *user_context, SystemClockContext *network_context, __int64 clock_type);");
	add_func    (0X7100061948,0X7100061958);
	set_func_flags(0X7100061948,0x1400);
	SetType(0X7100061948, "__int64 __fastcall nn__timesrv__detail__service__StaticService__CalculateStandardUserSystemClockDifferenceByUser(GlueStaticService *this);");
	add_func    (0X7100061958,0X7100061968);
	set_func_flags(0X7100061958,0x1400);
	SetType(0X7100061958, "__int64 __fastcall nn__timesrv__detail__service__StaticService__CalculateSpanBetween(GlueStaticService *this);");
	add_func    (0X7100061968,0X7100061990);
	set_func_flags(0X7100061968,0x1410);
	SetType(0X7100061968, "__int64 __fastcall nn__timesrv__detail__service__StaticService__GetStandardUserSystemClockInitialYear(GlueStaticService *this, _DWORD *out_year);");
	set_frame_size(0X7100061968, 0X20, 0, 0);
	add_func    (0X7100061990,0X7100061998);
	set_func_flags(0X7100061990,0x1400);
	add_func    (0X7100061998,0X7100061A00);
	set_func_flags(0X7100061998,0x1410);
	SetType(0X7100061998, "__int64 __fastcall sub_7100061998(__int64);");
	set_frame_size(0X7100061998, 0X20, 16, 0);
	add_func    (0X7100061A00,0X7100061A08);
	set_func_flags(0X7100061A00,0x1400);
	SetType(0X7100061A00, "__int64 __fastcall nn__timesrv__detail__service__ITimeZoneService__GetDeviceLocationName(GlueTimeZoneService_Wrap *this, __int64);");
	add_func    (0X7100061A08,0X7100061A10);
	set_func_flags(0X7100061A08,0x1400);
	SetType(0X7100061A08, "__int64 __fastcall nn__timesrv__detail__service__ITimeZoneService__SetDeviceLocationName(GlueTimeZoneService_Wrap *, TimeZone::LocationName *);");
	add_func    (0X7100061A10,0X7100061A18);
	set_func_flags(0X7100061A10,0x1400);
	SetType(0X7100061A10, "__int64 __fastcall nn__timesrv__detail__service__ITimeZoneService__GetTotalLocationNameCount(GlueTimeZoneService_Wrap *this);");
	add_func    (0X7100061A18,0X7100061A2C);
	set_func_flags(0X7100061A18,0x1400);
	SetType(0X7100061A18, "__int64 __fastcall nn__timesrv__detail__service__ITimeZoneService__LoadLocationNameList(GlueTimeZoneService_Wrap *this, int *out_count, nn::sf::detail::PointerAndSize *out_names, unsigned int location_index);");
	add_func    (0X7100061A2C,0X7100061A34);
	set_func_flags(0X7100061A2C,0x1400);
	SetType(0X7100061A2C, "__int64 __fastcall nn__timesrv__detail__service__ITimeZoneService__LoadTimeZoneRule(GlueTimeZoneService_Wrap *this, TimeZone::Rule *out_rule, TimeZone::LocationName *in_name);");
	add_func    (0X7100061A34,0X7100061A3C);
	set_func_flags(0X7100061A34,0x1400);
	SetType(0X7100061A34, "__int64 __fastcall nn__timesrv__detail__service__ITimeZoneService__GetTimeZoneRuleVersion(GlueTimeZoneService_Wrap *this, __int64);");
	add_func    (0X7100061A3C,0X7100061A44);
	set_func_flags(0X7100061A3C,0x1400);
	SetType(0X7100061A3C, "__int64 __fastcall nn__timesrv__detail__service__ITimeZoneService__GetDeviceLocationNameAndUpdatedTime(GlueTimeZoneService_Wrap *this, TimeZone::LocationName *, SteadyClockTimePoint *);");
	add_func    (0X7100061A44,0X7100061A4C);
	set_func_flags(0X7100061A44,0x1400);
	SetType(0X7100061A44, "__int64 __fastcall nn__timesrv__detail__service__ITimeZoneService__SetDeviceLocationNameWithTimeZoneRule(GlueTimeZoneService_Wrap *this);");
	add_func    (0X7100061A4C,0X7100061A54);
	set_func_flags(0X7100061A4C,0x1400);
	SetType(0X7100061A4C, "__int64 __fastcall nn__timesrv__detail__service__ITimeZoneService__ParseTimeZoneBinary(GlueTimeZoneService_Wrap *this);");
	add_func    (0X7100061A54,0X7100061A5C);
	set_func_flags(0X7100061A54,0x1400);
	SetType(0X7100061A54, "__int64 __fastcall nn__timesrv__detail__service__ITimeZoneService__GetDeviceLocationNameOperationEventReadableHandle(GlueTimeZoneService_Wrap *this, nn::sf::NativeHandle *out_handle);");
	add_func    (0X7100061A5C,0X7100061A84);
	set_func_flags(0X7100061A5C,0x1410);
	SetType(0X7100061A5C, "__int64 __fastcall nn__timesrv__detail__service__ITimeZoneService__ToCalendarTime(GlueTimeZoneService_Wrap *this, TimeZone::CalendarTime *calendar_time, TimeZone::CalendarAdditionalInfo *additional_info, __int64 time, TimeZone::Rule *rule);");
	set_frame_size(0X7100061A5C, 0X10, 16, 0);
	add_func    (0X7100061A84,0X7100061AAC);
	set_func_flags(0X7100061A84,0x1410);
	SetType(0X7100061A84, "__int64 __fastcall nn__timesrv__detail__service__ITimeZoneService__ToCalendarTimeWithMyRule(GlueTimeZoneService_Wrap *this, TimeZone::CalendarTime *out_calendar, TimeZone::CalendarAdditionalInfo *out_additional_info, __int64 time);");
	set_frame_size(0X7100061A84, 0X10, 16, 0);
	add_func    (0X7100061AAC,0X7100061AE0);
	set_func_flags(0X7100061AAC,0x1410);
	SetType(0X7100061AAC, "__int64 __fastcall nn__timesrv__detail__service__ITimeZoneService__ToPosixTime(GlueTimeZoneService_Wrap *this, __int64 out_count, nn::sf::detail::PointerAndSize *out_times, TimeZone::CalendarTime *calendar, TimeZone::Rule *rule);");
	set_frame_size(0X7100061AAC, 0X10, 16, 0);
	add_func    (0X7100061AE0,0X7100061B10);
	set_func_flags(0X7100061AE0,0x1410);
	SetType(0X7100061AE0, "__int64 __fastcall nn__timesrv__detail__service__ITimeZoneService__ToPosixTimeWithMyRule(GlueTimeZoneService_Wrap *this, __int64 out_count, nn::sf::detail::PointerAndSize *out_times, TimeZone::CalendarTime *calendar);");
	set_frame_size(0X7100061AE0, 0X10, 16, 0);
	add_func    (0X7100061B10,0X7100061B60);
	set_func_flags(0X7100061B10,0x1410);
	SetType(0X7100061B10, "void __fastcall GlueTImeZoneService__GlueTimeZoneService(GlueTimeZoneService *this, __int64 unk_40, char unk_bool, TimeZoneService_Wrap **timezone_service);");
	set_frame_size(0X7100061B10, 0X20, 0, 0);
	add_func    (0X7100061B60,0X7100061C0C);
	set_func_flags(0X7100061B60,0x1410);
	SetType(0X7100061B60, "__int64 __fastcall sub_7100061B60(__int64);");
	set_frame_size(0X7100061B60, 0X20, 16, 0);
	add_func    (0X7100061C0C,0X7100061C1C);
	set_func_flags(0X7100061C0C,0x1400);
	SetType(0X7100061C0C, "__int64 __fastcall nn__timesrv__detail__service__TimeZoneService__GetDeviceLocationName(GlueTimeZoneService *this, __int64);");
	add_func    (0X7100061C20,0X7100061D94);
	set_func_flags(0X7100061C20,0x1410);
	SetType(0X7100061C20, "__int64 __fastcall nn__timesrv__detail__service__TimeZoneService__SetDeviceLocationName(GlueTimeZoneService *this, TimeZone::LocationName *name);");
	set_frame_size(0X7100061C20, 0X80, 48, 0);
	define_local_var(0X7100061C20, 0X7100061D94, "[bp-0X78]", "time_point");
	define_local_var(0X7100061C20, 0X7100061D94, "[bp-0X60]", "rule_buffer");
	define_local_var(0X7100061C20, 0X7100061D94, "[bp-0X38]", "location_name");
	define_local_var(0X7100061C20, 0X7100061D94, "[bp-0X10]", "rule_size");
	define_local_var(0X7100061C20, 0X7100061D94, "[bp-0X8]", "rule");
	add_func    (0X7100061D94,0X7100061DA4);
	set_func_flags(0X7100061D94,0x1400);
	SetType(0X7100061D94, "__int64 __fastcall nn__timesrv__detail__service__TimeZoneService__GetTotalLocationNameCount(GlueTimeZoneService *this);");
	add_func    (0X7100061DA4,0X7100061E44);
	set_func_flags(0X7100061DA4,0x1410);
	SetType(0X7100061DA4, "__int64 __fastcall nn__timesrv__detail__service__TimeZoneService__LoadTimeZoneRule(GlueTimeZoneService *this, TimeZone::Rule *out_rule, TimeZone::LocationName *input_name);");
	set_frame_size(0X7100061DA4, 0X50, 48, 0);
	define_local_var(0X7100061DA4, 0X7100061E44, "[bp-0X48]", "in_rule_buffer");
	define_local_var(0X7100061DA4, 0X7100061E44, "[bp-0X38]", "name");
	define_local_var(0X7100061DA4, 0X7100061E44, "[bp-0X10]", "rule_size");
	define_local_var(0X7100061DA4, 0X7100061E44, "[bp-0X8]", "rule_ptr");
	add_func    (0X7100061E44,0X7100061EAC);
	set_func_flags(0X7100061E44,0x1410);
	SetType(0X7100061E44, "__int64 __fastcall nn__timesrv__detail__service__TimeZoneService__LoadLocationNameList(GlueTimeZoneService *this, int *out_count, __int64 names_ptr, __int64 names_size, unsigned int name_index);");
	set_frame_size(0X7100061E44, 0X20, 32, 0);
	add_func    (0X7100061EAC,0X7100061EBC);
	set_func_flags(0X7100061EAC,0x1400);
	SetType(0X7100061EAC, "__int64 __fastcall nn__timesrv__detail__service__TimeZoneService__GetTimeZoneRuleVersion(GlueTimeZoneService *this, __int64 out_version);");
	add_func    (0X7100061EBC,0X7100061ECC);
	set_func_flags(0X7100061EBC,0x1400);
	SetType(0X7100061EBC, "__int64 __fastcall nn__timesrv__detail__service__TimeZoneService__GetDeviceLocationNameAndUpdatedTime(GlueTimeZoneService *this, TimeZone::LocationName *name, SteadyClockTimePoint *time_point);");
	add_func    (0X7100061ECC,0X7100061EE8);
	set_func_flags(0X7100061ECC,0x1400);
	SetType(0X7100061ECC, "__int64 __fastcall nn__timesrv__detail__service__TimeZoneService__SetDeviceLocationNameWithTimeZoneRule(GlueTimeZoneService *this);");
	add_func    (0X7100061EE8,0X7100061EF4);
	set_func_flags(0X7100061EE8,0x1400);
	SetType(0X7100061EE8, "__int64 __fastcall nn__timesrv__detail__service__TimeZoneService__ParseTimeZoneBinary(GlueTimeZoneService *this);");
	add_func    (0X7100061EF4,0X7100061FD0);
	set_func_flags(0X7100061EF4,0x1410);
	SetType(0X7100061EF4, "__int64 __fastcall nn__timesrv__detail__service__TimeZoneService__GetDeviceLocationNameOperationEventReadableHandle(GlueTimeZoneService *this, nn::sf::NativeHandle *out_handle);");
	set_frame_size(0X7100061EF4, 0X10, 64, 0);
	add_func    (0X7100061FD0,0X7100061FE4);
	set_func_flags(0X7100061FD0,0x1400);
	SetType(0X7100061FD0, "__int64 __fastcall nn__timesrv__detail__service__TimeZoneService__ToCalendarTime(GlueTimeZoneService *this, TimeZone::CalendarTime *calendar_time, TimeZone::CalendarAdditionalInfo *additional_info, s64 *time, TimeZone::Rule *rule);");
	add_func    (0X7100061FE4,0X7100061FF8);
	set_func_flags(0X7100061FE4,0x1400);
	SetType(0X7100061FE4, "__int64 __fastcall nn__timesrv__detail__service__TimeZoneService__ToCalendarTimeWithMyRule(GlueTimeZoneService *this, TimeZone::CalendarTime *out_calendar, TimeZone::CalendarAdditionalInfo *out_additional_info, __int64 time);");
	add_func    (0X7100061FF8,0X7100062030);
	set_func_flags(0X7100061FF8,0x1410);
	SetType(0X7100061FF8, "__int64 __fastcall nn__timesrv__detail__service__TimeZoneService__ToPosixTime(GlueTimeZoneService *this, __int64 out_count, __int64 out_names_ptr, __int64 out_names_size, TimeZone::CalendarTime **calendar, TimeZone::Rule *rule);");
	set_frame_size(0X7100061FF8, 0X10, 16, 0);
	define_local_var(0X7100061FF8, 0X7100062030, "[bp-0X10]", "in_buffer");
	add_func    (0X7100062030,0X7100062064);
	set_func_flags(0X7100062030,0x1410);
	SetType(0X7100062030, "__int64 __fastcall nn__timesrv__detail__service__TimeZoneService__ToPosixTimeWithMyRule(GlueTimeZoneService *this, __int64 out_count, __int64 out_times_ptr, __int64 out_times_size, TimeZone::CalendarTime *calendar);");
	set_frame_size(0X7100062030, 0X10, 16, 0);
	define_local_var(0X7100062030, 0X7100062064, "[bp-0X10]", "out_times");
	add_func    (0X7100062070,0X71000620A4);
	set_func_flags(0X7100062070,0x1410);
	SetType(0X7100062070, "__int64 GetUnixEpochFromInitialYear();");
	set_frame_size(0X7100062070, 0X10, 16, 0);
	add_func    (0X71000620B0,0X71000621D8);
	set_func_flags(0X71000620B0,0x1410);
	SetType(0X71000620B0, "unsigned int *GetServce_IRtcManager();");
	set_frame_size(0X71000620B0, 0X20, 32, 0);
	add_func    (0X71000621E0,0X710006226C);
	set_func_flags(0X71000621E0,0x1410);
	SetType(0X71000621E0, "__int64 __fastcall Rtc_GetTimeInSeconds(__int64 out_time, unsigned int device_code);");
	set_frame_size(0X71000621E0, 0X20, 16, 0);
	add_func    (0X7100062270,0X71000622FC);
	set_func_flags(0X7100062270,0x1410);
	SetType(0X7100062270, "__int64 __fastcall Rtc_GetRtcResetDetected(__int64 rtc_detected, unsigned int device_code);");
	set_frame_size(0X7100062270, 0X20, 16, 0);
	add_func    (0X7100062300,0X7100062384);
	set_func_flags(0X7100062300,0x1410);
	SetType(0X7100062300, "__int64 __fastcall Rtc_ClearRtcResetDetected(unsigned int);");
	set_frame_size(0X7100062300, 0X10, 32, 0);
	add_func    (0X7100062390,0X710006242C);
	set_func_flags(0X7100062390,0x1410);
	SetType(0X7100062390, "__int64 __fastcall Rtc_EnableAlarm(unsigned int device_code, unsigned int alarm_id, __int64 alarm_time);");
	set_frame_size(0X7100062390, 0X10, 48, 0);
	add_func    (0X7100062430,0X71000624BC);
	set_func_flags(0X7100062430,0x1410);
	SetType(0X7100062430, "__int64 __fastcall Rtc_DisableAlarm(unsigned int device_code, unsigned int alarm_id);");
	set_frame_size(0X7100062430, 0X20, 16, 0);
	add_func    (0X71000624BC,0X710006266C);
	set_func_flags(0X71000624BC,0x1410);
	SetType(0X71000624BC, "__int64 __fastcall sub_71000624BC(__int64 *, __int64 *);");
	set_frame_size(0X71000624BC, 0X20, 32, 0);
	add_func    (0X710006266C,0X7100062674);
	set_func_flags(0X710006266C,0x1400);
	add_func    (0X7100062674,0X7100062724);
	set_func_flags(0X7100062674,0x1410);
	set_frame_size(0X7100062674, 0XA0, 48, 0);
	add_func    (0X7100062724,0X710006272C);
	set_func_flags(0X7100062724,0x1400);
	add_func    (0X710006272C,0X710006273C);
	set_func_flags(0X710006272C,0x1400);
	SetType(0X710006272C, "__int64 __fastcall sub_710006272C(__int64, __int64, unsigned int);");
	add_func    (0X710006273C,0X710006274C);
	set_func_flags(0X710006273C,0x1400);
	add_func    (0X710006274C,0X7100062760);
	set_func_flags(0X710006274C,0x1400);
	add_func    (0X7100062760,0X7100062770);
	set_func_flags(0X7100062760,0x1400);
	add_func    (0X7100062770,0X7100062780);
	set_func_flags(0X7100062770,0x1400);
	add_func    (0X7100062780,0X7100062794);
	set_func_flags(0X7100062780,0x1400);
	add_func    (0X7100062794,0X71000627A8);
	set_func_flags(0X7100062794,0x1400);
	add_func    (0X71000627A8,0X71000627B0);
	set_func_flags(0X71000627A8,0x1400);
	add_func    (0X71000627B0,0X71000627B8);
	set_func_flags(0X71000627B0,0x1400);
	add_func    (0X71000627B8,0X71000628A4);
	set_func_flags(0X71000627B8,0x1410);
	set_frame_size(0X71000627B8, 0X90, 32, 0);
	add_func    (0X71000628A4,0X7100062994);
	set_func_flags(0X71000628A4,0x1410);
	set_frame_size(0X71000628A4, 0X90, 32, 0);
	add_func    (0X7100062994,0X7100062A88);
	set_func_flags(0X7100062994,0x1410);
	set_frame_size(0X7100062994, 0X70, 64, 0);
	add_func    (0X7100062A88,0X7100062B78);
	set_func_flags(0X7100062A88,0x1410);
	set_frame_size(0X7100062A88, 0X70, 64, 0);
	add_func    (0X7100062B78,0X7100062BD4);
	set_func_flags(0X7100062B78,0x1410);
	set_frame_size(0X7100062B78, 0, 32, 0);
	add_func    (0X7100062BD4,0X7100062BD8);
	set_func_flags(0X7100062BD4,0x1480);
	SetType(0X7100062BD4, "__int64 __fastcall sub_7100062BD4(_QWORD);");
	add_func    (0X7100062BD8,0X7100062BFC);
	set_func_flags(0X7100062BD8,0x1410);
	set_frame_size(0X7100062BD8, 0X20, 0, 0);
	add_func    (0X7100062BFC,0X7100062C00);
	set_func_flags(0X7100062BFC,0x1480);
	add_func    (0X7100062C00,0X7100062C04);
	set_func_flags(0X7100062C00,0x14c0);
	SetType(0X7100062C00, "__int64 __fastcall j_TimeAL__CreateAlarm(__int64);");
	add_func    (0X7100062C04,0X7100062C08);
	set_func_flags(0X7100062C04,0x1480);
	add_func    (0X7100062C08,0X7100062C0C);
	set_func_flags(0X7100062C08,0x1480);
	add_func    (0X7100062C0C,0X7100062C10);
	set_func_flags(0X7100062C0C,0x14c0);
	add_func    (0X7100062C10,0X7100062C28);
	set_func_flags(0X7100062C10,0x1400);
	add_func    (0X7100062C28,0X7100062C38);
	set_func_flags(0X7100062C28,0x1400);
	add_func    (0X7100062C38,0X7100062CC4);
	set_func_flags(0X7100062C38,0x1410);
	set_frame_size(0X7100062C38, 0X20, 0, 0);
	add_func    (0X7100062CC4,0X7100062D9C);
	set_func_flags(0X7100062CC4,0x1410);
	set_frame_size(0X7100062CC4, 0X30, 0, 0);
	add_func    (0X7100062DA0,0X7100062E84);
	set_func_flags(0X7100062DA0,0x1410);
	SetType(0X7100062DA0, "__int64 GetTimeAL();");
	set_frame_size(0X7100062DA0, 0X20, 0, 0);
	add_func    (0X7100062E84,0X7100062FAC);
	set_func_flags(0X7100062E84,0x1410);
	SetType(0X7100062E84, "__int64 __fastcall TimeAL__CreateAlarm(__int64);");
	set_frame_size(0X7100062E84, 0X30, 16, 0);
	add_func    (0X7100062FAC,0X7100063020);
	set_func_flags(0X7100062FAC,0x1410);
	set_frame_size(0X7100062FAC, 0X30, 0, 0);
	add_func    (0X7100063020,0X7100063034);
	set_func_flags(0X7100063020,0x1400);
	add_func    (0X7100063034,0X7100063038);
	set_func_flags(0X7100063034,0x1440);
	add_func    (0X7100063038,0X710006303C);
	set_func_flags(0X7100063038,0x1440);
	add_func    (0X710006303C,0X7100063040);
	set_func_flags(0X710006303C,0x1440);
	add_func    (0X7100063040,0X7100063060);
	set_func_flags(0X7100063040,0x1400);
	add_func    (0X7100063060,0X7100063064);
	set_func_flags(0X7100063060,0x1440);
	SetType(0X7100063060, "__int64 __fastcall nullsub_88(_QWORD);");
	add_func    (0X7100063064,0X7100063068);
	set_func_flags(0X7100063064,0x1440);
	add_func    (0X7100063068,0X71000631C0);
	set_func_flags(0X7100063068,0x1410);
	SetType(0X7100063068, "__int64 __fastcall GetService_TimeAL(__int64 a1, __int64 *out_time_al);");
	set_frame_size(0X7100063068, 0X20, 32, 0);
	add_func    (0X71000631C0,0X7100063514);
	set_func_flags(0X71000631C0,0x1410);
	SetType(0X71000631C0, "__int64 __fastcall sub_71000631C0(_QWORD, _QWORD);");
	set_frame_size(0X71000631C0, 0X10, 96, 0);
	add_func    (0X7100063514,0X710006361C);
	set_func_flags(0X7100063514,0x1410);
	set_frame_size(0X7100063514, 0X10, 64, 0);
	add_func    (0X710006361C,0X7100063624);
	set_func_flags(0X710006361C,0x1400);
	add_func    (0X7100063624,0X710006367C);
	set_func_flags(0X7100063624,0x1410);
	set_frame_size(0X7100063624, 0, 32, 0);
	add_func    (0X710006367C,0X7100063684);
	set_func_flags(0X710006367C,0x1400);
	add_func    (0X7100063684,0X7100063718);
	set_func_flags(0X7100063684,0x1410);
	set_frame_size(0X7100063684, 0X20, 32, 0);
	add_func    (0X7100063718,0X71000637AC);
	set_func_flags(0X7100063718,0x1410);
	set_frame_size(0X7100063718, 0X20, 32, 0);
	add_func    (0X71000637AC,0X71000637B4);
	set_func_flags(0X71000637AC,0x1400);
	add_func    (0X71000637B4,0X71000637BC);
	set_func_flags(0X71000637B4,0x1400);
	add_func    (0X71000637BC,0X7100063868);
	set_func_flags(0X71000637BC,0x1410);
	set_frame_size(0X71000637BC, 0X20, 16, 0);
	add_func    (0X7100063868,0X7100063870);
	set_func_flags(0X7100063868,0x1400);
	add_func    (0X7100063870,0X71000638C8);
	set_func_flags(0X7100063870,0x1410);
	set_frame_size(0X7100063870, 0, 32, 0);
	add_func    (0X71000638C8,0X71000638D0);
	set_func_flags(0X71000638C8,0x1400);
	add_func    (0X71000638D0,0X71000638DC);
	set_func_flags(0X71000638D0,0x1400);
	add_func    (0X71000638DC,0X71000638E8);
	set_func_flags(0X71000638DC,0x1400);
	add_func    (0X71000638E8,0X71000638F4);
	set_func_flags(0X71000638E8,0x1400);
	add_func    (0X71000638F4,0X7100063900);
	set_func_flags(0X71000638F4,0x1400);
	add_func    (0X7100063900,0X7100063994);
	set_func_flags(0X7100063900,0x1410);
	set_frame_size(0X7100063900, 0X20, 32, 0);
	add_func    (0X7100063994,0X71000639A0);
	set_func_flags(0X7100063994,0x1400);
	add_func    (0X71000639A0,0X71000639A8);
	set_func_flags(0X71000639A0,0x1400);
	add_func    (0X71000639A8,0X71000639B0);
	set_func_flags(0X71000639A8,0x1400);
	add_func    (0X71000639B0,0X7100063A5C);
	set_func_flags(0X71000639B0,0x1410);
	set_frame_size(0X71000639B0, 0X20, 16, 0);
	add_func    (0X7100063A5C,0X7100063A64);
	set_func_flags(0X7100063A5C,0x1400);
	add_func    (0X7100063A64,0X7100063ABC);
	set_func_flags(0X7100063A64,0x1410);
	set_frame_size(0X7100063A64, 0, 32, 0);
	add_func    (0X7100063ABC,0X7100063AC4);
	set_func_flags(0X7100063ABC,0x1400);
	add_func    (0X7100063AC4,0X7100063AD4);
	set_func_flags(0X7100063AC4,0x1400);
	add_func    (0X7100063AD4,0X7100063AE0);
	set_func_flags(0X7100063AD4,0x1400);
	add_func    (0X7100063AE0,0X7100063AEC);
	set_func_flags(0X7100063AE0,0x1400);
	add_func    (0X7100063AEC,0X7100063AF8);
	set_func_flags(0X7100063AEC,0x1400);
	add_func    (0X7100063AF8,0X7100063B04);
	set_func_flags(0X7100063AF8,0x1400);
	add_func    (0X7100063B04,0X7100063B0C);
	set_func_flags(0X7100063B04,0x1400);
	add_func    (0X7100063B0C,0X7100063B14);
	set_func_flags(0X7100063B0C,0x1400);
	add_func    (0X7100063B14,0X7100063B1C);
	set_func_flags(0X7100063B14,0x1400);
	SetType(0X7100063B14, "__int64 __fastcall sub_7100063B14(__int64);");
	add_func    (0X7100063B1C,0X7100063BD0);
	set_func_flags(0X7100063B1C,0x1410);
	SetType(0X7100063B1C, "__int64 __fastcall sub_7100063B1C(_QWORD, _QWORD);");
	set_frame_size(0X7100063B1C, 0X20, 16, 0);
	add_func    (0X7100063BD0,0X7100063BE4);
	set_func_flags(0X7100063BD0,0x1400);
	add_func    (0X7100063BE4,0X7100063BFC);
	set_func_flags(0X7100063BE4,0x1400);
	add_func    (0X7100063C00,0X7100063D5C);
	set_func_flags(0X7100063C00,0x1410);
	SetType(0X7100063C00, "__int64 Setup_ServiceManager();");
	set_frame_size(0X7100063C00, 0X20, 32, 0);
	add_func    (0X7100063D60,0X7100063E48);
	set_func_flags(0X7100063D60,0x1410);
	SetType(0X7100063D60, "__int64 sub_7100063D60();");
	set_frame_size(0X7100063D60, 0X20, 0, 0);
	add_func    (0X7100063E50,0X7100063F2C);
	set_func_flags(0X7100063E50,0x1410);
	SetType(0X7100063E50, "void __usercall StaticServiceUser__StaticServiceUser(StaticService_Wrap *out_service@<X8>);");
	set_frame_size(0X7100063E50, 0X10, 32, 0);
	define_local_var(0X7100063E50, 0X7100063F2C, "[bp-0X10]", "user_system_clock");
	add_func    (0X7100063F30,0X710006400C);
	set_func_flags(0X7100063F30,0x1410);
	SetType(0X7100063F30, "StaticService_Wrap *__usercall StaticServiceAdmin__StaticServiceAdmin@<X0>(StaticService_Wrap **@<X8>);");
	set_frame_size(0X7100063F30, 0X10, 32, 0);
	add_func    (0X7100064010,0X71000640EC);
	set_func_flags(0X7100064010,0x1410);
	SetType(0X7100064010, "StaticService_Wrap *__usercall StaticServiceRepair__StaticServiceRepair@<X0>(StaticService_Wrap **@<X8>);");
	set_frame_size(0X7100064010, 0X10, 32, 0);
	add_func    (0X71000640F0,0X7100064148);
	set_func_flags(0X71000640F0,0x1410);
	SetType(0X71000640F0, "nn::Result __usercall GetServiceManager@<W0>(StaticService_Wrap **service_manager@<X8>);");
	set_frame_size(0X71000640F0, 0, 16, 0);
	add_func    (0X7100064150,0X71000641B4);
	set_func_flags(0X7100064150,0x1410);
	SetType(0X7100064150, "__int64 __fastcall TimeServiceManager_SetupStandardSteadyClockCore(__int64 clock_source_id, __int64 *rtc_offset, __int64 *internal_offset, __int64 *test_offset, char reset_detected);");
	set_frame_size(0X7100064150, 0, 16, 0);
	add_func    (0X71000641C0,0X710006420C);
	set_func_flags(0X71000641C0,0x1410);
	SetType(0X71000641C0, "__int64 __fastcall TimeServiceManager_SetupStandardLocalSystemClockCore(SystemClockContext *context, __int64 time);");
	set_frame_size(0X71000641C0, 0, 16, 0);
	add_func    (0X7100064210,0X710006425C);
	set_func_flags(0X7100064210,0x1410);
	SetType(0X7100064210, "__int64 __fastcall TimeServiceManager_SetupStandardNetworkSystemClockCore(SystemClockContext *context, __int64 sufficient_accuracy_minutes);");
	set_frame_size(0X7100064210, 0, 16, 0);
	add_func    (0X7100064260,0X71000642AC);
	set_func_flags(0X7100064260,0x1410);
	SetType(0X7100064260, "__int64 __fastcall TimeServiceManager_SetupStandardUserSystemClockCore(bool automatic_correction, SteadyClockTimePoint *time_point);");
	set_frame_size(0X7100064260, 0, 16, 0);
	add_func    (0X71000642B0,0X7100064318);
	set_func_flags(0X71000642B0,0x1410);
	SetType(0X71000642B0, "__int64 __fastcall TimeServiceManager_SetupTimeZoneServiceCore(TimeZone::LocationName *name, SteadyClockTimePoint *time_point, unsigned int total_location_name_count, __int64 rule_version, __int64 rule, __int64 rule_size);");
	set_frame_size(0X71000642B0, 0X10, 16, 0);
	define_local_var(0X71000642B0, 0X7100064318, "[bp-0X10]", "rule_buffer");
	add_func    (0X7100064320,0X7100064360);
	set_func_flags(0X7100064320,0x1410);
	SetType(0X7100064320, "__int64 __fastcall TimeServiceManager_SetupEphemeralNetworkSystemClockCore();");
	set_frame_size(0X7100064320, 0, 16, 0);
	add_func    (0X7100064360,0X71000643F0);
	set_func_flags(0X7100064360,0x1410);
	SetType(0X7100064360, "__int64 __fastcall TTimeServiceManager_GetStandardLocalClockOperationEvent(nn::os::SystemEventType *);");
	set_frame_size(0X7100064360, 0X30, 0, 0);
	add_func    (0X71000643F0,0X7100064480);
	set_func_flags(0X71000643F0,0x1410);
	SetType(0X71000643F0, "__int64 __fastcall TimeServiceManager_GetStandardNetworkClockOperationEventForServiceManager(nn::os::SystemEventType *);");
	set_frame_size(0X71000643F0, 0X30, 0, 0);
	add_func    (0X7100064480,0X7100064510);
	set_func_flags(0X7100064480,0x1410);
	SetType(0X7100064480, "__int64 __fastcall TimeServiceManager_GetEphemeralNetworkClockOperationEventForServiceManager(__int64);");
	set_frame_size(0X7100064480, 0X30, 0, 0);
	add_func    (0X7100064510,0X71000645A0);
	set_func_flags(0X7100064510,0x1410);
	SetType(0X7100064510, "__int64 __fastcall TimeServiceManager_GetStandardUserSystemClockAutomaticCorrectionUpdatedEvent(nn::os::SystemEventType *);");
	set_frame_size(0X7100064510, 0X30, 0, 0);
	add_func    (0X71000645A0,0X7100064604);
	set_func_flags(0X71000645A0,0x1410);
	SetType(0X71000645A0, "__int64 __fastcall TimeServiceManager__SetStandardSteadyClockBaseTime(__int64 *rtc_offset);");
	set_frame_size(0X71000645A0, 0X10, 16, 0);
	add_func    (0X7100064610,0X71000646A0);
	set_func_flags(0X7100064610,0x1410);
	SetType(0X7100064610, "__int64 __fastcall GlueTime58Sub__AttachToClosestAlarm(GlueTime58Sub *this);");
	set_frame_size(0X7100064610, 0X30, 0, 0);
	define_local_var(0X7100064610, 0X71000646A0, "[bp-0X8]", "closest_alarm_event");
	add_func    (0X71000646A0,0X71000646FC);
	set_func_flags(0X71000646A0,0x1410);
	SetType(0X71000646A0, "__int64 CheckAndSignalAlarms();");
	set_frame_size(0X71000646A0, 0X10, 16, 0);
	add_func    (0X7100064700,0X71000647A0);
	set_func_flags(0X7100064700,0x1410);
	SetType(0X7100064700, "bool __fastcall GetClosestAlarmInfo(AlarmInfo *out_alarm_info, __int64 *out_alarm_time);");
	set_frame_size(0X7100064700, 0X30, 32, 0);
	define_local_var(0X7100064700, 0X71000647A0, "[bp-0X20]", "out_time");
	define_local_var(0X7100064700, 0X71000647A0, "[bp-0X18]", "alarm_info");
	define_local_var(0X7100064700, 0X71000647A0, "[bp-0X4]", "is_valid");
	add_func    (0X71000647A0,0X71000647A4);
	set_func_flags(0X71000647A0,0x1440);
	add_func    (0X71000647B0,0X7100064860);
	set_func_flags(0X71000647B0,0x1410);
	SetType(0X71000647B0, "__int64 sub_71000647B0();");
	set_frame_size(0X71000647B0, 0X20, 16, 0);
	add_func    (0X7100064860,0X7100064864);
	set_func_flags(0X7100064860,0x1440);
	SetType(0X7100064860, "__int64 __fastcall nullsub_91(_QWORD);");
	add_func    (0X7100064864,0X7100064868);
	set_func_flags(0X7100064864,0x1440);
	add_func    (0X7100064868,0X71000649C0);
	set_func_flags(0X7100064868,0x1410);
	SetType(0X7100064868, "__int64 __fastcall GetService_timeM(__int64, __int64 *);");
	set_frame_size(0X7100064868, 0X20, 32, 0);
	add_func    (0X71000649C0,0X7100064A50);
	set_func_flags(0X71000649C0,0x1410);
	SetType(0X71000649C0, "__int64 TimeServiceManager__Dtor();");
	set_frame_size(0X71000649C0, 0X20, 0, 0);
	add_func    (0X7100064A50,0X7100064DA4);
	set_func_flags(0X7100064A50,0x1410);
	SetType(0X7100064A50, "__int64 __fastcall sub_7100064A50(__int64 *, __int64 *);");
	set_frame_size(0X7100064A50, 0X10, 96, 0);
	add_func    (0X7100064DA4,0X7100064EAC);
	set_func_flags(0X7100064DA4,0x1410);
	SetType(0X7100064DA4, "__int64 __fastcall TimeM__TimeM(__int64, __int64 *, void *, unsigned int);");
	set_frame_size(0X7100064DA4, 0X10, 64, 0);
	add_func    (0X7100064EAC,0X7100064EB4);
	set_func_flags(0X7100064EAC,0x1400);
	add_func    (0X7100064EB4,0X7100064F0C);
	set_func_flags(0X7100064EB4,0x1410);
	set_frame_size(0X7100064EB4, 0, 32, 0);
	add_func    (0X7100064F0C,0X7100064F14);
	set_func_flags(0X7100064F0C,0x1400);
	add_func    (0X7100064F14,0X7100064FA8);
	set_func_flags(0X7100064F14,0x1410);
	SetType(0X7100064F14, "__int64 __fastcall nn__timesrv__detail__service__ITimeServiceManager__GetStaticServiceAsUser(GlueTimeServiceManager_Wrap *this, __int64 *a2);");
	set_frame_size(0X7100064F14, 0X20, 32, 0);
	add_func    (0X7100064FA8,0X710006503C);
	set_func_flags(0X7100064FA8,0x1410);
	set_frame_size(0X7100064FA8, 0X20, 32, 0);
	add_func    (0X710006503C,0X71000650D0);
	set_func_flags(0X710006503C,0x1410);
	set_frame_size(0X710006503C, 0X20, 32, 0);
	add_func    (0X71000650D0,0X7100065164);
	set_func_flags(0X71000650D0,0x1410);
	set_frame_size(0X71000650D0, 0X20, 32, 0);
	add_func    (0X7100065164,0X7100065174);
	set_func_flags(0X7100065164,0x1400);
	add_func    (0X7100065174,0X7100065180);
	set_func_flags(0X7100065174,0x1400);
	add_func    (0X7100065180,0X710006518C);
	set_func_flags(0X7100065180,0x1400);
	add_func    (0X710006518C,0X710006519C);
	set_func_flags(0X710006518C,0x1400);
	add_func    (0X710006519C,0X71000651B4);
	set_func_flags(0X710006519C,0x1400);
	add_func    (0X71000651B4,0X71000651C0);
	set_func_flags(0X71000651B4,0x1400);
	add_func    (0X71000651C0,0X71000651CC);
	set_func_flags(0X71000651C0,0x1400);
	add_func    (0X71000651CC,0X71000651D8);
	set_func_flags(0X71000651CC,0x1400);
	add_func    (0X71000651D8,0X71000651E4);
	set_func_flags(0X71000651D8,0x1400);
	add_func    (0X71000651E4,0X71000651F0);
	set_func_flags(0X71000651E4,0x1400);
	add_func    (0X71000651F0,0X71000651FC);
	set_func_flags(0X71000651F0,0x1400);
	add_func    (0X71000651FC,0X7100065208);
	set_func_flags(0X71000651FC,0x1400);
	add_func    (0X7100065208,0X7100065214);
	set_func_flags(0X7100065208,0x1400);
	add_func    (0X7100065214,0X7100065220);
	set_func_flags(0X7100065214,0x1400);
	SetType(0X7100065214, "__int64 __fastcall nn__timesrv__detail__service__ITimeServiceManager__GetClosestAlarmInfo(__int64, __int64, __int64, __int64);");
	add_func    (0X7100065220,0X7100065228);
	set_func_flags(0X7100065220,0x1400);
	SetType(0X7100065220, "__int64 __fastcall sub_7100065220(__int64);");
	add_func    (0X7100065228,0X7100065230);
	set_func_flags(0X7100065228,0x1400);
	add_func    (0X7100065230,0X71000652DC);
	set_func_flags(0X7100065230,0x1410);
	SetType(0X7100065230, "_QWORD *__fastcall sub_7100065230(_QWORD *result, unsigned int);");
	set_frame_size(0X7100065230, 0X20, 16, 0);
	add_func    (0X71000652DC,0X710006543C);
	set_func_flags(0X71000652DC,0x1410);
	set_frame_size(0X71000652DC, 0X70, 96, 0);
	add_func    (0X710006543C,0X7100065588);
	set_func_flags(0X710006543C,0x1410);
	set_frame_size(0X710006543C, 0X90, 48, 0);
	add_func    (0X7100065588,0X71000656D0);
	set_func_flags(0X7100065588,0x1410);
	set_frame_size(0X7100065588, 0X90, 48, 0);
	add_func    (0X71000656D0,0X7100065918);
	set_func_flags(0X71000656D0,0x1410);
	set_frame_size(0X71000656D0, 0XA0, 96, 0);
	add_func    (0X7100065918,0X7100065A64);
	set_func_flags(0X7100065918,0x1410);
	SetType(0X7100065918, "__int64 __fastcall sub_7100065918(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD);");
	set_frame_size(0X7100065918, 0X70, 80, 0);
	add_func    (0X7100065A64,0X7100065A6C);
	set_func_flags(0X7100065A64,0x1400);
	SetType(0X7100065A64, "__int64 __fastcall sub_7100065A64(__int64);");
	add_func    (0X7100065A6C,0X7100065B20);
	set_func_flags(0X7100065A6C,0x1410);
	SetType(0X7100065A6C, "__int64 __fastcall sub_7100065A6C(__int64, __int64);");
	set_frame_size(0X7100065A6C, 0X20, 16, 0);
	add_func    (0X7100065B20,0X7100065B54);
	set_func_flags(0X7100065B20,0x1400);
	SetType(0X7100065B20, "unsigned __int64 *__fastcall sub_7100065B20(unsigned __int64 *result);");
	add_func    (0X7100065B54,0X7100065BD8);
	set_func_flags(0X7100065B54,0x1410);
	SetType(0X7100065B54, "bool __fastcall sub_7100065B54(unsigned __int8 *);");
	set_frame_size(0X7100065B54, 0, 32, 0);
	add_func    (0X7100065BD8,0X7100065C40);
	set_func_flags(0X7100065BD8,0x1410);
	SetType(0X7100065BD8, "void __fastcall sub_7100065BD8(unsigned __int8 *);");
	set_frame_size(0X7100065BD8, 0, 48, 0);
	add_func    (0X7100065C40,0X7100065C44);
	set_func_flags(0X7100065C40,0x14c0);
	add_func    (0X7100065C44,0X7100065C48);
	set_func_flags(0X7100065C44,0x1440);
	add_func    (0X7100065C48,0X7100065C4C);
	set_func_flags(0X7100065C48,0x1440);
	add_func    (0X7100065C4C,0X7100065C70);
	set_func_flags(0X7100065C4C,0x1410);
	set_frame_size(0X7100065C4C, 0X20, 0, 0);
	add_func    (0X7100065C70,0X7100065C94);
	set_func_flags(0X7100065C70,0x1410);
	set_frame_size(0X7100065C70, 0X20, 0, 0);
	add_func    (0X7100065C94,0X7100065CB8);
	set_func_flags(0X7100065C94,0x1410);
	set_frame_size(0X7100065C94, 0X20, 0, 0);
	add_func    (0X7100065CB8,0X7100065D7C);
	set_func_flags(0X7100065CB8,0x1410);
	set_frame_size(0X7100065CB8, 0X50, 32, 0);
	add_func    (0X7100065D80,0X7100065EA4);
	set_func_flags(0X7100065D80,0x1400);
	set_frame_size(0X7100065D80, 0X60, 0, 0);
	add_func    (0X7100065EA4,0X7100065F14);
	set_func_flags(0X7100065EA4,0x1400);
	add_func    (0X7100065F14,0X7100065F90);
	set_func_flags(0X7100065F14,0x1400);
	add_func    (0X7100065F90,0X7100066150);
	set_func_flags(0X7100065F90,0x1410);
	set_frame_size(0X7100065F90, 0, 64, 0);
	add_func    (0X7100066150,0X71000664FC);
	set_func_flags(0X7100066150,0x1410);
	set_frame_size(0X7100066150, 0X20, 64, 0);
	add_func    (0X71000664FC,0X71000666D0);
	set_func_flags(0X71000664FC,0x1410);
	set_frame_size(0X71000664FC, 0, 64, 0);
	add_func    (0X71000666D0,0X7100066820);
	set_func_flags(0X71000666D0,0x1410);
	set_frame_size(0X71000666D0, 0X20, 32, 0);
	add_func    (0X7100066820,0X7100066A50);
	set_func_flags(0X7100066820,0x1410);
	set_frame_size(0X7100066820, 0, 96, 0);
	add_func    (0X7100066A50,0X7100066B90);
	set_func_flags(0X7100066A50,0x1410);
	set_frame_size(0X7100066A50, 0, 64, 0);
	add_func    (0X7100066B90,0X7100066C88);
	set_func_flags(0X7100066B90,0x1410);
	set_frame_size(0X7100066B90, 0, 48, 0);
	add_func    (0X7100066C88,0X7100066C8C);
	set_func_flags(0X7100066C88,0x1440);
	add_func    (0X7100066C90,0X7100066C94);
	set_func_flags(0X7100066C90,0x14c0);
	SetType(0X7100066C90, "__int64 __fastcall j_delete_6(__int64 result);");
	add_func    (0X7100066CA0,0X7100066D74);
	set_func_flags(0X7100066CA0,0x1400);
	set_frame_size(0X7100066CA0, 0X20, 0, 0);
	add_func    (0X7100066D80,0X7100066DC8);
	set_func_flags(0X7100066D80,0x1400);
	set_frame_size(0X7100066D80, 0X20, 0, 0);
	add_func    (0X7100066DD0,0X7100066E54);
	set_func_flags(0X7100066DD0,0x1400);
	set_frame_size(0X7100066DD0, 0X10, 0, 0);
	add_func    (0X7100066E60,0X7100067024);
	set_func_flags(0X7100066E60,0x1400);
	set_frame_size(0X7100066E60, 0X10, 0, 0);
	add_func    (0X7100067030,0X710006751C);
	set_func_flags(0X7100067030,0x1400);
	set_frame_size(0X7100067030, 0XA0, 0, 0);
	add_func    (0X7100067520,0X7100067550);
	set_func_flags(0X7100067520,0x1400);
	add_func    (0X7100067550,0X7100067564);
	set_func_flags(0X7100067550,0x1400);
	add_func    (0X7100067570,0X7100067A28);
	set_func_flags(0X7100067570,0x1400);
	set_frame_size(0X7100067570, 0XD0, 0, 0);
	add_func    (0X7100067A30,0X7100067AA8);
	set_func_flags(0X7100067A30,0x1400);
	set_frame_size(0X7100067A30, 0X10, 0, 0);
	add_func    (0X7100067AB0,0X7100067B0C);
	set_func_flags(0X7100067AB0,0x1400);
	set_frame_size(0X7100067AB0, 0X10, 0, 0);
	add_func    (0X7100067B10,0X7100067B2C);
	set_func_flags(0X7100067B10,0x1400);
	set_frame_size(0X7100067B10, 0X20, 0, 0);
	add_func    (0X7100067B30,0X7100067BB4);
	set_func_flags(0X7100067B30,0x1400);
	set_frame_size(0X7100067B30, 0X10, 0, 0);
	add_func    (0X7100067BC0,0X7100067C28);
	set_func_flags(0X7100067BC0,0x1400);
	set_frame_size(0X7100067BC0, 0X10, 0, 0);
	add_func    (0X7100067C30,0X7100067C34);
	set_func_flags(0X7100067C30,0x1440);
	add_func    (0X7100067C40,0X7100067C44);
	set_func_flags(0X7100067C40,0x1480);
	add_func    (0X7100067C50,0X7100067C54);
	set_func_flags(0X7100067C50,0x1440);
	add_func    (0X7100067C60,0X7100067C64);
	set_func_flags(0X7100067C60,0x1480);
	add_func    (0X7100067C70,0X7100067E40);
	set_func_flags(0X7100067C70,0x1400);
	add_func    (0X7100067E40,0X7100067FF8);
	set_func_flags(0X7100067E40,0x1400);
	SetType(0X7100067E40, "__int64 __fastcall _memcpy_device(__int64 result, __int64, unsigned __int64);");
	add_func    (0X7100068130,0X71000682A4);
	set_func_flags(0X7100068130,0x1400);
	add_func    (0X71000682B0,0X7100068380);
	set_func_flags(0X71000682B0,0x1400);
	SetType(0X71000682B0, "unsigned __int8 *__fastcall sub_71000682B0(unsigned __int8 *result, unsigned __int8, unsigned __int64);");
	add_func    (0X7100068380,0X7100068394);
	set_func_flags(0X7100068380,0x1400);
	add_func    (0X71000683A0,0X71000683A4);
	set_func_flags(0X71000683A0,0x1440);
	add_func    (0X71000683D0,0X7100068400);
	set_func_flags(0X71000683D0,0x1410);
	set_frame_size(0X71000683D0, 0, 16, 0);
	add_func    (0X7100068400,0X7100068418);
	set_func_flags(0X7100068400,0x1400);
	add_func    (0X7100068420,0X710006852C);
	set_func_flags(0X7100068420,0x1410);
	set_frame_size(0X7100068420, 0, 48, 0);
	add_func    (0X7100068530,0X7100068578);
	set_func_flags(0X7100068530,0x1400);
	add_func    (0X7100068580,0X71000685E8);
	set_func_flags(0X7100068580,0x1410);
	set_frame_size(0X7100068580, 0XF0, 16, 0);
	add_func    (0X71000685F0,0X71000686D4);
	set_func_flags(0X71000685F0,0x1410);
	set_frame_size(0X71000685F0, 0X120, 0, 0);
	add_func    (0X71000686E0,0X7100068794);
	set_func_flags(0X71000686E0,0x1410);
	set_frame_size(0X71000686E0, 0X20, 32, 0);
	add_func    (0X71000687A0,0X7100068918);
	set_func_flags(0X71000687A0,0x1410);
	set_frame_size(0X71000687A0, 0X140, 64, 0);
	add_func    (0X7100068920,0X71000697C0);
	set_func_flags(0X7100068920,0x1410);
	set_frame_size(0X7100068920, 0X1B0, 96, 0);
	add_func    (0X71000697C0,0X7100069A10);
	set_func_flags(0X71000697C0,0x1400);
	add_func    (0X7100069A10,0X7100069AB8);
	set_func_flags(0X7100069A10,0x1410);
	set_frame_size(0X7100069A10, 0X120, 16, 0);
	add_func    (0X7100069AC0,0X710006B03C);
	set_func_flags(0X7100069AC0,0x1410);
	set_frame_size(0X7100069AC0, 0X1EC0, 96, 0);
	add_func    (0X710006B040,0X710006C46C);
	set_func_flags(0X710006B040,0x1410);
	set_frame_size(0X710006B040, 0X370, 96, 0);
	add_func    (0X710006C470,0X710006C4B0);
	set_func_flags(0X710006C470,0x1410);
	set_frame_size(0X710006C470, 0X20, 0, 0);
	add_func    (0X710006C4B0,0X710006C4E0);
	set_func_flags(0X710006C4B0,0x1410);
	set_frame_size(0X710006C4B0, 0, 16, 0);
	add_func    (0X710006C4E0,0X710006C4FC);
	set_func_flags(0X710006C4E0,0x1410);
	set_frame_size(0X710006C4E0, 0, 16, 0);
	add_func    (0X710006C500,0X710006C61C);
	set_func_flags(0X710006C500,0x1410);
	set_frame_size(0X710006C500, 0, 16, 0);
	add_func    (0X710006C620,0X710006C64C);
	set_func_flags(0X710006C620,0x1410);
	SetType(0X710006C620, "__int64 __fastcall sub_710006C620(_QWORD, _QWORD);");
	set_frame_size(0X710006C620, 0X20, 0, 0);
	add_func    (0X710006C650,0X710006C7EC);
	set_func_flags(0X710006C650,0x1410);
	set_frame_size(0X710006C650, 0X20, 0, 0);
	add_func    (0X710006C7F0,0X710006C814);
	set_func_flags(0X710006C7F0,0x1410);
	SetType(0X710006C7F0, "__int64 __fastcall strcpy(__int64, __int64 *);");
	set_frame_size(0X710006C7F0, 0X20, 0, 0);
	add_func    (0X710006C820,0X710006C98C);
	set_func_flags(0X710006C820,0x1400);
	SetType(0X710006C820, "_BYTE *__fastcall stpcpy(_BYTE *result, __int64 *);");
	add_func    (0X710006C990,0X710006CA80);
	set_func_flags(0X710006C990,0x1400);
	SetType(0X710006C990, "_BYTE *__fastcall strlen(__int64);");
	add_func    (0X710006CA80,0X710006CAA4);
	set_func_flags(0X710006CA80,0x1410);
	SetType(0X710006CA80, "__int64 __fastcall sub_710006CA80(__int64, _BYTE *, unsigned __int64);");
	set_frame_size(0X710006CA80, 0X20, 0, 0);
	add_func    (0X710006CAB0,0X710006CCCC);
	set_func_flags(0X710006CAB0,0x1410);
	SetType(0X710006CAB0, "unsigned __int8 *__fastcall sub_710006CAB0(unsigned __int8 *, _BYTE *, unsigned __int64);");
	set_frame_size(0X710006CAB0, 0X20, 0, 0);
	add_func    (0X710006CCD0,0X710006CD08);
	set_func_flags(0X710006CCD0,0x1410);
	set_frame_size(0X710006CCD0, 0, 32, 0);
	add_func    (0X710006CD10,0X710006CD68);
	set_func_flags(0X710006CD10,0x1400);
	set_frame_size(0X710006CD10, 0X10, 0, 0);
	add_func    (0X710006CD70,0X710006CD84);
	set_func_flags(0X710006CD70,0x1400);
	set_frame_size(0X710006CD70, 0X10, 0, 0);
	add_func    (0X710006CD90,0X710006CE04);
	set_func_flags(0X710006CD90,0x1410);
	set_frame_size(0X710006CD90, 0X20, 0, 0);
	add_func    (0X710006CE10,0X710006CEDC);
	set_func_flags(0X710006CE10,0x1410);
	set_frame_size(0X710006CE10, 0X50, 0, 0);
	add_func    (0X710006CF00,0X710006CFCC);
	set_func_flags(0X710006CF00,0x1400);
	add_func    (0X710006D000,0X710006D134);
	set_func_flags(0X710006D000,0x1400);
	SetType(0X710006D000, "__int64 __fastcall strncmp(unsigned __int8 *, unsigned __int8 *, unsigned __int64);");
	add_func    (0X710006D140,0X710006D144);
	set_func_flags(0X710006D140,0x14c0);
	SetType(0X710006D140, "void __fastcall nn__os__SdkRecursiveMutexType__Lock(unsigned int *);");
	add_func    (0X710006D150,0X710006D154);
	set_func_flags(0X710006D150,0x14c0);
	SetType(0X710006D150, "__int64 __fastcall nn__os__SdkRecursiveMutexType__Unlock(_QWORD);");
	add_func    (0X710006D160,0X710006D178);
	set_func_flags(0X710006D160,0x1410);
	set_frame_size(0X710006D160, 0, 16, 0);
	add_func    (0X710006D180,0X710006D184);
	set_func_flags(0X710006D180,0x1440);
	add_func    (0X710006D190,0X710006D19C);
	set_func_flags(0X710006D190,0x1400);
	add_func    (0X710006D1A0,0X710006D1AC);
	set_func_flags(0X710006D1A0,0x1400);
	add_func    (0X710006D1D0,0X710006D1E0);
	set_func_flags(0X710006D1D0,0x14c0);
}

//------------------------------------------------------------------------
// Information about functions

static Functions(void) {

	Functions_0();
	Functions_1();
	Functions_2();
}

//------------------------------------------------------------------------
// Information about segment registers

static SegRegs(void) {
	split_sreg_range(0X7100000000,"T",0,3);
	split_sreg_range(0X710006D1D0,"T",0,3);
	split_sreg_range(0X710006E000,"T",0,3);
	split_sreg_range(0X710006E030,"T",0,3);
	split_sreg_range(0X710007FFE8,"T",0,3);
	split_sreg_range(0X7100080000,"T",0,3);
	split_sreg_range(0X7100080038,"T",0,3);
	split_sreg_range(0X7100080054,"T",0,3);
	split_sreg_range(0X7100080058,"T",0,3);
	split_sreg_range(0X71000800E8,"T",0,3);
	split_sreg_range(0X710008015D,"T",0,3);
	split_sreg_range(0X710008CB20,"T",0,3);
	split_sreg_range(0X7100092B4C,"T",0,3);
	split_sreg_range(0X7100092B50,"T",0,3);
	split_sreg_range(0X71000AA4F0,"T",0,3);
	split_sreg_range(0X71000AB000,"T",0,3);
	split_sreg_range(0X71000B4228,"T",0,3);
	split_sreg_range(0X71000B43A8,"T",0,3);
	split_sreg_range(0X71000B43C8,"T",0,3);
	split_sreg_range(0X71000B4BD8,"T",0,3);
	split_sreg_range(0X71000B4C60,"T",0,3);
	split_sreg_range(0X71000B6000,"T",0,3);
	split_sreg_range(0X7100241008,"T",0,3);
	split_sreg_range(0X7100000000,"DS",0,3);
	split_sreg_range(0X710006D1D0,"DS",0,3);
	split_sreg_range(0X710006E000,"DS",0,3);
	split_sreg_range(0X710006E030,"DS",0,3);
	split_sreg_range(0X710007FFE8,"DS",0,3);
	split_sreg_range(0X7100080000,"DS",0,3);
	split_sreg_range(0X7100080038,"DS",0,3);
	split_sreg_range(0X7100080054,"DS",0,3);
	split_sreg_range(0X7100080058,"DS",0,3);
	split_sreg_range(0X71000800E8,"DS",0,3);
	split_sreg_range(0X710008015D,"DS",0,3);
	split_sreg_range(0X710008CB20,"DS",0,3);
	split_sreg_range(0X7100092B4C,"DS",0,3);
	split_sreg_range(0X7100092B50,"DS",0,3);
	split_sreg_range(0X71000AA4F0,"DS",0,3);
	split_sreg_range(0X71000AB000,"DS",0,3);
	split_sreg_range(0X71000B4228,"DS",0,3);
	split_sreg_range(0X71000B43A8,"DS",0,3);
	split_sreg_range(0X71000B43C8,"DS",0,3);
	split_sreg_range(0X71000B4BD8,"DS",0,3);
	split_sreg_range(0X71000B4C60,"DS",0,3);
	split_sreg_range(0X71000B6000,"DS",0,3);
	split_sreg_range(0X7100241008,"DS",0,3);
}

//------------------------------------------------------------------------
// Information about all patched bytes:

static Patches(void) {
}

//------------------------------------------------------------------------
// Call all byte feature functions:

static Bytes(void) {
	Bytes_0();
	Bytes_1();
	Bytes_2();
	Bytes_3();
	Bytes_4();
	Bytes_5();
	Bytes_6();
	Bytes_7();
	Bytes_8();
	Bytes_9();
	Bytes_10();
	Bytes_11();
	Bytes_12();
	Bytes_13();
	Bytes_14();
	Bytes_15();
	Bytes_16();
	Bytes_17();
	Bytes_18();
	Bytes_19();
        end_type_updating(UTP_STRUCT);
}

// End of file.
